// bwip-js // Barcode Writer in Pure JavaScript
// https://github.com/metafloor/bwip-js
//
// This code was automatically generated from:
// Barcode Writer in Pure PostScript - Version 2017-04-04
//
// Copyright (c) 2011-2017 Mark Warren
// Copyright (c) 2004-2014 Terry Burton
//
// Licensed MIT. See the LICENSE file in the bwip-js root directory.
function BWIPP() {
	// bwip-js/barcode-hdr.js
	//
	// This code is injected above the cross-compiled barcode.ps.

	// The BWIPJS object (graphics interface)
	var $$ = null;

	// The global dictionary.  Each renderer and encoder declare a
	// $1 local dict.
	var $0 = {
		$error: {} // the postscript error object
	};

	var $j = 0; // stack pointer
	var $k = []; // operand stack

	// Array ctor
	//	$a()	: Build a new array up to the Infinity-marker on the stack.
	//	$a(arr)	: Convert native array to a "view" of the array.
	//	$a(len)	: Create a new array of length `len`
	function $a(a) {
		if (!arguments.length) {
			for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i--);
			if (i < 0) {
				throw new Error('array-marker-not-found');
			}
			a = $k.splice(i + 1, $j - 1 - i);
			$j = i;
		} else if (!(a instanceof Array)) {
			a = new Array(+arguments[0]);
			for (var i = 0, l = a.length; i < l; i++) {
				a[i] = null;
			}
		}
		a.b = a; // base array
		a.o = 0; // offset into base
		return a;
	}

	// dict ctor
	//	$d() : look for the Infinity marker on the stack
	function $d() {
		var d = {};
		for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i -= 2) {
			if ($k[i - 1] === Infinity) {
				throw new Error('dict-malformed-stack');
			}
			// Unlike javascript, postscript dict keys differentiate between
			// numbers and the string representation of a number.
			var k = $k[i - 1]; // "key" into the dict entry
			var t = typeof k;
			if (t === 'number') {
				d['\uffff' + k] = $k[i];
			} else if (t === 'string') {
				d[k] = $k[i];
			} else if (k instanceof Uint8Array) {
				d[$z(k)] = $k[i];
			} else {
				throw 'dict-not-a-valid-key(' + k + ')';
			}
		}
		if (i < 0) {
			throw 'dict-marker-not-found';
		}
		$j = i;
		return d;
	}

	// string ctor
	//	s(number)	: create zero-filled string of number-length
	//	s(string)	: make a copy of the string
	//	s(uint8[])	: make a copy of the string
	//
	// Returns a Uint8Array-string.
	function $s(v) {
		var t = typeof v;
		if (t === 'number') {
			return new Uint8Array(v);
		}
		if (t !== 'string') {
			v = '' + v;
		}
		var s = new Uint8Array(v.length);
		for (var i = 0; i < v.length; i++) {
			s[i] = v.charCodeAt(i);
		}
		return s;
	}

	// Primarily designed to convert uint8-string to string, but will call the
	// the toString() method on any value.
	function $z(s) {
		if (s instanceof Uint8Array) {
			// Postscript treats nul-char as end of string, even if string is
			// longer.
			for (var i = 0, l = s.length; i < l && s[i]; i++);
			if (i < l) {
				return String.fromCharCode.apply(null, s.subarray(0, i));
			}
			return String.fromCharCode.apply(null, s)
		}
		return '' + s;
	}

	// Copies source to dest and returns a view of just the copied characters
	function $strcpy(dst, src) {
		if (typeof dst === 'string') {
			dst = $s(dst);
		}
		if (src instanceof Uint8Array) {
			for (var i = 0, l = src.length; i < l; i++) {
				dst[i] = src[i];
			}
		} else {
			for (var i = 0, l = src.length; i < l; i++) {
				dst[i] = src.charCodeAt(i);
			}
		}
		return src.length < dst.length ? dst.subarray(0, src.length) : dst;
	}

	// cvs operator - convert a value to its string representation
	//	s : string to store into
	//	v : any value
	function $cvs(s, v) {
		var t = typeof v;
		if (t == 'number' || t == 'boolean' || v === null) {
			v = '' + v;
		} else if (t !== 'string') {
			v = '--nostringval--';
		}
		for (var i = 0, l = v.length; i < l; i++) {
			s[i] = v.charCodeAt(i);
		}
		$k[$j++] = i < s.length ? s.subarray(0, i) : s;
	}
	// cvrs operator - convert a number to a radix string
	//	s : string to store into
	//	n : number
	//	r : radix
	function $cvrs(s, n, r) {
		return $strcpy(s, (~~n).toString(r).toUpperCase());
	}

	// get operator
	//	s : source
	//	k : key
	function $get(s, k) {
		if (s instanceof Uint8Array) {
			return s[k];
		}
		if (typeof s === 'string') {
			return s.charCodeAt(k);
		}
		if (s instanceof Array) {
			return s.b[s.o + k];
		}
		// Must be a dict object : with postscript dict objects, a number key
		// is differerent than its string representation.  postscript uses
		// 8-bit strings, so \uffff can never be in a key value.
		if (typeof k === 'number') {
			return s['\uffff' + k];
		}
		if (k instanceof Uint8Array) {
			return s[$z(k)];
		}
		return s[k];
	}

	// put operator
	//	d : dest
	//	k : key
	//	v : value
	function $put(d, k, v) {
		if (d instanceof Uint8Array) {
			d[k] = v;
		} else if (d instanceof Array) {
			d.b[d.o + k] = v;
		} else if (typeof d == 'object') {
			if (k instanceof Uint8Array) {
				d[$z(k)] = v;
			} else {
				d[typeof k == 'number' ? '\uffff' + k : k] = v;
			}
		} else {
			throw 'put-not-writable-' + (typeof d);
		}
	}

	// getinterval operator
	//	s : src
	//	o : offset
	//	l : length
	function $geti(s, o, l) {
		if (s instanceof Uint8Array) {
			return s.subarray(o, o + l);
		}
		if (s instanceof Array) {
			var a = new Array(l);
			a.b = s.b; // base array
			a.o = s.o + o; // offset into base
			return a;
		}
		// Must be a string
		return s.substr(o, l);
	}

	// putinterval operator
	//	d : dst
	//	o : offset
	//	s : src
	function $puti(d, o, s) {
		if (d instanceof Uint8Array) {
			if (typeof s == 'string') {
				for (var i = 0, l = s.length; i < l; i++) {
					d[o + i] = s.charCodeAt(i);
				}
			} else {
				// When both d and s are the same, we want to copy
				// backwards, which works for the general case as well.
				for (var i = s.length - 1; i >= 0; i--) {
					d[o + i] = s[i];
				}
			}
		} else if (d instanceof Array) {
			// Operate on the base arrays
			var darr = d.b;
			var doff = o + d.o;
			var sarr = s.b;
			var soff = s.o;

			for (var i = 0, l = s.length; i < l; i++) {
				darr[doff + i] = sarr[soff + i];
			}
		} else {
			throw 'putinterval-not-writable-' + (typeof d);
		}
	}

	// type operator
	function $type(v) {
		// null can be mis-typed - get it out of the way
		if (v === null || v === undefined) {
			return 'nulltype';
		}
		var t = typeof v;
		if (t == 'number') {
			return v % 1 ? 'realtype' : 'integertype';
		}
		if (t == 'boolean') {
			return 'booleantype';
		}
		if (t == 'string' || v instanceof Uint8Array) {
			return 'stringtype';
		}
		if (t == 'function') {
			return 'operatortype';
		}
		if (v instanceof Array) {
			return 'arraytype';
		}
		return 'dicttype';
		// filetype
		// fonttype
		// gstatetype
		// marktype	(v === Infinity)
		// nametype
		// savetype
	}

	// search operator
	//		string seek search suffix match prefix true %if-found
	//						   string false				%if-not-found
	function $search(str, seek) {
		if (!(str instanceof Uint8Array)) {
			str = $s(str);
		}
		var ls = str.length;

		// Virtually all uses of search in BWIPP are for single-characters.
		// Optimize for that case.
		if (seek.length == 1) {
			var lk = 1;
			var cd = seek instanceof Uint8Array ? seek[0] : seek.charCodeAt(0);
			for (var i = 0; i < ls && str[i] != cd; i++);
		} else {
			// Slow path, 
			if (!(seek instanceof Uint8Array)) {
				seek = $(seek);
			}
			var lk = seek.length;
			var cd = seek[0];
			for (var i = 0; i < ls && str[i] != cd; i++);
			while (i < ls) {
				for (var j = 1; j < lk && str[i + j] === seek[j]; j++);
				if (j === lk) {
					break;
				}
				for (i++; i < ls && str[i] != cd; i++);
			}
		}
		if (i < ls) {
			$k[$j++] = str.subarray(i + lk);
			$k[$j++] = str.subarray(i, i + lk);
			$k[$j++] = str.subarray(0, i);
			$k[$j++] = true;
		} else {
			$k[$j++] = str;
			$k[$j++] = false;
		}
	}

	// The callback is omitted when forall is being used just to push onto the
	// stack.
	function $forall(o, cb) {
		if (o instanceof Uint8Array) {
			for (var i = 0, l = o.length; i < l; i++) {
				$k[$j++] = o[i];
				cb && cb();
			}
		} else if (o instanceof Array) {
			// The array may be a view.
			for (var a = o.b, i = o.o, l = o.o + o.length; i < l; i++) {
				$k[$j++] = a[i];
				cb && cb();
			}
		} else if (typeof o === 'string') {
			for (var i = 0, l = o.length; i < l; i++) {
				$k[$j++] = o.charCodeAt(i);
				cb && cb();
			}
		} else {
			for (var id in o) {
				$k[$j++] = id;
				$k[$j++] = o[id];
				cb && cb();
			}
		}
	}

	function $cleartomark() {
		while ($j > 0 && $k[--$j] !== Infinity);
	}

	function $counttomark() {
		for (var i = $j - 1; i >= 0 && $k[i] !== Infinity; i--);
		return $j - i - 1;
	}

	function $aload(a) {
		for (var i = 0, l = a.length, b = a.b, o = a.o; i < l; i++) {
			$k[$j++] = b[o + i];
		}
		// This push has been optimized out.  See $.aload() in psc.js.
		//$k[$j++] = a;
	}

	function $astore(a) {
		for (var i = 0, l = a.length, b = a.b, o = a.o + l - 1; i < l; i++) {
			b[o - i] = $k[--$j];
		}
		$k[$j++] = a;
	}

	function $eq(a, b) {
		if (typeof a === 'string' && typeof b === 'string') {
			return a == b;
		}
		if (a instanceof Uint8Array && b instanceof Uint8Array) {
			if (a.length != b.length) {
				return false;
			}
			for (var i = 0, l = a.length; i < l; i++) {
				if (a[i] != b[i]) {
					return false;
				}
			}
			return true;
		}
		if (a instanceof Uint8Array && typeof b === 'string' ||
			b instanceof Uint8Array && typeof a === 'string') {
			if (a instanceof Uint8Array) {
				a = $z(a);
			} else {
				b = $z(b);
			}
			return a == b;
		}
		return a == b;
	}

	function $ne(a, b) {
		return !$eq(a, b);
	}

	function $lt(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a < b;
	}

	function $le(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a <= b;
	}

	function $gt(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a > b;
	}

	function $ge(a, b) {
		if (a instanceof Uint8Array) {
			a = $z(a);
		}
		if (b instanceof Uint8Array) {
			b = $z(b);
		}
		return a >= b;
	}

	function $an(a, b) { // and
		return (typeof a === 'boolean') ? a && b : a & b;
	}

	function $or(a, b) { // or
		return (typeof a === 'boolean') ? a || b : a | b;
	}

	function $xo(a, b) { // xor
		return (typeof a === 'boolean') ? !a && b || a && !b : a ^ b;
	}

	// DEBUG-BEGIN
	function $stack() {
		console.log('[[[');
		for (var i = $j - 1; i >= 0; i--) {
			console.log(tostring($k[i]));
		}
		console.log(']]]');

		function tostring(v) {
			// null can be mis-typed - get it out of the way
			if (v === null) {
				return 'null';
			} else if (v === undefined) {
				return '<undefined>';
			} else if (v instanceof Array) {
				var s = '<array,' + v.o + ',' + v.length + '>[';
				for (var j = v.o, a = v.b, l = v.length + v.o; j < l; j++) {
					s += (j == v.o ? '' : ',') + tostring(a[j]);
				}
				return s + ']';
			} else if (v instanceof Uint8Array) {
				return '(' + $z[v] + ')';
			} else if (typeof v === 'object') {
				var s = '<<';
				for (var id in v) {
					s += (s.length == 7 ? '' : ',') + id + ':' + tostring(v[id]);
				}
				return s + '>>';
			} else if (typeof v === 'string') {
				return '"' + v + '"';
			} else {
				return '' + v;
			}
		}
	}
	// DEBUG-END
	$0.raiseerror = function() {
		$0.$error.errorinfo = $k[--$j]; /*55*/
		$0.$error.errorname = $k[--$j]; /*56*/
		$0.$error.command = null; /*57*/
		$0.$error.newerror = true; /*58*/
		throw new Error($0.$error.errorname + ": " + $0.$error.errorinfo); /*59*/
	};
	$0.ean5 = function() {
		var $1 = {}; /*732*/
		$1.options = $k[--$j]; /*734*/
		$1.barcode = $k[--$j]; /*735*/
		$1.dontdraw = false; /*737*/
		$1.includetext = false; /*738*/
		$1.textfont = "Helvetica"; /*739*/
		$1.textsize = 12; /*740*/
		$1.textxoffset = 0; /*741*/
		$1.textyoffset = "unset"; /*742*/
		$1.height = 0.7; /*743*/
		$forall($1.options, function() { /*754*/
			var _3 = $k[--$j]; /*754*/
			$1[$k[--$j]] = _3; /*754*/
		}); /*754*/
		$1.textfont = "" + $1.textfont; /*756*/
		$1.textsize = +$1.textsize; /*757*/
		$1.height = +$1.height; /*758*/
		$1.textxoffset = +$1.textxoffset; /*759*/
		if ($eq($1.textyoffset, "unset")) { /*763*/
			$1.textyoffset = ($1.height * 72) + 1; /*761*/
		} else { /*763*/
			$1.textyoffset = +$1.textyoffset; /*763*/
		} /*763*/
		if ($1.barcode.length != 5) { /*769*/
			$k[$j++] = "bwipp.ean5badLength"; /*768*/
			$k[$j++] = "EAN-5 add-on must be 5 digits"; /*768*/
			$0.raiseerror(); /*768*/
		} /*768*/
		$forall($1.barcode, function() { /*774*/
			var _E = $k[--$j]; /*771*/
			if ((_E < 48) || (_E > 57)) { /*773*/
				$k[$j++] = "bwipp.ean5badCharacter"; /*772*/
				$k[$j++] = "EAN-5 add-on must contain only digits"; /*772*/
				$0.raiseerror(); /*772*/
			} /*772*/
		}); /*772*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "112", "11"]); /*781*/
		$1.barchars = "0123456789"; /*784*/
		$1.mirrormaps = $a(["11000", "10100", "10010", "10001", "01100", "00110", "00011", "01010", "01001", "00101"]); /*790*/
		$1.checksum = 0; /*791*/
		for (var _H = 0; _H <= 4; _H += 1) { /*800*/
			$1.i = _H; /*793*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*794*/
			if (($1.i % 2) == 0) { /*798*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*796*/
			} else { /*798*/
				$1.checksum = ($1.barchar * 9) + $1.checksum; /*798*/
			} /*798*/
		} /*798*/
		$1.checksum = $1.checksum % 10; /*801*/
		$1.mirrormap = $get($1.mirrormaps, $1.checksum); /*802*/
		$1.sbs = $s(31); /*804*/
		$1.txt = $a(5); /*805*/
		for (var _W = 0; _W <= 4; _W += 1) { /*835*/
			$1.i = _W; /*808*/
			if ($1.i == 0) { /*814*/
				$puti($1.sbs, 0, $get($1.encs, 10)); /*812*/
			} else { /*814*/
				$puti($1.sbs, (($1.i - 1) * 6) + 7, $get($1.encs, 11)); /*814*/
			} /*814*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*818*/
			$j--; /*819*/
			$1.indx = $k[--$j].length; /*820*/
			$j -= 2; /*821*/
			$1.enc = $get($1.encs, $1.indx); /*822*/
			if ($get($1.mirrormap, $1.i) == 49) { /*832*/
				$1.enclen = $1.enc.length; /*824*/
				$1.revenc = $s($1.enclen); /*825*/
				for (var _v = 0, _u = $1.enclen - 1; _v <= _u; _v += 1) { /*830*/
					$1.j = _v; /*827*/
					$1.char = $get($1.enc, $1.j); /*828*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*829*/
				} /*829*/
				$1.enc = $1.revenc; /*831*/
			} /*831*/
			$puti($1.sbs, ($1.i * 6) + 3, $1.enc); /*833*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 9) + 13) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*834*/
		} /*834*/
		$k[$j++] = Infinity; /*849*/
		$k[$j++] = "ren"; /*841*/
		$k[$j++] = $0.renlinear; /*841*/
		$k[$j++] = "sbs"; /*841*/
		$k[$j++] = Infinity; /*841*/
		var _1I = $1.sbs; /*840*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*840*/
			$k[$j++] = $get(_1I, _1J) - 48; /*840*/
		} /*840*/
		var _1M = $a(); /*841*/
		$k[$j++] = _1M; /*842*/
		$k[$j++] = "bhs"; /*842*/
		$k[$j++] = Infinity; /*842*/
		for (var _1N = 0, _1O = 16; _1N < _1O; _1N++) { /*841*/
			$k[$j++] = $1.height; /*841*/
		} /*841*/
		var _1Q = $a(); /*842*/
		$k[$j++] = _1Q; /*843*/
		$k[$j++] = "bbs"; /*843*/
		$k[$j++] = Infinity; /*843*/
		for (var _1R = 0, _1S = 16; _1R < _1S; _1R++) { /*842*/
			$k[$j++] = 0; /*842*/
		} /*842*/
		var _1T = $a(); /*843*/
		$k[$j++] = _1T; /*845*/
		if ($1.includetext) { /*845*/
			$k[$j++] = "txt"; /*844*/
			$k[$j++] = $1.txt; /*844*/
		} /*844*/
		$k[$j++] = "opt"; /*849*/
		$k[$j++] = $1.options; /*849*/
		$k[$j++] = "guardrightpos"; /*849*/
		$k[$j++] = 10; /*849*/
		$k[$j++] = "guardrightypos"; /*849*/
		$k[$j++] = $1.textyoffset + 4; /*849*/
		$k[$j++] = "bordertop"; /*849*/
		$k[$j++] = 10; /*849*/
		var _1Y = $d(); /*849*/
		$k[$j++] = _1Y; /*852*/
		if (!$1.dontdraw) { /*852*/
			$0.renlinear(); /*852*/
		} /*852*/
	};
	$0.ean2 = function() {
		var $1 = {}; /*879*/
		$1.options = $k[--$j]; /*881*/
		$1.barcode = $k[--$j]; /*882*/
		$1.dontdraw = false; /*884*/
		$1.includetext = false; /*885*/
		$1.textfont = "Helvetica"; /*886*/
		$1.textsize = 12; /*887*/
		$1.textxoffset = 0; /*888*/
		$1.textyoffset = "unset"; /*889*/
		$1.height = 0.7; /*890*/
		$forall($1.options, function() { /*901*/
			var _3 = $k[--$j]; /*901*/
			$1[$k[--$j]] = _3; /*901*/
		}); /*901*/
		$1.textfont = "" + $1.textfont; /*903*/
		$1.textsize = +$1.textsize; /*904*/
		$1.height = +$1.height; /*905*/
		$1.textxoffset = +$1.textxoffset; /*906*/
		if ($eq($1.textyoffset, "unset")) { /*910*/
			$1.textyoffset = ($1.height * 72) + 1; /*908*/
		} else { /*910*/
			$1.textyoffset = +$1.textyoffset; /*910*/
		} /*910*/
		if ($1.barcode.length != 2) { /*916*/
			$k[$j++] = "bwipp.ean2badLength"; /*915*/
			$k[$j++] = "EAN-2 add-on must be 2 digits"; /*915*/
			$0.raiseerror(); /*915*/
		} /*915*/
		$forall($1.barcode, function() { /*921*/
			var _E = $k[--$j]; /*918*/
			if ((_E < 48) || (_E > 57)) { /*920*/
				$k[$j++] = "bwipp.ean2badCharacter"; /*919*/
				$k[$j++] = "EAN-2 add-on must contain only digits"; /*919*/
				$0.raiseerror(); /*919*/
			} /*919*/
		}); /*919*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "112", "11"]); /*928*/
		$1.barchars = "0123456789"; /*931*/
		$1.mirrormap = $get($a(["00", "01", "10", "11"]), (~~$z($geti($1.barcode, 0, 2))) % 4); /*934*/
		$1.sbs = $s(13); /*936*/
		$1.txt = $a(2); /*937*/
		for (var _M = 0; _M <= 1; _M += 1) { /*967*/
			$1.i = _M; /*940*/
			if ($1.i == 0) { /*946*/
				$puti($1.sbs, 0, $get($1.encs, 10)); /*944*/
			} else { /*946*/
				$puti($1.sbs, (($1.i - 1) * 6) + 7, $get($1.encs, 11)); /*946*/
			} /*946*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*950*/
			$j--; /*951*/
			$1.indx = $k[--$j].length; /*952*/
			$j -= 2; /*953*/
			$1.enc = $get($1.encs, $1.indx); /*954*/
			if ($get($1.mirrormap, $1.i) == 49) { /*964*/
				$1.enclen = $1.enc.length; /*956*/
				$1.revenc = $s($1.enclen); /*957*/
				for (var _l = 0, _k = $1.enclen - 1; _l <= _k; _l += 1) { /*962*/
					$1.j = _l; /*959*/
					$1.char = $get($1.enc, $1.j); /*960*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*961*/
				} /*961*/
				$1.enc = $1.revenc; /*963*/
			} /*963*/
			$puti($1.sbs, ($1.i * 6) + 3, $1.enc); /*965*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 9) + 13) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*966*/
		} /*966*/
		$k[$j++] = Infinity; /*981*/
		$k[$j++] = "ren"; /*973*/
		$k[$j++] = $0.renlinear; /*973*/
		$k[$j++] = "sbs"; /*973*/
		$k[$j++] = Infinity; /*973*/
		var _18 = $1.sbs; /*972*/
		for (var _19 = 0, _1A = _18.length; _19 < _1A; _19++) { /*972*/
			$k[$j++] = $get(_18, _19) - 48; /*972*/
		} /*972*/
		var _1C = $a(); /*973*/
		$k[$j++] = _1C; /*974*/
		$k[$j++] = "bhs"; /*974*/
		$k[$j++] = Infinity; /*974*/
		for (var _1D = 0, _1E = 12; _1D < _1E; _1D++) { /*973*/
			$k[$j++] = $1.height; /*973*/
		} /*973*/
		var _1G = $a(); /*974*/
		$k[$j++] = _1G; /*975*/
		$k[$j++] = "bbs"; /*975*/
		$k[$j++] = Infinity; /*975*/
		for (var _1H = 0, _1I = 12; _1H < _1I; _1H++) { /*974*/
			$k[$j++] = 0; /*974*/
		} /*974*/
		var _1J = $a(); /*975*/
		$k[$j++] = _1J; /*977*/
		if ($1.includetext) { /*977*/
			$k[$j++] = "txt"; /*976*/
			$k[$j++] = $1.txt; /*976*/
		} /*976*/
		$k[$j++] = "opt"; /*981*/
		$k[$j++] = $1.options; /*981*/
		$k[$j++] = "guardrightpos"; /*981*/
		$k[$j++] = 10; /*981*/
		$k[$j++] = "guardrightypos"; /*981*/
		$k[$j++] = $1.textyoffset + 4; /*981*/
		$k[$j++] = "bordertop"; /*981*/
		$k[$j++] = 10; /*981*/
		var _1O = $d(); /*981*/
		$k[$j++] = _1O; /*984*/
		if (!$1.dontdraw) { /*984*/
			$0.renlinear(); /*984*/
		} /*984*/
	};
	$0.ean13 = function() {
		var $1 = {}; /*1013*/
		$1.options = $k[--$j]; /*1015*/
		$1.barcode = $k[--$j]; /*1016*/
		$1.dontdraw = false; /*1018*/
		$1.includetext = false; /*1019*/
		$1.textfont = "Helvetica"; /*1020*/
		$1.textsize = 12; /*1021*/
		$1.textxoffset = -10; /*1022*/
		$1.textyoffset = -4.5; /*1023*/
		$1.height = 1; /*1024*/
		$1.addongap = 12; /*1025*/
		$1.addontextfont = "unset"; /*1026*/
		$1.addontextsize = "unset"; /*1027*/
		$1.addontextxoffset = "unset"; /*1028*/
		$1.addontextyoffset = "unset"; /*1029*/
		$forall($1.options, function() { /*1040*/
			var _3 = $k[--$j]; /*1040*/
			$1[$k[--$j]] = _3; /*1040*/
		}); /*1040*/
		$1.textfont = "" + $1.textfont; /*1042*/
		$1.textsize = +$1.textsize; /*1043*/
		$1.textxoffset = +$1.textxoffset; /*1044*/
		$1.textyoffset = +$1.textyoffset; /*1045*/
		$1.height = +$1.height; /*1046*/
		$1.addongap = +$1.addongap; /*1047*/
		if ($ne($1.addontextfont, "unset")) { /*1048*/
			$1.addontextfont = "" + $1.addontextfont; /*1048*/
		} /*1048*/
		if ($ne($1.addontextsize, "unset")) { /*1049*/
			$1.addontextsize = +$1.addontextsize; /*1049*/
		} /*1049*/
		if ($ne($1.addontextxoffset, "unset")) { /*1050*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1050*/
		} /*1050*/
		if ($ne($1.addontextyoffset, "unset")) { /*1051*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1051*/
		} /*1051*/
		$search($1.barcode, " "); /*1054*/
		if ($k[--$j]) { /*1060*/
			$1.barcode = $k[--$j]; /*1055*/
			$j--; /*1056*/
			$1.addon = $k[--$j]; /*1057*/
		} else { /*1060*/
			$j--; /*1059*/
			$1.addon = ""; /*1060*/
		} /*1060*/
		if (($1.barcode.length != 12) && ($1.barcode.length != 13)) { /*1066*/
			$k[$j++] = "bwipp.ean13badLength"; /*1065*/
			$k[$j++] = "EAN-13 must be 12 or 13 digits"; /*1065*/
			$0.raiseerror(); /*1065*/
		} /*1065*/
		$forall($1.barcode, function() { /*1071*/
			var _Q = $k[--$j]; /*1068*/
			if ((_Q < 48) || (_Q > 57)) { /*1070*/
				$k[$j++] = "bwipp.ean13badCharacter"; /*1069*/
				$k[$j++] = "EAN-13 must contain only digits"; /*1069*/
				$0.raiseerror(); /*1069*/
			} /*1069*/
		}); /*1069*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1074*/
			$k[$j++] = "bwipp.ean13badAddOnLength"; /*1073*/
			$k[$j++] = "Add-on for EAN-13 must be 2 or 5 digits"; /*1073*/
			$0.raiseerror(); /*1073*/
		} /*1073*/
		$1.pad = $s(13); /*1077*/
		$1.checksum = 0; /*1078*/
		for (var _V = 0; _V <= 11; _V += 1) { /*1087*/
			$1.i = _V; /*1080*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*1081*/
			if (($1.i % 2) == 0) { /*1085*/
				$1.checksum = $1.barchar + $1.checksum; /*1083*/
			} else { /*1085*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*1085*/
			} /*1085*/
		} /*1085*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1088*/
		if ($1.barcode.length == 13) { /*1093*/
			if ($get($1.barcode, 12) != ($1.checksum + 48)) { /*1092*/
				$k[$j++] = "bwipp.ean13badCheckDigit"; /*1091*/
				$k[$j++] = "Incorrect EAN-13 check digit provided"; /*1091*/
				$0.raiseerror(); /*1091*/
			} /*1091*/
		} /*1091*/
		$puti($1.pad, 0, $1.barcode); /*1094*/
		$put($1.pad, 12, $1.checksum + 48); /*1095*/
		$1.barcode = $1.pad; /*1096*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1103*/
		$1.barchars = "0123456789"; /*1106*/
		$1.mirrormaps = $a(["000000", "001011", "001101", "001110", "010011", "011001", "011100", "010101", "010110", "011010"]); /*1112*/
		$1.sbs = $s(59); /*1114*/
		$1.txt = $a(13); /*1115*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1118*/
		$1.mirrormap = $get($1.mirrormaps, $get($1.barcode, 0) - 48); /*1121*/
		$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1122*/
		for (var _17 = 1; _17 <= 6; _17 += 1) { /*1145*/
			$1.i = _17; /*1127*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1128*/
			$j--; /*1129*/
			$1.indx = $k[--$j].length; /*1130*/
			$j -= 2; /*1131*/
			$1.enc = $get($1.encs, $1.indx); /*1132*/
			if ($get($1.mirrormap, $1.i - 1) == 49) { /*1142*/
				$1.enclen = $1.enc.length; /*1134*/
				$1.revenc = $s($1.enclen); /*1135*/
				for (var _1O = 0, _1N = $1.enclen - 1; _1O <= _1N; _1O += 1) { /*1140*/
					$1.j = _1O; /*1137*/
					$1.char = $get($1.enc, $1.j); /*1138*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*1139*/
				} /*1139*/
				$1.enc = $1.revenc; /*1141*/
			} /*1141*/
			$puti($1.sbs, (($1.i - 1) * 4) + 3, $1.enc); /*1143*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 14) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1144*/
		} /*1144*/
		$puti($1.sbs, ((7 - 1) * 4) + 3, $get($1.encs, 11)); /*1148*/
		for (var _1o = 7; _1o <= 12; _1o += 1) { /*1161*/
			$1.i = _1o; /*1153*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1154*/
			$j--; /*1155*/
			$1.indx = $k[--$j].length; /*1156*/
			$j -= 2; /*1157*/
			$1.enc = $get($1.encs, $1.indx); /*1158*/
			$puti($1.sbs, (($1.i - 1) * 4) + 8, $1.enc); /*1159*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 18) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1160*/
		} /*1160*/
		$puti($1.sbs, 56, $get($1.encs, 12)); /*1164*/
		$k[$j++] = Infinity; /*1166*/
		var _2E = $1.sbs; /*1166*/
		for (var _2F = 0, _2G = _2E.length; _2F < _2G; _2F++) { /*1166*/
			$k[$j++] = $get(_2E, _2F) - 48; /*1166*/
		} /*1166*/
		$1.sbs = $a(); /*1166*/
		if ($1.includetext) { /*1173*/
			$k[$j++] = Infinity; /*1168*/
			$k[$j++] = $1.height; /*1168*/
			$k[$j++] = $1.height; /*1168*/
			for (var _2M = 0, _2N = 12; _2M < _2N; _2M++) { /*1168*/
				$k[$j++] = $1.height - 0.075; /*1168*/
			} /*1168*/
			$k[$j++] = $1.height; /*1168*/
			$k[$j++] = $1.height; /*1168*/
			for (var _2R = 0, _2S = 12; _2R < _2S; _2R++) { /*1168*/
				$k[$j++] = $1.height - 0.075; /*1168*/
			} /*1168*/
			$k[$j++] = $1.height; /*1168*/
			$k[$j++] = $1.height; /*1168*/
			$1.bhs = $a(); /*1168*/
			$k[$j++] = Infinity; /*1169*/
			$k[$j++] = 0; /*1169*/
			$k[$j++] = 0; /*1169*/
			for (var _2X = 0, _2Y = 12; _2X < _2Y; _2X++) { /*1169*/
				$k[$j++] = 0.075; /*1169*/
			} /*1169*/
			$k[$j++] = 0; /*1169*/
			$k[$j++] = 0; /*1169*/
			for (var _2Z = 0, _2a = 12; _2Z < _2a; _2Z++) { /*1169*/
				$k[$j++] = 0.075; /*1169*/
			} /*1169*/
			$k[$j++] = 0; /*1169*/
			$k[$j++] = 0; /*1169*/
			$1.bbs = $a(); /*1169*/
		} else { /*1173*/
			$k[$j++] = Infinity; /*1171*/
			for (var _2c = 0, _2d = 30; _2c < _2d; _2c++) { /*1171*/
				$k[$j++] = $1.height; /*1171*/
			} /*1171*/
			$1.bhs = $a(); /*1171*/
			$k[$j++] = Infinity; /*1172*/
			for (var _2g = 0, _2h = 30; _2g < _2h; _2g++) { /*1172*/
				$k[$j++] = 0; /*1172*/
			} /*1172*/
			$1.bbs = $a(); /*1172*/
			$1.txt = $a([]); /*1173*/
		} /*1173*/
		$1.guardrightypos = 0; /*1175*/
		if ($ne($1.addon, "")) { /*1196*/
			$k[$j++] = "addopts"; /*1186*/
			$k[$j++] = Infinity; /*1186*/
			$k[$j++] = "dontdraw"; /*1183*/
			$k[$j++] = true; /*1183*/
			$k[$j++] = "includetext"; /*1183*/
			$k[$j++] = true; /*1183*/
			$k[$j++] = "height"; /*1183*/
			$k[$j++] = $1.height - 0.15; /*1183*/
			$k[$j++] = "textxoffset"; /*1183*/
			if ($1.addontextxoffset != "unset") { /*1183*/
				$k[$j++] = $1.addontextxoffset; /*1183*/
			} else { /*1183*/
				$k[$j++] = 95 + $1.addongap; /*1183*/
			} /*1183*/
			if ($1.addontextyoffset != "unset") { /*1184*/
				$k[$j++] = "textyoffset"; /*1184*/
				$k[$j++] = $1.addontextyoffset; /*1184*/
			} /*1184*/
			$k[$j++] = "textsize"; /*1185*/
			if ($1.addontextsize != "unset") { /*1185*/
				$k[$j++] = $1.addontextsize; /*1185*/
			} else { /*1185*/
				$k[$j++] = $1.textsize; /*1185*/
			} /*1185*/
			$k[$j++] = "textfont"; /*1186*/
			if ($ne($1.addontextfont, "unset")) { /*1186*/
				$k[$j++] = $1.addontextfont; /*1186*/
			} else { /*1186*/
				$k[$j++] = $1.textfont; /*1186*/
			} /*1186*/
			var _2x = $d(); /*1186*/
			$1[$k[--$j]] = _2x; /*1187*/
			if ($1.addon.length == 2) { /*1188*/
				$k[$j++] = $1.addon; /*1188*/
				$k[$j++] = $1.addopts; /*1188*/
				$0.ean2(); /*1188*/
			} /*1188*/
			if ($1.addon.length == 5) { /*1189*/
				$k[$j++] = $1.addon; /*1189*/
				$k[$j++] = $1.addopts; /*1189*/
				$0.ean5(); /*1189*/
			} /*1189*/
			$1.addcode = $k[--$j]; /*1190*/
			$k[$j++] = Infinity; /*1191*/
			$aload($1.sbs); /*1191*/
			$k[$j++] = $1.addongap; /*1191*/
			$aload($1.addcode.sbs); /*1191*/
			$1.sbs = $a(); /*1191*/
			$k[$j++] = Infinity; /*1192*/
			$aload($1.bhs); /*1192*/
			$forall($1.addcode.bhs, function() { /*1192*/
				var _3E = $k[--$j]; /*1192*/
				$k[$j++] = _3E - 0.075; /*1192*/
			}); /*1192*/
			$1.bhs = $a(); /*1192*/
			$k[$j++] = Infinity; /*1193*/
			$aload($1.bbs); /*1193*/
			$forall($1.addcode.bbs, function() { /*1193*/
				var _3J = $k[--$j]; /*1193*/
				$k[$j++] = _3J + 0.075; /*1193*/
			}); /*1193*/
			$1.bbs = $a(); /*1193*/
			$k[$j++] = Infinity; /*1194*/
			$aload($1.txt); /*1194*/
			$aload($1.addcode.txt); /*1194*/
			$1.txt = $a(); /*1194*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1195*/
		} /*1195*/
		var _3W = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1208*/
		$k[$j++] = _3W; /*1211*/
		if (!$1.dontdraw) { /*1211*/
			$0.renlinear(); /*1211*/
		} /*1211*/
	};
	$0.ean8 = function() {
		var $1 = {}; /*1240*/
		$1.options = $k[--$j]; /*1242*/
		$1.barcode = $k[--$j]; /*1243*/
		$1.dontdraw = false; /*1245*/
		$1.includetext = false; /*1246*/
		$1.textfont = "Helvetica"; /*1247*/
		$1.textsize = 12; /*1248*/
		$1.textxoffset = 4; /*1249*/
		$1.textyoffset = -4.5; /*1250*/
		$1.height = 1; /*1251*/
		$1.addongap = 12; /*1252*/
		$1.addontextfont = "unset"; /*1253*/
		$1.addontextsize = "unset"; /*1254*/
		$1.addontextxoffset = "unset"; /*1255*/
		$1.addontextyoffset = "unset"; /*1256*/
		$forall($1.options, function() { /*1267*/
			var _3 = $k[--$j]; /*1267*/
			$1[$k[--$j]] = _3; /*1267*/
		}); /*1267*/
		$1.textfont = "" + $1.textfont; /*1269*/
		$1.textsize = +$1.textsize; /*1270*/
		$1.textxoffset = +$1.textxoffset; /*1271*/
		$1.textyoffset = +$1.textyoffset; /*1272*/
		$1.height = +$1.height; /*1273*/
		$1.addongap = +$1.addongap; /*1274*/
		if ($ne($1.addontextfont, "unset")) { /*1275*/
			$1.addontextfont = "" + $1.addontextfont; /*1275*/
		} /*1275*/
		if ($ne($1.addontextsize, "unset")) { /*1276*/
			$1.addontextsize = +$1.addontextsize; /*1276*/
		} /*1276*/
		if ($ne($1.addontextxoffset, "unset")) { /*1277*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1277*/
		} /*1277*/
		if ($ne($1.addontextyoffset, "unset")) { /*1278*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1278*/
		} /*1278*/
		$search($1.barcode, " "); /*1281*/
		if ($k[--$j]) { /*1287*/
			$1.barcode = $k[--$j]; /*1282*/
			$j--; /*1283*/
			$1.addon = $k[--$j]; /*1284*/
		} else { /*1287*/
			$j--; /*1286*/
			$1.addon = ""; /*1287*/
		} /*1287*/
		if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*1293*/
			$k[$j++] = "bwipp.ean8badLength"; /*1292*/
			$k[$j++] = "EAN-8 must be 7 or 8 digits"; /*1292*/
			$0.raiseerror(); /*1292*/
		} /*1292*/
		$forall($1.barcode, function() { /*1298*/
			var _Q = $k[--$j]; /*1295*/
			if ((_Q < 48) || (_Q > 57)) { /*1297*/
				$k[$j++] = "bwipp.ean8badCharacter"; /*1296*/
				$k[$j++] = "EAN-8 must contain only digits"; /*1296*/
				$0.raiseerror(); /*1296*/
			} /*1296*/
		}); /*1296*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1301*/
			$k[$j++] = "bwipp.ean8badAddOnLength"; /*1300*/
			$k[$j++] = "Add-on for EAN-8 must be 2 or 5 digits"; /*1300*/
			$0.raiseerror(); /*1300*/
		} /*1300*/
		$1.pad = $s(8); /*1304*/
		$1.checksum = 0; /*1305*/
		for (var _V = 0; _V <= 6; _V += 1) { /*1314*/
			$1.i = _V; /*1307*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*1308*/
			if (($1.i % 2) != 0) { /*1312*/
				$1.checksum = $1.barchar + $1.checksum; /*1310*/
			} else { /*1312*/
				$1.checksum = ($1.barchar * 3) + $1.checksum; /*1312*/
			} /*1312*/
		} /*1312*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1315*/
		if ($1.barcode.length == 8) { /*1320*/
			if ($get($1.barcode, 7) != ($1.checksum + 48)) { /*1319*/
				$k[$j++] = "bwipp.ean8badCheckDigit"; /*1318*/
				$k[$j++] = "Incorrect EAN-8 check digit provided"; /*1318*/
				$0.raiseerror(); /*1318*/
			} /*1318*/
		} /*1318*/
		$puti($1.pad, 0, $1.barcode); /*1321*/
		$put($1.pad, 7, $1.checksum + 48); /*1322*/
		$1.barcode = $1.pad; /*1323*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1330*/
		$1.barchars = "0123456789"; /*1333*/
		$1.sbs = $s(43); /*1335*/
		$1.txt = $a(8); /*1336*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1339*/
		for (var _u = 0; _u <= 3; _u += 1) { /*1352*/
			$1.i = _u; /*1344*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1345*/
			$j--; /*1346*/
			$1.indx = $k[--$j].length; /*1347*/
			$j -= 2; /*1348*/
			$1.enc = $get($1.encs, $1.indx); /*1349*/
			$puti($1.sbs, ($1.i * 4) + 3, $1.enc); /*1350*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 7) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1351*/
		} /*1351*/
		$puti($1.sbs, (4 * 4) + 3, $get($1.encs, 11)); /*1355*/
		for (var _1K = 4; _1K <= 7; _1K += 1) { /*1368*/
			$1.i = _1K; /*1360*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1361*/
			$j--; /*1362*/
			$1.indx = $k[--$j].length; /*1363*/
			$j -= 2; /*1364*/
			$1.enc = $get($1.encs, $1.indx); /*1365*/
			$puti($1.sbs, ($1.i * 4) + 8, $1.enc); /*1366*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + $1.textxoffset) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*1367*/
		} /*1367*/
		$puti($1.sbs, 40, $get($1.encs, 12)); /*1371*/
		$k[$j++] = Infinity; /*1373*/
		var _1k = $1.sbs; /*1373*/
		for (var _1l = 0, _1m = _1k.length; _1l < _1m; _1l++) { /*1373*/
			$k[$j++] = $get(_1k, _1l) - 48; /*1373*/
		} /*1373*/
		$1.sbs = $a(); /*1373*/
		if ($1.includetext) { /*1380*/
			$k[$j++] = Infinity; /*1375*/
			$k[$j++] = $1.height; /*1375*/
			$k[$j++] = $1.height; /*1375*/
			for (var _1s = 0, _1t = 8; _1s < _1t; _1s++) { /*1375*/
				$k[$j++] = $1.height - 0.075; /*1375*/
			} /*1375*/
			$k[$j++] = $1.height; /*1375*/
			$k[$j++] = $1.height; /*1375*/
			for (var _1x = 0, _1y = 8; _1x < _1y; _1x++) { /*1375*/
				$k[$j++] = $1.height - 0.075; /*1375*/
			} /*1375*/
			$k[$j++] = $1.height; /*1375*/
			$k[$j++] = $1.height; /*1375*/
			$1.bhs = $a(); /*1375*/
			$k[$j++] = Infinity; /*1376*/
			$k[$j++] = 0; /*1376*/
			$k[$j++] = 0; /*1376*/
			for (var _23 = 0, _24 = 8; _23 < _24; _23++) { /*1376*/
				$k[$j++] = 0.075; /*1376*/
			} /*1376*/
			$k[$j++] = 0; /*1376*/
			$k[$j++] = 0; /*1376*/
			for (var _25 = 0, _26 = 8; _25 < _26; _25++) { /*1376*/
				$k[$j++] = 0.075; /*1376*/
			} /*1376*/
			$k[$j++] = 0; /*1376*/
			$k[$j++] = 0; /*1376*/
			$1.bbs = $a(); /*1376*/
		} else { /*1380*/
			$k[$j++] = Infinity; /*1378*/
			for (var _28 = 0, _29 = 22; _28 < _29; _28++) { /*1378*/
				$k[$j++] = $1.height; /*1378*/
			} /*1378*/
			$1.bhs = $a(); /*1378*/
			$k[$j++] = Infinity; /*1379*/
			for (var _2C = 0, _2D = 22; _2C < _2D; _2C++) { /*1379*/
				$k[$j++] = 0; /*1379*/
			} /*1379*/
			$1.bbs = $a(); /*1379*/
			$1.txt = $a([]); /*1380*/
		} /*1380*/
		$1.guardrightypos = 0; /*1382*/
		if ($ne($1.addon, "")) { /*1403*/
			$k[$j++] = "addopts"; /*1393*/
			$k[$j++] = Infinity; /*1393*/
			$k[$j++] = "dontdraw"; /*1390*/
			$k[$j++] = true; /*1390*/
			$k[$j++] = "includetext"; /*1390*/
			$k[$j++] = true; /*1390*/
			$k[$j++] = "height"; /*1390*/
			$k[$j++] = $1.height - 0.15; /*1390*/
			$k[$j++] = "textxoffset"; /*1390*/
			if ($1.addontextxoffset != "unset") { /*1390*/
				$k[$j++] = $1.addontextxoffset; /*1390*/
			} else { /*1390*/
				$k[$j++] = 67 + $1.addongap; /*1390*/
			} /*1390*/
			if ($1.addontextyoffset != "unset") { /*1391*/
				$k[$j++] = "textyoffset"; /*1391*/
				$k[$j++] = $1.addontextyoffset; /*1391*/
			} /*1391*/
			$k[$j++] = "textsize"; /*1392*/
			if ($1.addontextsize != "unset") { /*1392*/
				$k[$j++] = $1.addontextsize; /*1392*/
			} else { /*1392*/
				$k[$j++] = $1.textsize; /*1392*/
			} /*1392*/
			$k[$j++] = "textfont"; /*1393*/
			if ($ne($1.addontextfont, "unset")) { /*1393*/
				$k[$j++] = $1.addontextfont; /*1393*/
			} else { /*1393*/
				$k[$j++] = $1.textfont; /*1393*/
			} /*1393*/
			var _2T = $d(); /*1393*/
			$1[$k[--$j]] = _2T; /*1394*/
			if ($1.addon.length == 2) { /*1395*/
				$k[$j++] = $1.addon; /*1395*/
				$k[$j++] = $1.addopts; /*1395*/
				$0.ean2(); /*1395*/
			} /*1395*/
			if ($1.addon.length == 5) { /*1396*/
				$k[$j++] = $1.addon; /*1396*/
				$k[$j++] = $1.addopts; /*1396*/
				$0.ean5(); /*1396*/
			} /*1396*/
			$1.addcode = $k[--$j]; /*1397*/
			$k[$j++] = Infinity; /*1398*/
			$aload($1.sbs); /*1398*/
			$k[$j++] = $1.addongap; /*1398*/
			$aload($1.addcode.sbs); /*1398*/
			$1.sbs = $a(); /*1398*/
			$k[$j++] = Infinity; /*1399*/
			$aload($1.bhs); /*1399*/
			$forall($1.addcode.bhs, function() { /*1399*/
				var _2k = $k[--$j]; /*1399*/
				$k[$j++] = _2k - 0.075; /*1399*/
			}); /*1399*/
			$1.bhs = $a(); /*1399*/
			$k[$j++] = Infinity; /*1400*/
			$aload($1.bbs); /*1400*/
			$forall($1.addcode.bbs, function() { /*1400*/
				var _2p = $k[--$j]; /*1400*/
				$k[$j++] = _2p + 0.075; /*1400*/
			}); /*1400*/
			$1.bbs = $a(); /*1400*/
			$k[$j++] = Infinity; /*1401*/
			$aload($1.txt); /*1401*/
			$aload($1.addcode.txt); /*1401*/
			$1.txt = $a(); /*1401*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1402*/
		} /*1402*/
		var _32 = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardleftpos: 10,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1416*/
		$k[$j++] = _32; /*1419*/
		if (!$1.dontdraw) { /*1419*/
			$0.renlinear(); /*1419*/
		} /*1419*/
	};
	$0.upca = function() {
		var $1 = {}; /*1448*/
		$1.options = $k[--$j]; /*1450*/
		$1.barcode = $k[--$j]; /*1451*/
		$1.dontdraw = false; /*1453*/
		$1.includetext = false; /*1454*/
		$1.textfont = "Helvetica"; /*1455*/
		$1.textsize = 12; /*1456*/
		$1.textxoffset = -7; /*1457*/
		$1.textyoffset = -4.5; /*1458*/
		$1.height = 1; /*1459*/
		$1.addongap = 12; /*1460*/
		$1.addontextfont = "unset"; /*1461*/
		$1.addontextsize = "unset"; /*1462*/
		$1.addontextxoffset = "unset"; /*1463*/
		$1.addontextyoffset = "unset"; /*1464*/
		$forall($1.options, function() { /*1475*/
			var _3 = $k[--$j]; /*1475*/
			$1[$k[--$j]] = _3; /*1475*/
		}); /*1475*/
		$1.textfont = "" + $1.textfont; /*1477*/
		$1.textsize = +$1.textsize; /*1478*/
		$1.textxoffset = +$1.textxoffset; /*1479*/
		$1.textyoffset = +$1.textyoffset; /*1480*/
		$1.height = +$1.height; /*1481*/
		$1.addongap = +$1.addongap; /*1482*/
		if ($ne($1.addontextfont, "unset")) { /*1483*/
			$1.addontextfont = "" + $1.addontextfont; /*1483*/
		} /*1483*/
		if ($ne($1.addontextsize, "unset")) { /*1484*/
			$1.addontextsize = +$1.addontextsize; /*1484*/
		} /*1484*/
		if ($ne($1.addontextxoffset, "unset")) { /*1485*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1485*/
		} /*1485*/
		if ($ne($1.addontextyoffset, "unset")) { /*1486*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1486*/
		} /*1486*/
		$search($1.barcode, " "); /*1489*/
		if ($k[--$j]) { /*1495*/
			$1.barcode = $k[--$j]; /*1490*/
			$j--; /*1491*/
			$1.addon = $k[--$j]; /*1492*/
		} else { /*1495*/
			$j--; /*1494*/
			$1.addon = ""; /*1495*/
		} /*1495*/
		if (($1.barcode.length == 7) || ($1.barcode.length == 8)) { /*1541*/
			$forall($1.barcode, function() { /*1505*/
				var _Q = $k[--$j]; /*1502*/
				if ((_Q < 48) || (_Q > 57)) { /*1504*/
					$k[$j++] = "bwipp.upcAupcEbadCharacter"; /*1503*/
					$k[$j++] = "UPC-E must contain only digits"; /*1503*/
					$0.raiseerror(); /*1503*/
				} /*1503*/
			}); /*1503*/
			var _S = $get($1.barcode, 0); /*1506*/
			if ((_S != 48) && (_S != 49)) { /*1508*/
				$k[$j++] = "bwipp.upcAupcEbadNumberSystem"; /*1507*/
				$k[$j++] = "UPC-E must have number system 0 or 1"; /*1507*/
				$0.raiseerror(); /*1507*/
			} /*1507*/
			for (var _T = 0, _U = 1; _T < _U; _T++) { /*1536*/
				var _W = ($1.barcode.length == 8) ? 12 : 11; /*1510*/
				$1.upcacode = $s(_W); /*1510*/
				if (($get($1.barcode, 6) - 48) <= 2) { /*1517*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 3)); /*1512*/
					$puti($1.upcacode, 3, $geti($1.barcode, 6, 1)); /*1513*/
					$puti($1.upcacode, 4, "0000"); /*1514*/
					$puti($1.upcacode, 8, $geti($1.barcode, 3, 3)); /*1515*/
					break; /*1516*/
				} /*1516*/
				if (($get($1.barcode, 6) - 48) == 3) { /*1523*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 4)); /*1519*/
					$puti($1.upcacode, 4, "00000"); /*1520*/
					$puti($1.upcacode, 9, $geti($1.barcode, 4, 2)); /*1521*/
					break; /*1522*/
				} /*1522*/
				if (($get($1.barcode, 6) - 48) == 4) { /*1529*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 5)); /*1525*/
					$puti($1.upcacode, 5, "00000"); /*1526*/
					$puti($1.upcacode, 10, $geti($1.barcode, 5, 1)); /*1527*/
					break; /*1528*/
				} /*1528*/
				if (($get($1.barcode, 6) - 48) >= 5) { /*1535*/
					$puti($1.upcacode, 0, $geti($1.barcode, 0, 6)); /*1531*/
					$puti($1.upcacode, 6, "0000"); /*1532*/
					$puti($1.upcacode, 10, $geti($1.barcode, 6, 1)); /*1533*/
					break; /*1534*/
				} /*1534*/
			} /*1534*/
			if ($1.barcode.length == 8) { /*1539*/
				$puti($1.upcacode, 11, $geti($1.barcode, 7, 1)); /*1538*/
			} /*1538*/
			$1.barcode = $1.upcacode; /*1540*/
		} /*1540*/
		if (($1.barcode.length != 11) && ($1.barcode.length != 12)) { /*1546*/
			$k[$j++] = "bwipp.upcAbadLength"; /*1545*/
			$k[$j++] = "UPC-A must be 11 or 12 digits"; /*1545*/
			$0.raiseerror(); /*1545*/
		} /*1545*/
		var _1I = $1.barcode; /*1547*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*1551*/
			var _1L = $get(_1I, _1J); /*1551*/
			if ((_1L < 48) || (_1L > 57)) { /*1550*/
				$k[$j++] = "bwipp.upcAbadCharacter"; /*1549*/
				$k[$j++] = "UPC-A must contain only digits"; /*1549*/
				$0.raiseerror(); /*1549*/
			} /*1549*/
		} /*1549*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1554*/
			$k[$j++] = "bwipp.upcAbadAddOnLength"; /*1553*/
			$k[$j++] = "Add-on for UPC-A must be 2 or 5 digits"; /*1553*/
			$0.raiseerror(); /*1553*/
		} /*1553*/
		$1.pad = $s(12); /*1557*/
		$1.checksum = 0; /*1558*/
		for (var _1Q = 0; _1Q <= 10; _1Q += 1) { /*1567*/
			$1.i = _1Q; /*1560*/
			$1.barchar = $get($1.barcode, $1.i) - 48; /*1561*/
			if (($1.i % 2) != 0) { /*1565*/
				$1.checksum = $1.checksum + $1.barchar; /*1563*/
			} else { /*1565*/
				$1.checksum = $1.checksum + ($1.barchar * 3); /*1565*/
			} /*1565*/
		} /*1565*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1568*/
		if ($1.barcode.length == 12) { /*1573*/
			if ($get($1.barcode, 11) != ($1.checksum + 48)) { /*1572*/
				$k[$j++] = "bwipp.upcAbadCheckDigit"; /*1571*/
				$k[$j++] = "Incorrect UPC check digit provided"; /*1571*/
				$0.raiseerror(); /*1571*/
			} /*1571*/
		} /*1571*/
		$puti($1.pad, 0, $1.barcode); /*1574*/
		$put($1.pad, 11, $1.checksum + 48); /*1575*/
		$1.barcode = $1.pad; /*1576*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "11111", "111"]); /*1583*/
		$1.barchars = "0123456789"; /*1586*/
		$1.sbs = $s(59); /*1588*/
		$1.txt = $a(12); /*1589*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1592*/
		for (var _1p = 0; _1p <= 5; _1p += 1) { /*1609*/
			$1.i = _1p; /*1597*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1598*/
			$j--; /*1599*/
			$1.indx = $k[--$j].length; /*1600*/
			$j -= 2; /*1601*/
			$1.enc = $get($1.encs, $1.indx); /*1602*/
			$puti($1.sbs, ($1.i * 4) + 3, $1.enc); /*1603*/
			if ($1.i == 0) { /*1607*/
				$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1605*/
			} else { /*1607*/
				$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + 11) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1607*/
			} /*1607*/
		} /*1607*/
		$puti($1.sbs, (6 * 4) + 3, $get($1.encs, 11)); /*1612*/
		for (var _2O = 6; _2O <= 11; _2O += 1) { /*1629*/
			$1.i = _2O; /*1617*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1618*/
			$j--; /*1619*/
			$1.indx = $k[--$j].length; /*1620*/
			$j -= 2; /*1621*/
			$1.enc = $get($1.encs, $1.indx); /*1622*/
			$puti($1.sbs, ($1.i * 4) + 8, $1.enc); /*1623*/
			if ($1.i == 11) { /*1627*/
				$put($1.txt, 11, $a([$geti($1.barcode, 11, 1), $1.textxoffset + 103, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1625*/
			} else { /*1627*/
				$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 7) + $1.textxoffset) + 15, $1.textyoffset, $1.textfont, $1.textsize])); /*1627*/
			} /*1627*/
		} /*1627*/
		$puti($1.sbs, 56, $get($1.encs, 12)); /*1632*/
		$k[$j++] = Infinity; /*1634*/
		var _2x = $1.sbs; /*1634*/
		for (var _2y = 0, _2z = _2x.length; _2y < _2z; _2y++) { /*1634*/
			$k[$j++] = $get(_2x, _2y) - 48; /*1634*/
		} /*1634*/
		$1.sbs = $a(); /*1634*/
		if ($1.includetext) { /*1641*/
			$k[$j++] = Infinity; /*1636*/
			for (var _33 = 0, _34 = 4; _33 < _34; _33++) { /*1636*/
				$k[$j++] = $1.height; /*1636*/
			} /*1636*/
			for (var _36 = 0, _37 = 10; _36 < _37; _36++) { /*1636*/
				$k[$j++] = $1.height - 0.075; /*1636*/
			} /*1636*/
			$k[$j++] = $1.height; /*1636*/
			$k[$j++] = $1.height; /*1636*/
			for (var _3B = 0, _3C = 10; _3B < _3C; _3B++) { /*1636*/
				$k[$j++] = $1.height - 0.075; /*1636*/
			} /*1636*/
			for (var _3E = 0, _3F = 4; _3E < _3F; _3E++) { /*1636*/
				$k[$j++] = $1.height; /*1636*/
			} /*1636*/
			$1.bhs = $a(); /*1636*/
			$k[$j++] = Infinity; /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			for (var _3I = 0, _3J = 10; _3I < _3J; _3I++) { /*1637*/
				$k[$j++] = 0.075; /*1637*/
			} /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			for (var _3K = 0, _3L = 10; _3K < _3L; _3K++) { /*1637*/
				$k[$j++] = 0.075; /*1637*/
			} /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			$k[$j++] = 0; /*1637*/
			$1.bbs = $a(); /*1637*/
		} else { /*1641*/
			$k[$j++] = Infinity; /*1639*/
			for (var _3N = 0, _3O = 30; _3N < _3O; _3N++) { /*1639*/
				$k[$j++] = $1.height; /*1639*/
			} /*1639*/
			$1.bhs = $a(); /*1639*/
			$k[$j++] = Infinity; /*1640*/
			for (var _3R = 0, _3S = 30; _3R < _3S; _3R++) { /*1640*/
				$k[$j++] = 0; /*1640*/
			} /*1640*/
			$1.bbs = $a(); /*1640*/
			$1.txt = $a([]); /*1641*/
		} /*1641*/
		$1.guardrightypos = 0; /*1643*/
		if ($ne($1.addon, "")) { /*1664*/
			$k[$j++] = "addopts"; /*1654*/
			$k[$j++] = Infinity; /*1654*/
			$k[$j++] = "dontdraw"; /*1651*/
			$k[$j++] = true; /*1651*/
			$k[$j++] = "includetext"; /*1651*/
			$k[$j++] = true; /*1651*/
			$k[$j++] = "height"; /*1651*/
			$k[$j++] = $1.height - 0.15; /*1651*/
			$k[$j++] = "textxoffset"; /*1651*/
			if ($1.addontextxoffset != "unset") { /*1651*/
				$k[$j++] = $1.addontextxoffset; /*1651*/
			} else { /*1651*/
				$k[$j++] = 95 + $1.addongap; /*1651*/
			} /*1651*/
			if ($1.addontextyoffset != "unset") { /*1652*/
				$k[$j++] = "textyoffset"; /*1652*/
				$k[$j++] = $1.addontextyoffset; /*1652*/
			} /*1652*/
			$k[$j++] = "textsize"; /*1653*/
			if ($1.addontextsize != "unset") { /*1653*/
				$k[$j++] = $1.addontextsize; /*1653*/
			} else { /*1653*/
				$k[$j++] = $1.textsize; /*1653*/
			} /*1653*/
			$k[$j++] = "textfont"; /*1654*/
			if ($ne($1.addontextfont, "unset")) { /*1654*/
				$k[$j++] = $1.addontextfont; /*1654*/
			} else { /*1654*/
				$k[$j++] = $1.textfont; /*1654*/
			} /*1654*/
			var _3i = $d(); /*1654*/
			$1[$k[--$j]] = _3i; /*1655*/
			if ($1.addon.length == 2) { /*1656*/
				$k[$j++] = $1.addon; /*1656*/
				$k[$j++] = $1.addopts; /*1656*/
				$0.ean2(); /*1656*/
			} /*1656*/
			if ($1.addon.length == 5) { /*1657*/
				$k[$j++] = $1.addon; /*1657*/
				$k[$j++] = $1.addopts; /*1657*/
				$0.ean5(); /*1657*/
			} /*1657*/
			$1.addcode = $k[--$j]; /*1658*/
			$k[$j++] = Infinity; /*1659*/
			$aload($1.sbs); /*1659*/
			$k[$j++] = $1.addongap; /*1659*/
			$aload($1.addcode.sbs); /*1659*/
			$1.sbs = $a(); /*1659*/
			$k[$j++] = Infinity; /*1660*/
			$aload($1.bhs); /*1660*/
			$forall($1.addcode.bhs, function() { /*1660*/
				var _3z = $k[--$j]; /*1660*/
				$k[$j++] = _3z - 0.075; /*1660*/
			}); /*1660*/
			$1.bhs = $a(); /*1660*/
			$k[$j++] = Infinity; /*1661*/
			$aload($1.bbs); /*1661*/
			$forall($1.addcode.bbs, function() { /*1661*/
				var _44 = $k[--$j]; /*1661*/
				$k[$j++] = _44 + 0.075; /*1661*/
			}); /*1661*/
			$1.bbs = $a(); /*1661*/
			$k[$j++] = Infinity; /*1662*/
			$aload($1.txt); /*1662*/
			$aload($1.addcode.txt); /*1662*/
			$1.txt = $a(); /*1662*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1663*/
		} /*1663*/
		var _4H = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1676*/
		$k[$j++] = _4H; /*1679*/
		if (!$1.dontdraw) { /*1679*/
			$0.renlinear(); /*1679*/
		} /*1679*/
	};
	$0.upce = function() {
		var $1 = {}; /*1708*/
		$1.options = $k[--$j]; /*1710*/
		$1.barcode = $k[--$j]; /*1711*/
		$1.dontdraw = false; /*1713*/
		$1.includetext = false; /*1714*/
		$1.textfont = "Helvetica"; /*1715*/
		$1.textsize = 12; /*1716*/
		$1.textxoffset = -7; /*1717*/
		$1.textyoffset = -4.5; /*1718*/
		$1.height = 1; /*1719*/
		$1.addongap = 12; /*1720*/
		$1.addontextfont = "unset"; /*1721*/
		$1.addontextsize = "unset"; /*1722*/
		$1.addontextxoffset = "unset"; /*1723*/
		$1.addontextyoffset = "unset"; /*1724*/
		$forall($1.options, function() { /*1735*/
			var _3 = $k[--$j]; /*1735*/
			$1[$k[--$j]] = _3; /*1735*/
		}); /*1735*/
		$1.textfont = "" + $1.textfont; /*1737*/
		$1.textsize = +$1.textsize; /*1738*/
		$1.textxoffset = +$1.textxoffset; /*1739*/
		$1.textyoffset = +$1.textyoffset; /*1740*/
		$1.height = +$1.height; /*1741*/
		$1.addongap = +$1.addongap; /*1742*/
		if ($ne($1.addontextfont, "unset")) { /*1743*/
			$1.addontextfont = "" + $1.addontextfont; /*1743*/
		} /*1743*/
		if ($ne($1.addontextsize, "unset")) { /*1744*/
			$1.addontextsize = +$1.addontextsize; /*1744*/
		} /*1744*/
		if ($ne($1.addontextxoffset, "unset")) { /*1745*/
			$1.addontextxoffset = +$1.addontextxoffset; /*1745*/
		} /*1745*/
		if ($ne($1.addontextyoffset, "unset")) { /*1746*/
			$1.addontextyoffset = +$1.addontextyoffset; /*1746*/
		} /*1746*/
		$search($1.barcode, " "); /*1749*/
		if ($k[--$j]) { /*1755*/
			$1.barcode = $k[--$j]; /*1750*/
			$j--; /*1751*/
			$1.addon = $k[--$j]; /*1752*/
		} else { /*1755*/
			$j--; /*1754*/
			$1.addon = ""; /*1755*/
		} /*1755*/
		if (($1.barcode.length == 11) || ($1.barcode.length == 12)) { /*1797*/
			$forall($1.barcode, function() { /*1765*/
				var _Q = $k[--$j]; /*1762*/
				if ((_Q < 48) || (_Q > 57)) { /*1764*/
					$k[$j++] = "bwipp.upcEupcAbadCharacter"; /*1763*/
					$k[$j++] = "UPC-A must contain only digits"; /*1763*/
					$0.raiseerror(); /*1763*/
				} /*1763*/
			}); /*1763*/
			for (var _R = 0, _S = 1; _R < _S; _R++) { /*1792*/
				var _U = ($1.barcode.length == 12) ? 8 : 7; /*1767*/
				$1.upcecode = $s(_U); /*1767*/
				if ((($get($1.barcode, 3) - 48) <= 2) && $eq($geti($1.barcode, 4, 4), "0000")) { /*1773*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 3)); /*1769*/
					$puti($1.upcecode, 3, $geti($1.barcode, 8, 3)); /*1770*/
					$puti($1.upcecode, 6, $geti($1.barcode, 3, 1)); /*1771*/
					break; /*1772*/
				} /*1772*/
				if ($eq($geti($1.barcode, 4, 5), "00000")) { /*1779*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 4)); /*1775*/
					$puti($1.upcecode, 4, $geti($1.barcode, 9, 2)); /*1776*/
					$puti($1.upcecode, 6, "3"); /*1777*/
					break; /*1778*/
				} /*1778*/
				if ($eq($geti($1.barcode, 5, 5), "00000")) { /*1785*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 5)); /*1781*/
					$puti($1.upcecode, 5, $geti($1.barcode, 10, 1)); /*1782*/
					$puti($1.upcecode, 6, "4"); /*1783*/
					break; /*1784*/
				} /*1784*/
				if ((($get($1.barcode, 10) - 48) >= 5) && $eq($geti($1.barcode, 6, 4), "0000")) { /*1790*/
					$puti($1.upcecode, 0, $geti($1.barcode, 0, 6)); /*1787*/
					$puti($1.upcecode, 6, $geti($1.barcode, 10, 1)); /*1788*/
					break; /*1789*/
				} /*1789*/
				$k[$j++] = "bwipp.upcEupcAnotCompressible"; /*1791*/
				$k[$j++] = "UPC-A cannot be converted to a UPC-E"; /*1791*/
				$0.raiseerror(); /*1791*/
			} /*1791*/
			if ($1.barcode.length == 12) { /*1795*/
				$puti($1.upcecode, 7, $geti($1.barcode, 11, 1)); /*1794*/
			} /*1794*/
			$1.barcode = $1.upcecode; /*1796*/
		} /*1796*/
		if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*1802*/
			$k[$j++] = "bwipp.upcEbadLength"; /*1801*/
			$k[$j++] = "UPC-E must be 7 or 8 digits"; /*1801*/
			$0.raiseerror(); /*1801*/
		} /*1801*/
		var _1I = $1.barcode; /*1803*/
		for (var _1J = 0, _1K = _1I.length; _1J < _1K; _1J++) { /*1807*/
			var _1L = $get(_1I, _1J); /*1807*/
			if ((_1L < 48) || (_1L > 57)) { /*1806*/
				$k[$j++] = "bwipp.upcEbadCharacter"; /*1805*/
				$k[$j++] = "UPC-E must contain only digits"; /*1805*/
				$0.raiseerror(); /*1805*/
			} /*1805*/
		} /*1805*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*1810*/
			$k[$j++] = "bwipp.upcEbadAddOnLength"; /*1809*/
			$k[$j++] = "Add-on for UPC-E must be 2 or 5 digits"; /*1809*/
			$0.raiseerror(); /*1809*/
		} /*1809*/
		var _1Q = $get($1.barcode, 0); /*1813*/
		if ((_1Q != 48) && (_1Q != 49)) { /*1815*/
			$k[$j++] = "bwipp.upcEbadNumberSystem"; /*1814*/
			$k[$j++] = "UPC-E must have number system 0 or 1"; /*1814*/
			$0.raiseerror(); /*1814*/
		} /*1814*/
		$1.encs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "1312", "1213", "3112", "111", "111111"]); /*1822*/
		$1.barchars = "0123456789"; /*1825*/
		$1.mirrormaps = $a(["000111", "001011", "001101", "001110", "010011", "011001", "011100", "010101", "010110", "011010"]); /*1830*/
		for (var _1T = 0, _1U = 1; _1T < _1U; _1T++) { /*1860*/
			$1.upcacode = $s(11); /*1834*/
			if (($get($1.barcode, 6) - 48) <= 2) { /*1841*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 3)); /*1836*/
				$puti($1.upcacode, 3, $geti($1.barcode, 6, 1)); /*1837*/
				$puti($1.upcacode, 4, "0000"); /*1838*/
				$puti($1.upcacode, 8, $geti($1.barcode, 3, 3)); /*1839*/
				break; /*1840*/
			} /*1840*/
			if (($get($1.barcode, 6) - 48) == 3) { /*1847*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 4)); /*1843*/
				$puti($1.upcacode, 4, "00000"); /*1844*/
				$puti($1.upcacode, 9, $geti($1.barcode, 4, 2)); /*1845*/
				break; /*1846*/
			} /*1846*/
			if (($get($1.barcode, 6) - 48) == 4) { /*1853*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 5)); /*1849*/
				$puti($1.upcacode, 5, "00000"); /*1850*/
				$puti($1.upcacode, 10, $geti($1.barcode, 5, 1)); /*1851*/
				break; /*1852*/
			} /*1852*/
			if (($get($1.barcode, 6) - 48) >= 5) { /*1859*/
				$puti($1.upcacode, 0, $geti($1.barcode, 0, 6)); /*1855*/
				$puti($1.upcacode, 6, "0000"); /*1856*/
				$puti($1.upcacode, 10, $geti($1.barcode, 6, 1)); /*1857*/
				break; /*1858*/
			} /*1858*/
		} /*1858*/
		$1.checksum = 0; /*1861*/
		for (var _29 = 0; _29 <= 10; _29 += 1) { /*1870*/
			$1.i = _29; /*1863*/
			$1.barchar = $get($1.upcacode, $1.i) - 48; /*1864*/
			if (($1.i % 2) != 0) { /*1868*/
				$1.checksum = $1.checksum + $1.barchar; /*1866*/
			} else { /*1868*/
				$1.checksum = $1.checksum + ($1.barchar * 3); /*1868*/
			} /*1868*/
		} /*1868*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*1871*/
		if ($1.barcode.length == 8) { /*1876*/
			if ($get($1.barcode, 7) != ($1.checksum + 48)) { /*1875*/
				$k[$j++] = "bwipp.upcEbadCheckDigit"; /*1874*/
				$k[$j++] = "Incorrect UPC check digit provided"; /*1874*/
				$0.raiseerror(); /*1874*/
			} /*1874*/
		} /*1874*/
		$1.pad = $s(8); /*1877*/
		$puti($1.pad, 0, $1.barcode); /*1878*/
		$put($1.pad, 7, $1.checksum + 48); /*1879*/
		$1.barcode = $1.pad; /*1880*/
		$1.txt = $a(8); /*1881*/
		$put($1.txt, 0, $a([$geti($1.barcode, 0, 1), $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1882*/
		$1.mirrormap = $get($1.mirrormaps, $1.checksum); /*1885*/
		if ($get($1.barcode, 0) == 48) { /*1899*/
			$1.invt = $s($1.mirrormap.length); /*1889*/
			for (var _2l = 0, _2k = $1.mirrormap.length - 1; _2l <= _2k; _2l += 1) { /*1897*/
				$1.i = _2l; /*1891*/
				if ($get($1.mirrormap, $1.i) == 48) { /*1895*/
					$put($1.invt, $1.i, 49); /*1893*/
				} else { /*1895*/
					$put($1.invt, $1.i, 48); /*1895*/
				} /*1895*/
			} /*1895*/
			$1.mirrormap = $1.invt; /*1898*/
		} /*1898*/
		$1.sbs = $s(33); /*1901*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*1904*/
		for (var _2y = 1; _2y <= 6; _2y += 1) { /*1926*/
			$1.i = _2y; /*1907*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*1909*/
			$j--; /*1910*/
			$1.indx = $k[--$j].length; /*1911*/
			$j -= 2; /*1912*/
			$1.enc = $get($1.encs, $1.indx); /*1913*/
			if ($get($1.mirrormap, $1.i - 1) == 49) { /*1923*/
				$1.enclen = $1.enc.length; /*1915*/
				$1.revenc = $s($1.enclen); /*1916*/
				for (var _3F = 0, _3E = $1.enclen - 1; _3F <= _3E; _3F += 1) { /*1921*/
					$1.j = _3F; /*1918*/
					$1.char = $get($1.enc, $1.j); /*1919*/
					$put($1.revenc, ($1.enclen - $1.j) - 1, $1.char); /*1920*/
				} /*1920*/
				$1.enc = $1.revenc; /*1922*/
			} /*1922*/
			$puti($1.sbs, (($1.i - 1) * 4) + 3, $1.enc); /*1924*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 1) * 7) + 11) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])); /*1925*/
		} /*1925*/
		$put($1.txt, 7, $a([$geti($1.barcode, 7, 1), ((6 * 7) + 18) + $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize - 2])); /*1928*/
		$puti($1.sbs, 27, $get($1.encs, 11)); /*1931*/
		$k[$j++] = Infinity; /*1933*/
		var _3n = $1.sbs; /*1933*/
		for (var _3o = 0, _3p = _3n.length; _3o < _3p; _3o++) { /*1933*/
			$k[$j++] = $get(_3n, _3o) - 48; /*1933*/
		} /*1933*/
		$1.sbs = $a(); /*1933*/
		if ($1.includetext) { /*1940*/
			$k[$j++] = Infinity; /*1935*/
			$k[$j++] = $1.height; /*1935*/
			$k[$j++] = $1.height; /*1935*/
			for (var _3v = 0, _3w = 12; _3v < _3w; _3v++) { /*1935*/
				$k[$j++] = $1.height - 0.075; /*1935*/
			} /*1935*/
			$k[$j++] = $1.height; /*1935*/
			$k[$j++] = $1.height; /*1935*/
			$k[$j++] = $1.height; /*1935*/
			$1.bhs = $a(); /*1935*/
			$k[$j++] = Infinity; /*1936*/
			$k[$j++] = 0; /*1936*/
			$k[$j++] = 0; /*1936*/
			for (var _42 = 0, _43 = 12; _42 < _43; _42++) { /*1936*/
				$k[$j++] = 0.075; /*1936*/
			} /*1936*/
			$k[$j++] = 0; /*1936*/
			$k[$j++] = 0; /*1936*/
			$k[$j++] = 0; /*1936*/
			$1.bbs = $a(); /*1936*/
		} else { /*1940*/
			$k[$j++] = Infinity; /*1938*/
			for (var _45 = 0, _46 = 17; _45 < _46; _45++) { /*1938*/
				$k[$j++] = $1.height; /*1938*/
			} /*1938*/
			$1.bhs = $a(); /*1938*/
			$k[$j++] = Infinity; /*1939*/
			for (var _49 = 0, _4A = 17; _49 < _4A; _49++) { /*1939*/
				$k[$j++] = 0; /*1939*/
			} /*1939*/
			$1.bbs = $a(); /*1939*/
			$1.txt = $a([]); /*1940*/
		} /*1940*/
		$1.guardrightypos = 0; /*1942*/
		if ($ne($1.addon, "")) { /*1963*/
			$k[$j++] = "addopts"; /*1953*/
			$k[$j++] = Infinity; /*1953*/
			$k[$j++] = "dontdraw"; /*1950*/
			$k[$j++] = true; /*1950*/
			$k[$j++] = "includetext"; /*1950*/
			$k[$j++] = true; /*1950*/
			$k[$j++] = "height"; /*1950*/
			$k[$j++] = $1.height - 0.15; /*1950*/
			$k[$j++] = "textxoffset"; /*1950*/
			if ($1.addontextxoffset != "unset") { /*1950*/
				$k[$j++] = $1.addontextxoffset; /*1950*/
			} else { /*1950*/
				$k[$j++] = 51 + $1.addongap; /*1950*/
			} /*1950*/
			if ($1.addontextyoffset != "unset") { /*1951*/
				$k[$j++] = "textyoffset"; /*1951*/
				$k[$j++] = $1.addontextyoffset; /*1951*/
			} /*1951*/
			$k[$j++] = "textsize"; /*1952*/
			if ($1.addontextsize != "unset") { /*1952*/
				$k[$j++] = $1.addontextsize; /*1952*/
			} else { /*1952*/
				$k[$j++] = $1.textsize; /*1952*/
			} /*1952*/
			$k[$j++] = "textfont"; /*1953*/
			if ($ne($1.addontextfont, "unset")) { /*1953*/
				$k[$j++] = $1.addontextfont; /*1953*/
			} else { /*1953*/
				$k[$j++] = $1.textfont; /*1953*/
			} /*1953*/
			var _4Q = $d(); /*1953*/
			$1[$k[--$j]] = _4Q; /*1954*/
			if ($1.addon.length == 2) { /*1955*/
				$k[$j++] = $1.addon; /*1955*/
				$k[$j++] = $1.addopts; /*1955*/
				$0.ean2(); /*1955*/
			} /*1955*/
			if ($1.addon.length == 5) { /*1956*/
				$k[$j++] = $1.addon; /*1956*/
				$k[$j++] = $1.addopts; /*1956*/
				$0.ean5(); /*1956*/
			} /*1956*/
			$1.addcode = $k[--$j]; /*1957*/
			$k[$j++] = Infinity; /*1958*/
			$aload($1.sbs); /*1958*/
			$k[$j++] = $1.addongap; /*1958*/
			$aload($1.addcode.sbs); /*1958*/
			$1.sbs = $a(); /*1958*/
			$k[$j++] = Infinity; /*1959*/
			$aload($1.bhs); /*1959*/
			$forall($1.addcode.bhs, function() { /*1959*/
				var _4h = $k[--$j]; /*1959*/
				$k[$j++] = _4h - 0.075; /*1959*/
			}); /*1959*/
			$1.bhs = $a(); /*1959*/
			$k[$j++] = Infinity; /*1960*/
			$aload($1.bbs); /*1960*/
			$forall($1.addcode.bbs, function() { /*1960*/
				var _4m = $k[--$j]; /*1960*/
				$k[$j++] = _4m + 0.075; /*1960*/
			}); /*1960*/
			$1.bbs = $a(); /*1960*/
			$k[$j++] = Infinity; /*1961*/
			$aload($1.txt); /*1961*/
			$aload($1.addcode.txt); /*1961*/
			$1.txt = $a(); /*1961*/
			$1.guardrightypos = ($1.height * 72) - 6; /*1962*/
		} /*1962*/
		var _4z = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			txt: $1.txt,
			opt: $1.options,
			guardrightpos: 10,
			guardrightypos: $1.guardrightypos,
			borderbottom: 5
		}; /*1975*/
		$k[$j++] = _4z; /*1978*/
		if (!$1.dontdraw) { /*1978*/
			$0.renlinear(); /*1978*/
		} /*1978*/
	};
	$0.isbn = function() {
		var $1 = {}; /*2006*/
		$1.options = $k[--$j]; /*2008*/
		$1.barcode = $k[--$j]; /*2009*/
		$1.dontdraw = false; /*2011*/
		$1.includetext = false; /*2012*/
		$1.isbntextfont = "OCR-A"; /*2013*/
		$1.isbntextsize = 8.5; /*2014*/
		$1.isbntextxoffset = "unset"; /*2015*/
		$1.isbntextyoffset = "unset"; /*2016*/
		$1.height = 1; /*2017*/
		$1.addongap = 12; /*2018*/
		$1.legacy = false; /*2019*/
		$forall($1.options, function() { /*2030*/
			var _3 = $k[--$j]; /*2030*/
			$1[$k[--$j]] = _3; /*2030*/
		}); /*2030*/
		$1.isbntextfont = "" + $1.isbntextfont; /*2032*/
		$1.isbntextsize = +$1.isbntextsize; /*2033*/
		if ($ne($1.isbntextxoffset, "unset")) { /*2034*/
			$1.isbntextxoffset = +$1.isbntextxoffset; /*2034*/
		} /*2034*/
		if ($ne($1.isbntextyoffset, "unset")) { /*2035*/
			$1.isbntextyoffset = +$1.isbntextyoffset; /*2035*/
		} /*2035*/
		$1.height = +$1.height; /*2036*/
		$1.addongap = +$1.addongap; /*2037*/
		$search($1.barcode, " "); /*2040*/
		if ($k[--$j]) { /*2046*/
			$1.barcode = $k[--$j]; /*2041*/
			$j--; /*2042*/
			$1.addon = $k[--$j]; /*2043*/
		} else { /*2046*/
			$j--; /*2045*/
			$1.addon = ""; /*2046*/
		} /*2046*/
		if ((($1.barcode.length != 15) && ($1.barcode.length != 17)) && (($1.barcode.length != 11) && ($1.barcode.length != 13))) { /*2053*/
			$k[$j++] = "bwipp.isbnBadLength"; /*2052*/
			$k[$j++] = "ISBN-13 must be 15 or 17 characters including dashes. ISBN-10 must be 11 or 13 characters including dashes"; /*2052*/
			$0.raiseerror(); /*2052*/
		} /*2052*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*2056*/
			$k[$j++] = "bwipp.isbnBadAddOnLength"; /*2055*/
			$k[$j++] = "Add-on for ISBN must be 2 or 5 digits"; /*2055*/
			$0.raiseerror(); /*2055*/
		} /*2055*/
		if ($1.barcode.length >= 15) { /*2120*/
			var _Q = $geti($1.barcode, 0, 4); /*2058*/
			if ($ne(_Q, "978-") && $ne(_Q, "979-")) { /*2060*/
				$k[$j++] = "bwipp.isbn13badPrefix"; /*2059*/
				$k[$j++] = "ISBN-13 prefix must be 978- or 979-"; /*2059*/
				$0.raiseerror(); /*2059*/
			} /*2059*/
			$1.wasdash = false; /*2061*/
			$1.numdash = 0; /*2061*/
			$1.numdigit = 0; /*2061*/
			$forall($geti($1.barcode, 5, 9), function() { /*2075*/
				var _T = $k[--$j]; /*2063*/
				$k[$j++] = _T; /*2070*/
				if (_T == 45) { /*2070*/
					if ($1.wasdash) { /*2067*/
						$k[$j++] = "bwipp.isbn13adjacentDashes"; /*2066*/
						$k[$j++] = "ISBN-13 does not permit adjacent dashes"; /*2066*/
						$0.raiseerror(); /*2066*/
					} /*2066*/
					$1.wasdash = true; /*2068*/
					$1.numdash = $1.numdash + 1; /*2069*/
				} /*2069*/
				var _W = $k[--$j]; /*2071*/
				if ((_W >= 48) && (_W <= 57)) { /*2074*/
					$1.wasdash = false; /*2072*/
					$1.numdigit = $1.numdigit + 1; /*2073*/
				} /*2073*/
			}); /*2073*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*2078*/
				$k[$j++] = "bwipp.isbn13numDashesDigits"; /*2077*/
				$k[$j++] = "Incorrect number of dashes and digits for ISBN-13"; /*2077*/
				$0.raiseerror(); /*2077*/
			} /*2077*/
			var _b = $get($1.barcode, 14); /*2079*/
			if ((_b < 48) || (_b > 57)) { /*2081*/
				$k[$j++] = "bwipp.isbn13character15"; /*2080*/
				$k[$j++] = "ISBN-13 character 15 must be a digit"; /*2080*/
				$0.raiseerror(); /*2080*/
			} /*2080*/
			if ($1.barcode.length == 17) { /*2089*/
				if ($ne($geti($1.barcode, 15, 1), "-")) { /*2085*/
					$k[$j++] = "bwipp.isbn13character16"; /*2084*/
					$k[$j++] = "ISBN-13 penultimate character must be a dash"; /*2084*/
					$0.raiseerror(); /*2084*/
				} /*2084*/
				var _g = $get($1.barcode, 16); /*2086*/
				if ((_g < 48) || (_g > 57)) { /*2088*/
					$k[$j++] = "bwipp.isbn13character17"; /*2087*/
					$k[$j++] = "ISBN-13 final character must be a digit"; /*2087*/
					$0.raiseerror(); /*2087*/
				} /*2087*/
			} /*2087*/
		} else { /*2120*/
			var _i = $get($1.barcode, 0); /*2091*/
			if ((_i < 48) || (_i > 57)) { /*2093*/
				$k[$j++] = "bwipp.isbn10FirstDigit"; /*2092*/
				$k[$j++] = "ISBN-10 first character must be a digit"; /*2092*/
				$0.raiseerror(); /*2092*/
			} /*2092*/
			$1.wasdash = false; /*2094*/
			$1.numdash = 0; /*2094*/
			$1.numdigit = 0; /*2094*/
			$forall($geti($1.barcode, 1, 9), function() { /*2108*/
				var _l = $k[--$j]; /*2096*/
				$k[$j++] = _l; /*2103*/
				if (_l == 45) { /*2103*/
					if ($1.wasdash) { /*2100*/
						$k[$j++] = "bwipp.isbn10adjacentDashes"; /*2099*/
						$k[$j++] = "ISBN-10 does not permit adjacent dashes"; /*2099*/
						$0.raiseerror(); /*2099*/
					} /*2099*/
					$1.wasdash = true; /*2101*/
					$1.numdash = $1.numdash + 1; /*2102*/
				} /*2102*/
				var _o = $k[--$j]; /*2104*/
				if ((_o >= 48) && (_o <= 57)) { /*2107*/
					$1.wasdash = false; /*2105*/
					$1.numdigit = $1.numdigit + 1; /*2106*/
				} /*2106*/
			}); /*2106*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*2111*/
				$k[$j++] = "bwipp.isbn10numDashesDigits"; /*2110*/
				$k[$j++] = "Incorrect number of dashes and digits for ISBN-10"; /*2110*/
				$0.raiseerror(); /*2110*/
			} /*2110*/
			var _t = $get($1.barcode, 10); /*2112*/
			if ((_t < 48) || (_t > 57)) { /*2114*/
				$k[$j++] = "bwipp.isbn10character11"; /*2113*/
				$k[$j++] = "ISBN-10 character 11 must be a digit"; /*2113*/
				$0.raiseerror(); /*2113*/
			} /*2113*/
			if ($1.barcode.length == 13) { /*2122*/
				if ($ne($geti($1.barcode, 11, 1), "-")) { /*2118*/
					$k[$j++] = "bwipp.isbn10character12"; /*2117*/
					$k[$j++] = "ISBN-10 penultimate character must be a dash"; /*2117*/
					$0.raiseerror(); /*2117*/
				} /*2117*/
				var _y = $get($1.barcode, 12); /*2119*/
				if (((_y < 48) || (_y > 57)) && (_y != 88)) { /*2121*/
					$k[$j++] = "bwipp.isbn10character13"; /*2120*/
					$k[$j++] = "ISBN-10 final character must be a digit or X"; /*2120*/
					$0.raiseerror(); /*2120*/
				} /*2120*/
			} /*2120*/
		} /*2120*/
		$1.isbntxt = $1.barcode; /*2125*/
		if ($1.isbntxt.length <= 13) { /*2151*/
			$1.isbn = $s(10); /*2129*/
			$1.checksum = 0; /*2130*/
			$1.i = 0; /*2131*/
			$1.n = 0; /*2131*/
			for (;;) { /*2143*/
				$1.isbnchar = $get($1.isbntxt, $1.i) - 48; /*2133*/
				if ($1.isbnchar != -3) { /*2140*/
					$put($1.isbn, $1.n, $1.isbnchar + 48); /*2135*/
					if ($1.n < 9) { /*2138*/
						$1.checksum = $1.checksum + ((10 - $1.n) * $1.isbnchar); /*2137*/
					} /*2137*/
					$1.n = $1.n + 1; /*2139*/
				} /*2139*/
				$1.i = $1.i + 1; /*2141*/
				if ($1.i == $1.isbntxt.length) { /*2142*/
					break; /*2142*/
				} /*2142*/
			} /*2142*/
			var _1I = (11 - ($1.checksum % 11)) % 11; /*2144*/
			$k[$j++] = "checksum"; /*2144*/
			$k[$j++] = _1I; /*2144*/
			if (_1I == 10) { /*2144*/
				$j--; /*2144*/
				$k[$j++] = 40; /*2144*/
			} /*2144*/
			var _1J = $k[--$j]; /*2144*/
			$1[$k[--$j]] = _1J + 48; /*2144*/
			$1.isbn = $geti($1.isbn, 0, 9); /*2145*/
			if ($1.isbntxt.length == 13) { /*2150*/
				if ($get($1.isbntxt, 12) != $1.checksum) { /*2149*/
					$k[$j++] = "bwipp.isbn10badCheckDigit"; /*2148*/
					$k[$j++] = "Incorrect ISBN-10 check digit provided"; /*2148*/
					$0.raiseerror(); /*2148*/
				} /*2148*/
			} /*2148*/
		} /*2148*/
		if ((!$1.legacy) || ($1.isbntxt.length >= 15)) { /*2187*/
			if ($1.isbntxt.length <= 13) { /*2161*/
				$1.pad = $s(15); /*2157*/
				$puti($1.pad, 0, "978-"); /*2158*/
				$puti($1.pad, 4, $geti($1.isbntxt, 0, 11)); /*2159*/
				$1.isbntxt = $1.pad; /*2160*/
			} /*2160*/
			$1.isbn = $s(13); /*2164*/
			$1.checksum = 0; /*2165*/
			$1.i = 0; /*2166*/
			$1.n = 0; /*2166*/
			for (;;) { /*2178*/
				$1.isbnchar = $get($1.isbntxt, $1.i) - 48; /*2168*/
				if ($1.isbnchar != -3) { /*2175*/
					$put($1.isbn, $1.n, $1.isbnchar + 48); /*2170*/
					if ($1.n < 12) { /*2173*/
						$k[$j++] = "checksum"; /*2172*/
						$k[$j++] = $1.isbnchar; /*2172*/
						if (($1.n % 2) != 0) { /*2172*/
							var _1l = $k[--$j]; /*2172*/
							$k[$j++] = _1l * 3; /*2172*/
						} /*2172*/
						var _1n = $k[--$j]; /*2172*/
						$1[$k[--$j]] = _1n + $1.checksum; /*2172*/
					} /*2172*/
					$1.n = $1.n + 1; /*2174*/
				} /*2174*/
				$1.i = $1.i + 1; /*2176*/
				if ($1.i == $1.isbntxt.length) { /*2177*/
					break; /*2177*/
				} /*2177*/
			} /*2177*/
			$1.checksum = ((10 - ($1.checksum % 10)) % 10) + 48; /*2179*/
			$1.isbn = $geti($1.isbn, 0, 12); /*2180*/
			if ($1.isbntxt.length == 17) { /*2185*/
				if ($get($1.isbntxt, 16) != $1.checksum) { /*2184*/
					$k[$j++] = "bwipp.isbn13badCheckDigit"; /*2183*/
					$k[$j++] = "Incorrect ISBN-13 check digit provided"; /*2183*/
					$0.raiseerror(); /*2183*/
				} /*2183*/
			} /*2183*/
		} /*2183*/
		var _21 = ($1.isbn.length == 12) ? 22 : 18; /*2190*/
		$1.pad = $s(_21); /*2190*/
		$puti($1.pad, 0, "ISBN "); /*2191*/
		$puti($1.pad, 5, $1.isbntxt); /*2192*/
		$put($1.pad, $1.pad.length - 2, 45); /*2193*/
		$put($1.pad, $1.pad.length - 1, $1.checksum); /*2194*/
		$1.isbntxt = $1.pad; /*2195*/
		$1.barcode = $s(12); /*2198*/
		if ($1.isbn.length == 9) { /*2203*/
			$puti($1.barcode, 0, "978"); /*2200*/
			$puti($1.barcode, 3, $1.isbn); /*2201*/
		} else { /*2203*/
			$puti($1.barcode, 0, $1.isbn); /*2203*/
		} /*2203*/
		if ($ne($1.addon, "")) { /*2213*/
			var _2L = $s((12 + $1.addon.length) + 1); /*2208*/
			$puti(_2L, 0, $1.barcode); /*2209*/
			$puti(_2L, 12, " "); /*2210*/
			$puti(_2L, 13, $1.addon); /*2211*/
			$1.barcode = _2L; /*2212*/
		} /*2212*/
		$1.options.dontdraw = true; /*2216*/
		$1.options.addongap = $1.addongap; /*2217*/
		$k[$j++] = "args"; /*2218*/
		$k[$j++] = $1.barcode; /*2218*/
		$k[$j++] = $1.options; /*2218*/
		$0.ean13(); /*2218*/
		var _2T = $k[--$j]; /*2218*/
		$1[$k[--$j]] = _2T; /*2218*/
		if ($1.includetext) { /*2237*/
			if ($1.isbntextxoffset == "unset") { /*2224*/
				$k[$j++] = "isbntextxoffset"; /*2223*/
				if ($1.isbn.length == 9) { /*2223*/
					$k[$j++] = -1; /*2223*/
				} else { /*2223*/
					$k[$j++] = -12; /*2223*/
				} /*2223*/
				var _2Y = $k[--$j]; /*2223*/
				$1[$k[--$j]] = _2Y; /*2223*/
			} /*2223*/
			if ($1.isbntextyoffset == "unset") { /*2227*/
				$1.isbntextyoffset = ($1.height * 72) + 3; /*2226*/
			} /*2226*/
			var _2d = $1.args.txt !== undefined; /*2228*/
			if (_2d) { /*2235*/
				$1.txt = $1.args.txt; /*2229*/
				$1.newtxt = $a($1.txt.length + 1); /*2230*/
				$puti($1.newtxt, 0, $1.txt); /*2231*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.isbntxt, $1.isbntextxoffset, $1.isbntextyoffset, $1.isbntextfont, $1.isbntextsize])); /*2232*/
				$1.args.txt = $1.newtxt; /*2233*/
			} else { /*2235*/
				$1.args.txt = $a([$a([$1.isbntxt, $1.isbntextxoffset, $1.isbntextyoffset, $1.isbntextfont, $1.isbntextsize])]); /*2235*/
			} /*2235*/
		} /*2235*/
		$1.args.opt = $1.options; /*2239*/
		$k[$j++] = $1.args; /*2242*/
		if (!$1.dontdraw) { /*2242*/
			$0.renlinear(); /*2242*/
		} /*2242*/
	};
	$0.ismn = function() {
		var $1 = {}; /*2270*/
		$1.options = $k[--$j]; /*2272*/
		$1.barcode = $k[--$j]; /*2273*/
		$1.dontdraw = false; /*2275*/
		$1.includetext = false; /*2276*/
		$1.ismntextfont = "OCR-A"; /*2277*/
		$1.ismntextsize = 8.5; /*2278*/
		$1.ismntextxoffset = "unset"; /*2279*/
		$1.ismntextyoffset = "unset"; /*2280*/
		$1.height = 1; /*2281*/
		$1.addongap = 12; /*2282*/
		$1.legacy = false; /*2283*/
		$forall($1.options, function() { /*2294*/
			var _3 = $k[--$j]; /*2294*/
			$1[$k[--$j]] = _3; /*2294*/
		}); /*2294*/
		$1.ismntextfont = "" + $1.ismntextfont; /*2296*/
		$1.ismntextsize = +$1.ismntextsize; /*2297*/
		if ($ne($1.ismntextxoffset, "unset")) { /*2298*/
			$1.ismntextxoffset = +$1.ismntextxoffset; /*2298*/
		} /*2298*/
		if ($ne($1.ismntextyoffset, "unset")) { /*2299*/
			$1.ismntextyoffset = +$1.ismntextyoffset; /*2299*/
		} /*2299*/
		$1.height = +$1.height; /*2300*/
		$1.addongap = +$1.addongap; /*2301*/
		$search($1.barcode, " "); /*2304*/
		if ($k[--$j]) { /*2310*/
			$1.barcode = $k[--$j]; /*2305*/
			$j--; /*2306*/
			$1.addon = $k[--$j]; /*2307*/
		} else { /*2310*/
			$j--; /*2309*/
			$1.addon = ""; /*2310*/
		} /*2310*/
		if ((($1.barcode.length != 15) && ($1.barcode.length != 17)) && (($1.barcode.length != 11) && ($1.barcode.length != 13))) { /*2317*/
			$k[$j++] = "bwipp.ismnBadLength"; /*2316*/
			$k[$j++] = "ISMN-13 must be 15 or 17 characters including dashes. ISMN-10 must be 11 or 13 characters including dashes"; /*2316*/
			$0.raiseerror(); /*2316*/
		} /*2316*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*2320*/
			$k[$j++] = "bwipp.ismnBadAddOnLength"; /*2319*/
			$k[$j++] = "Add-on for ISMN must be 2 or 5 digits"; /*2319*/
			$0.raiseerror(); /*2319*/
		} /*2319*/
		if ($1.barcode.length >= 15) { /*2387*/
			if ($ne($geti($1.barcode, 0, 4), "979-")) { /*2324*/
				$k[$j++] = "bwipp.ismn13badPrefix"; /*2323*/
				$k[$j++] = "ISMN-13 prefix must be 979-"; /*2323*/
				$0.raiseerror(); /*2323*/
			} /*2323*/
			$1.wasdash = false; /*2325*/
			$1.numdash = 0; /*2325*/
			$1.numdigit = 0; /*2325*/
			$forall($geti($1.barcode, 5, 9), function() { /*2339*/
				var _T = $k[--$j]; /*2327*/
				$k[$j++] = _T; /*2334*/
				if (_T == 45) { /*2334*/
					if ($1.wasdash) { /*2331*/
						$k[$j++] = "bwipp.ismn13adjacentDashes"; /*2330*/
						$k[$j++] = "ISMN-13 does not permit adjacent dashes"; /*2330*/
						$0.raiseerror(); /*2330*/
					} /*2330*/
					$1.wasdash = true; /*2332*/
					$1.numdash = $1.numdash + 1; /*2333*/
				} /*2333*/
				var _W = $k[--$j]; /*2335*/
				if ((_W >= 48) && (_W <= 57)) { /*2338*/
					$1.wasdash = false; /*2336*/
					$1.numdigit = $1.numdigit + 1; /*2337*/
				} /*2337*/
			}); /*2337*/
			if (($1.numdash != 2) || ($1.numdigit != 7)) { /*2342*/
				$k[$j++] = "bwipp.ismn13numDashesDigits"; /*2341*/
				$k[$j++] = "Incorrect number of dashes and digits for ISMN-13"; /*2341*/
				$0.raiseerror(); /*2341*/
			} /*2341*/
			var _b = $get($1.barcode, 14); /*2343*/
			if ((_b < 48) || (_b > 57)) { /*2345*/
				$k[$j++] = "bwipp.ismn13character15"; /*2344*/
				$k[$j++] = "ISMN-13 character 15 must be a digit"; /*2344*/
				$0.raiseerror(); /*2344*/
			} /*2344*/
			if ($1.barcode.length == 17) { /*2353*/
				if ($ne($geti($1.barcode, 15, 1), "-")) { /*2349*/
					$k[$j++] = "bwipp.ismn13character16"; /*2348*/
					$k[$j++] = "ISMN-13 penultimate character must be a dash"; /*2348*/
					$0.raiseerror(); /*2348*/
				} /*2348*/
				var _g = $get($1.barcode, 16); /*2350*/
				if ((_g < 48) || (_g > 57)) { /*2352*/
					$k[$j++] = "bwipp.ismn13character17"; /*2351*/
					$k[$j++] = "ISMN-13 final character must be a digit"; /*2351*/
					$0.raiseerror(); /*2351*/
				} /*2351*/
			} /*2351*/
		} else { /*2387*/
			if ($ne($geti($1.barcode, 0, 2), "M-")) { /*2357*/
				$k[$j++] = "bwipp.ismn10badPrefix"; /*2356*/
				$k[$j++] = "ISMN-10 prefix must be M-"; /*2356*/
				$0.raiseerror(); /*2356*/
			} /*2356*/
			var _k = $get($1.barcode, 2); /*2358*/
			if ((_k < 48) || (_k > 57)) { /*2360*/
				$k[$j++] = "bwipp.ismn10character3"; /*2359*/
				$k[$j++] = "ISMN-10 character 3 must be a digit"; /*2359*/
				$0.raiseerror(); /*2359*/
			} /*2359*/
			$1.wasdash = false; /*2361*/
			$1.numdash = 0; /*2361*/
			$1.numdigit = 0; /*2361*/
			$forall($geti($1.barcode, 3, 7), function() { /*2375*/
				var _n = $k[--$j]; /*2363*/
				$k[$j++] = _n; /*2370*/
				if (_n == 45) { /*2370*/
					if ($1.wasdash) { /*2367*/
						$k[$j++] = "bwipp.ismn10adjacentDashes"; /*2366*/
						$k[$j++] = "ISMN-10 does not permit adjacent dashes"; /*2366*/
						$0.raiseerror(); /*2366*/
					} /*2366*/
					$1.wasdash = true; /*2368*/
					$1.numdash = $1.numdash + 1; /*2369*/
				} /*2369*/
				var _q = $k[--$j]; /*2371*/
				if ((_q >= 48) && (_q <= 57)) { /*2374*/
					$1.wasdash = false; /*2372*/
					$1.numdigit = $1.numdigit + 1; /*2373*/
				} /*2373*/
			}); /*2373*/
			if (($1.numdash != 1) || ($1.numdigit != 6)) { /*2378*/
				$k[$j++] = "bwipp.ismn10numDashesDigits"; /*2377*/
				$k[$j++] = "Incorrect number of dashes and digits for ISMN-10"; /*2377*/
				$0.raiseerror(); /*2377*/
			} /*2377*/
			var _v = $get($1.barcode, 10); /*2379*/
			if ((_v < 48) || (_v > 57)) { /*2381*/
				$k[$j++] = "bwipp.ismn10character11"; /*2380*/
				$k[$j++] = "ISMN-10 character 11 must be a digit"; /*2380*/
				$0.raiseerror(); /*2380*/
			} /*2380*/
			if ($1.barcode.length == 13) { /*2389*/
				if ($ne($geti($1.barcode, 11, 1), "-")) { /*2385*/
					$k[$j++] = "bwipp.ismn10character12"; /*2384*/
					$k[$j++] = "ISMN-10 penultimate character must be a dash"; /*2384*/
					$0.raiseerror(); /*2384*/
				} /*2384*/
				var _10 = $get($1.barcode, 12); /*2386*/
				if (((_10 < 48) || (_10 > 57)) && (_10 != 88)) { /*2388*/
					$k[$j++] = "bwipp.ismn10character13"; /*2387*/
					$k[$j++] = "ISMN-10 final character must be a digit or X"; /*2387*/
					$0.raiseerror(); /*2387*/
				} /*2387*/
			} /*2387*/
		} /*2387*/
		$1.ismntxt = $1.barcode; /*2392*/
		$1.legacytxt = ""; /*2395*/
		if ($1.ismntxt.length <= 13) { /*2402*/
			$1.legacytxt = $1.ismntxt; /*2397*/
			$1.pad = $s($1.ismntxt.length + 4); /*2398*/
			$puti($1.pad, 0, "979-0-"); /*2399*/
			$puti($1.pad, 6, $geti($1.ismntxt, 2, $1.ismntxt.length - 2)); /*2400*/
			$1.ismntxt = $1.pad; /*2401*/
		} /*2401*/
		$1.ismn = $s(13); /*2405*/
		$1.checksum = 0; /*2406*/
		$1.i = 0; /*2407*/
		$1.n = 0; /*2407*/
		for (;;) { /*2423*/
			$1.ismnchar = $get($1.ismntxt, $1.i) - 48; /*2409*/
			if ($1.ismnchar != -3) { /*2420*/
				$put($1.ismn, $1.n, $1.ismnchar + 48); /*2411*/
				if ($1.n < 12) { /*2418*/
					if (($1.n % 2) == 0) { /*2416*/
						$1.checksum = $1.ismnchar + $1.checksum; /*2414*/
					} else { /*2416*/
						$1.checksum = ($1.ismnchar * 3) + $1.checksum; /*2416*/
					} /*2416*/
				} /*2416*/
				$1.n = $1.n + 1; /*2419*/
			} /*2419*/
			$1.i = $1.i + 1; /*2421*/
			if ($1.i == $1.ismntxt.length) { /*2422*/
				break; /*2422*/
			} /*2422*/
		} /*2422*/
		$1.checksum = ((10 - ($1.checksum % 10)) % 10) + 48; /*2424*/
		if (($1.barcode.length == 13) || ($1.barcode.length == 17)) { /*2431*/
			var _1X = $1.barcode; /*2428*/
			if ($get(_1X, _1X.length - 1) != $1.checksum) { /*2430*/
				$k[$j++] = "bwipp.ismnBadCheckDigit"; /*2429*/
				$k[$j++] = "Incorrect ISMN check digit provided"; /*2429*/
				$0.raiseerror(); /*2429*/
			} /*2429*/
		} /*2429*/
		if ($1.legacy && $ne($1.legacytxt, "")) { /*2438*/
			$1.ismntxt = $1.legacytxt; /*2435*/
			$1.pad = $s(18); /*2436*/
		} else { /*2438*/
			$1.pad = $s(22); /*2438*/
		} /*2438*/
		$puti($1.pad, 0, "ISMN "); /*2440*/
		$puti($1.pad, 5, $1.ismntxt); /*2441*/
		$put($1.pad, $1.pad.length - 2, 45); /*2442*/
		$put($1.pad, $1.pad.length - 1, $1.checksum); /*2443*/
		$1.ismntxt = $1.pad; /*2444*/
		$1.barcode = $geti($1.ismn, 0, 12); /*2447*/
		if ($ne($1.addon, "")) { /*2456*/
			var _1s = $s((12 + $1.addon.length) + 1); /*2451*/
			$puti(_1s, 0, $1.barcode); /*2452*/
			$puti(_1s, 12, " "); /*2453*/
			$puti(_1s, 13, $1.addon); /*2454*/
			$1.barcode = _1s; /*2455*/
		} /*2455*/
		$1.options.dontdraw = true; /*2459*/
		$1.options.addongap = $1.addongap; /*2460*/
		$k[$j++] = "args"; /*2461*/
		$k[$j++] = $1.barcode; /*2461*/
		$k[$j++] = $1.options; /*2461*/
		$0.ean13(); /*2461*/
		var _20 = $k[--$j]; /*2461*/
		$1[$k[--$j]] = _20; /*2461*/
		if ($1.includetext) { /*2480*/
			if ($1.ismntextxoffset == "unset") { /*2467*/
				$k[$j++] = "ismntextxoffset"; /*2466*/
				if ($1.ismntxt.length == 18) { /*2466*/
					$k[$j++] = -1; /*2466*/
				} else { /*2466*/
					$k[$j++] = -12; /*2466*/
				} /*2466*/
				var _25 = $k[--$j]; /*2466*/
				$1[$k[--$j]] = _25; /*2466*/
			} /*2466*/
			if ($1.ismntextyoffset == "unset") { /*2470*/
				$1.ismntextyoffset = ($1.height * 72) + 3; /*2469*/
			} /*2469*/
			var _2A = $1.args.txt !== undefined; /*2471*/
			if (_2A) { /*2478*/
				$1.txt = $1.args.txt; /*2472*/
				$1.newtxt = $a($1.txt.length + 1); /*2473*/
				$puti($1.newtxt, 0, $1.txt); /*2474*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.ismntxt, $1.ismntextxoffset, $1.ismntextyoffset, $1.ismntextfont, $1.ismntextsize])); /*2475*/
				$1.args.txt = $1.newtxt; /*2476*/
			} else { /*2478*/
				$1.args.txt = $a([$a([$1.ismntxt, $1.ismntextxoffset, $1.ismntextyoffset, $1.ismntextfont, $1.ismntextsize])]); /*2478*/
			} /*2478*/
		} /*2478*/
		$1.args.opt = $1.options; /*2482*/
		$k[$j++] = $1.args; /*2485*/
		if (!$1.dontdraw) { /*2485*/
			$0.renlinear(); /*2485*/
		} /*2485*/
	};
	$0.issn = function() {
		var $1 = {}; /*2513*/
		$1.options = $k[--$j]; /*2515*/
		$1.issntxt = $k[--$j]; /*2516*/
		$1.dontdraw = false; /*2518*/
		$1.includetext = false; /*2519*/
		$1.issntextfont = "OCR-A"; /*2520*/
		$1.issntextsize = 8.5; /*2521*/
		$1.issntextxoffset = "unset"; /*2522*/
		$1.issntextyoffset = "unset"; /*2523*/
		$1.height = 1; /*2524*/
		$1.addongap = 12; /*2525*/
		$forall($1.options, function() { /*2536*/
			var _3 = $k[--$j]; /*2536*/
			$1[$k[--$j]] = _3; /*2536*/
		}); /*2536*/
		$1.issntextfont = "" + $1.issntextfont; /*2538*/
		$1.issntextsize = +$1.issntextsize; /*2539*/
		if ($ne($1.issntextxoffset, "unset")) { /*2540*/
			$1.issntextxoffset = +$1.issntextxoffset; /*2540*/
		} /*2540*/
		if ($ne($1.issntextyoffset, "unset")) { /*2541*/
			$1.issntextyoffset = +$1.issntextyoffset; /*2541*/
		} /*2541*/
		$1.height = +$1.height; /*2542*/
		$1.addongap = +$1.addongap; /*2543*/
		$search($1.issntxt, " "); /*2546*/
		if ($k[--$j]) { /*2552*/
			$1.issntxt = $k[--$j]; /*2547*/
			$j--; /*2548*/
			$1.seqvar = $k[--$j]; /*2549*/
		} else { /*2552*/
			$j--; /*2551*/
			$1.seqvar = "00"; /*2552*/
		} /*2552*/
		$search($1.seqvar, " "); /*2556*/
		if ($k[--$j]) { /*2562*/
			$1.seqvar = $k[--$j]; /*2557*/
			$j--; /*2558*/
			$1.addon = $k[--$j]; /*2559*/
		} else { /*2562*/
			$j--; /*2561*/
			$1.addon = ""; /*2562*/
		} /*2562*/
		if (($1.issntxt.length != 8) && ($1.issntxt.length != 9)) { /*2568*/
			$k[$j++] = "bwipp.issnBadLength"; /*2567*/
			$k[$j++] = "ISSN must be 8 or 9 characters including dash, in the format XXXX-XXXX"; /*2567*/
			$0.raiseerror(); /*2567*/
		} /*2567*/
		$forall($geti($1.issntxt, 0, 4), function() { /*2573*/
			var _P = $k[--$j]; /*2570*/
			if ((_P < 48) || (_P > 57)) { /*2572*/
				$k[$j++] = "bwipp.issnFirstThroughFourthNotNumeric"; /*2571*/
				$k[$j++] = "ISSN first four characters must be numeral characters"; /*2571*/
				$0.raiseerror(); /*2571*/
			} /*2571*/
		}); /*2571*/
		if ($ne($geti($1.issntxt, 4, 1), "-")) { /*2576*/
			$k[$j++] = "bwipp.issnNeedsDash"; /*2575*/
			$k[$j++] = "ISSN fifth character must be a dash"; /*2575*/
			$0.raiseerror(); /*2575*/
		} /*2575*/
		$forall($geti($1.issntxt, 5, 3), function() { /*2581*/
			var _U = $k[--$j]; /*2578*/
			if ((_U < 48) || (_U > 57)) { /*2580*/
				$k[$j++] = "bwipp.issnSixthThroughEighthNotNumeric"; /*2579*/
				$k[$j++] = "ISSN sixth through eighth characters must be numerals"; /*2579*/
				$0.raiseerror(); /*2579*/
			} /*2579*/
		}); /*2579*/
		if ($1.issntxt.length == 9) { /*2586*/
			var _X = $get($1.issntxt, 8); /*2583*/
			if (((_X < 48) || (_X > 57)) && (_X != 88)) { /*2585*/
				$k[$j++] = "bwipp.issnNinthCharacterBadFormat"; /*2584*/
				$k[$j++] = "ISSN ninth character must be a number or the character X"; /*2584*/
				$0.raiseerror(); /*2584*/
			} /*2584*/
		} /*2584*/
		if ($1.seqvar.length != 2) { /*2589*/
			$k[$j++] = "bwipp.issnBadSequenceVariantLength"; /*2588*/
			$k[$j++] = "Sequence variant for ISSN must be 2 digits"; /*2588*/
			$0.raiseerror(); /*2588*/
		} /*2588*/
		$forall($1.seqvar, function() { /*2594*/
			var _a = $k[--$j]; /*2591*/
			if ((_a < 48) || (_a > 57)) { /*2593*/
				$k[$j++] = "bwipp.issnSequenceVariantBadCharacter"; /*2592*/
				$k[$j++] = "Sequence variant for ISSN must contain only digits"; /*2592*/
				$0.raiseerror(); /*2592*/
			} /*2592*/
		}); /*2592*/
		if ((($1.addon.length != 0) && ($1.addon.length != 2)) && ($1.addon.length != 5)) { /*2597*/
			$k[$j++] = "bwipp.issnBadAddOnLength"; /*2596*/
			$k[$j++] = "Add-on for ISSN must be 2 or 5 digits"; /*2596*/
			$0.raiseerror(); /*2596*/
		} /*2596*/
		$1.issn = $s(8); /*2600*/
		$1.checksum = 0; /*2601*/
		$1.i = 0; /*2602*/
		$1.n = 0; /*2602*/
		for (;;) { /*2614*/
			$1.issnchar = $get($1.issntxt, $1.i) - 48; /*2604*/
			if ($1.issnchar != -3) { /*2611*/
				$put($1.issn, $1.n, $1.issnchar + 48); /*2606*/
				if ($1.n < 7) { /*2609*/
					$1.checksum = $1.checksum + ($1.issnchar * (8 - $1.n)); /*2608*/
				} /*2608*/
				$1.n = $1.n + 1; /*2610*/
			} /*2610*/
			$1.i = $1.i + 1; /*2612*/
			if ($1.i == $1.issntxt.length) { /*2613*/
				break; /*2613*/
			} /*2613*/
		} /*2613*/
		$1.checksum = (11 - ($1.checksum % 11)) % 11; /*2615*/
		var _w = $1.checksum + 48; /*2616*/
		$k[$j++] = "checksum"; /*2616*/
		$k[$j++] = _w; /*2616*/
		if (_w == 58) { /*2616*/
			$j--; /*2616*/
			$k[$j++] = 88; /*2616*/
		} /*2616*/
		var _x = $k[--$j]; /*2616*/
		$1[$k[--$j]] = _x; /*2616*/
		if ($1.issntxt.length == 9) { /*2621*/
			if ($get($1.issntxt, 8) != $1.checksum) { /*2620*/
				$k[$j++] = "bwipp.issnBadCheckDigit"; /*2619*/
				$k[$j++] = "Incorrect ISSN check digit provided"; /*2619*/
				$0.raiseerror(); /*2619*/
			} /*2619*/
		} /*2619*/
		$1.pad = $s(14); /*2624*/
		$puti($1.pad, 0, "ISSN "); /*2625*/
		$puti($1.pad, 5, $1.issntxt); /*2626*/
		$put($1.pad, 13, $1.checksum); /*2627*/
		$1.issntxt = $1.pad; /*2628*/
		$1.barcode = $geti($1.issn, 0, 7); /*2631*/
		$1.barcode = $s(12); /*2634*/
		$puti($1.barcode, 0, "977"); /*2635*/
		$puti($1.barcode, 3, $1.issn); /*2636*/
		$puti($1.barcode, 10, $1.seqvar); /*2637*/
		if ($ne($1.addon, "")) { /*2646*/
			var _1K = $s((12 + $1.addon.length) + 1); /*2641*/
			$puti(_1K, 0, $1.barcode); /*2642*/
			$puti(_1K, 12, " "); /*2643*/
			$puti(_1K, 13, $1.addon); /*2644*/
			$1.barcode = _1K; /*2645*/
		} /*2645*/
		$1.options.dontdraw = true; /*2649*/
		$1.options.addongap = $1.addongap; /*2650*/
		$k[$j++] = "args"; /*2651*/
		$k[$j++] = $1.barcode; /*2651*/
		$k[$j++] = $1.options; /*2651*/
		$0.ean13(); /*2651*/
		var _1S = $k[--$j]; /*2651*/
		$1[$k[--$j]] = _1S; /*2651*/
		if ($1.includetext) { /*2668*/
			if ($1.issntextxoffset == "unset") { /*2655*/
				$1.issntextxoffset = 10; /*2655*/
			} /*2655*/
			if ($1.issntextyoffset == "unset") { /*2658*/
				$1.issntextyoffset = ($1.height * 72) + 3; /*2657*/
			} /*2657*/
			var _1Z = $1.args.txt !== undefined; /*2659*/
			if (_1Z) { /*2666*/
				$1.txt = $1.args.txt; /*2660*/
				$1.newtxt = $a($1.txt.length + 1); /*2661*/
				$puti($1.newtxt, 0, $1.txt); /*2662*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.issntxt, $1.issntextxoffset, $1.issntextyoffset, $1.issntextfont, $1.issntextsize])); /*2663*/
				$1.args.txt = $1.newtxt; /*2664*/
			} else { /*2666*/
				$1.args.txt = $a([$a([$1.issntxt, $1.issntextxoffset, $1.issntextyoffset, $1.issntextfont, $1.issntextsize])]); /*2666*/
			} /*2666*/
		} /*2666*/
		$1.args.opt = $1.options; /*2670*/
		$k[$j++] = $1.args; /*2673*/
		if (!$1.dontdraw) { /*2673*/
			$0.renlinear(); /*2673*/
		} /*2673*/
	};
	$0.code128 = function() {
		var $1 = {}; /*2700*/
		$1.options = $k[--$j]; /*2702*/
		$1.barcode = $k[--$j]; /*2703*/
		$1.dontdraw = false; /*2705*/
		$1.includetext = false; /*2706*/
		$1.textfont = "Courier"; /*2707*/
		$1.textsize = 10; /*2708*/
		$1.textxoffset = 0; /*2709*/
		$1.textyoffset = -8.5; /*2710*/
		$1.height = 1; /*2711*/
		$1.encoding = "auto"; /*2712*/
		$1.raw = false; /*2713*/
		$1.parse = false; /*2714*/
		$1.parsefnc = false; /*2715*/
		$forall($1.options, function() { /*2726*/
			var _3 = $k[--$j]; /*2726*/
			$1[$k[--$j]] = _3; /*2726*/
		}); /*2726*/
		$1.textfont = "" + $1.textfont; /*2728*/
		$1.textsize = +$1.textsize; /*2729*/
		$1.textxoffset = +$1.textxoffset; /*2730*/
		$1.textyoffset = +$1.textyoffset; /*2731*/
		$1.height = +$1.height; /*2732*/
		$1.barlen = $1.barcode.length; /*2755*/
		$1.sta = -1; /*2758*/
		$1.stb = -2; /*2758*/
		$1.stc = -3; /*2758*/
		$1.swa = -4; /*2759*/
		$1.swb = -5; /*2759*/
		$1.swc = -6; /*2759*/
		$1.fn1 = -7; /*2760*/
		$1.fn2 = -8; /*2760*/
		$1.fn3 = -9; /*2760*/
		$1.fn4 = -10; /*2761*/
		$1.sft = -11; /*2761*/
		$1.stp = -12; /*2761*/
		$1.lka = -13; /*2762*/
		$1.lkc = -14; /*2762*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sft, $1.sft, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.sta, $1.sta, $1.sta]), $a([$1.stb, $1.stb, $1.stb]), $a([$1.stc, $1.stc, $1.stc]), $a([$1.stp, $1.stp, $1.stp])]); /*2803*/
		$1.charvals = $a([{}, {}, {}]); /*2806*/
		for (var _2R = 0, _2Q = $1.charmaps.length - 1; _2R <= _2Q; _2R += 1) { /*2815*/
			$1.i = _2R; /*2808*/
			$1.encs = $get($1.charmaps, $1.i); /*2809*/
			for (var _2V = 0; _2V <= 2; _2V += 1) { /*2814*/
				$1.j = _2V; /*2811*/
				var _2Y = $get($1.encs, $1.j); /*2812*/
				$k[$j++] = _2Y; /*2812*/
				if ($eq($type(_2Y), "stringtype")) { /*2812*/
					var _2b = $get($k[--$j], 0); /*2812*/
					$k[$j++] = _2b; /*2812*/
				} /*2812*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*2813*/
			} /*2813*/
		} /*2813*/
		$1.seta = $get($1.charvals, 0); /*2816*/
		$1.setb = $get($1.charvals, 1); /*2817*/
		$1.setc = $get($1.charvals, 2); /*2818*/
		$put($1.seta, $1.lka, $get($1.seta, $1.swb)); /*2821*/
		$put($1.seta, $1.lkc, $get($1.seta, $1.swc)); /*2821*/
		$put($1.setb, $1.lka, $get($1.setb, $1.swc)); /*2822*/
		$put($1.setb, $1.lkc, $get($1.setb, $1.swa)); /*2822*/
		$put($1.setc, $1.lka, $get($1.setc, $1.swa)); /*2823*/
		$put($1.setc, $1.lkc, $get($1.setc, $1.swb)); /*2823*/
		if ($1.raw) { /*2825*/
			$1.encoding = "raw"; /*2825*/
		} /*2825*/
		if ($eq($1.encoding, "raw")) { /*2839*/
			$1.cws = $a($1.barlen); /*2828*/
			$1.i = 0; /*2829*/
			$1.j = 0; /*2829*/
			for (;;) { /*2836*/
				if ($1.i == $1.barlen) { /*2831*/
					break; /*2831*/
				} /*2831*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*2832*/
				$put($1.cws, $1.j, $1.cw); /*2833*/
				$1.i = $1.i + 4; /*2834*/
				$1.j = $1.j + 1; /*2835*/
			} /*2835*/
			$1.cws = $geti($1.cws, 0, $1.j); /*2837*/
			$1.text = ""; /*2838*/
		} /*2838*/
		if ($eq($1.encoding, "auto")) { /*3089*/
			var _3e = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3,
				LNKA: $1.lka,
				LNKC: $1.lkc
			}; /*2849*/
			$1.fncvals = _3e; /*2850*/
			$1.msg = $a($1.barlen); /*2853*/
			$1.text = $s($1.barlen); /*2854*/
			$1.i = 0; /*2855*/
			$1.j = 0; /*2855*/
			for (;;) { /*2871*/
				if ($1.i == $1.barlen) { /*2856*/
					break; /*2856*/
				} /*2856*/
				$1.char = $get($1.barcode, $1.i); /*2857*/
				$put($1.text, $1.j, $1.char); /*2858*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*2867*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*2865*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*2861*/
						$puti($1.text, $1.j, " "); /*2862*/
						$1.i = $1.i + 4; /*2863*/
					} else { /*2865*/
						$1.i = $1.i + 1; /*2865*/
					} /*2865*/
				} /*2865*/
				$put($1.msg, $1.j, $1.char); /*2868*/
				$1.i = $1.i + 1; /*2869*/
				$1.j = $1.j + 1; /*2870*/
			} /*2870*/
			$1.msg = $geti($1.msg, 0, $1.j); /*2872*/
			$1.msglen = $1.msg.length; /*2873*/
			$1.text = $geti($1.text, 0, $1.j); /*2874*/
			$k[$j++] = Infinity; /*2877*/
			for (var _4K = 0, _4L = $1.msglen; _4K < _4L; _4K++) { /*2877*/
				$k[$j++] = 0; /*2877*/
			} /*2877*/
			$k[$j++] = 0; /*2877*/
			$1.numSA = $a(); /*2877*/
			$k[$j++] = Infinity; /*2878*/
			for (var _4O = 0, _4P = $1.msglen; _4O < _4P; _4O++) { /*2878*/
				$k[$j++] = 0; /*2878*/
			} /*2878*/
			$k[$j++] = 0; /*2878*/
			$1.numEA = $a(); /*2878*/
			for (var _4S = $1.msglen - 1; _4S >= 0; _4S -= 1) { /*2888*/
				$1.i = _4S; /*2880*/
				if ($get($1.msg, $1.i) >= 0) { /*2887*/
					if ($get($1.msg, $1.i) >= 128) { /*2885*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*2883*/
					} else { /*2885*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*2885*/
					} /*2885*/
				} /*2885*/
			} /*2885*/
			$1.ea = false; /*2891*/
			$1.msgtmp = $a([]); /*2891*/
			for (var _4m = 0, _4l = $1.msglen - 1; _4m <= _4l; _4m += 1) { /*2906*/
				$1.i = _4m; /*2893*/
				$1.c = $get($1.msg, $1.i); /*2894*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*2904*/
					if ($1.ea) { /*2896*/
						$k[$j++] = $1.numSA; /*2896*/
					} else { /*2896*/
						$k[$j++] = $1.numEA; /*2896*/
					} /*2896*/
					var _4y = $get($k[--$j], $1.i); /*2896*/
					var _51 = ((_4y + $1.i) == $1.msglen) ? 3 : 5; /*2897*/
					if (_4y < _51) { /*2902*/
						$k[$j++] = Infinity; /*2899*/
						$aload($1.msgtmp); /*2899*/
						$k[$j++] = $1.fn4; /*2899*/
						$1.msgtmp = $a(); /*2899*/
					} else { /*2902*/
						$k[$j++] = Infinity; /*2901*/
						$aload($1.msgtmp); /*2901*/
						$k[$j++] = $1.fn4; /*2901*/
						$k[$j++] = $1.fn4; /*2901*/
						$1.msgtmp = $a(); /*2901*/
						$1.ea = !$1.ea; /*2902*/
					} /*2902*/
				} /*2902*/
				$k[$j++] = Infinity; /*2905*/
				$aload($1.msgtmp); /*2905*/
				if ($1.c >= 0) { /*2905*/
					$k[$j++] = $1.c & 127; /*2905*/
				} else { /*2905*/
					$k[$j++] = $1.c; /*2905*/
				} /*2905*/
				$1.msgtmp = $a(); /*2905*/
			} /*2905*/
			$1.msg = $1.msgtmp; /*2907*/
			$1.msglen = $1.msg.length; /*2908*/
			$1.numsscr = function() {
				$1.n = 0; /*2912*/
				$1.s = 0; /*2912*/
				$1.p = $k[--$j]; /*2913*/
				for (;;) { /*2924*/
					if ($1.p >= $1.msglen) { /*2914*/
						break; /*2914*/
					} /*2914*/
					var _5M = $get($1.msg, $1.p); /*2915*/
					var _5O = $get($1.setc, _5M) !== undefined; /*2916*/
					$k[$j++] = _5M; /*2916*/
					if (!_5O) { /*2916*/
						$j--; /*2916*/
						break; /*2916*/
					} /*2916*/
					if ($k[--$j] == $1.fn1) { /*2920*/
						if (($1.s % 2) == 0) { /*2919*/
							$1.s = $1.s + 1; /*2919*/
						} else { /*2919*/
							break; /*2919*/
						} /*2919*/
					} /*2919*/
					$1.n = $1.n + 1; /*2921*/
					$1.s = $1.s + 1; /*2922*/
					$1.p = $1.p + 1; /*2923*/
				} /*2923*/
				$k[$j++] = $1.n; /*2925*/
				$k[$j++] = $1.s; /*2925*/
			}; /*2926*/
			$1.enca = function() {
				$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*2930*/
				$1.j = $1.j + 1; /*2931*/
			}; /*2932*/
			$1.encb = function() {
				$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*2934*/
				$1.j = $1.j + 1; /*2935*/
			}; /*2936*/
			$1.encc = function() {
				var _5k = $k[--$j]; /*2938*/
				$k[$j++] = _5k; /*2942*/
				if ($ne($type(_5k), "arraytype")) { /*2941*/
					var _5o = $get($1.setc, $k[--$j]); /*2939*/
					$k[$j++] = _5o; /*2939*/
				} else { /*2941*/
					$aload($k[--$j]); /*2941*/
					var _5q = $k[--$j]; /*2941*/
					var _5r = $k[--$j]; /*2941*/
					$k[$j++] = (_5q - 48) + ((_5r - 48) * 10); /*2941*/
				} /*2941*/
				$put($1.cws, $1.j, $k[--$j]); /*2943*/
				$1.j = $1.j + 1; /*2944*/
			}; /*2945*/
			$1.anotb = function() {
				var _5w = $k[--$j]; /*2948*/
				var _5y = $get($1.seta, _5w) !== undefined; /*2948*/
				var _60 = $get($1.setb, _5w) !== undefined; /*2948*/
				$k[$j++] = _5y && (!_60); /*2948*/
			}; /*2948*/
			$1.bnota = function() {
				var _61 = $k[--$j]; /*2949*/
				var _63 = $get($1.setb, _61) !== undefined; /*2949*/
				var _65 = $get($1.seta, _61) !== undefined; /*2949*/
				$k[$j++] = _63 && (!_65); /*2949*/
			}; /*2949*/
			$k[$j++] = Infinity; /*2952*/
			for (var _67 = 0, _68 = $1.msg.length; _67 < _68; _67++) { /*2952*/
				$k[$j++] = 0; /*2952*/
			} /*2952*/
			$k[$j++] = 9999; /*2952*/
			$1.nextanotb = $a(); /*2952*/
			$k[$j++] = Infinity; /*2953*/
			for (var _6B = 0, _6C = $1.msg.length; _6B < _6C; _6B++) { /*2953*/
				$k[$j++] = 0; /*2953*/
			} /*2953*/
			$k[$j++] = 9999; /*2953*/
			$1.nextbnota = $a(); /*2953*/
			for (var _6F = $1.msg.length - 1; _6F >= 0; _6F -= 1) { /*2966*/
				$1.i = _6F; /*2955*/
				$k[$j++] = $get($1.msg, $1.i); /*2956*/
				$1.anotb(); /*2956*/
				if ($k[--$j]) { /*2959*/
					$put($1.nextanotb, $1.i, 0); /*2957*/
				} else { /*2959*/
					$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*2959*/
				} /*2959*/
				$k[$j++] = $get($1.msg, $1.i); /*2961*/
				$1.bnota(); /*2961*/
				if ($k[--$j]) { /*2964*/
					$put($1.nextbnota, $1.i, 0); /*2962*/
				} else { /*2964*/
					$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*2964*/
				} /*2964*/
			} /*2964*/
			$1.abeforeb = function() {
				var _6c = $k[--$j]; /*2969*/
				$k[$j++] = $lt($get($1.nextanotb, _6c), $get($1.nextbnota, _6c)); /*2969*/
			}; /*2969*/
			$1.bbeforea = function() {
				var _6h = $k[--$j]; /*2970*/
				$k[$j++] = $lt($get($1.nextbnota, _6h), $get($1.nextanotb, _6h)); /*2970*/
			}; /*2970*/
			$1.cws = $a(($1.barcode.length * 2) + 3); /*2972*/
			$1.j = 0; /*2975*/
			if ($1.msglen > 0) { /*2976*/
				$k[$j++] = 0; /*2976*/
				$1.numsscr(); /*2976*/
			} else { /*2976*/
				$k[$j++] = -1; /*2976*/
				$k[$j++] = -1; /*2976*/
			} /*2976*/
			$1.nums = $k[--$j]; /*2976*/
			$1.nchars = $k[--$j]; /*2976*/
			for (;;) { /*3001*/
				if ($1.msglen == 0) { /*2982*/
					$k[$j++] = $1.stb; /*2979*/
					$1.enca(); /*2979*/
					$1.cset = "setb"; /*2980*/
					break; /*2981*/
				} /*2981*/
				if (($1.msglen == 2) && ($1.nums == 2)) { /*2987*/
					$k[$j++] = $1.stc; /*2984*/
					$1.enca(); /*2984*/
					$1.cset = "setc"; /*2985*/
					break; /*2986*/
				} /*2986*/
				if ($1.nums >= 4) { /*2992*/
					$k[$j++] = $1.stc; /*2989*/
					$1.enca(); /*2989*/
					$1.cset = "setc"; /*2990*/
					break; /*2991*/
				} /*2991*/
				$k[$j++] = 0; /*2993*/
				$1.abeforeb(); /*2993*/
				if ($k[--$j]) { /*2997*/
					$k[$j++] = $1.sta; /*2994*/
					$1.enca(); /*2994*/
					$1.cset = "seta"; /*2995*/
					break; /*2996*/
				} /*2996*/
				$k[$j++] = $1.stb; /*2998*/
				$1.enca(); /*2998*/
				$1.cset = "setb"; /*2999*/
				break; /*3000*/
			} /*3000*/
			$1.i = 0; /*3004*/
			for (;;) { /*3087*/
				if ($1.i == $1.msglen) { /*3005*/
					break; /*3005*/
				} /*3005*/
				$k[$j++] = $1.i; /*3007*/
				$1.numsscr(); /*3007*/
				$1.nums = $k[--$j]; /*3007*/
				$1.nchars = $k[--$j]; /*3007*/
				for (;;) { /*3085*/
					if ((($eq($1.cset, "seta") || $eq($1.cset, "setb")) && ($1.nums >= 4)) && ($get($1.msg, $1.i) != $1.fn1)) { /*3024*/
						if (($1.nums % 2) == 0) { /*3022*/
							$k[$j++] = $1.swc; /*3014*/
							if ($eq($1.cset, "seta")) { /*3014*/
								$1.enca(); /*3014*/
							} else { /*3014*/
								$1.encb(); /*3014*/
							} /*3014*/
							$1.cset = "setc"; /*3015*/
							break; /*3016*/
						} else { /*3022*/
							$k[$j++] = $get($1.msg, $1.i); /*3018*/
							if ($eq($1.cset, "seta")) { /*3018*/
								$1.enca(); /*3018*/
							} else { /*3018*/
								$1.encb(); /*3018*/
							} /*3018*/
							$1.i = $1.i + 1; /*3019*/
							$k[$j++] = $1.swc; /*3020*/
							if ($eq($1.cset, "seta")) { /*3020*/
								$1.enca(); /*3020*/
							} else { /*3020*/
								$1.encb(); /*3020*/
							} /*3020*/
							$1.cset = "setc"; /*3021*/
							break; /*3022*/
						} /*3022*/
					} /*3022*/
					$k[$j++] = $eq($1.cset, "setb"); /*3025*/
					$k[$j++] = $get($1.msg, $1.i); /*3025*/
					$1.anotb(); /*3025*/
					var _7R = $k[--$j]; /*3025*/
					if (($k[--$j] && _7R)) { /*3037*/
						if ($1.i < ($1.msglen - 1)) { /*3033*/
							$k[$j++] = $1.i + 1; /*3027*/
							$1.bbeforea(); /*3027*/
							if ($k[--$j]) { /*3032*/
								$k[$j++] = $1.sft; /*3028*/
								$1.encb(); /*3028*/
								$k[$j++] = $get($1.msg, $1.i); /*3029*/
								$1.enca(); /*3029*/
								$1.i = $1.i + 1; /*3030*/
								break; /*3031*/
							} /*3031*/
						} /*3031*/
						$k[$j++] = $1.swa; /*3034*/
						$1.encb(); /*3034*/
						$1.cset = "seta"; /*3035*/
						break; /*3036*/
					} /*3036*/
					$k[$j++] = $eq($1.cset, "seta"); /*3038*/
					$k[$j++] = $get($1.msg, $1.i); /*3038*/
					$1.bnota(); /*3038*/
					var _7h = $k[--$j]; /*3038*/
					if (($k[--$j] && _7h)) { /*3050*/
						if ($1.i < ($1.msglen - 1)) { /*3046*/
							$k[$j++] = $1.i + 1; /*3040*/
							$1.abeforeb(); /*3040*/
							if ($k[--$j]) { /*3045*/
								$k[$j++] = $1.sft; /*3041*/
								$1.enca(); /*3041*/
								$k[$j++] = $get($1.msg, $1.i); /*3042*/
								$1.encb(); /*3042*/
								$1.i = $1.i + 1; /*3043*/
								break; /*3044*/
							} /*3044*/
						} /*3044*/
						$k[$j++] = $1.swb; /*3047*/
						$1.enca(); /*3047*/
						$1.cset = "setb"; /*3048*/
						break; /*3049*/
					} /*3049*/
					if ($eq($1.cset, "setc") && ($1.nums < 2)) { /*3060*/
						$k[$j++] = $1.i; /*3052*/
						$1.abeforeb(); /*3052*/
						if ($k[--$j]) { /*3056*/
							$k[$j++] = $1.swa; /*3053*/
							$1.encc(); /*3053*/
							$1.cset = "seta"; /*3054*/
							break; /*3055*/
						} /*3055*/
						$k[$j++] = $1.swb; /*3057*/
						$1.encc(); /*3057*/
						$1.cset = "setb"; /*3058*/
						break; /*3059*/
					} /*3059*/
					if ($eq($1.cset, "seta")) { /*3067*/
						$k[$j++] = $get($1.msg, $1.i); /*3064*/
						$1.enca(); /*3064*/
						$1.i = $1.i + 1; /*3065*/
						break; /*3066*/
					} /*3066*/
					if ($eq($1.cset, "setb")) { /*3072*/
						$k[$j++] = $get($1.msg, $1.i); /*3069*/
						$1.encb(); /*3069*/
						$1.i = $1.i + 1; /*3070*/
						break; /*3071*/
					} /*3071*/
					if ($eq($1.cset, "setc")) { /*3082*/
						if ($get($1.msg, $1.i) == $1.fn1) { /*3079*/
							$k[$j++] = $1.fn1; /*3075*/
							$1.encc(); /*3075*/
							$1.i = $1.i + 1; /*3076*/
						} else { /*3079*/
							$k[$j++] = $geti($1.msg, $1.i, 2); /*3078*/
							$1.encc(); /*3078*/
							$1.i = $1.i + 2; /*3079*/
						} /*3079*/
						break; /*3081*/
					} /*3081*/
					break; /*3084*/
				} /*3084*/
			} /*3084*/
			$1.cws = $geti($1.cws, 0, $1.j); /*3088*/
		} /*3088*/
		var _8O = $a($1.j + 2); /*3092*/
		$puti(_8O, 0, $1.cws); /*3092*/
		$1.cws = _8O; /*3092*/
		$1.csum = $get($1.cws, 0); /*3093*/
		for (var _8U = 1, _8T = $1.j - 1; _8U <= _8T; _8U += 1) { /*3097*/
			$1.i = _8U; /*3095*/
			$1.csum = $1.csum + ($get($1.cws, $1.i) * $1.i); /*3096*/
		} /*3096*/
		$1.csum = $1.csum % 103; /*3098*/
		$put($1.cws, $1.j, $1.csum); /*3099*/
		$put($1.cws, $1.j + 1, $get($1.seta, $1.stp)); /*3100*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "211214", "211232", "2331112"]); /*3120*/
		$1.sbs = $s(($1.cws.length * 6) + 1); /*3123*/
		for (var _8o = 0, _8n = $1.cws.length - 1; _8o <= _8n; _8o += 1) { /*3127*/
			$1.i = _8o; /*3125*/
			$puti($1.sbs, $1.i * 6, $get($1.encs, $get($1.cws, $1.i))); /*3126*/
		} /*3126*/
		$k[$j++] = Infinity; /*3137*/
		$k[$j++] = "ren"; /*3133*/
		$k[$j++] = $0.renlinear; /*3133*/
		$k[$j++] = "sbs"; /*3133*/
		$k[$j++] = Infinity; /*3133*/
		var _8w = $1.sbs; /*3132*/
		for (var _8x = 0, _8y = _8w.length; _8x < _8y; _8x++) { /*3132*/
			$k[$j++] = $get(_8w, _8x) - 48; /*3132*/
		} /*3132*/
		var _90 = $a(); /*3133*/
		$k[$j++] = _90; /*3134*/
		$k[$j++] = "bhs"; /*3134*/
		$k[$j++] = Infinity; /*3134*/
		for (var _92 = 0, _93 = ~~(($1.sbs.length + 1) / 2); _92 < _93; _92++) { /*3133*/
			$k[$j++] = $1.height; /*3133*/
		} /*3133*/
		var _95 = $a(); /*3134*/
		$k[$j++] = _95; /*3135*/
		$k[$j++] = "bbs"; /*3135*/
		$k[$j++] = Infinity; /*3135*/
		for (var _97 = 0, _98 = ~~(($1.sbs.length + 1) / 2); _97 < _98; _97++) { /*3134*/
			$k[$j++] = 0; /*3134*/
		} /*3134*/
		var _99 = $a(); /*3135*/
		$k[$j++] = _99; /*3137*/
		$k[$j++] = "txt"; /*3137*/
		$k[$j++] = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3137*/
		$k[$j++] = "textxalign"; /*3137*/
		$k[$j++] = "center"; /*3137*/
		$k[$j++] = "opt"; /*3137*/
		$k[$j++] = $1.options; /*3137*/
		var _9I = $d(); /*3137*/
		$k[$j++] = _9I; /*3140*/
		if (!$1.dontdraw) { /*3140*/
			$0.renlinear(); /*3140*/
		} /*3140*/
	};
	$0["gs1-128"] = function() {
		var $1 = {}; /*3168*/
		$1.options = $k[--$j]; /*3170*/
		$1.barcode = $k[--$j]; /*3171*/
		$1.dontdraw = false; /*3173*/
		$1.includetext = false; /*3174*/
		$1.textfont = "Courier"; /*3175*/
		$1.textsize = 10; /*3176*/
		$1.textxoffset = 0; /*3177*/
		$1.textyoffset = -8.5; /*3178*/
		$1.height = 0.5; /*3179*/
		$1.linkagea = false; /*3180*/
		$1.linkagec = false; /*3181*/
		$forall($1.options, function() { /*3192*/
			var _3 = $k[--$j]; /*3192*/
			$1[$k[--$j]] = _3; /*3192*/
		}); /*3192*/
		$1.textfont = "" + $1.textfont; /*3194*/
		$1.textsize = +$1.textsize; /*3195*/
		$1.textxoffset = +$1.textxoffset; /*3196*/
		$1.textyoffset = +$1.textyoffset; /*3197*/
		$1.height = +$1.height; /*3198*/
		$1.text = $1.barcode; /*3200*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*3204*/
			$1.out = $s($1.in.length); /*3205*/
			$1.j = 0; /*3206*/
			$k[$j++] = $1.in; /*3220*/
			for (;;) { /*3220*/
				$search($k[--$j], "^"); /*3209*/
				if ($k[--$j]) { /*3218*/
					var _H = $k[--$j]; /*3210*/
					$puti($1.out, $1.j, _H); /*3210*/
					$1.j = (_H.length + $1.j) + 1; /*3211*/
					$j--; /*3212*/
					var _L = $k[--$j]; /*3213*/
					$put($1.out, $1.j - 1, ~~$z($geti(_L, 0, 3))); /*3213*/
					$k[$j++] = $geti(_L, 3, _L.length - 3); /*3214*/
				} else { /*3218*/
					var _Q = $k[--$j]; /*3216*/
					$puti($1.out, $1.j, _Q); /*3216*/
					$1.j = _Q.length + $1.j; /*3217*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*3218*/
					break; /*3218*/
				} /*3218*/
			} /*3218*/
		}; /*3221*/
		$1.ais = $a([]); /*3224*/
		$1.vals = $a([]); /*3225*/
		var _Z = $1.barcode; /*3226*/
		$k[$j++] = $geti(_Z, 1, _Z.length - 1); /*3239*/
		for (;;) { /*3239*/
			var _b = $k[--$j]; /*3228*/
			$k[$j++] = _b; /*3228*/
			if ($eq(_b, "")) { /*3228*/
				break; /*3228*/
			} /*3228*/
			$search($k[--$j], ")"); /*3229*/
			$j--; /*3229*/
			var _d = $k[--$j]; /*3230*/
			var _e = $k[--$j]; /*3230*/
			var _f = $k[--$j]; /*3231*/
			$k[$j++] = _d; /*3231*/
			$search(_f, "("); /*3231*/
			if ($k[--$j]) { /*3234*/
				var _h = $k[--$j]; /*3232*/
				var _i = $k[--$j]; /*3232*/
				var _j = $k[--$j]; /*3232*/
				var _k = $k[--$j]; /*3232*/
				$k[$j++] = _j; /*3232*/
				$k[$j++] = _k; /*3232*/
				$k[$j++] = _h; /*3232*/
			} else { /*3234*/
				var _l = $k[--$j]; /*3234*/
				var _m = $k[--$j]; /*3234*/
				$k[$j++] = ""; /*3234*/
				$k[$j++] = _m; /*3234*/
				$k[$j++] = _l; /*3234*/
			} /*3234*/
			$k[$j++] = Infinity; /*3236*/
			$aload($1.ais); /*3236*/
			var _p = $k[$j - 1 - ($counttomark() + 2)]; /*3236*/
			$k[$j++] = _p; /*3236*/
			$1.ais = $a(); /*3236*/
			$k[$j++] = Infinity; /*3237*/
			$aload($1.vals); /*3237*/
			var _t = $k[$j - 1 - ($counttomark() + 1)]; /*3237*/
			$k[$j++] = _t; /*3237*/
			$1.expand(); /*3237*/
			$1.vals = $a(); /*3237*/
			$j -= 2; /*3238*/
		} /*3238*/
		$j--; /*3240*/
		$1.aifixed = {}; /*3245*/
		$k[$j++] = Infinity; /*3247*/
		for (var _v = 0; _v <= 4; _v += 1) { /*3247*/
			$k[$j++] = _v; /*3247*/
		} /*3247*/
		var _w = $a(); /*3247*/
		for (var _x = 0, _y = _w.length; _x < _y; _x++) { /*3250*/
			var _11 = $strcpy($s(2), "00"); /*3249*/
			$put(_11, 1, $get(_w, _x) + 48); /*3249*/
			$put($1.aifixed, _11, _11); /*3249*/
		} /*3249*/
		$k[$j++] = Infinity; /*3255*/
		for (var _13 = 11; _13 <= 20; _13 += 1) { /*3252*/
			$k[$j++] = _13; /*3252*/
		} /*3252*/
		$k[$j++] = 23; /*3254*/
		for (var _14 = 31; _14 <= 36; _14 += 1) { /*3254*/
			$k[$j++] = _14; /*3254*/
		} /*3254*/
		$k[$j++] = 41; /*3255*/
		var _15 = $a(); /*3255*/
		for (var _16 = 0, _17 = _15.length; _16 < _17; _16++) { /*3258*/
			var _1A = $cvrs($s(2), $get(_15, _16), 10); /*3257*/
			$put($1.aifixed, _1A, _1A); /*3257*/
		} /*3257*/
		$1.fnc1 = -1; /*3261*/
		$1.c128 = $a([$1.fnc1]); /*3262*/
		for (var _1G = 0, _1F = $1.ais.length - 1; _1G <= _1F; _1G += 1) { /*3278*/
			$1.i = _1G; /*3264*/
			$1.ai = $get($1.ais, $1.i); /*3265*/
			$1.val = $get($1.vals, $1.i); /*3266*/
			var _1Q = $a(($1.c128.length + $1.ai.length) + $1.val.length); /*3267*/
			$puti(_1Q, 0, $1.c128); /*3268*/
			$k[$j++] = _1Q; /*3269*/
			$k[$j++] = _1Q; /*3269*/
			$k[$j++] = $1.c128.length; /*3269*/
			$k[$j++] = $1.ai; /*3269*/
			$k[$j++] = Infinity; /*3269*/
			var _1U = $k[--$j]; /*3269*/
			var _1V = $k[--$j]; /*3269*/
			$k[$j++] = _1U; /*3269*/
			$forall(_1V); /*3269*/
			var _1W = $a(); /*3269*/
			var _1X = $k[--$j]; /*3269*/
			$puti($k[--$j], _1X, _1W); /*3269*/
			var _1Z = $k[--$j]; /*3270*/
			$k[$j++] = _1Z; /*3270*/
			$k[$j++] = _1Z; /*3270*/
			$k[$j++] = $1.c128.length + $1.ai.length; /*3270*/
			$k[$j++] = $1.val; /*3270*/
			$k[$j++] = Infinity; /*3270*/
			var _1d = $k[--$j]; /*3270*/
			var _1e = $k[--$j]; /*3270*/
			$k[$j++] = _1d; /*3270*/
			$forall(_1e); /*3270*/
			var _1f = $a(); /*3270*/
			var _1g = $k[--$j]; /*3270*/
			$puti($k[--$j], _1g, _1f); /*3270*/
			$1.c128 = $k[--$j]; /*3271*/
			var _1o = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*3272*/
			if (($1.i != ($1.ais.length - 1)) && (!_1o)) { /*3277*/
				var _1q = $a($1.c128.length + 1); /*3273*/
				$puti(_1q, 0, $1.c128); /*3274*/
				$put(_1q, $1.c128.length, $1.fnc1); /*3275*/
				$1.c128 = _1q; /*3276*/
			} /*3276*/
		} /*3276*/
		$1.barcode = $s(($1.c128.length + 1) * 5); /*3281*/
		$1.i = 0; /*3282*/
		$1.j = 0; /*3282*/
		for (;;) { /*3292*/
			if ($1.i == $1.c128.length) { /*3283*/
				break; /*3283*/
			} /*3283*/
			var _20 = $get($1.c128, $1.i); /*3284*/
			$k[$j++] = _20; /*3289*/
			if (_20 == $1.fnc1) { /*3288*/
				$j--; /*3285*/
				$puti($1.barcode, $1.j, "^FNC1"); /*3285*/
				$1.j = $1.j + 4; /*3286*/
			} else { /*3288*/
				$put($1.barcode, $1.j, $k[--$j]); /*3288*/
			} /*3288*/
			$1.i = $1.i + 1; /*3290*/
			$1.j = $1.j + 1; /*3291*/
		} /*3291*/
		if ($1.linkagea || $1.linkagec) { /*3296*/
			$k[$j++] = $1.barcode; /*3294*/
			$k[$j++] = $1.j; /*3294*/
			if ($1.linkagea) { /*3294*/
				$k[$j++] = "^LNKA"; /*3294*/
			} else { /*3294*/
				$k[$j++] = "^LNKC"; /*3294*/
			} /*3294*/
			var _2F = $k[--$j]; /*3294*/
			var _2G = $k[--$j]; /*3294*/
			$puti($k[--$j], _2G, _2F); /*3294*/
			$1.j = $1.j + 5; /*3295*/
		} /*3295*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*3297*/
		$1.options.height = $1.height; /*3300*/
		$1.options.dontdraw = true; /*3301*/
		$1.options.parsefnc = true; /*3302*/
		$k[$j++] = "args"; /*3303*/
		$k[$j++] = $1.barcode; /*3303*/
		$k[$j++] = $1.options; /*3303*/
		$0.code128(); /*3303*/
		var _2S = $k[--$j]; /*3303*/
		$1[$k[--$j]] = _2S; /*3303*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3305*/
		$1.args.textxalign = "center"; /*3306*/
		$1.args.opt = $1.options; /*3307*/
		$k[$j++] = $1.args; /*3310*/
		if (!$1.dontdraw) { /*3310*/
			$0.renlinear(); /*3310*/
		} /*3310*/
	};
	$0.ean14 = function() {
		var $1 = {}; /*3338*/
		$1.options = $k[--$j]; /*3340*/
		$1.barcode = $k[--$j]; /*3341*/
		$1.dontdraw = false; /*3343*/
		$1.includetext = false; /*3344*/
		$1.textfont = "Courier"; /*3345*/
		$1.textsize = 10; /*3346*/
		$1.textxoffset = 0; /*3347*/
		$1.textyoffset = -8.5; /*3348*/
		$1.height = 1; /*3349*/
		$forall($1.options, function() { /*3360*/
			var _3 = $k[--$j]; /*3360*/
			$1[$k[--$j]] = _3; /*3360*/
		}); /*3360*/
		$1.textfont = "" + $1.textfont; /*3362*/
		$1.textsize = +$1.textsize; /*3363*/
		$1.textxoffset = +$1.textxoffset; /*3364*/
		$1.textyoffset = +$1.textyoffset; /*3365*/
		$1.height = +$1.height; /*3366*/
		$1.text = $1.barcode; /*3369*/
		var _B = $1.barcode; /*3370*/
		$k[$j++] = $s(_B.length); /*3371*/
		$k[$j++] = 0; /*3371*/
		$forall(_B, function() { /*3371*/
			var _D = $k[--$j]; /*3371*/
			$k[$j++] = _D; /*3371*/
			if (_D != 32) { /*3371*/
				var _E = $k[--$j]; /*3371*/
				var _F = $k[--$j]; /*3371*/
				var _G = $k[--$j]; /*3371*/
				$put(_G, _F, _E); /*3371*/
				$k[$j++] = _G; /*3371*/
				$k[$j++] = _F + 1; /*3371*/
			} else { /*3371*/
				$j--; /*3371*/
			} /*3371*/
		}); /*3371*/
		var _H = $k[--$j]; /*3372*/
		$1.barcode = $geti($k[--$j], 0, _H); /*3372*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*3373*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*3378*/
			$k[$j++] = "bwipp.ean14badAI"; /*3377*/
			$k[$j++] = "GS1-14 must begin with (01) application identifier"; /*3377*/
			$0.raiseerror(); /*3377*/
		} /*3377*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*3381*/
			$k[$j++] = "bwipp.ean14badLength"; /*3380*/
			$k[$j++] = "GS1-14 must be 13 or 14 digits"; /*3380*/
			$0.raiseerror(); /*3380*/
		} /*3380*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*3386*/
			var _T = $k[--$j]; /*3383*/
			if ((_T < 48) || (_T > 57)) { /*3385*/
				$k[$j++] = "bwipp.ean14badCharacter"; /*3384*/
				$k[$j++] = "GS1-14 must contain only digits"; /*3384*/
				$0.raiseerror(); /*3384*/
			} /*3384*/
		}); /*3384*/
		$1.checksum = 0; /*3389*/
		for (var _U = 0; _U <= 12; _U += 1) { /*3393*/
			$1.i = _U; /*3391*/
			$k[$j++] = "checksum"; /*3392*/
			$k[$j++] = $1.checksum; /*3392*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*3392*/
			if (($1.i % 2) == 0) { /*3392*/
				var _a = $k[--$j]; /*3392*/
				$k[$j++] = _a * 3; /*3392*/
			} /*3392*/
			var _b = $k[--$j]; /*3392*/
			var _c = $k[--$j]; /*3392*/
			$1[$k[--$j]] = _c + _b; /*3392*/
		} /*3392*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*3394*/
		if ($1.barcode.length == 18) { /*3408*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*3398*/
				$k[$j++] = "bwipp.ean14badCheckDigit"; /*3397*/
				$k[$j++] = "Incorrect GS1-14 check digit provided"; /*3397*/
				$0.raiseerror(); /*3397*/
			} /*3397*/
		} else { /*3408*/
			var _j = $s(18); /*3400*/
			$puti(_j, 0, $1.barcode); /*3401*/
			$put(_j, 17, $1.checksum + 48); /*3402*/
			$1.barcode = _j; /*3403*/
			var _o = $1.hasspace ? 2 : 1; /*3404*/
			var _p = $s($1.text.length + _o); /*3404*/
			$puti(_p, _p.length - 2, " "); /*3405*/
			$put(_p, _p.length - 1, $1.checksum + 48); /*3406*/
			$puti(_p, 0, $1.text); /*3407*/
			$1.text = _p; /*3408*/
		} /*3408*/
		$1.gtin = $geti($1.barcode, 4, 14); /*3410*/
		$1.barcode = $s(21); /*3413*/
		$puti($1.barcode, 0, "^FNC101"); /*3414*/
		$puti($1.barcode, 7, $1.gtin); /*3415*/
		$1.options.dontdraw = true; /*3418*/
		$1.options.parsefnc = true; /*3419*/
		$k[$j++] = "args"; /*3420*/
		$k[$j++] = $1.barcode; /*3420*/
		$k[$j++] = $1.options; /*3420*/
		$0.code128(); /*3420*/
		var _12 = $k[--$j]; /*3420*/
		$1[$k[--$j]] = _12; /*3420*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3422*/
		$1.args.textxalign = "center"; /*3423*/
		$1.args.opt = $1.options; /*3424*/
		$k[$j++] = $1.args; /*3427*/
		if (!$1.dontdraw) { /*3427*/
			$0.renlinear(); /*3427*/
		} /*3427*/
	};
	$0.sscc18 = function() {
		var $1 = {}; /*3455*/
		$1.options = $k[--$j]; /*3457*/
		$1.barcode = $k[--$j]; /*3458*/
		$1.dontdraw = false; /*3460*/
		$1.includetext = false; /*3461*/
		$1.textfont = "Courier"; /*3462*/
		$1.textsize = 10; /*3463*/
		$1.textxoffset = 0; /*3464*/
		$1.textyoffset = -8.5; /*3465*/
		$1.height = 1; /*3466*/
		$forall($1.options, function() { /*3477*/
			var _3 = $k[--$j]; /*3477*/
			$1[$k[--$j]] = _3; /*3477*/
		}); /*3477*/
		$1.textfont = "" + $1.textfont; /*3479*/
		$1.textsize = +$1.textsize; /*3480*/
		$1.textxoffset = +$1.textxoffset; /*3481*/
		$1.textyoffset = +$1.textyoffset; /*3482*/
		$1.height = +$1.height; /*3483*/
		$1.text = $1.barcode; /*3486*/
		var _B = $1.barcode; /*3487*/
		$k[$j++] = $s(_B.length); /*3488*/
		$k[$j++] = 0; /*3488*/
		$forall(_B, function() { /*3488*/
			var _D = $k[--$j]; /*3488*/
			$k[$j++] = _D; /*3488*/
			if (_D != 32) { /*3488*/
				var _E = $k[--$j]; /*3488*/
				var _F = $k[--$j]; /*3488*/
				var _G = $k[--$j]; /*3488*/
				$put(_G, _F, _E); /*3488*/
				$k[$j++] = _G; /*3488*/
				$k[$j++] = _F + 1; /*3488*/
			} else { /*3488*/
				$j--; /*3488*/
			} /*3488*/
		}); /*3488*/
		var _H = $k[--$j]; /*3489*/
		$1.barcode = $geti($k[--$j], 0, _H); /*3489*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*3490*/
		if ($ne($geti($1.barcode, 0, 4), "(00)")) { /*3495*/
			$k[$j++] = "bwipp.sscc18badAI"; /*3494*/
			$k[$j++] = "SSCC-18 must begin with (00) application identifier"; /*3494*/
			$0.raiseerror(); /*3494*/
		} /*3494*/
		if (($1.barcode.length != 21) && ($1.barcode.length != 22)) { /*3498*/
			$k[$j++] = "bwipp.sscc18badLength"; /*3497*/
			$k[$j++] = "SSCC-18 must be 17 or 18 digits"; /*3497*/
			$0.raiseerror(); /*3497*/
		} /*3497*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*3503*/
			var _T = $k[--$j]; /*3500*/
			if ((_T < 48) || (_T > 57)) { /*3502*/
				$k[$j++] = "bwipp.sscc18badCharacter"; /*3501*/
				$k[$j++] = "SSCC-18 must contain only digits"; /*3501*/
				$0.raiseerror(); /*3501*/
			} /*3501*/
		}); /*3501*/
		$1.checksum = 0; /*3506*/
		for (var _U = 0; _U <= 16; _U += 1) { /*3510*/
			$1.i = _U; /*3508*/
			$k[$j++] = "checksum"; /*3509*/
			$k[$j++] = $1.checksum; /*3509*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*3509*/
			if (($1.i % 2) == 0) { /*3509*/
				var _a = $k[--$j]; /*3509*/
				$k[$j++] = _a * 3; /*3509*/
			} /*3509*/
			var _b = $k[--$j]; /*3509*/
			var _c = $k[--$j]; /*3509*/
			$1[$k[--$j]] = _c + _b; /*3509*/
		} /*3509*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*3511*/
		if ($1.barcode.length == 22) { /*3525*/
			if ($get($1.barcode, 21) != ($1.checksum + 48)) { /*3515*/
				$k[$j++] = "bwipp.sscc18badCheckDigit"; /*3514*/
				$k[$j++] = "Incorrect SSCC-18 check digit provided"; /*3514*/
				$0.raiseerror(); /*3514*/
			} /*3514*/
		} else { /*3525*/
			var _j = $s(22); /*3517*/
			$puti(_j, 0, $1.barcode); /*3518*/
			$put(_j, 21, $1.checksum + 48); /*3519*/
			$1.barcode = _j; /*3520*/
			var _o = $1.hasspace ? 2 : 1; /*3521*/
			var _p = $s($1.text.length + _o); /*3521*/
			$puti(_p, _p.length - 2, " "); /*3522*/
			$put(_p, _p.length - 1, $1.checksum + 48); /*3523*/
			$puti(_p, 0, $1.text); /*3524*/
			$1.text = _p; /*3525*/
		} /*3525*/
		$1.sscc = $geti($1.barcode, 4, 18); /*3527*/
		$1.barcode = $s(25); /*3530*/
		$puti($1.barcode, 0, "^FNC100"); /*3531*/
		$puti($1.barcode, 7, $1.sscc); /*3532*/
		$1.options.dontdraw = true; /*3535*/
		$1.options.parsefnc = true; /*3536*/
		$k[$j++] = "args"; /*3537*/
		$k[$j++] = $1.barcode; /*3537*/
		$k[$j++] = $1.options; /*3537*/
		$0.code128(); /*3537*/
		var _12 = $k[--$j]; /*3537*/
		$1[$k[--$j]] = _12; /*3537*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3539*/
		$1.args.textxalign = "center"; /*3540*/
		$1.args.opt = $1.options; /*3541*/
		$k[$j++] = $1.args; /*3544*/
		if (!$1.dontdraw) { /*3544*/
			$0.renlinear(); /*3544*/
		} /*3544*/
	};
	$0.code39 = function() {
		var $1 = {}; /*3571*/
		$1.options = $k[--$j]; /*3573*/
		$1.barcode = $k[--$j]; /*3574*/
		$1.dontdraw = false; /*3576*/
		$1.includecheck = false; /*3577*/
		$1.validatecheck = false; /*3578*/
		$1.includetext = false; /*3579*/
		$1.includecheckintext = false; /*3580*/
		$1.hidestars = false; /*3581*/
		$1.textfont = "Courier"; /*3582*/
		$1.textsize = 10; /*3583*/
		$1.textyoffset = -8.5; /*3584*/
		$1.height = 1; /*3585*/
		$forall($1.options, function() { /*3596*/
			var _3 = $k[--$j]; /*3596*/
			$1[$k[--$j]] = _3; /*3596*/
		}); /*3596*/
		$1.textfont = "" + $1.textfont; /*3598*/
		$1.textsize = +$1.textsize; /*3599*/
		$1.textyoffset = +$1.textyoffset; /*3600*/
		$1.height = +$1.height; /*3601*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*3604*/
		$1.charvals = {}; /*3605*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*3606*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*3606*/
		} /*3606*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*3613*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*3610*/
			if (!_J) { /*3612*/
				$k[$j++] = "bwipp.code39badCharacter"; /*3611*/
				$k[$j++] = "Code 39 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*3611*/
				$0.raiseerror(); /*3611*/
			} /*3611*/
		} /*3611*/
		$k[$j++] = "barlen"; /*3615*/
		$k[$j++] = $1.barcode.length; /*3615*/
		if ($1.validatecheck) { /*3615*/
			var _M = $k[--$j]; /*3615*/
			$k[$j++] = _M - 1; /*3615*/
		} /*3615*/
		var _N = $k[--$j]; /*3615*/
		$1[$k[--$j]] = _N; /*3615*/
		$1.checksum = 0; /*3617*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*3621*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*3620*/
		} /*3620*/
		$1.checksum = $1.checksum % 43; /*3622*/
		if ($1.validatecheck) { /*3629*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*3626*/
				$k[$j++] = "bwipp.code39badCheckDigit"; /*3625*/
				$k[$j++] = "Incorrect Code 39 check digit provided"; /*3625*/
				$0.raiseerror(); /*3625*/
			} /*3625*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*3627*/
			$1.includecheck = true; /*3628*/
		} /*3628*/
		$1.encs = $a(["1113313111", "3113111131", "1133111131", "3133111111", "1113311131", "3113311111", "1133311111", "1113113131", "3113113111", "1133113111", "3111131131", "1131131131", "3131131111", "1111331131", "3111331111", "1131331111", "1111133131", "3111133111", "1131133111", "1111333111", "3111111331", "1131111331", "3131111311", "1111311331", "3111311311", "1131311311", "1111113331", "3111113311", "1131113311", "1111313311", "3311111131", "1331111131", "3331111111", "1311311131", "3311311111", "1331311111", "1311113131", "3311113111", "1331113111", "1313131111", "1313111311", "1311131311", "1113131311", "1311313111"]); /*3642*/
		var _l = $1.includecheck ? 3 : 2; /*3644*/
		$1.sbs = $s(($1.barlen + _l) * 10); /*3644*/
		var _p = $1.includecheck ? 3 : 2; /*3645*/
		$1.txt = $a($1.barlen + _p); /*3645*/
		$puti($1.sbs, 0, $get($1.encs, 43)); /*3648*/
		if (!$1.hidestars) { /*3652*/
			$put($1.txt, 0, $a(["*", 0, $1.textyoffset, $1.textfont, $1.textsize])); /*3650*/
		} else { /*3652*/
			$put($1.txt, 0, $a(["", 0, $1.textyoffset, $1.textfont, $1.textsize])); /*3652*/
		} /*3652*/
		for (var _17 = 0, _16 = $1.barlen - 1; _17 <= _16; _17 += 1) { /*3660*/
			$1.i = _17; /*3656*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*3657*/
			$puti($1.sbs, ($1.i * 10) + 10, $get($1.encs, $1.indx)); /*3658*/
			$put($1.txt, $1.i + 1, $a([$geti($1.barcode, $1.i, 1), ($1.i + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3659*/
		} /*3659*/
		if ($1.includecheck) { /*3681*/
			$puti($1.sbs, ($1.barlen * 10) + 10, $get($1.encs, $1.checksum)); /*3664*/
			if ($1.includecheckintext) { /*3668*/
				$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3666*/
			} else { /*3668*/
				$put($1.txt, $1.barlen + 1, $a(["", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3668*/
			} /*3668*/
			$puti($1.sbs, ($1.barlen * 10) + 20, $get($1.encs, 43)); /*3670*/
			if (!$1.hidestars) { /*3674*/
				$put($1.txt, $1.barlen + 2, $a(["*", ($1.barlen + 2) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3672*/
			} else { /*3674*/
				$put($1.txt, $1.barlen + 2, $a(["", ($1.barlen + 2) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3674*/
			} /*3674*/
		} else { /*3681*/
			$puti($1.sbs, ($1.barlen * 10) + 10, $get($1.encs, 43)); /*3677*/
			if (!$1.hidestars) { /*3681*/
				$put($1.txt, $1.barlen + 1, $a(["*", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3679*/
			} else { /*3681*/
				$put($1.txt, $1.barlen + 1, $a(["", ($1.barlen + 1) * 16, $1.textyoffset, $1.textfont, $1.textsize])); /*3681*/
			} /*3681*/
		} /*3681*/
		$k[$j++] = Infinity; /*3694*/
		$k[$j++] = "ren"; /*3689*/
		$k[$j++] = $0.renlinear; /*3689*/
		$k[$j++] = "sbs"; /*3689*/
		$k[$j++] = Infinity; /*3689*/
		var _2S = $1.sbs; /*3688*/
		for (var _2T = 0, _2U = _2S.length; _2T < _2U; _2T++) { /*3688*/
			$k[$j++] = $get(_2S, _2T) - 48; /*3688*/
		} /*3688*/
		var _2W = $a(); /*3689*/
		$k[$j++] = _2W; /*3690*/
		$k[$j++] = "bhs"; /*3690*/
		$k[$j++] = Infinity; /*3690*/
		for (var _2Y = 0, _2Z = ~~(($1.sbs.length + 1) / 2); _2Y < _2Z; _2Y++) { /*3689*/
			$k[$j++] = $1.height; /*3689*/
		} /*3689*/
		var _2b = $a(); /*3690*/
		$k[$j++] = _2b; /*3691*/
		$k[$j++] = "bbs"; /*3691*/
		$k[$j++] = Infinity; /*3691*/
		for (var _2d = 0, _2e = ~~(($1.sbs.length + 1) / 2); _2d < _2e; _2d++) { /*3690*/
			$k[$j++] = 0; /*3690*/
		} /*3690*/
		var _2f = $a(); /*3691*/
		$k[$j++] = _2f; /*3693*/
		if ($1.includetext) { /*3693*/
			$k[$j++] = "txt"; /*3692*/
			$k[$j++] = $1.txt; /*3692*/
		} /*3692*/
		$k[$j++] = "opt"; /*3694*/
		$k[$j++] = $1.options; /*3694*/
		var _2j = $d(); /*3694*/
		$k[$j++] = _2j; /*3697*/
		if (!$1.dontdraw) { /*3697*/
			$0.renlinear(); /*3697*/
		} /*3697*/
	};
	$0.code39ext = function() {
		var $1 = {}; /*3725*/
		$1.options = $k[--$j]; /*3727*/
		$1.barcode = $k[--$j]; /*3728*/
		$1.dontdraw = false; /*3730*/
		$1.includetext = false; /*3731*/
		$1.parse = false; /*3732*/
		$forall($1.options, function() { /*3743*/
			var _3 = $k[--$j]; /*3743*/
			$1[$k[--$j]] = _3; /*3743*/
		}); /*3743*/
		$forall($1.barcode, function() { /*3771*/
			if ($k[--$j] >= 128) { /*3770*/
				$k[$j++] = "bwipp.code39extBadCharacter"; /*3769*/
				$k[$j++] = "Code 39 Extended must contain only ASCII characters"; /*3769*/
				$0.raiseerror(); /*3769*/
			} /*3769*/
		}); /*3769*/
		$1.barlen = $1.barcode.length; /*3773*/
		$1.extencs = $a
		$1.newcode = $s($1.barlen * 2); /*3787*/
		$1.newtext = $s($1.barlen * 2); /*3788*/
		$1.j = 0; /*3789*/
		for (var _F = 0, _E = $1.barlen - 1; _F <= _E; _F += 1) { /*3797*/
			$1.i = _F; /*3791*/
			$1.extchar = $get($1.extencs, $get($1.barcode, $1.i)); /*3792*/
			$puti($1.newcode, $1.j, $1.extchar); /*3793*/
			$put($1.newtext, $1.j, $get($1.barcode, $1.i)); /*3794*/
			if ($1.extchar.length != 1) { /*3795*/
				$puti($1.newtext, $1.j + 1, " "); /*3795*/
			} /*3795*/
			$1.j = $1.j + $1.extchar.length; /*3796*/
		} /*3796*/
		$1.newcode = $geti($1.newcode, 0, $1.j); /*3798*/
		$1.newtext = $geti($1.newtext, 0, $1.j); /*3799*/
		$1.options.dontdraw = true; /*3802*/
		$k[$j++] = "args"; /*3803*/
		$k[$j++] = $1.newcode; /*3803*/
		$k[$j++] = $1.options; /*3803*/
		$0.code39(); /*3803*/
		var _h = $k[--$j]; /*3803*/
		$1[$k[--$j]] = _h; /*3803*/
		if ($1.includetext) { /*3815*/
			$1.txt = $1.args.txt; /*3807*/
			for (var _o = 0, _n = $1.newtext.length - 1; _o <= _n; _o += 1) { /*3813*/
				$1.i = _o; /*3809*/
				$1.txtentry = $get($1.txt, $1.i + 1); /*3810*/
				$put($1.txtentry, 0, $geti($1.newtext, $1.i, 1)); /*3811*/
				$put($1.txt, $1.i + 1, $1.txtentry); /*3812*/
			} /*3812*/
			$1.args.txt = $1.txt; /*3814*/
		} /*3814*/
		$1.args.opt = $1.options; /*3816*/
		$k[$j++] = $1.args; /*3819*/
		if (!$1.dontdraw) { /*3819*/
			$0.renlinear(); /*3819*/
		} /*3819*/
	};
	$0.code32 = function() {
		var $1 = {}; /*3847*/
		$1.options = $k[--$j]; /*3849*/
		$1.barcode = $k[--$j]; /*3850*/
		$1.dontdraw = false; /*3852*/
		$1.includetext = false; /*3853*/
		$1.textfont = "Courier"; /*3854*/
		$1.textsize = 10; /*3855*/
		$1.textyoffset = -8.5; /*3856*/
		$1.textxoffset = 0; /*3857*/
		$1.height = 1; /*3858*/
		$forall($1.options, function() { /*3869*/
			var _3 = $k[--$j]; /*3869*/
			$1[$k[--$j]] = _3; /*3869*/
		}); /*3869*/
		$1.textfont = "" + $1.textfont; /*3871*/
		$1.textsize = +$1.textsize; /*3872*/
		$1.textyoffset = +$1.textyoffset; /*3873*/
		$1.height = +$1.height; /*3874*/
		if (($1.barcode.length != 8) && ($1.barcode.length != 9)) { /*3879*/
			$k[$j++] = "bwipp.code32badLength"; /*3878*/
			$k[$j++] = "Italian Pharmacode must be 8 or 9 digits"; /*3878*/
			$0.raiseerror(); /*3878*/
		} /*3878*/
		$forall($1.barcode, function() { /*3884*/
			var _C = $k[--$j]; /*3881*/
			if ((_C < 48) || (_C > 57)) { /*3883*/
				$k[$j++] = "bwipp.code32badCharacter"; /*3882*/
				$k[$j++] = "Italian Pharmacode must contain only digits"; /*3882*/
				$0.raiseerror(); /*3882*/
			} /*3882*/
		}); /*3882*/
		$1.checksum = 0; /*3887*/
		for (var _D = 0; _D <= 7; _D += 1) { /*3892*/
			$1.i = _D; /*3889*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*3890*/
			if (($1.i % 2) != 0) { /*3890*/
				var _I = $k[--$j]; /*3890*/
				$k[$j++] = _I * 2; /*3890*/
			} /*3890*/
			var _J = $k[--$j]; /*3890*/
			$k[$j++] = _J; /*3890*/
			if (_J > 9) { /*3890*/
				var _K = $k[--$j]; /*3890*/
				$k[$j++] = _K - 9; /*3890*/
			} /*3890*/
			$1.checksum = $k[--$j] + $1.checksum; /*3891*/
		} /*3891*/
		$1.checksum = $1.checksum % 10; /*3893*/
		if ($1.barcode.length == 9) { /*3898*/
			if ($get($1.barcode, 8) != ($1.checksum + 48)) { /*3897*/
				$k[$j++] = "bwipp.code32badCheckDigit"; /*3896*/
				$k[$j++] = "Incorrect Italian Pharmacode check digit provided"; /*3896*/
				$0.raiseerror(); /*3896*/
			} /*3896*/
		} /*3896*/
		var _S = $s(10); /*3899*/
		$puti(_S, 0, $1.barcode); /*3900*/
		$put(_S, 8, $1.checksum + 48); /*3901*/
		$1.text = _S; /*3902*/
		$1.val = $cvrs($1.barcode, ~~$z($1.text), 32); /*3905*/
		$1.barcode = $s(6); /*3906*/
		for (var _Z = 0; _Z <= 5; _Z += 1) { /*3907*/
			$put($1.barcode, _Z, 48); /*3907*/
		} /*3907*/
		$puti($1.barcode, 6 - $1.val.length, $1.val); /*3908*/
		for (var _e = 0; _e <= 5; _e += 1) { /*3915*/
			var _g = $get($1.barcode, _e); /*3912*/
			$k[$j++] = _e; /*3913*/
			$k[$j++] = _g; /*3913*/
			$k[$j++] = _g; /*3913*/
			for (var _h = 0, _i = "AEIO".length; _h < _i; _h++) { /*3913*/
				if ($k[--$j] >= $get("AEIO", _h)) { /*3913*/
					var _l = $k[--$j]; /*3913*/
					$k[$j++] = _l + 1; /*3913*/
				} /*3913*/
				var _m = $k[--$j]; /*3913*/
				$k[$j++] = _m; /*3913*/
				$k[$j++] = _m; /*3913*/
			} /*3913*/
			$j--; /*3913*/
			var _o = $k[--$j]; /*3914*/
			$put($1.barcode, $k[--$j], _o); /*3914*/
		} /*3914*/
		$puti($1.text, 1, $geti($1.text, 0, 9)); /*3918*/
		$put($1.text, 0, 65); /*3919*/
		$1.options.dontdraw = true; /*3922*/
		$k[$j++] = "args"; /*3923*/
		$k[$j++] = $1.barcode; /*3923*/
		$k[$j++] = $1.options; /*3923*/
		$0.code39(); /*3923*/
		var _x = $k[--$j]; /*3923*/
		$1[$k[--$j]] = _x; /*3923*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*3925*/
		$1.args.textxalign = "center"; /*3926*/
		$1.args.opt = $1.options; /*3927*/
		$k[$j++] = $1.args; /*3930*/
		if (!$1.dontdraw) { /*3930*/
			$0.renlinear(); /*3930*/
		} /*3930*/
	};
	$0.pzn = function() {
		var $1 = {}; /*3958*/
		$1.options = $k[--$j]; /*3960*/
		$1.barcode = $k[--$j]; /*3961*/
		$1.dontdraw = false; /*3963*/
		$1.includetext = false; /*3964*/
		$1.textfont = "Courier"; /*3965*/
		$1.textsize = 10; /*3966*/
		$1.textyoffset = -8.5; /*3967*/
		$1.textxoffset = 0; /*3968*/
		$1.height = 1; /*3969*/
		$1.pzn8 = false; /*3970*/
		$forall($1.options, function() { /*3981*/
			var _3 = $k[--$j]; /*3981*/
			$1[$k[--$j]] = _3; /*3981*/
		}); /*3981*/
		$1.textfont = "" + $1.textfont; /*3983*/
		$1.textsize = +$1.textsize; /*3984*/
		$1.textyoffset = +$1.textyoffset; /*3985*/
		$1.textxoffset = +$1.textxoffset; /*3986*/
		$1.height = +$1.height; /*3987*/
		if ($1.pzn8) { /*3996*/
			if (($1.barcode.length != 7) && ($1.barcode.length != 8)) { /*3993*/
				$k[$j++] = "bwipp.pzn8badLength"; /*3992*/
				$k[$j++] = "PZN8 must be 7 or 8 digits"; /*3992*/
				$0.raiseerror(); /*3992*/
			} /*3992*/
		} else { /*3996*/
			if (($1.barcode.length != 6) && ($1.barcode.length != 7)) { /*3997*/
				$k[$j++] = "bwipp.pzn7badLength"; /*3996*/
				$k[$j++] = "PZN7 must be 6 or 7 digits"; /*3996*/
				$0.raiseerror(); /*3996*/
			} /*3996*/
		} /*3996*/
		$forall($1.barcode, function() { /*4003*/
			var _G = $k[--$j]; /*4000*/
			if ((_G < 48) || (_G > 57)) { /*4002*/
				$k[$j++] = "bwipp.pznBadCharacter"; /*4001*/
				$k[$j++] = "PZN must contain only digits"; /*4001*/
				$0.raiseerror(); /*4001*/
			} /*4001*/
		}); /*4001*/
		var _I = $1.pzn8 ? 9 : 8; /*4006*/
		$1.msglen = _I; /*4006*/
		$1.checksum = 0; /*4007*/
		for (var _L = 0, _K = $1.msglen - 3; _L <= _K; _L += 1) { /*4012*/
			$1.i = _L; /*4009*/
			var _R = $1.pzn8 ? 1 : 2; /*4010*/
			$1.checksum = (($get($1.barcode, $1.i) - 48) * ($1.i + _R)) + $1.checksum; /*4011*/
		} /*4011*/
		$1.checksum = $1.checksum % 11; /*4013*/
		if ($1.checksum == 10) { /*4016*/
			$k[$j++] = "bwipp.pznBadInputSequence"; /*4015*/
			$k[$j++] = "Incorrect PZN input sequence provided"; /*4015*/
			$0.raiseerror(); /*4015*/
		} /*4015*/
		if ($1.barcode.length == ($1.msglen - 1)) { /*4021*/
			if ($get($1.barcode, $1.msglen - 2) != ($1.checksum + 48)) { /*4020*/
				$k[$j++] = "bwipp.pznBadCheckDigit"; /*4019*/
				$k[$j++] = "Incorrect PZN check digit provided"; /*4019*/
				$0.raiseerror(); /*4019*/
			} /*4019*/
		} /*4019*/
		var _c = $s($1.msglen); /*4022*/
		$put(_c, 0, 45); /*4023*/
		$puti(_c, 1, $1.barcode); /*4024*/
		$put(_c, $1.msglen - 1, $1.checksum + 48); /*4025*/
		$1.msg = _c; /*4026*/
		$1.options.dontdraw = true; /*4029*/
		$k[$j++] = "args"; /*4030*/
		$k[$j++] = $1.msg; /*4030*/
		$k[$j++] = $1.options; /*4030*/
		$0.code39(); /*4030*/
		var _j = $k[--$j]; /*4030*/
		$1[$k[--$j]] = _j; /*4030*/
		$1.text = $s($1.msglen + 5); /*4033*/
		$puti($1.text, 0, "PZN - "); /*4034*/
		$puti($1.text, 6, $geti($1.msg, 1, $1.msglen - 1)); /*4035*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4037*/
		$1.args.textxalign = "center"; /*4038*/
		$1.args.opt = $1.options; /*4039*/
		$k[$j++] = $1.args; /*4042*/
		if (!$1.dontdraw) { /*4042*/
			$0.renlinear(); /*4042*/
		} /*4042*/
	};
	$0.code93 = function() {
		var $1 = {}; /*4069*/
		$1.options = $k[--$j]; /*4071*/
		$1.barcode = $k[--$j]; /*4072*/
		$1.dontdraw = false; /*4074*/
		$1.includecheck = false; /*4075*/
		$1.includetext = false; /*4076*/
		$1.textfont = "Courier"; /*4077*/
		$1.textsize = 10; /*4078*/
		$1.textyoffset = -8.5; /*4079*/
		$1.height = 1; /*4080*/
		$1.parsefnc = false; /*4081*/
		$forall($1.options, function() { /*4092*/
			var _3 = $k[--$j]; /*4092*/
			$1[$k[--$j]] = _3; /*4092*/
		}); /*4092*/
		$1.textfont = "" + $1.textfont; /*4094*/
		$1.textsize = +$1.textsize; /*4095*/
		$1.textyoffset = +$1.textyoffset; /*4096*/
		$1.height = +$1.height; /*4097*/
		$1.encs = $a(["131112", "111213", "111312", "111411", "121113", "121212", "121311", "111114", "131211", "141111", "211113", "211212", "211311", "221112", "221211", "231111", "112113", "112212", "112311", "122112", "132111", "111123", "111222", "111321", "121122", "131121", "212112", "212211", "211122", "211221", "221121", "222111", "112122", "112221", "122121", "123111", "121131", "311112", "311211", "321111", "112131", "113121", "211131", "121221", "312111", "311121", "122211", "111141", "1111411"]); /*4110*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*4113*/
		$1.barlen = $1.barcode.length; /*4115*/
		$1.sft1 = -1; /*4118*/
		$1.sft2 = -2; /*4118*/
		$1.sft3 = -3; /*4118*/
		$1.sft4 = -4; /*4118*/
		var _F = {
			"SFT$": $1.sft1,
			"SFT%": $1.sft2,
			"SFT/": $1.sft3,
			"SFT+": $1.sft4
		}; /*4123*/
		$1.fncvals = _F; /*4124*/
		$1.msg = $a($1.barlen); /*4127*/
		$1.i = 0; /*4128*/
		$1.j = 0; /*4128*/
		for (;;) { /*4142*/
			if ($1.i == $1.barlen) { /*4129*/
				break; /*4129*/
			} /*4129*/
			$1.char = $get($1.barcode, $1.i); /*4130*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*4138*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*4136*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*4133*/
					$1.i = $1.i + 4; /*4134*/
				} else { /*4136*/
					$1.i = $1.i + 1; /*4136*/
				} /*4136*/
			} /*4136*/
			$put($1.msg, $1.j, $1.char); /*4139*/
			$1.i = $1.i + 1; /*4140*/
			$1.j = $1.j + 1; /*4141*/
		} /*4141*/
		$1.msg = $geti($1.msg, 0, $1.j); /*4143*/
		$1.msglen = $1.msg.length; /*4144*/
		if ($1.includecheck) { /*4149*/
			$1.sbs = $s(($1.msglen * 6) + 25); /*4147*/
		} else { /*4149*/
			$1.sbs = $s(($1.msglen * 6) + 13); /*4149*/
		} /*4149*/
		$1.txt = $a($1.msglen); /*4151*/
		$puti($1.sbs, 0, $get($1.encs, 47)); /*4154*/
		$1.checksum1 = 0; /*4156*/
		$1.checksum2 = 0; /*4156*/
		for (var _w = 0, _v = $1.msglen - 1; _w <= _v; _w += 1) { /*4175*/
			$1.i = _w; /*4158*/
			var _z = $get($1.msg, $1.i); /*4160*/
			$k[$j++] = _z; /*4169*/
			if (_z < 0) { /*4168*/
				$1.indx = 42 - $k[--$j]; /*4161*/
				$1.char = " "; /*4162*/
			} else { /*4168*/
				var _11 = $s(1); /*4164*/
				$put(_11, 0, $k[--$j]); /*4164*/
				$1.char = _11; /*4164*/
				$search($1.barchars, $1.char); /*4165*/
				$j--; /*4166*/
				$1.indx = $k[--$j].length; /*4167*/
				$j -= 2; /*4168*/
			} /*4168*/
			$1.enc = $get($1.encs, $1.indx); /*4170*/
			$puti($1.sbs, ($1.i * 6) + 6, $1.enc); /*4171*/
			$put($1.txt, $1.i, $a([$1.char, ($1.i * 9) + 9, $1.textyoffset, $1.textfont, $1.textsize])); /*4172*/
			$1.checksum1 = $1.checksum1 + ((((($1.msglen - $1.i) - 1) % 20) + 1) * $1.indx); /*4173*/
			$1.checksum2 = $1.checksum2 + (((($1.msglen - $1.i) % 15) + 1) * $1.indx); /*4174*/
		} /*4174*/
		if ($1.includecheck) { /*4187*/
			$1.checksum1 = $1.checksum1 % 47; /*4179*/
			$1.checksum2 = ($1.checksum2 + $1.checksum1) % 47; /*4180*/
			$puti($1.sbs, ($1.msglen * 6) + 6, $get($1.encs, $1.checksum1)); /*4181*/
			$puti($1.sbs, ($1.msglen * 6) + 12, $get($1.encs, $1.checksum2)); /*4182*/
			$puti($1.sbs, ($1.msglen * 6) + 18, $get($1.encs, 48)); /*4184*/
		} else { /*4187*/
			$puti($1.sbs, ($1.msglen * 6) + 6, $get($1.encs, 48)); /*4187*/
		} /*4187*/
		$k[$j++] = Infinity; /*4199*/
		$k[$j++] = "ren"; /*4194*/
		$k[$j++] = $0.renlinear; /*4194*/
		$k[$j++] = "sbs"; /*4194*/
		$k[$j++] = Infinity; /*4194*/
		var _1o = $1.sbs; /*4193*/
		for (var _1p = 0, _1q = _1o.length; _1p < _1q; _1p++) { /*4193*/
			$k[$j++] = $get(_1o, _1p) - 48; /*4193*/
		} /*4193*/
		var _1s = $a(); /*4194*/
		$k[$j++] = _1s; /*4195*/
		$k[$j++] = "bhs"; /*4195*/
		$k[$j++] = Infinity; /*4195*/
		for (var _1u = 0, _1v = ~~(($1.sbs.length + 1) / 2); _1u < _1v; _1u++) { /*4194*/
			$k[$j++] = $1.height; /*4194*/
		} /*4194*/
		var _1x = $a(); /*4195*/
		$k[$j++] = _1x; /*4196*/
		$k[$j++] = "bbs"; /*4196*/
		$k[$j++] = Infinity; /*4196*/
		for (var _1z = 0, _20 = ~~(($1.sbs.length + 1) / 2); _1z < _20; _1z++) { /*4195*/
			$k[$j++] = 0; /*4195*/
		} /*4195*/
		var _21 = $a(); /*4196*/
		$k[$j++] = _21; /*4198*/
		if ($1.includetext) { /*4198*/
			$k[$j++] = "txt"; /*4197*/
			$k[$j++] = $1.txt; /*4197*/
		} /*4197*/
		$k[$j++] = "opt"; /*4199*/
		$k[$j++] = $1.options; /*4199*/
		var _25 = $d(); /*4199*/
		$k[$j++] = _25; /*4202*/
		if (!$1.dontdraw) { /*4202*/
			$0.renlinear(); /*4202*/
		} /*4202*/
	};
	$0.code93ext = function() {
		var $1 = {}; /*4230*/
		$1.options = $k[--$j]; /*4232*/
		$1.barcode = $k[--$j]; /*4233*/
		$1.dontdraw = false; /*4235*/
		$1.includetext = false; /*4236*/
		$1.parse = false; /*4237*/
		$forall($1.options, function() { /*4248*/
			var _3 = $k[--$j]; /*4248*/
			$1[$k[--$j]] = _3; /*4248*/
		}); /*4248*/
		$1.barlen = $1.barcode.length; /*4271*/
		$1.extencs = $a
		$1.newcode = $s($1.barlen * 6); /*4293*/
		$1.newtext = $s($1.barlen * 6); /*4294*/
		$1.j = 0; /*4295*/
		$1.k = 0; /*4295*/
		for (var _D = 0, _C = $1.barlen - 1; _D <= _C; _D += 1) { /*4305*/
			$1.i = _D; /*4297*/
			$1.extchar = $get($1.extencs, $get($1.barcode, $1.i)); /*4298*/
			$1.extlen = $1.extchar.length; /*4299*/
			$puti($1.newcode, $1.j, $1.extchar); /*4300*/
			$put($1.newtext, $1.k, $get($1.barcode, $1.i)); /*4301*/
			if ($1.extlen != 1) { /*4302*/
				$puti($1.newtext, $1.k + 1, " "); /*4302*/
			} /*4302*/
			$1.j = $1.j + $1.extlen; /*4303*/
			var _Z = ($1.extlen == 1) ? 1 : 2; /*4304*/
			$1.k = $1.k + _Z; /*4304*/
		} /*4304*/
		$1.newcode = $geti($1.newcode, 0, $1.j); /*4306*/
		$1.newtext = $geti($1.newtext, 0, $1.k); /*4307*/
		$1.options.dontdraw = true; /*4310*/
		$1.options.parsefnc = true; /*4311*/
		$k[$j++] = "args"; /*4312*/
		$k[$j++] = $1.newcode; /*4312*/
		$k[$j++] = $1.options; /*4312*/
		$0.code93(); /*4312*/
		var _k = $k[--$j]; /*4312*/
		$1[$k[--$j]] = _k; /*4312*/
		if ($1.includetext) { /*4324*/
			$1.txt = $1.args.txt; /*4316*/
			for (var _r = 0, _q = $1.newtext.length - 1; _r <= _q; _r += 1) { /*4322*/
				$1.i = _r; /*4318*/
				$1.txtentry = $get($1.txt, $1.i); /*4319*/
				$put($1.txtentry, 0, $geti($1.newtext, $1.i, 1)); /*4320*/
				$put($1.txt, $1.i, $1.txtentry); /*4321*/
			} /*4321*/
			$1.args.txt = $1.txt; /*4323*/
		} /*4323*/
		$1.args.opt = $1.options; /*4325*/
		$k[$j++] = $1.args; /*4328*/
		if (!$1.dontdraw) { /*4328*/
			$0.renlinear(); /*4328*/
		} /*4328*/
	};
	$0.interleaved2of5 = function() {
		var $1 = {}; /*4355*/
		$1.options = $k[--$j]; /*4357*/
		$1.barcode = $k[--$j]; /*4358*/
		$1.dontdraw = false; /*4360*/
		$1.includecheck = false; /*4361*/
		$1.includetext = false; /*4362*/
		$1.includecheckintext = false; /*4363*/
		$1.textfont = "Courier"; /*4364*/
		$1.textsize = 10; /*4365*/
		$1.textyoffset = -8.5; /*4366*/
		$1.height = 1; /*4367*/
		$forall($1.options, function() { /*4378*/
			var _3 = $k[--$j]; /*4378*/
			$1[$k[--$j]] = _3; /*4378*/
		}); /*4378*/
		$1.textfont = "" + $1.textfont; /*4380*/
		$1.textsize = +$1.textsize; /*4381*/
		$1.textyoffset = +$1.textyoffset; /*4382*/
		$1.height = +$1.height; /*4383*/
		$forall($1.barcode, function() { /*4390*/
			var _A = $k[--$j]; /*4387*/
			if ((_A < 48) || (_A > 57)) { /*4389*/
				$k[$j++] = "bwipp.interleaved2of5badCharacter"; /*4388*/
				$k[$j++] = "Interleaved 2 of 5 must contain only digits"; /*4388*/
				$0.raiseerror(); /*4388*/
			} /*4388*/
		}); /*4388*/
		$1.barlen = $1.barcode.length; /*4392*/
		if (((($1.barlen % 2) == 0) && $1.includecheck) || ((($1.barlen % 2) != 0) && (!$1.includecheck))) { /*4403*/
			$1.pad = $s($1.barlen + 1); /*4398*/
			$put($1.pad, 0, 48); /*4399*/
			$puti($1.pad, 1, $1.barcode); /*4400*/
			$1.barcode = $1.pad; /*4401*/
			$1.barlen = $1.barlen + 1; /*4402*/
		} /*4402*/
		if ($1.includecheck) { /*4422*/
			$1.checksum = 0; /*4407*/
			for (var _Q = 0, _P = $1.barlen - 1; _Q <= _P; _Q += 1) { /*4415*/
				$1.i = _Q; /*4409*/
				if (($1.i % 2) == 0) { /*4413*/
					$1.checksum = $1.checksum + (($get($1.barcode, $1.i) - 48) * 3); /*4411*/
				} else { /*4413*/
					$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*4413*/
				} /*4413*/
			} /*4413*/
			$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4416*/
			$1.pad = $s($1.barlen + 1); /*4417*/
			$puti($1.pad, 0, $1.barcode); /*4418*/
			$put($1.pad, $1.barlen, $1.checksum + 48); /*4419*/
			$1.barcode = $1.pad; /*4420*/
			$1.barlen = $1.barlen + 1; /*4421*/
		} /*4421*/
		$1.encs = $a(["11221", "21112", "12112", "22111", "11212", "21211", "12211", "11122", "21121", "12121", "1111", "2111"]); /*4429*/
		$1.barchars = "0123456789"; /*4432*/
		$1.sbs = $s(($1.barlen * 5) + 8); /*4433*/
		$1.txt = $a($1.barlen); /*4434*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*4437*/
		for (var _u = 0, _t = $1.barlen - 1; _u <= _t; _u += 2) { /*4471*/
			$1.i = _u; /*4440*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*4442*/
			$j--; /*4443*/
			$1.indx = $k[--$j].length; /*4444*/
			$j -= 2; /*4445*/
			$1.enca = $get($1.encs, $1.indx); /*4446*/
			$search($1.barchars, $geti($1.barcode, $1.i + 1, 1)); /*4448*/
			$j--; /*4449*/
			$1.indx = $k[--$j].length; /*4450*/
			$j -= 2; /*4451*/
			$1.encb = $get($1.encs, $1.indx); /*4452*/
			$1.intl = $s($1.enca.length * 2); /*4455*/
			for (var _1F = 0, _1E = $1.enca.length - 1; _1F <= _1E; _1F += 1) { /*4462*/
				$1.j = _1F; /*4457*/
				$1.achar = $get($1.enca, $1.j); /*4458*/
				$1.bchar = $get($1.encb, $1.j); /*4459*/
				$put($1.intl, $1.j * 2, $1.achar); /*4460*/
				$put($1.intl, ($1.j * 2) + 1, $1.bchar); /*4461*/
			} /*4461*/
			$puti($1.sbs, ($1.i * 5) + 4, $1.intl); /*4464*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4465*/
			if (($1.includecheck && (!$1.includecheckintext)) && (($1.barlen - 2) == $1.i)) { /*4469*/
				$put($1.txt, $1.i + 1, $a([" ", (($1.i + 1) * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4467*/
			} else { /*4469*/
				$put($1.txt, $1.i + 1, $a([$geti($1.barcode, $1.i + 1, 1), (($1.i + 1) * 9) + 4, $1.textyoffset, $1.textfont, $1.textsize])); /*4469*/
			} /*4469*/
		} /*4469*/
		$puti($1.sbs, ($1.barlen * 5) + 4, $get($1.encs, 11)); /*4474*/
		$k[$j++] = Infinity; /*4487*/
		$k[$j++] = "ren"; /*4480*/
		$k[$j++] = $0.renlinear; /*4480*/
		$k[$j++] = "sbs"; /*4480*/
		$k[$j++] = Infinity; /*4480*/
		var _24 = $1.sbs; /*4479*/
		for (var _25 = 0, _26 = _24.length; _25 < _26; _25++) { /*4479*/
			$k[$j++] = $get(_24, _25) - 48; /*4479*/
		} /*4479*/
		var _28 = $a(); /*4480*/
		$k[$j++] = _28; /*4481*/
		$k[$j++] = "bhs"; /*4481*/
		$k[$j++] = Infinity; /*4481*/
		for (var _2A = 0, _2B = ~~(($1.sbs.length + 1) / 2); _2A < _2B; _2A++) { /*4480*/
			$k[$j++] = $1.height; /*4480*/
		} /*4480*/
		var _2D = $a(); /*4481*/
		$k[$j++] = _2D; /*4482*/
		$k[$j++] = "bbs"; /*4482*/
		$k[$j++] = Infinity; /*4482*/
		for (var _2F = 0, _2G = ~~(($1.sbs.length + 1) / 2); _2F < _2G; _2F++) { /*4481*/
			$k[$j++] = 0; /*4481*/
		} /*4481*/
		var _2H = $a(); /*4482*/
		$k[$j++] = _2H; /*4484*/
		if ($1.includetext) { /*4484*/
			$k[$j++] = "txt"; /*4483*/
			$k[$j++] = $1.txt; /*4483*/
		} /*4483*/
		$k[$j++] = "barratio"; /*4487*/
		$k[$j++] = 2; /*4487*/
		$k[$j++] = "spaceratio"; /*4487*/
		$k[$j++] = 2; /*4487*/
		$k[$j++] = "opt"; /*4487*/
		$k[$j++] = $1.options; /*4487*/
		var _2L = $d(); /*4487*/
		$k[$j++] = _2L; /*4490*/
		if (!$1.dontdraw) { /*4490*/
			$0.renlinear(); /*4490*/
		} /*4490*/
	};
	$0.itf14 = function() {
		var $1 = {}; /*4518*/
		$1.options = $k[--$j]; /*4520*/
		$1.barcode = $k[--$j]; /*4521*/
		$1.dontdraw = false; /*4523*/
		$1.includetext = false; /*4524*/
		$1.includecheckintext = true; /*4525*/
		$1.textfont = "Courier"; /*4526*/
		$1.textsize = 10; /*4527*/
		$1.textxoffset = 0; /*4528*/
		$1.textyoffset = 3; /*4529*/
		$1.height = 0.5; /*4530*/
		$1.showborder = true; /*4531*/
		$1.borderwidth = 4; /*4532*/
		$1.borderleft = 15; /*4533*/
		$1.borderright = 15; /*4534*/
		$forall($1.options, function() { /*4545*/
			var _3 = $k[--$j]; /*4545*/
			$1[$k[--$j]] = _3; /*4545*/
		}); /*4545*/
		$1.textfont = "" + $1.textfont; /*4547*/
		$1.textsize = +$1.textsize; /*4548*/
		$1.textxoffset = +$1.textxoffset; /*4549*/
		$1.textyoffset = +$1.textyoffset; /*4550*/
		$1.height = +$1.height; /*4551*/
		$1.borderwidth = +$1.borderwidth; /*4552*/
		$1.borderleft = +$1.borderleft; /*4553*/
		$1.borderright = +$1.borderright; /*4554*/
		$1.text = $1.barcode; /*4557*/
		var _E = $1.barcode; /*4558*/
		$k[$j++] = $s(_E.length); /*4559*/
		$k[$j++] = 0; /*4559*/
		$forall(_E, function() { /*4559*/
			var _G = $k[--$j]; /*4559*/
			$k[$j++] = _G; /*4559*/
			if (_G != 32) { /*4559*/
				var _H = $k[--$j]; /*4559*/
				var _I = $k[--$j]; /*4559*/
				var _J = $k[--$j]; /*4559*/
				$put(_J, _I, _H); /*4559*/
				$k[$j++] = _J; /*4559*/
				$k[$j++] = _I + 1; /*4559*/
			} else { /*4559*/
				$j--; /*4559*/
			} /*4559*/
		}); /*4559*/
		var _K = $k[--$j]; /*4560*/
		$1.barcode = $geti($k[--$j], 0, _K); /*4560*/
		$1.hasspace = $1.text.length != $1.barcode.length; /*4561*/
		if (($1.barcode.length != 13) && ($1.barcode.length != 14)) { /*4566*/
			$k[$j++] = "bwipp.itf14badLength"; /*4565*/
			$k[$j++] = "ITF-14 must be 13 or 14 digits"; /*4565*/
			$0.raiseerror(); /*4565*/
		} /*4565*/
		$forall($1.barcode, function() { /*4571*/
			var _S = $k[--$j]; /*4568*/
			if ((_S < 48) || (_S > 57)) { /*4570*/
				$k[$j++] = "bwipp.itf14badCharacter"; /*4569*/
				$k[$j++] = "ITF-14 must contain only digits"; /*4569*/
				$0.raiseerror(); /*4569*/
			} /*4569*/
		}); /*4569*/
		$1.checksum = 0; /*4574*/
		for (var _T = 0; _T <= 12; _T += 1) { /*4578*/
			$1.i = _T; /*4576*/
			$k[$j++] = "checksum"; /*4577*/
			$k[$j++] = $1.checksum; /*4577*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4577*/
			if (($1.i % 2) == 0) { /*4577*/
				var _Z = $k[--$j]; /*4577*/
				$k[$j++] = _Z * 3; /*4577*/
			} /*4577*/
			var _a = $k[--$j]; /*4577*/
			var _b = $k[--$j]; /*4577*/
			$1[$k[--$j]] = _b + _a; /*4577*/
		} /*4577*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4579*/
		if ($1.barcode.length == 14) { /*4593*/
			if ($get($1.barcode, 13) != ($1.checksum + 48)) { /*4583*/
				$k[$j++] = "bwipp.itf14badCheckDigit"; /*4582*/
				$k[$j++] = "Incorrect ITF-14 check digit provided"; /*4582*/
				$0.raiseerror(); /*4582*/
			} /*4582*/
		} else { /*4593*/
			var _i = $s(14); /*4585*/
			$puti(_i, 0, $1.barcode); /*4586*/
			$put(_i, 13, $1.checksum + 48); /*4587*/
			$1.barcode = _i; /*4588*/
			var _n = $1.hasspace ? 2 : 1; /*4589*/
			var _o = $s($1.text.length + _n); /*4589*/
			$puti(_o, _o.length - 2, " "); /*4590*/
			$put(_o, _o.length - 1, $1.checksum + 48); /*4591*/
			$puti(_o, 0, $1.text); /*4592*/
			$1.text = _o; /*4593*/
		} /*4593*/
		$1.options.dontdraw = true; /*4597*/
		$1.options.showborder = $1.showborder; /*4598*/
		$1.options.borderwidth = $1.borderwidth; /*4599*/
		$1.options.borderleft = $1.borderleft; /*4600*/
		$1.options.borderright = $1.borderright; /*4601*/
		$1.options.height = $1.height; /*4602*/
		$1.options.textyoffset = $1.textyoffset; /*4603*/
		$k[$j++] = "args"; /*4604*/
		$k[$j++] = $1.barcode; /*4604*/
		$k[$j++] = $1.options; /*4604*/
		$0.interleaved2of5(); /*4604*/
		var _16 = $k[--$j]; /*4604*/
		$1[$k[--$j]] = _16; /*4604*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4606*/
		$1.args.textxalign = "center"; /*4607*/
		$1.args.opt = $1.options; /*4608*/
		$k[$j++] = $1.args; /*4611*/
		if (!$1.dontdraw) { /*4611*/
			$0.renlinear(); /*4611*/
		} /*4611*/
	};
	$0.identcode = function() {
		var $1 = {}; /*4639*/
		$1.options = $k[--$j]; /*4641*/
		$1.barcode = $k[--$j]; /*4642*/
		$1.dontdraw = false; /*4644*/
		$1.includetext = false; /*4645*/
		$1.textfont = "Courier"; /*4646*/
		$1.textsize = 10; /*4647*/
		$1.textxoffset = 0; /*4648*/
		$1.textyoffset = -8.5; /*4649*/
		$1.height = 1; /*4650*/
		$forall($1.options, function() { /*4661*/
			var _3 = $k[--$j]; /*4661*/
			$1[$k[--$j]] = _3; /*4661*/
		}); /*4661*/
		$1.textfont = "" + $1.textfont; /*4663*/
		$1.textsize = +$1.textsize; /*4664*/
		$1.textxoffset = +$1.textxoffset; /*4665*/
		$1.textyoffset = +$1.textyoffset; /*4666*/
		$1.height = +$1.height; /*4667*/
		if (($1.barcode.length != 11) && ($1.barcode.length != 12)) { /*4672*/
			$k[$j++] = "bwipp.identcodeBadLength"; /*4671*/
			$k[$j++] = "Deutsche Post Identcode must be 11 or 12 digits"; /*4671*/
			$0.raiseerror(); /*4671*/
		} /*4671*/
		$forall($1.barcode, function() { /*4677*/
			var _D = $k[--$j]; /*4674*/
			if ((_D < 48) || (_D > 57)) { /*4676*/
				$k[$j++] = "bwipp.identcodeBadCharacter"; /*4675*/
				$k[$j++] = "Deutsche Post Identcode must contain only digits"; /*4675*/
				$0.raiseerror(); /*4675*/
			} /*4675*/
		}); /*4675*/
		$1.checksum = 0; /*4680*/
		for (var _E = 0; _E <= 10; _E += 1) { /*4684*/
			$1.i = _E; /*4682*/
			$k[$j++] = "checksum"; /*4683*/
			$k[$j++] = $1.checksum; /*4683*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4683*/
			if (($1.i % 2) == 0) { /*4683*/
				var _K = $k[--$j]; /*4683*/
				$k[$j++] = _K * 4; /*4683*/
			} else { /*4683*/
				var _L = $k[--$j]; /*4683*/
				$k[$j++] = _L * 9; /*4683*/
			} /*4683*/
			var _M = $k[--$j]; /*4683*/
			var _N = $k[--$j]; /*4683*/
			$1[$k[--$j]] = _N + _M; /*4683*/
		} /*4683*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4685*/
		if ($1.barcode.length == 12) { /*4690*/
			if ($get($1.barcode, 11) != ($1.checksum + 48)) { /*4689*/
				$k[$j++] = "bwipp.identcodeBadCheckDigit"; /*4688*/
				$k[$j++] = "Incorrect Deutsche Post Identcode check digit provided"; /*4688*/
				$0.raiseerror(); /*4688*/
			} /*4688*/
		} /*4688*/
		var _U = $s(12); /*4691*/
		$puti(_U, 0, $1.barcode); /*4692*/
		$put(_U, 11, $1.checksum + 48); /*4693*/
		$1.barcode = _U; /*4694*/
		$1.text = $strcpy($s(16), "  .       .     "); /*4697*/
		$puti($1.text, 0, $geti($1.barcode, 0, 2)); /*4698*/
		$puti($1.text, 3, $geti($1.barcode, 2, 3)); /*4699*/
		$puti($1.text, 7, $geti($1.barcode, 5, 3)); /*4700*/
		$puti($1.text, 11, $geti($1.barcode, 8, 3)); /*4701*/
		$puti($1.text, 15, $geti($1.barcode, 11, 1)); /*4702*/
		$1.options.dontdraw = true; /*4705*/
		$1.options.includecheck = false; /*4706*/
		$k[$j++] = "args"; /*4707*/
		$k[$j++] = $1.barcode; /*4707*/
		$k[$j++] = $1.options; /*4707*/
		$0.interleaved2of5(); /*4707*/
		var _s = $k[--$j]; /*4707*/
		$1[$k[--$j]] = _s; /*4707*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4709*/
		$1.args.textxalign = "center"; /*4710*/
		$1.args.opt = $1.options; /*4711*/
		$k[$j++] = $1.args; /*4714*/
		if (!$1.dontdraw) { /*4714*/
			$0.renlinear(); /*4714*/
		} /*4714*/
	};
	$0.leitcode = function() {
		var $1 = {}; /*4742*/
		$1.options = $k[--$j]; /*4744*/
		$1.barcode = $k[--$j]; /*4745*/
		$1.dontdraw = false; /*4747*/
		$1.includetext = false; /*4748*/
		$1.textfont = "Courier"; /*4749*/
		$1.textsize = 10; /*4750*/
		$1.textxoffset = 0; /*4751*/
		$1.textyoffset = -8.5; /*4752*/
		$1.height = 1; /*4753*/
		$forall($1.options, function() { /*4764*/
			var _3 = $k[--$j]; /*4764*/
			$1[$k[--$j]] = _3; /*4764*/
		}); /*4764*/
		$1.textfont = "" + $1.textfont; /*4766*/
		$1.textsize = +$1.textsize; /*4767*/
		$1.textxoffset = +$1.textxoffset; /*4768*/
		$1.textyoffset = +$1.textyoffset; /*4769*/
		$1.height = +$1.height; /*4770*/
		if (($1.barcode.length != 13) && ($1.barcode.length != 14)) { /*4775*/
			$k[$j++] = "bwipp.leitcodeBadLength"; /*4774*/
			$k[$j++] = "Deutsche Post Leitcode must be 13 or 14 digits"; /*4774*/
			$0.raiseerror(); /*4774*/
		} /*4774*/
		$forall($1.barcode, function() { /*4780*/
			var _D = $k[--$j]; /*4777*/
			if ((_D < 48) || (_D > 57)) { /*4779*/
				$k[$j++] = "bwipp.leitcodeBadCharacter"; /*4778*/
				$k[$j++] = "Deutsche Post Leitcode must contain only digits"; /*4778*/
				$0.raiseerror(); /*4778*/
			} /*4778*/
		}); /*4778*/
		$1.checksum = 0; /*4783*/
		for (var _E = 0; _E <= 12; _E += 1) { /*4787*/
			$1.i = _E; /*4785*/
			$k[$j++] = "checksum"; /*4786*/
			$k[$j++] = $1.checksum; /*4786*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*4786*/
			if (($1.i % 2) == 0) { /*4786*/
				var _K = $k[--$j]; /*4786*/
				$k[$j++] = _K * 4; /*4786*/
			} else { /*4786*/
				var _L = $k[--$j]; /*4786*/
				$k[$j++] = _L * 9; /*4786*/
			} /*4786*/
			var _M = $k[--$j]; /*4786*/
			var _N = $k[--$j]; /*4786*/
			$1[$k[--$j]] = _N + _M; /*4786*/
		} /*4786*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4788*/
		if ($1.barcode.length == 14) { /*4793*/
			if ($get($1.barcode, 13) != ($1.checksum + 48)) { /*4792*/
				$k[$j++] = "bwipp.leitcodeBadCheckDigit"; /*4791*/
				$k[$j++] = "Incorrect Deutsche Post Leitcode check digit provided"; /*4791*/
				$0.raiseerror(); /*4791*/
			} /*4791*/
		} /*4791*/
		var _U = $s(14); /*4794*/
		$puti(_U, 0, $1.barcode); /*4795*/
		$put(_U, 13, $1.checksum + 48); /*4796*/
		$1.barcode = _U; /*4797*/
		$1.text = $strcpy($s(18), "     .   .   .    "); /*4800*/
		$puti($1.text, 0, $geti($1.barcode, 0, 5)); /*4801*/
		$puti($1.text, 6, $geti($1.barcode, 5, 3)); /*4802*/
		$puti($1.text, 10, $geti($1.barcode, 8, 3)); /*4803*/
		$puti($1.text, 14, $geti($1.barcode, 11, 2)); /*4804*/
		$puti($1.text, 17, $geti($1.barcode, 13, 1)); /*4805*/
		$1.options.dontdraw = true; /*4808*/
		$1.options.includecheck = false; /*4809*/
		$k[$j++] = "args"; /*4810*/
		$k[$j++] = $1.barcode; /*4810*/
		$k[$j++] = $1.options; /*4810*/
		$0.interleaved2of5(); /*4810*/
		var _s = $k[--$j]; /*4810*/
		$1[$k[--$j]] = _s; /*4810*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*4812*/
		$1.args.textxalign = "center"; /*4813*/
		$1.args.opt = $1.options; /*4814*/
		$k[$j++] = $1.args; /*4817*/
		if (!$1.dontdraw) { /*4817*/
			$0.renlinear(); /*4817*/
		} /*4817*/
	};
	$0.databaromni = function() {
		var $1 = {}; /*4845*/
		$1.options = $k[--$j]; /*4847*/
		$1.barcode = $k[--$j]; /*4848*/
		$1.dontdraw = false; /*4850*/
		$1.height = 33 / 72; /*4851*/
		$1.linkage = false; /*4852*/
		$1.format = "omni"; /*4853*/
		$1.barxmult = 33; /*4854*/
		$forall($1.options, function() { /*4865*/
			var _3 = $k[--$j]; /*4865*/
			$1[$k[--$j]] = _3; /*4865*/
		}); /*4865*/
		if ($eq($1.format, "truncated")) { /*4867*/
			$1.height = 13 / 72; /*4867*/
		} /*4867*/
		$1.height = +$1.height; /*4868*/
		$1.barxmult = ~~$1.barxmult; /*4869*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*4874*/
			$k[$j++] = "bwipp.databaromniBadAI"; /*4873*/
			$k[$j++] = "GS1 DataBar Omnidirectional must begin with (01) application identifier"; /*4873*/
			$0.raiseerror(); /*4873*/
		} /*4873*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*4877*/
			$k[$j++] = "bwipp.databaromniBadLength"; /*4876*/
			$k[$j++] = "GS1 DataBar Omnidirectional must be 13 or 14 digits"; /*4876*/
			$0.raiseerror(); /*4876*/
		} /*4876*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*4882*/
			var _F = $k[--$j]; /*4879*/
			if ((_F < 48) || (_F > 57)) { /*4881*/
				$k[$j++] = "bwipp.databaromniBadCharacter"; /*4880*/
				$k[$j++] = "GS1 DataBar Omnidirectional must contain only digits"; /*4880*/
				$0.raiseerror(); /*4880*/
			} /*4880*/
		}); /*4880*/
		$1.checksum = 0; /*4885*/
		for (var _G = 0; _G <= 12; _G += 1) { /*4889*/
			$1.i = _G; /*4887*/
			$k[$j++] = "checksum"; /*4888*/
			$k[$j++] = $1.checksum; /*4888*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*4888*/
			if (($1.i % 2) == 0) { /*4888*/
				var _M = $k[--$j]; /*4888*/
				$k[$j++] = _M * 3; /*4888*/
			} /*4888*/
			var _N = $k[--$j]; /*4888*/
			var _O = $k[--$j]; /*4888*/
			$1[$k[--$j]] = _O + _N; /*4888*/
		} /*4888*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*4890*/
		if ($1.barcode.length == 18) { /*4895*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*4894*/
				$k[$j++] = "bwipp.databaromniBadCheckDigit"; /*4893*/
				$k[$j++] = "Incorrect GS1 DataBar Omnidirectional check digit provided"; /*4893*/
				$0.raiseerror(); /*4893*/
			} /*4893*/
		} /*4893*/
		var _V = $s(18); /*4896*/
		$puti(_V, 0, $1.barcode); /*4897*/
		$put(_V, 17, $1.checksum + 48); /*4898*/
		$1.barcode = _V; /*4899*/
		$1.txt = $a($1.barcode.length); /*4902*/
		for (var _c = 0, _b = $1.barcode.length - 1; _c <= _b; _c += 1) { /*4906*/
			$1.i = _c; /*4904*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*4905*/
		} /*4905*/
		$1.ncr = function() {
			var _j = $k[--$j]; /*4909*/
			var _k = $k[--$j]; /*4909*/
			var _l = _k - _j; /*4909*/
			if (_j < (_k - _j)) { /*4909*/
				var _ = _l; /*4909*/
				_l = _j; /*4909*/
				_j = _; /*4909*/
			} /*4909*/
			$k[$j++] = _l; /*4916*/
			$k[$j++] = 1; /*4916*/
			$k[$j++] = 1; /*4916*/
			for (var _n = _k, _m = _j + 1; _n >= _m; _n -= 1) { /*4916*/
				var _o = $k[--$j]; /*4912*/
				var _p = $k[--$j]; /*4913*/
				var _q = $k[--$j]; /*4913*/
				$k[$j++] = _q; /*4915*/
				$k[$j++] = _p; /*4915*/
				$k[$j++] = _o * _n; /*4915*/
				if ($le(_p, _q)) { /*4915*/
					var _r = $k[--$j]; /*4914*/
					var _s = $k[--$j]; /*4914*/
					$k[$j++] = _s + 1; /*4914*/
					$k[$j++] = ~~(_r / _s); /*4914*/
				} /*4914*/
			} /*4914*/
			for (;;) { /*4920*/
				var _t = $k[--$j]; /*4918*/
				var _u = $k[--$j]; /*4918*/
				var _v = $k[--$j]; /*4918*/
				$k[$j++] = _v; /*4918*/
				$k[$j++] = _u; /*4918*/
				$k[$j++] = _t; /*4918*/
				if ($gt(_u, _v)) { /*4918*/
					break; /*4918*/
				} /*4918*/
				var _w = $k[--$j]; /*4919*/
				var _x = $k[--$j]; /*4919*/
				$k[$j++] = _x + 1; /*4919*/
				$k[$j++] = ~~(_w / _x); /*4919*/
			} /*4919*/
			var _y = $k[--$j]; /*4921*/
			var _z = $k[--$j]; /*4921*/
			var _10 = $k[--$j]; /*4921*/
			$k[$j++] = _y; /*4921*/
		}; /*4922*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*4925*/
			$1.el = $k[--$j]; /*4926*/
			$1.mw = $k[--$j]; /*4927*/
			$1.nm = $k[--$j]; /*4928*/
			$1.val = $k[--$j]; /*4929*/
			$1.out = $a($1.el); /*4930*/
			$1.mask = 0; /*4931*/
			for (var _1A = 0, _19 = $1.el - 2; _1A <= _19; _1A += 1) { /*4958*/
				$1.bar = _1A; /*4933*/
				$1.ew = 1; /*4934*/
				var _1C = $1.bar; /*4935*/
				$1.mask = $1.mask | ((_1C < 0 ? 1 >>> -_1C : 1 << _1C)); /*4935*/
				for (;;) { /*4954*/
					$k[$j++] = "sval"; /*4936*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*4936*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*4936*/
					$1.ncr(); /*4936*/
					var _1H = $k[--$j]; /*4936*/
					$1[$k[--$j]] = _1H; /*4936*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*4939*/
						$k[$j++] = "sval"; /*4938*/
						$k[$j++] = $1.sval; /*4938*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*4938*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*4938*/
						$1.ncr(); /*4938*/
						var _1W = $k[--$j]; /*4938*/
						var _1X = $k[--$j]; /*4938*/
						$1[$k[--$j]] = _1X - _1W; /*4938*/
					} /*4938*/
					if (($1.el - $1.bar) > 2) { /*4948*/
						$1.lval = 0; /*4941*/
						for (var _1h = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _1g = $1.mw + 1; _1h >= _1g; _1h -= 1) { /*4945*/
							$k[$j++] = (($1.nm - _1h) - $1.ew) - 1; /*4943*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*4943*/
							$1.ncr(); /*4943*/
							$1.lval = $k[--$j] + $1.lval; /*4944*/
						} /*4944*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*4946*/
					} else { /*4948*/
						if (($1.nm - $1.ew) > $1.mw) { /*4948*/
							$1.sval = $1.sval - 1; /*4948*/
						} /*4948*/
					} /*4948*/
					$1.val = $1.val - $1.sval; /*4950*/
					if ($1.val < 0) { /*4951*/
						break; /*4951*/
					} /*4951*/
					$1.ew = $1.ew + 1; /*4952*/
					var _21 = $1.bar; /*4953*/
					$1.mask = $1.mask & (~((_21 < 0 ? 1 >>> -_21 : 1 << _21))); /*4953*/
				} /*4953*/
				$1.val = $1.val + $1.sval; /*4955*/
				$1.nm = $1.nm - $1.ew; /*4956*/
				$put($1.out, $1.bar, $1.ew); /*4957*/
			} /*4957*/
			$put($1.out, $1.el - 1, $1.nm); /*4959*/
			$k[$j++] = $1.out; /*4960*/
		}; /*4961*/
		$k[$j++] = Infinity; /*4966*/
		var _2E = $1.linkage ? 1 : 0; /*4964*/
		$k[$j++] = _2E; /*4965*/
		$forall($geti($1.barcode, 4, 13), function() { /*4965*/
			var _2H = $k[--$j]; /*4965*/
			$k[$j++] = _2H - 48; /*4965*/
		}); /*4965*/
		$1.binval = $a(); /*4966*/
		for (var _2J = 0; _2J <= 12; _2J += 1) { /*4972*/
			$1.i = _2J; /*4969*/
			var _2K = $1.binval; /*4970*/
			var _2L = $1.i; /*4970*/
			$put(_2K, _2L + 1, $get(_2K, _2L + 1) + (($get($1.binval, $1.i) % 4537077) * 10)); /*4970*/
			$put($1.binval, $1.i, ~~($get($1.binval, $1.i) / 4537077)); /*4971*/
		} /*4971*/
		$1.right = $get($1.binval, 13) % 4537077; /*4973*/
		var _2X = $1.binval; /*4974*/
		$put(_2X, 13, ~~($get(_2X, 13) / 4537077)); /*4974*/
		$1.left = 0; /*4976*/
		$1.i = true; /*4977*/
		for (var _2Z = 0; _2Z <= 13; _2Z += 1) { /*4987*/
			$1.j = _2Z; /*4979*/
			var _2c = $get($1.binval, $1.j); /*4980*/
			$k[$j++] = _2c; /*4986*/
			if ((_2c == 0) && $1.i) { /*4985*/
				$j--; /*4982*/
			} else { /*4985*/
				$1.i = false; /*4984*/
				$1.left = $1.left + ($k[--$j] * (~~Math.pow(10, 13 - $1.j))); /*4985*/
			} /*4985*/
		} /*4985*/
		$1.d1 = ~~($1.left / 1597); /*4989*/
		$1.d2 = $1.left % 1597; /*4990*/
		$1.d3 = ~~($1.right / 1597); /*4991*/
		$1.d4 = $1.right % 1597; /*4992*/
		$1.tab164 = $a([160, 0, 12, 4, 8, 1, 161, 1, 960, 161, 10, 6, 6, 3, 80, 10, 2014, 961, 8, 8, 4, 5, 31, 34, 2714, 2015, 6, 10, 3, 6, 10, 70, 2840, 2715, 4, 12, 1, 8, 1, 126]); /*5000*/
		$1.tab154 = $a([335, 0, 5, 10, 2, 7, 4, 84, 1035, 336, 7, 8, 4, 5, 20, 35, 1515, 1036, 9, 6, 6, 3, 48, 10, 1596, 1516, 11, 4, 8, 1, 81, 1]); /*5007*/
		$1.i = 0; /*5009*/
		for (;;) { /*5019*/
			if ($1.d1 <= $get($1.tab164, $1.i)) { /*5017*/
				$forall($geti($1.tab164, $1.i + 1, 7)); /*5011*/
				$1.d1te = $k[--$j]; /*5012*/
				$1.d1to = $k[--$j]; /*5012*/
				$1.d1mwe = $k[--$j]; /*5013*/
				$1.d1mwo = $k[--$j]; /*5013*/
				$1.d1ele = $k[--$j]; /*5014*/
				$1.d1elo = $k[--$j]; /*5014*/
				$1.d1gs = $k[--$j]; /*5015*/
				break; /*5016*/
			} /*5016*/
			$1.i = $1.i + 8; /*5018*/
		} /*5018*/
		$1.i = 0; /*5021*/
		for (;;) { /*5031*/
			if ($1.d2 <= $get($1.tab154, $1.i)) { /*5029*/
				$forall($geti($1.tab154, $1.i + 1, 7)); /*5023*/
				$1.d2te = $k[--$j]; /*5024*/
				$1.d2to = $k[--$j]; /*5024*/
				$1.d2mwe = $k[--$j]; /*5025*/
				$1.d2mwo = $k[--$j]; /*5025*/
				$1.d2ele = $k[--$j]; /*5026*/
				$1.d2elo = $k[--$j]; /*5026*/
				$1.d2gs = $k[--$j]; /*5027*/
				break; /*5028*/
			} /*5028*/
			$1.i = $1.i + 8; /*5030*/
		} /*5030*/
		$1.i = 0; /*5033*/
		for (;;) { /*5043*/
			if ($1.d3 <= $get($1.tab164, $1.i)) { /*5041*/
				$forall($geti($1.tab164, $1.i + 1, 7)); /*5035*/
				$1.d3te = $k[--$j]; /*5036*/
				$1.d3to = $k[--$j]; /*5036*/
				$1.d3mwe = $k[--$j]; /*5037*/
				$1.d3mwo = $k[--$j]; /*5037*/
				$1.d3ele = $k[--$j]; /*5038*/
				$1.d3elo = $k[--$j]; /*5038*/
				$1.d3gs = $k[--$j]; /*5039*/
				break; /*5040*/
			} /*5040*/
			$1.i = $1.i + 8; /*5042*/
		} /*5042*/
		$1.i = 0; /*5045*/
		for (;;) { /*5055*/
			if ($1.d4 <= $get($1.tab154, $1.i)) { /*5053*/
				$forall($geti($1.tab154, $1.i + 1, 7)); /*5047*/
				$1.d4te = $k[--$j]; /*5048*/
				$1.d4to = $k[--$j]; /*5048*/
				$1.d4mwe = $k[--$j]; /*5049*/
				$1.d4mwo = $k[--$j]; /*5049*/
				$1.d4ele = $k[--$j]; /*5050*/
				$1.d4elo = $k[--$j]; /*5050*/
				$1.d4gs = $k[--$j]; /*5051*/
				break; /*5052*/
			} /*5052*/
			$1.i = $1.i + 8; /*5054*/
		} /*5054*/
		$k[$j++] = "d1wo"; /*5057*/
		$k[$j++] = ~~(($1.d1 - $1.d1gs) / $1.d1te); /*5057*/
		$k[$j++] = $1.d1elo; /*5057*/
		$k[$j++] = $1.d1mwo; /*5057*/
		$k[$j++] = 4; /*5057*/
		$k[$j++] = false; /*5057*/
		$1.getRSSwidths(); /*5057*/
		var _3q = $k[--$j]; /*5057*/
		$1[$k[--$j]] = _3q; /*5057*/
		$k[$j++] = "d1we"; /*5058*/
		$k[$j++] = ($1.d1 - $1.d1gs) % $1.d1te; /*5058*/
		$k[$j++] = $1.d1ele; /*5058*/
		$k[$j++] = $1.d1mwe; /*5058*/
		$k[$j++] = 4; /*5058*/
		$k[$j++] = true; /*5058*/
		$1.getRSSwidths(); /*5058*/
		var _3x = $k[--$j]; /*5058*/
		$1[$k[--$j]] = _3x; /*5058*/
		$k[$j++] = "d2wo"; /*5059*/
		$k[$j++] = ($1.d2 - $1.d2gs) % $1.d2to; /*5059*/
		$k[$j++] = $1.d2elo; /*5059*/
		$k[$j++] = $1.d2mwo; /*5059*/
		$k[$j++] = 4; /*5059*/
		$k[$j++] = true; /*5059*/
		$1.getRSSwidths(); /*5059*/
		var _44 = $k[--$j]; /*5059*/
		$1[$k[--$j]] = _44; /*5059*/
		$k[$j++] = "d2we"; /*5060*/
		$k[$j++] = ~~(($1.d2 - $1.d2gs) / $1.d2to); /*5060*/
		$k[$j++] = $1.d2ele; /*5060*/
		$k[$j++] = $1.d2mwe; /*5060*/
		$k[$j++] = 4; /*5060*/
		$k[$j++] = false; /*5060*/
		$1.getRSSwidths(); /*5060*/
		var _4B = $k[--$j]; /*5060*/
		$1[$k[--$j]] = _4B; /*5060*/
		$k[$j++] = "d3wo"; /*5061*/
		$k[$j++] = ~~(($1.d3 - $1.d3gs) / $1.d3te); /*5061*/
		$k[$j++] = $1.d3elo; /*5061*/
		$k[$j++] = $1.d3mwo; /*5061*/
		$k[$j++] = 4; /*5061*/
		$k[$j++] = false; /*5061*/
		$1.getRSSwidths(); /*5061*/
		var _4I = $k[--$j]; /*5061*/
		$1[$k[--$j]] = _4I; /*5061*/
		$k[$j++] = "d3we"; /*5062*/
		$k[$j++] = ($1.d3 - $1.d3gs) % $1.d3te; /*5062*/
		$k[$j++] = $1.d3ele; /*5062*/
		$k[$j++] = $1.d3mwe; /*5062*/
		$k[$j++] = 4; /*5062*/
		$k[$j++] = true; /*5062*/
		$1.getRSSwidths(); /*5062*/
		var _4P = $k[--$j]; /*5062*/
		$1[$k[--$j]] = _4P; /*5062*/
		$k[$j++] = "d4wo"; /*5063*/
		$k[$j++] = ($1.d4 - $1.d4gs) % $1.d4to; /*5063*/
		$k[$j++] = $1.d4elo; /*5063*/
		$k[$j++] = $1.d4mwo; /*5063*/
		$k[$j++] = 4; /*5063*/
		$k[$j++] = true; /*5063*/
		$1.getRSSwidths(); /*5063*/
		var _4W = $k[--$j]; /*5063*/
		$1[$k[--$j]] = _4W; /*5063*/
		$k[$j++] = "d4we"; /*5064*/
		$k[$j++] = ~~(($1.d4 - $1.d4gs) / $1.d4to); /*5064*/
		$k[$j++] = $1.d4ele; /*5064*/
		$k[$j++] = $1.d4mwe; /*5064*/
		$k[$j++] = 4; /*5064*/
		$k[$j++] = false; /*5064*/
		$1.getRSSwidths(); /*5064*/
		var _4d = $k[--$j]; /*5064*/
		$1[$k[--$j]] = _4d; /*5064*/
		$1.d1w = $a(8); /*5066*/
		for (var _4g = 0; _4g <= 3; _4g += 1) { /*5071*/
			$1.i = _4g; /*5068*/
			$put($1.d1w, $1.i * 2, $get($1.d1wo, $1.i)); /*5069*/
			$put($1.d1w, ($1.i * 2) + 1, $get($1.d1we, $1.i)); /*5070*/
		} /*5070*/
		$1.d2w = $a(8); /*5073*/
		for (var _4s = 0; _4s <= 3; _4s += 1) { /*5078*/
			$1.i = _4s; /*5075*/
			$put($1.d2w, 7 - ($1.i * 2), $get($1.d2wo, $1.i)); /*5076*/
			$put($1.d2w, 6 - ($1.i * 2), $get($1.d2we, $1.i)); /*5077*/
		} /*5077*/
		$1.d3w = $a(8); /*5080*/
		for (var _54 = 0; _54 <= 3; _54 += 1) { /*5085*/
			$1.i = _54; /*5082*/
			$put($1.d3w, 7 - ($1.i * 2), $get($1.d3wo, $1.i)); /*5083*/
			$put($1.d3w, 6 - ($1.i * 2), $get($1.d3we, $1.i)); /*5084*/
		} /*5084*/
		$1.d4w = $a(8); /*5087*/
		for (var _5G = 0; _5G <= 3; _5G += 1) { /*5092*/
			$1.i = _5G; /*5089*/
			$put($1.d4w, $1.i * 2, $get($1.d4wo, $1.i)); /*5090*/
			$put($1.d4w, ($1.i * 2) + 1, $get($1.d4we, $1.i)); /*5091*/
		} /*5091*/
		$k[$j++] = Infinity; /*5099*/
		var _5R = $1.d1w; /*5095*/
		for (var _5S = 0, _5T = _5R.length; _5S < _5T; _5S++) { /*5095*/
			$k[$j++] = $get(_5R, _5S); /*5095*/
		} /*5095*/
		var _5V = $1.d2w; /*5096*/
		for (var _5W = 0, _5X = _5V.length; _5W < _5X; _5W++) { /*5096*/
			$k[$j++] = $get(_5V, _5W); /*5096*/
		} /*5096*/
		var _5Z = $1.d3w; /*5097*/
		for (var _5a = 0, _5b = _5Z.length; _5a < _5b; _5a++) { /*5097*/
			$k[$j++] = $get(_5Z, _5a); /*5097*/
		} /*5097*/
		var _5d = $1.d4w; /*5098*/
		for (var _5e = 0, _5f = _5d.length; _5e < _5f; _5e++) { /*5098*/
			$k[$j++] = $get(_5d, _5e); /*5098*/
		} /*5098*/
		$1.widths = $a(); /*5099*/
		$1.checkweights = $a([1, 3, 9, 27, 2, 6, 18, 54, 58, 72, 24, 8, 29, 36, 12, 4, 74, 51, 17, 32, 37, 65, 48, 16, 64, 34, 23, 69, 49, 68, 46, 59]); /*5106*/
		$1.checkwidths = $a([3, 8, 2, 1, 1, 3, 5, 5, 1, 1, 3, 3, 7, 1, 1, 3, 1, 9, 1, 1, 2, 7, 4, 1, 1, 2, 5, 6, 1, 1, 2, 3, 8, 1, 1, 1, 5, 7, 1, 1, 1, 3, 9, 1, 1]); /*5112*/
		$1.checksum = 0; /*5114*/
		for (var _5k = 0; _5k <= 31; _5k += 1) { /*5118*/
			$1.i = _5k; /*5116*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweights, $1.i)); /*5117*/
		} /*5117*/
		$1.checksum = $1.checksum % 79; /*5119*/
		if ($1.checksum >= 8) { /*5120*/
			$1.checksum = $1.checksum + 1; /*5120*/
		} /*5120*/
		if ($1.checksum >= 72) { /*5121*/
			$1.checksum = $1.checksum + 1; /*5121*/
		} /*5121*/
		$1.checklt = $geti($1.checkwidths, (~~($1.checksum / 9)) * 5, 5); /*5122*/
		$1.checkrtrev = $geti($1.checkwidths, ($1.checksum % 9) * 5, 5); /*5123*/
		$1.checkrt = $a(5); /*5124*/
		for (var _64 = 0; _64 <= 4; _64 += 1) { /*5128*/
			$1.i = _64; /*5126*/
			$put($1.checkrt, $1.i, $get($1.checkrtrev, 4 - $1.i)); /*5127*/
		} /*5127*/
		if ($eq($1.format, "omni") || $eq($1.format, "truncated")) { /*5247*/
			$k[$j++] = Infinity; /*5136*/
			var _6C = $1.d1w; /*5134*/
			$k[$j++] = 1; /*5134*/
			for (var _6D = 0, _6E = _6C.length; _6D < _6E; _6D++) { /*5134*/
				$k[$j++] = $get(_6C, _6D); /*5134*/
			} /*5134*/
			$forall($1.checklt); /*5134*/
			var _6H = $1.d2w; /*5134*/
			for (var _6I = 0, _6J = _6H.length; _6I < _6J; _6I++) { /*5134*/
				$k[$j++] = $get(_6H, _6I); /*5134*/
			} /*5134*/
			var _6L = $1.d4w; /*5135*/
			for (var _6M = 0, _6N = _6L.length; _6M < _6N; _6M++) { /*5135*/
				$k[$j++] = $get(_6L, _6M); /*5135*/
			} /*5135*/
			var _6P = $1.checkrt; /*5135*/
			for (var _6Q = 0, _6R = _6P.length; _6Q < _6R; _6Q++) { /*5135*/
				$k[$j++] = $get(_6P, _6Q); /*5135*/
			} /*5135*/
			var _6T = $1.d3w; /*5135*/
			for (var _6U = 0, _6V = _6T.length; _6U < _6V; _6U++) { /*5135*/
				$k[$j++] = $get(_6T, _6U); /*5135*/
			} /*5135*/
			$k[$j++] = 1; /*5135*/
			$k[$j++] = 1; /*5135*/
			$1.sbs = $a(); /*5136*/
			$k[$j++] = Infinity; /*5145*/
			$k[$j++] = "ren"; /*5142*/
			$k[$j++] = $0.renlinear; /*5142*/
			$k[$j++] = "sbs"; /*5142*/
			$k[$j++] = $1.sbs; /*5142*/
			$k[$j++] = "bhs"; /*5142*/
			$k[$j++] = Infinity; /*5142*/
			for (var _6a = 0, _6b = ~~(($1.sbs.length + 1) / 2); _6a < _6b; _6a++) { /*5141*/
				$k[$j++] = $1.height; /*5141*/
			} /*5141*/
			var _6d = $a(); /*5142*/
			$k[$j++] = _6d; /*5143*/
			$k[$j++] = "bbs"; /*5143*/
			$k[$j++] = Infinity; /*5143*/
			for (var _6f = 0, _6g = ~~(($1.sbs.length + 1) / 2); _6f < _6g; _6f++) { /*5142*/
				$k[$j++] = 0; /*5142*/
			} /*5142*/
			var _6h = $a(); /*5143*/
			$k[$j++] = _6h; /*5145*/
			$k[$j++] = "txt"; /*5145*/
			$k[$j++] = $1.txt; /*5145*/
			$k[$j++] = "textxalign"; /*5145*/
			$k[$j++] = "center"; /*5145*/
			$k[$j++] = "opt"; /*5145*/
			$k[$j++] = $1.options; /*5145*/
			var _6k = $d(); /*5145*/
			$k[$j++] = _6k; /*5148*/
			if (!$1.dontdraw) { /*5148*/
				$0.renlinear(); /*5148*/
			} /*5148*/
		} else { /*5247*/
			$k[$j++] = Infinity; /*5152*/
			var _6m = $1.d1w; /*5152*/
			$k[$j++] = 1; /*5152*/
			$k[$j++] = 1; /*5152*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*5152*/
				$k[$j++] = $get(_6m, _6n); /*5152*/
			} /*5152*/
			$forall($1.checklt); /*5152*/
			var _6r = $1.d2w; /*5152*/
			for (var _6s = 0, _6t = _6r.length; _6s < _6t; _6s++) { /*5152*/
				$k[$j++] = $get(_6r, _6s); /*5152*/
			} /*5152*/
			$k[$j++] = 1; /*5152*/
			$k[$j++] = 1; /*5152*/
			$k[$j++] = 0; /*5152*/
			$1.top = $a(); /*5152*/
			$k[$j++] = Infinity; /*5153*/
			var _6w = $1.d4w; /*5153*/
			$k[$j++] = 1; /*5153*/
			$k[$j++] = 1; /*5153*/
			for (var _6x = 0, _6y = _6w.length; _6x < _6y; _6x++) { /*5153*/
				$k[$j++] = $get(_6w, _6x); /*5153*/
			} /*5153*/
			var _70 = $1.checkrt; /*5153*/
			for (var _71 = 0, _72 = _70.length; _71 < _72; _71++) { /*5153*/
				$k[$j++] = $get(_70, _71); /*5153*/
			} /*5153*/
			var _74 = $1.d3w; /*5153*/
			for (var _75 = 0, _76 = _74.length; _75 < _76; _75++) { /*5153*/
				$k[$j++] = $get(_74, _75); /*5153*/
			} /*5153*/
			$k[$j++] = 1; /*5153*/
			$k[$j++] = 1; /*5153*/
			$k[$j++] = 0; /*5153*/
			$1.bot = $a(); /*5153*/
			for (var _79 = 0; _79 <= 24; _79 += 2) { /*5158*/
				$1.i = _79; /*5155*/
				for (var _7D = 0, _7E = $get($1.top, $1.i); _7D < _7E; _7D++) { /*5156*/
					$k[$j++] = 0; /*5156*/
				} /*5156*/
				for (var _7I = 0, _7J = $get($1.top, $1.i + 1); _7I < _7J; _7I++) { /*5157*/
					$k[$j++] = 1; /*5157*/
				} /*5157*/
			} /*5157*/
			$astore($a(50)); /*5159*/
			$1.top = $k[--$j]; /*5159*/
			for (var _7M = 0; _7M <= 24; _7M += 2) { /*5164*/
				$1.i = _7M; /*5161*/
				for (var _7Q = 0, _7R = $get($1.bot, $1.i); _7Q < _7R; _7Q++) { /*5162*/
					$k[$j++] = 1; /*5162*/
				} /*5162*/
				for (var _7V = 0, _7W = $get($1.bot, $1.i + 1); _7V < _7W; _7V++) { /*5163*/
					$k[$j++] = 0; /*5163*/
				} /*5163*/
			} /*5163*/
			$astore($a(50)); /*5165*/
			$1.bot = $k[--$j]; /*5165*/
			if ($eq($1.format, "stacked")) { /*5184*/
				$k[$j++] = Infinity; /*5169*/
				for (var _7a = 0, _7b = 50; _7a < _7b; _7a++) { /*5169*/
					$k[$j++] = 0; /*5169*/
				} /*5169*/
				$1.sep = $a(); /*5169*/
				for (var _7d = 4; _7d <= 45; _7d += 1) { /*5177*/
					$1.i = _7d; /*5171*/
					if ($eq($get($1.top, $1.i), $get($1.bot, $1.i))) { /*5175*/
						$put($1.sep, $1.i, 1 - $get($1.top, $1.i)); /*5173*/
					} else { /*5175*/
						$put($1.sep, $1.i, 1 - $get($1.sep, $1.i - 1)); /*5175*/
					} /*5175*/
				} /*5175*/
				$k[$j++] = Infinity; /*5182*/
				for (var _7u = 0, _7v = 5; _7u < _7v; _7u++) { /*5179*/
					$aload($1.top); /*5179*/
				} /*5179*/
				$aload($1.sep); /*5180*/
				for (var _7y = 0, _7z = 7; _7y < _7z; _7y++) { /*5181*/
					$aload($1.bot); /*5181*/
				} /*5181*/
				$1.pixs = $a(); /*5182*/
				$1.pixy = ~~($1.pixs.length / 50); /*5183*/
			} /*5183*/
			if ($eq($1.format, "stackedomni")) { /*5234*/
				$k[$j++] = Infinity; /*5188*/
				$forall($1.top, function() { /*5188*/
					var _85 = $k[--$j]; /*5188*/
					$k[$j++] = 1 - _85; /*5188*/
				}); /*5188*/
				$1.sep1 = $a(); /*5188*/
				$puti($1.sep1, 0, $a([0, 0, 0, 0])); /*5189*/
				$puti($1.sep1, 46, $a([0, 0, 0, 0])); /*5190*/
				for (var _8B = 18; _8B <= 30; _8B += 1) { /*5203*/
					$1.i = _8B; /*5192*/
					if ($get($1.top, $1.i) == 0) { /*5200*/
						if ($get($1.top, $1.i - 1) == 1) { /*5197*/
							$k[$j++] = 1; /*5195*/
						} else { /*5197*/
							var _8L = ($get($1.sep1, $1.i - 1) == 0) ? 1 : 0; /*5197*/
							$k[$j++] = _8L; /*5197*/
						} /*5197*/
					} else { /*5200*/
						$k[$j++] = 0; /*5200*/
					} /*5200*/
					$put($1.sep1, $1.i, $k[--$j]); /*5202*/
				} /*5202*/
				$k[$j++] = Infinity; /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				for (var _8P = 0, _8Q = 21; _8P < _8Q; _8P++) { /*5204*/
					$k[$j++] = 0; /*5204*/
					$k[$j++] = 1; /*5204*/
				} /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				$k[$j++] = 0; /*5204*/
				$1.sep2 = $a(); /*5204*/
				$k[$j++] = Infinity; /*5205*/
				$forall($1.bot, function() { /*5205*/
					var _8T = $k[--$j]; /*5205*/
					$k[$j++] = 1 - _8T; /*5205*/
				}); /*5205*/
				$1.sep3 = $a(); /*5205*/
				$puti($1.sep3, 0, $a([0, 0, 0, 0])); /*5206*/
				$puti($1.sep3, 46, $a([0, 0, 0, 0])); /*5207*/
				for (var _8Z = 19; _8Z <= 31; _8Z += 1) { /*5220*/
					$1.i = _8Z; /*5209*/
					if ($get($1.bot, $1.i) == 0) { /*5217*/
						if ($get($1.bot, $1.i - 1) == 1) { /*5214*/
							$k[$j++] = 1; /*5212*/
						} else { /*5214*/
							var _8j = ($get($1.sep3, $1.i - 1) == 0) ? 1 : 0; /*5214*/
							$k[$j++] = _8j; /*5214*/
						} /*5214*/
					} else { /*5217*/
						$k[$j++] = 0; /*5217*/
					} /*5217*/
					$put($1.sep3, $1.i, $k[--$j]); /*5219*/
				} /*5219*/
				$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*5221*/
				$k[$j++] = true; /*5222*/
				for (var _8o = 0; _8o <= 12; _8o += 1) { /*5222*/
					var _8t = $k[--$j]; /*5222*/
					$k[$j++] = _8t && $eq($get($1.bot, _8o + 19), $get($1.f3, _8o)); /*5222*/
				} /*5222*/
				if ($k[--$j]) { /*5225*/
					$puti($1.sep3, 19, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*5224*/
				} /*5224*/
				$k[$j++] = Infinity; /*5232*/
				for (var _8y = 0, _8z = $1.barxmult; _8y < _8z; _8y++) { /*5227*/
					$aload($1.top); /*5227*/
				} /*5227*/
				$aload($1.sep1); /*5228*/
				$aload($1.sep2); /*5229*/
				$aload($1.sep3); /*5230*/
				for (var _95 = 0, _96 = $1.barxmult; _95 < _96; _95++) { /*5231*/
					$aload($1.bot); /*5231*/
				} /*5231*/
				$1.pixs = $a(); /*5232*/
				$1.pixy = ~~($1.pixs.length / 50); /*5233*/
			} /*5233*/
			var _9E = {
				ren: $0.renmatrix,
				pixs: $1.pixs,
				pixx: 50,
				pixy: $1.pixy,
				height: $1.pixy / 72,
				width: 50 / 72,
				opt: $1.options
			}; /*5244*/
			$k[$j++] = _9E; /*5247*/
			if (!$1.dontdraw) { /*5247*/
				$0.renmatrix(); /*5247*/
			} /*5247*/
		} /*5247*/
	};
	$0.databarstacked = function() {
		var $1 = {}; /*5277*/
		$1.options = $k[--$j]; /*5279*/
		$1.barcode = $k[--$j]; /*5280*/
		$1.dontdraw = false; /*5282*/
		$forall($1.options, function() { /*5293*/
			var _3 = $k[--$j]; /*5293*/
			$1[$k[--$j]] = _3; /*5293*/
		}); /*5293*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5298*/
			$k[$j++] = "bwipp.databarstackedBadAI"; /*5297*/
			$k[$j++] = "GS1 DataBar Stacked must begin with (01) application identifier"; /*5297*/
			$0.raiseerror(); /*5297*/
		} /*5297*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5301*/
			$k[$j++] = "bwipp.databarstackedBadLength"; /*5300*/
			$k[$j++] = "GS1 DataBar Stacked must be 13 or 14 digits"; /*5300*/
			$0.raiseerror(); /*5300*/
		} /*5300*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5306*/
			var _C = $k[--$j]; /*5303*/
			if ((_C < 48) || (_C > 57)) { /*5305*/
				$k[$j++] = "bwipp.databarstackedBadCharacter"; /*5304*/
				$k[$j++] = "GS1 DataBar Stacked must contain only digits"; /*5304*/
				$0.raiseerror(); /*5304*/
			} /*5304*/
		}); /*5304*/
		$1.checksum = 0; /*5309*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5313*/
			$1.i = _D; /*5311*/
			$k[$j++] = "checksum"; /*5312*/
			$k[$j++] = $1.checksum; /*5312*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5312*/
			if (($1.i % 2) == 0) { /*5312*/
				var _J = $k[--$j]; /*5312*/
				$k[$j++] = _J * 3; /*5312*/
			} /*5312*/
			var _K = $k[--$j]; /*5312*/
			var _L = $k[--$j]; /*5312*/
			$1[$k[--$j]] = _L + _K; /*5312*/
		} /*5312*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5314*/
		if ($1.barcode.length == 18) { /*5319*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5318*/
				$k[$j++] = "bwipp.databarstackedBadCheckDigit"; /*5317*/
				$k[$j++] = "Incorrect GS1 DataBar Stacked check digit provided"; /*5317*/
				$0.raiseerror(); /*5317*/
			} /*5317*/
		} /*5317*/
		var _S = $s(18); /*5320*/
		$puti(_S, 0, $1.barcode); /*5321*/
		$put(_S, 17, $1.checksum + 48); /*5322*/
		$1.barcode = _S; /*5323*/
		$1.options.dontdraw = true; /*5326*/
		$1.options.format = "stacked"; /*5327*/
		$k[$j++] = "args"; /*5329*/
		$k[$j++] = $1.barcode; /*5329*/
		$k[$j++] = $1.options; /*5329*/
		$0.databaromni(); /*5329*/
		var _Z = $k[--$j]; /*5329*/
		$1[$k[--$j]] = _Z; /*5329*/
		$1.args.opt = $1.options; /*5331*/
		$k[$j++] = $1.args; /*5334*/
		if (!$1.dontdraw) { /*5334*/
			$0.renmatrix(); /*5334*/
		} /*5334*/
	};
	$0.databarstackedomni = function() {
		var $1 = {}; /*5362*/
		$1.options = $k[--$j]; /*5364*/
		$1.barcode = $k[--$j]; /*5365*/
		$1.dontdraw = false; /*5367*/
		$forall($1.options, function() { /*5378*/
			var _3 = $k[--$j]; /*5378*/
			$1[$k[--$j]] = _3; /*5378*/
		}); /*5378*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5383*/
			$k[$j++] = "bwipp.databarstackedomniBadAI"; /*5382*/
			$k[$j++] = "GS1 DataBar Stacked Omnidirectional must begin with (01) application identifier"; /*5382*/
			$0.raiseerror(); /*5382*/
		} /*5382*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5386*/
			$k[$j++] = "bwipp.databarstackedomniBadLength"; /*5385*/
			$k[$j++] = "GS1 DataBar Stacked Omnidirectional must be 13 or 14 digits"; /*5385*/
			$0.raiseerror(); /*5385*/
		} /*5385*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5391*/
			var _C = $k[--$j]; /*5388*/
			if ((_C < 48) || (_C > 57)) { /*5390*/
				$k[$j++] = "bwipp.databarstackedomniBadCharacter"; /*5389*/
				$k[$j++] = "GS1 DataBar Stacked Omnidirectional must contain only digits"; /*5389*/
				$0.raiseerror(); /*5389*/
			} /*5389*/
		}); /*5389*/
		$1.checksum = 0; /*5394*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5398*/
			$1.i = _D; /*5396*/
			$k[$j++] = "checksum"; /*5397*/
			$k[$j++] = $1.checksum; /*5397*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5397*/
			if (($1.i % 2) == 0) { /*5397*/
				var _J = $k[--$j]; /*5397*/
				$k[$j++] = _J * 3; /*5397*/
			} /*5397*/
			var _K = $k[--$j]; /*5397*/
			var _L = $k[--$j]; /*5397*/
			$1[$k[--$j]] = _L + _K; /*5397*/
		} /*5397*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5399*/
		if ($1.barcode.length == 18) { /*5404*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5403*/
				$k[$j++] = "bwipp.databarstackedomniBadCheckDigit"; /*5402*/
				$k[$j++] = "Incorrect GS1 DataBar Stacked Omnidirectional check digit provided"; /*5402*/
				$0.raiseerror(); /*5402*/
			} /*5402*/
		} /*5402*/
		var _S = $s(18); /*5405*/
		$puti(_S, 0, $1.barcode); /*5406*/
		$put(_S, 17, $1.checksum + 48); /*5407*/
		$1.barcode = _S; /*5408*/
		$1.options.dontdraw = true; /*5411*/
		$1.options.format = "stackedomni"; /*5412*/
		$k[$j++] = "args"; /*5414*/
		$k[$j++] = $1.barcode; /*5414*/
		$k[$j++] = $1.options; /*5414*/
		$0.databaromni(); /*5414*/
		var _Z = $k[--$j]; /*5414*/
		$1[$k[--$j]] = _Z; /*5414*/
		$1.args.opt = $1.options; /*5416*/
		$k[$j++] = $1.args; /*5419*/
		if (!$1.dontdraw) { /*5419*/
			$0.renmatrix(); /*5419*/
		} /*5419*/
	};
	$0.databartruncated = function() {
		var $1 = {}; /*5447*/
		$1.options = $k[--$j]; /*5449*/
		$1.barcode = $k[--$j]; /*5450*/
		$1.dontdraw = false; /*5452*/
		$forall($1.options, function() { /*5463*/
			var _3 = $k[--$j]; /*5463*/
			$1[$k[--$j]] = _3; /*5463*/
		}); /*5463*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5468*/
			$k[$j++] = "bwipp.databartruncatedBadAI"; /*5467*/
			$k[$j++] = "GS1 DataBar Truncated must begin with (01) application identifier"; /*5467*/
			$0.raiseerror(); /*5467*/
		} /*5467*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5471*/
			$k[$j++] = "bwipp.databartruncatedBadLength"; /*5470*/
			$k[$j++] = "GS1 DataBar Truncated must be 13 or 14 digits"; /*5470*/
			$0.raiseerror(); /*5470*/
		} /*5470*/
		$forall($geti($1.barcode, 4, $1.barcode.length - 4), function() { /*5476*/
			var _C = $k[--$j]; /*5473*/
			if ((_C < 48) || (_C > 57)) { /*5475*/
				$k[$j++] = "bwipp.databartruncatedBadCharacter"; /*5474*/
				$k[$j++] = "GS1 DataBar Truncated must contain only digits"; /*5474*/
				$0.raiseerror(); /*5474*/
			} /*5474*/
		}); /*5474*/
		$1.checksum = 0; /*5479*/
		for (var _D = 0; _D <= 12; _D += 1) { /*5483*/
			$1.i = _D; /*5481*/
			$k[$j++] = "checksum"; /*5482*/
			$k[$j++] = $1.checksum; /*5482*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5482*/
			if (($1.i % 2) == 0) { /*5482*/
				var _J = $k[--$j]; /*5482*/
				$k[$j++] = _J * 3; /*5482*/
			} /*5482*/
			var _K = $k[--$j]; /*5482*/
			var _L = $k[--$j]; /*5482*/
			$1[$k[--$j]] = _L + _K; /*5482*/
		} /*5482*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5484*/
		if ($1.barcode.length == 18) { /*5489*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5488*/
				$k[$j++] = "bwipp.databartruncatedBadCheckDigit"; /*5487*/
				$k[$j++] = "Incorrect GS1 DataBar Truncated check digit provided"; /*5487*/
				$0.raiseerror(); /*5487*/
			} /*5487*/
		} /*5487*/
		var _S = $s(18); /*5490*/
		$puti(_S, 0, $1.barcode); /*5491*/
		$put(_S, 17, $1.checksum + 48); /*5492*/
		$1.barcode = _S; /*5493*/
		$1.options.dontdraw = true; /*5496*/
		$1.options.format = "truncated"; /*5497*/
		$k[$j++] = "args"; /*5499*/
		$k[$j++] = $1.barcode; /*5499*/
		$k[$j++] = $1.options; /*5499*/
		$0.databaromni(); /*5499*/
		var _Z = $k[--$j]; /*5499*/
		$1[$k[--$j]] = _Z; /*5499*/
		$1.args.opt = $1.options; /*5501*/
		$k[$j++] = $1.args; /*5504*/
		if (!$1.dontdraw) { /*5504*/
			$0.renlinear(); /*5504*/
		} /*5504*/
	};
	$0.databarlimited = function() {
		var $1 = {}; /*5531*/
		$1.options = $k[--$j]; /*5533*/
		$1.barcode = $k[--$j]; /*5534*/
		$1.dontdraw = false; /*5536*/
		$1.height = 10 / 72; /*5537*/
		$1.linkage = false; /*5538*/
		$forall($1.options, function() { /*5549*/
			var _3 = $k[--$j]; /*5549*/
			$1[$k[--$j]] = _3; /*5549*/
		}); /*5549*/
		$1.height = +$1.height; /*5551*/
		if ($ne($geti($1.barcode, 0, 4), "(01)")) { /*5556*/
			$k[$j++] = "bwipp.databarlimitedBadAI"; /*5555*/
			$k[$j++] = "GS1 DataBar Limited must begin with (01) application identifier"; /*5555*/
			$0.raiseerror(); /*5555*/
		} /*5555*/
		if (($1.barcode.length != 17) && ($1.barcode.length != 18)) { /*5559*/
			$k[$j++] = "bwipp.databarlimitedBadLength"; /*5558*/
			$k[$j++] = "GS1 DataBar Limited must be 13 or 14 digits"; /*5558*/
			$0.raiseerror(); /*5558*/
		} /*5558*/
		var _B = $get($1.barcode, 4); /*5560*/
		if ((_B < 48) || (_B > 49)) { /*5562*/
			$k[$j++] = "bwipp.databarlimitedBadStartDigit"; /*5561*/
			$k[$j++] = "GS1 DataBar Limited must begin with 0 or 1"; /*5561*/
			$0.raiseerror(); /*5561*/
		} /*5561*/
		$forall($geti($1.barcode, 5, $1.barcode.length - 5), function() { /*5567*/
			var _F = $k[--$j]; /*5564*/
			if ((_F < 48) || (_F > 57)) { /*5566*/
				$k[$j++] = "bwipp.databarlimitedBadCharacter"; /*5565*/
				$k[$j++] = "GS1 DataBar Limited must contain only digits"; /*5565*/
				$0.raiseerror(); /*5565*/
			} /*5565*/
		}); /*5565*/
		$1.checksum = 0; /*5570*/
		for (var _G = 0; _G <= 12; _G += 1) { /*5574*/
			$1.i = _G; /*5572*/
			$k[$j++] = "checksum"; /*5573*/
			$k[$j++] = $1.checksum; /*5573*/
			$k[$j++] = $get($1.barcode, $1.i + 4) - 48; /*5573*/
			if (($1.i % 2) == 0) { /*5573*/
				var _M = $k[--$j]; /*5573*/
				$k[$j++] = _M * 3; /*5573*/
			} /*5573*/
			var _N = $k[--$j]; /*5573*/
			var _O = $k[--$j]; /*5573*/
			$1[$k[--$j]] = _O + _N; /*5573*/
		} /*5573*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*5575*/
		if ($1.barcode.length == 18) { /*5580*/
			if ($get($1.barcode, 17) != ($1.checksum + 48)) { /*5579*/
				$k[$j++] = "bwipp.databaromniBadCheckDigit"; /*5578*/
				$k[$j++] = "Incorrect GS1 DataBar Limited check digit provided"; /*5578*/
				$0.raiseerror(); /*5578*/
			} /*5578*/
		} /*5578*/
		var _V = $s(18); /*5581*/
		$puti(_V, 0, $1.barcode); /*5582*/
		$put(_V, 17, $1.checksum + 48); /*5583*/
		$1.barcode = _V; /*5584*/
		$k[$j++] = Infinity; /*5589*/
		$forall($geti($1.barcode, 4, 13), function() { /*5588*/
			var _a = $k[--$j]; /*5588*/
			$k[$j++] = _a - 48; /*5588*/
		}); /*5588*/
		$1.binval = $a(); /*5589*/
		if ($1.linkage) { /*5596*/
			$1.linkval = $a([2, 0, 1, 5, 1, 3, 3, 5, 3, 1, 0, 9, 6]); /*5591*/
			for (var _g = 0, _f = $1.binval.length - 1; _g <= _f; _g += 1) { /*5595*/
				$1.i = _g; /*5593*/
				$put($1.binval, $1.i, $get($1.binval, $1.i) + $get($1.linkval, $1.i)); /*5594*/
			} /*5594*/
		} /*5594*/
		$1.txt = $a($1.barcode.length); /*5599*/
		for (var _t = 0, _s = $1.barcode.length - 1; _t <= _s; _t += 1) { /*5603*/
			$1.i = _t; /*5601*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*5602*/
		} /*5602*/
		$1.ncr = function() {
			var _10 = $k[--$j]; /*5606*/
			var _11 = $k[--$j]; /*5606*/
			var _12 = _11 - _10; /*5606*/
			if (_10 < (_11 - _10)) { /*5606*/
				var _ = _12; /*5606*/
				_12 = _10; /*5606*/
				_10 = _; /*5606*/
			} /*5606*/
			$k[$j++] = _12; /*5613*/
			$k[$j++] = 1; /*5613*/
			$k[$j++] = 1; /*5613*/
			for (var _14 = _11, _13 = _10 + 1; _14 >= _13; _14 -= 1) { /*5613*/
				var _15 = $k[--$j]; /*5609*/
				var _16 = $k[--$j]; /*5610*/
				var _17 = $k[--$j]; /*5610*/
				$k[$j++] = _17; /*5612*/
				$k[$j++] = _16; /*5612*/
				$k[$j++] = _15 * _14; /*5612*/
				if ($le(_16, _17)) { /*5612*/
					var _18 = $k[--$j]; /*5611*/
					var _19 = $k[--$j]; /*5611*/
					$k[$j++] = _19 + 1; /*5611*/
					$k[$j++] = ~~(_18 / _19); /*5611*/
				} /*5611*/
			} /*5611*/
			for (;;) { /*5617*/
				var _1A = $k[--$j]; /*5615*/
				var _1B = $k[--$j]; /*5615*/
				var _1C = $k[--$j]; /*5615*/
				$k[$j++] = _1C; /*5615*/
				$k[$j++] = _1B; /*5615*/
				$k[$j++] = _1A; /*5615*/
				if ($gt(_1B, _1C)) { /*5615*/
					break; /*5615*/
				} /*5615*/
				var _1D = $k[--$j]; /*5616*/
				var _1E = $k[--$j]; /*5616*/
				$k[$j++] = _1E + 1; /*5616*/
				$k[$j++] = ~~(_1D / _1E); /*5616*/
			} /*5616*/
			var _1F = $k[--$j]; /*5618*/
			var _1G = $k[--$j]; /*5618*/
			var _1H = $k[--$j]; /*5618*/
			$k[$j++] = _1F; /*5618*/
		}; /*5619*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*5622*/
			$1.el = $k[--$j]; /*5623*/
			$1.mw = $k[--$j]; /*5624*/
			$1.nm = $k[--$j]; /*5625*/
			$1.val = $k[--$j]; /*5626*/
			$1.out = $a($1.el); /*5627*/
			$1.mask = 0; /*5628*/
			for (var _1R = 0, _1Q = $1.el - 2; _1R <= _1Q; _1R += 1) { /*5655*/
				$1.bar = _1R; /*5630*/
				$1.ew = 1; /*5631*/
				var _1T = $1.bar; /*5632*/
				$1.mask = $1.mask | ((_1T < 0 ? 1 >>> -_1T : 1 << _1T)); /*5632*/
				for (;;) { /*5651*/
					$k[$j++] = "sval"; /*5633*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*5633*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*5633*/
					$1.ncr(); /*5633*/
					var _1Y = $k[--$j]; /*5633*/
					$1[$k[--$j]] = _1Y; /*5633*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*5636*/
						$k[$j++] = "sval"; /*5635*/
						$k[$j++] = $1.sval; /*5635*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*5635*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*5635*/
						$1.ncr(); /*5635*/
						var _1n = $k[--$j]; /*5635*/
						var _1o = $k[--$j]; /*5635*/
						$1[$k[--$j]] = _1o - _1n; /*5635*/
					} /*5635*/
					if (($1.el - $1.bar) > 2) { /*5645*/
						$1.lval = 0; /*5638*/
						for (var _1y = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _1x = $1.mw + 1; _1y >= _1x; _1y -= 1) { /*5642*/
							$k[$j++] = (($1.nm - _1y) - $1.ew) - 1; /*5640*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*5640*/
							$1.ncr(); /*5640*/
							$1.lval = $k[--$j] + $1.lval; /*5641*/
						} /*5641*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*5643*/
					} else { /*5645*/
						if (($1.nm - $1.ew) > $1.mw) { /*5645*/
							$1.sval = $1.sval - 1; /*5645*/
						} /*5645*/
					} /*5645*/
					$1.val = $1.val - $1.sval; /*5647*/
					if ($1.val < 0) { /*5648*/
						break; /*5648*/
					} /*5648*/
					$1.ew = $1.ew + 1; /*5649*/
					var _2I = $1.bar; /*5650*/
					$1.mask = $1.mask & (~((_2I < 0 ? 1 >>> -_2I : 1 << _2I))); /*5650*/
				} /*5650*/
				$1.val = $1.val + $1.sval; /*5652*/
				$1.nm = $1.nm - $1.ew; /*5653*/
				$put($1.out, $1.bar, $1.ew); /*5654*/
			} /*5654*/
			$put($1.out, $1.el - 1, $1.nm); /*5656*/
			$k[$j++] = $1.out; /*5657*/
		}; /*5658*/
		for (var _2U = 0; _2U <= 11; _2U += 1) { /*5664*/
			$1.i = _2U; /*5661*/
			var _2V = $1.binval; /*5662*/
			var _2W = $1.i; /*5662*/
			$put(_2V, _2W + 1, $get(_2V, _2W + 1) + (($get($1.binval, $1.i) % 2013571) * 10)); /*5662*/
			$put($1.binval, $1.i, ~~($get($1.binval, $1.i) / 2013571)); /*5663*/
		} /*5663*/
		$1.d2 = $get($1.binval, 12) % 2013571; /*5665*/
		var _2i = $1.binval; /*5666*/
		$put(_2i, 12, ~~($get(_2i, 12) / 2013571)); /*5666*/
		$1.d1 = 0; /*5668*/
		$1.i = true; /*5669*/
		for (var _2k = 0; _2k <= 12; _2k += 1) { /*5679*/
			$1.j = _2k; /*5671*/
			var _2n = $get($1.binval, $1.j); /*5672*/
			$k[$j++] = _2n; /*5678*/
			if ((_2n == 0) && $1.i) { /*5677*/
				$j--; /*5674*/
			} else { /*5677*/
				$1.i = false; /*5676*/
				$1.d1 = $1.d1 + ($k[--$j] * (~~Math.pow(10, 12 - $1.j))); /*5677*/
			} /*5677*/
		} /*5677*/
		$1.tab267 = $a([183063, 0, 17, 9, 6, 3, 6538, 28, 820063, 183064, 13, 13, 5, 4, 875, 728, 1000775, 820064, 9, 17, 3, 6, 28, 6454, 1491020, 1000776, 15, 11, 5, 4, 2415, 203, 1979844, 1491021, 11, 15, 4, 5, 203, 2408, 1996938, 1979845, 19, 7, 8, 1, 17094, 1, 2013570, 1996939, 7, 19, 1, 8, 1, 16632]); /*5689*/
		$1.i = 0; /*5691*/
		for (;;) { /*5701*/
			if ($1.d1 <= $get($1.tab267, $1.i)) { /*5699*/
				$forall($geti($1.tab267, $1.i + 1, 7)); /*5693*/
				$1.d1te = $k[--$j]; /*5694*/
				$1.d1to = $k[--$j]; /*5694*/
				$1.d1mwe = $k[--$j]; /*5695*/
				$1.d1mwo = $k[--$j]; /*5695*/
				$1.d1ele = $k[--$j]; /*5696*/
				$1.d1elo = $k[--$j]; /*5696*/
				$1.d1gs = $k[--$j]; /*5697*/
				break; /*5698*/
			} /*5698*/
			$1.i = $1.i + 8; /*5700*/
		} /*5700*/
		$1.i = 0; /*5703*/
		for (;;) { /*5713*/
			if ($1.d2 <= $get($1.tab267, $1.i)) { /*5711*/
				$forall($geti($1.tab267, $1.i + 1, 7)); /*5705*/
				$1.d2te = $k[--$j]; /*5706*/
				$1.d2to = $k[--$j]; /*5706*/
				$1.d2mwe = $k[--$j]; /*5707*/
				$1.d2mwo = $k[--$j]; /*5707*/
				$1.d2ele = $k[--$j]; /*5708*/
				$1.d2elo = $k[--$j]; /*5708*/
				$1.d2gs = $k[--$j]; /*5709*/
				break; /*5710*/
			} /*5710*/
			$1.i = $1.i + 8; /*5712*/
		} /*5712*/
		$k[$j++] = "d1wo"; /*5715*/
		$k[$j++] = ~~(($1.d1 - $1.d1gs) / $1.d1te); /*5715*/
		$k[$j++] = $1.d1elo; /*5715*/
		$k[$j++] = $1.d1mwo; /*5715*/
		$k[$j++] = 7; /*5715*/
		$k[$j++] = false; /*5715*/
		$1.getRSSwidths(); /*5715*/
		var _3S = $k[--$j]; /*5715*/
		$1[$k[--$j]] = _3S; /*5715*/
		$k[$j++] = "d1we"; /*5716*/
		$k[$j++] = ($1.d1 - $1.d1gs) % $1.d1te; /*5716*/
		$k[$j++] = $1.d1ele; /*5716*/
		$k[$j++] = $1.d1mwe; /*5716*/
		$k[$j++] = 7; /*5716*/
		$k[$j++] = true; /*5716*/
		$1.getRSSwidths(); /*5716*/
		var _3Z = $k[--$j]; /*5716*/
		$1[$k[--$j]] = _3Z; /*5716*/
		$k[$j++] = "d2wo"; /*5717*/
		$k[$j++] = ~~(($1.d2 - $1.d2gs) / $1.d2te); /*5717*/
		$k[$j++] = $1.d2elo; /*5717*/
		$k[$j++] = $1.d2mwo; /*5717*/
		$k[$j++] = 7; /*5717*/
		$k[$j++] = false; /*5717*/
		$1.getRSSwidths(); /*5717*/
		var _3g = $k[--$j]; /*5717*/
		$1[$k[--$j]] = _3g; /*5717*/
		$k[$j++] = "d2we"; /*5718*/
		$k[$j++] = ($1.d2 - $1.d2gs) % $1.d2te; /*5718*/
		$k[$j++] = $1.d2ele; /*5718*/
		$k[$j++] = $1.d2mwe; /*5718*/
		$k[$j++] = 7; /*5718*/
		$k[$j++] = true; /*5718*/
		$1.getRSSwidths(); /*5718*/
		var _3n = $k[--$j]; /*5718*/
		$1[$k[--$j]] = _3n; /*5718*/
		$1.d1w = $a(14); /*5720*/
		for (var _3q = 0; _3q <= 6; _3q += 1) { /*5725*/
			$1.i = _3q; /*5722*/
			$put($1.d1w, $1.i * 2, $get($1.d1wo, $1.i)); /*5723*/
			$put($1.d1w, ($1.i * 2) + 1, $get($1.d1we, $1.i)); /*5724*/
		} /*5724*/
		$1.d2w = $a(14); /*5727*/
		for (var _42 = 0; _42 <= 6; _42 += 1) { /*5732*/
			$1.i = _42; /*5729*/
			$put($1.d2w, $1.i * 2, $get($1.d2wo, $1.i)); /*5730*/
			$put($1.d2w, ($1.i * 2) + 1, $get($1.d2we, $1.i)); /*5731*/
		} /*5731*/
		$k[$j++] = Infinity; /*5737*/
		var _4D = $1.d1w; /*5735*/
		for (var _4E = 0, _4F = _4D.length; _4E < _4F; _4E++) { /*5735*/
			$k[$j++] = $get(_4D, _4E); /*5735*/
		} /*5735*/
		var _4H = $1.d2w; /*5736*/
		for (var _4I = 0, _4J = _4H.length; _4I < _4J; _4I++) { /*5736*/
			$k[$j++] = $get(_4H, _4I); /*5736*/
		} /*5736*/
		$1.widths = $a(); /*5737*/
		$1.checkweights = $a([1, 3, 9, 27, 81, 65, 17, 51, 64, 14, 42, 37, 22, 66, 20, 60, 2, 6, 18, 54, 73, 41, 34, 13, 39, 28, 84, 74]); /*5742*/
		$k[$j++] = Infinity; /*5758*/
		for (var _4N = 0; _4N <= 43; _4N += 1) { /*5745*/
			$k[$j++] = _4N; /*5745*/
		} /*5745*/
		$k[$j++] = 45; /*5747*/
		$k[$j++] = 52; /*5747*/
		$k[$j++] = 57; /*5747*/
		for (var _4O = 63; _4O <= 66; _4O += 1) { /*5747*/
			$k[$j++] = _4O; /*5747*/
		} /*5747*/
		for (var _4P = 73; _4P <= 79; _4P += 1) { /*5748*/
			$k[$j++] = _4P; /*5748*/
		} /*5748*/
		$k[$j++] = 82; /*5750*/
		for (var _4Q = 126; _4Q <= 130; _4Q += 1) { /*5750*/
			$k[$j++] = _4Q; /*5750*/
		} /*5750*/
		$k[$j++] = 132; /*5752*/
		for (var _4R = 141; _4R <= 146; _4R += 1) { /*5752*/
			$k[$j++] = _4R; /*5752*/
		} /*5752*/
		for (var _4S = 210; _4S <= 217; _4S += 1) { /*5753*/
			$k[$j++] = _4S; /*5753*/
		} /*5753*/
		$k[$j++] = 220; /*5755*/
		for (var _4T = 316; _4T <= 320; _4T += 1) { /*5755*/
			$k[$j++] = _4T; /*5755*/
		} /*5755*/
		$k[$j++] = 322; /*5757*/
		$k[$j++] = 323; /*5757*/
		$k[$j++] = 326; /*5757*/
		$k[$j++] = 337; /*5757*/
		$1.checkseq = $a(); /*5758*/
		$1.checksum = 0; /*5760*/
		for (var _4V = 0; _4V <= 27; _4V += 1) { /*5764*/
			$1.i = _4V; /*5762*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweights, $1.i)); /*5763*/
		} /*5763*/
		$1.checksum = $1.checksum % 89; /*5765*/
		$1.seq = $get($1.checkseq, $1.checksum); /*5766*/
		$k[$j++] = "swidths"; /*5767*/
		$k[$j++] = ~~($1.seq / 21); /*5767*/
		$k[$j++] = 8; /*5767*/
		$k[$j++] = 3; /*5767*/
		$k[$j++] = 6; /*5767*/
		$k[$j++] = false; /*5767*/
		$1.getRSSwidths(); /*5767*/
		var _4i = $k[--$j]; /*5767*/
		$1[$k[--$j]] = _4i; /*5767*/
		$k[$j++] = "bwidths"; /*5768*/
		$k[$j++] = $1.seq % 21; /*5768*/
		$k[$j++] = 8; /*5768*/
		$k[$j++] = 3; /*5768*/
		$k[$j++] = 6; /*5768*/
		$k[$j++] = false; /*5768*/
		$1.getRSSwidths(); /*5768*/
		var _4l = $k[--$j]; /*5768*/
		$1[$k[--$j]] = _4l; /*5768*/
		$1.checkwidths = $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]); /*5770*/
		for (var _4o = 0; _4o <= 5; _4o += 1) { /*5775*/
			$1.i = _4o; /*5772*/
			$put($1.checkwidths, $1.i * 2, $get($1.swidths, $1.i)); /*5773*/
			$put($1.checkwidths, ($1.i * 2) + 1, $get($1.bwidths, $1.i)); /*5774*/
		} /*5774*/
		$k[$j++] = Infinity; /*5779*/
		var _4z = $1.d1w; /*5778*/
		$k[$j++] = 1; /*5778*/
		for (var _50 = 0, _51 = _4z.length; _50 < _51; _50++) { /*5778*/
			$k[$j++] = $get(_4z, _50); /*5778*/
		} /*5778*/
		var _53 = $1.checkwidths; /*5778*/
		for (var _54 = 0, _55 = _53.length; _54 < _55; _54++) { /*5778*/
			$k[$j++] = $get(_53, _54); /*5778*/
		} /*5778*/
		var _57 = $1.d2w; /*5778*/
		for (var _58 = 0, _59 = _57.length; _58 < _59; _58++) { /*5778*/
			$k[$j++] = $get(_57, _58); /*5778*/
		} /*5778*/
		$k[$j++] = 1; /*5778*/
		$k[$j++] = 1; /*5778*/
		$1.sbs = $a(); /*5779*/
		$k[$j++] = Infinity; /*5789*/
		$k[$j++] = "ren"; /*5786*/
		$k[$j++] = $0.renlinear; /*5786*/
		$k[$j++] = "sbs"; /*5786*/
		$k[$j++] = $1.sbs; /*5786*/
		$k[$j++] = "bhs"; /*5786*/
		$k[$j++] = Infinity; /*5786*/
		for (var _5E = 0, _5F = ~~(($1.sbs.length + 1) / 2); _5E < _5F; _5E++) { /*5785*/
			$k[$j++] = $1.height; /*5785*/
		} /*5785*/
		var _5H = $a(); /*5786*/
		$k[$j++] = _5H; /*5787*/
		$k[$j++] = "bbs"; /*5787*/
		$k[$j++] = Infinity; /*5787*/
		for (var _5J = 0, _5K = ~~(($1.sbs.length + 1) / 2); _5J < _5K; _5J++) { /*5786*/
			$k[$j++] = 0; /*5786*/
		} /*5786*/
		var _5L = $a(); /*5787*/
		$k[$j++] = _5L; /*5789*/
		$k[$j++] = "txt"; /*5789*/
		$k[$j++] = $1.txt; /*5789*/
		$k[$j++] = "textxalign"; /*5789*/
		$k[$j++] = "center"; /*5789*/
		$k[$j++] = "opt"; /*5789*/
		$k[$j++] = $1.options; /*5789*/
		var _5O = $d(); /*5789*/
		$k[$j++] = _5O; /*5792*/
		if (!$1.dontdraw) { /*5792*/
			$0.renlinear(); /*5792*/
		} /*5792*/
	};
	$0.databarexpanded = function() {
		var $1 = {}; /*5820*/
		$1.options = $k[--$j]; /*5822*/
		$1.barcode = $k[--$j]; /*5823*/
		$1.dontdraw = false; /*5825*/
		$1.height = 34 / 72; /*5826*/
		$1.format = "expanded"; /*5827*/
		$1.segments = -1; /*5828*/
		$1.linkage = false; /*5829*/
		$1.barxmult = 34; /*5830*/
		$forall($1.options, function() { /*5841*/
			var _3 = $k[--$j]; /*5841*/
			$1[$k[--$j]] = _3; /*5841*/
		}); /*5841*/
		$1.height = +$1.height; /*5843*/
		$1.segments = ~~$1.segments; /*5844*/
		$1.barxmult = ~~$1.barxmult; /*5845*/
		if ($1.segments == -1) { /*5849*/
			var _A = $eq($1.format, "expandedstacked") ? 4 : 22; /*5848*/
			$1.segments = _A; /*5848*/
		} /*5848*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*5853*/
			$1.out = $s($1.in.length); /*5854*/
			$1.j = 0; /*5855*/
			$k[$j++] = $1.in; /*5869*/
			for (;;) { /*5869*/
				$search($k[--$j], "^"); /*5858*/
				if ($k[--$j]) { /*5867*/
					var _H = $k[--$j]; /*5859*/
					$puti($1.out, $1.j, _H); /*5859*/
					$1.j = (_H.length + $1.j) + 1; /*5860*/
					$j--; /*5861*/
					var _L = $k[--$j]; /*5862*/
					$put($1.out, $1.j - 1, ~~$z($geti(_L, 0, 3))); /*5862*/
					$k[$j++] = $geti(_L, 3, _L.length - 3); /*5863*/
				} else { /*5867*/
					var _Q = $k[--$j]; /*5865*/
					$puti($1.out, $1.j, _Q); /*5865*/
					$1.j = _Q.length + $1.j; /*5866*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*5867*/
					break; /*5867*/
				} /*5867*/
			} /*5867*/
		}; /*5870*/
		$1.ais = $a([]); /*5873*/
		$1.vals = $a([]); /*5874*/
		var _Z = $1.barcode; /*5875*/
		$k[$j++] = $geti(_Z, 1, _Z.length - 1); /*5888*/
		for (;;) { /*5888*/
			var _b = $k[--$j]; /*5877*/
			$k[$j++] = _b; /*5877*/
			if ($eq(_b, "")) { /*5877*/
				break; /*5877*/
			} /*5877*/
			$search($k[--$j], ")"); /*5878*/
			$j--; /*5878*/
			var _d = $k[--$j]; /*5879*/
			var _e = $k[--$j]; /*5879*/
			var _f = $k[--$j]; /*5880*/
			$k[$j++] = _d; /*5880*/
			$search(_f, "("); /*5880*/
			if ($k[--$j]) { /*5883*/
				var _h = $k[--$j]; /*5881*/
				var _i = $k[--$j]; /*5881*/
				var _j = $k[--$j]; /*5881*/
				var _k = $k[--$j]; /*5881*/
				$k[$j++] = _j; /*5881*/
				$k[$j++] = _k; /*5881*/
				$k[$j++] = _h; /*5881*/
			} else { /*5883*/
				var _l = $k[--$j]; /*5883*/
				var _m = $k[--$j]; /*5883*/
				$k[$j++] = ""; /*5883*/
				$k[$j++] = _m; /*5883*/
				$k[$j++] = _l; /*5883*/
			} /*5883*/
			$k[$j++] = Infinity; /*5885*/
			$aload($1.ais); /*5885*/
			var _p = $k[$j - 1 - ($counttomark() + 2)]; /*5885*/
			$k[$j++] = _p; /*5885*/
			$1.ais = $a(); /*5885*/
			$k[$j++] = Infinity; /*5886*/
			$aload($1.vals); /*5886*/
			var _t = $k[$j - 1 - ($counttomark() + 1)]; /*5886*/
			$k[$j++] = _t; /*5886*/
			$1.expand(); /*5886*/
			$1.vals = $a(); /*5886*/
			$j -= 2; /*5887*/
		} /*5887*/
		$j--; /*5889*/
		for (;;) { /*5976*/
			if ($1.ais.length == 2) { /*5901*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3103")) { /*5900*/
					if ($eq($geti($get($1.vals, 0), 0, 1), "9") && ((~~$z($get($1.vals, 1))) <= 32767)) { /*5899*/
						$k[$j++] = "0100"; /*5898*/
						$k[$j++] = false; /*5898*/
						break; /*5898*/
					} /*5898*/
				} /*5898*/
			} /*5898*/
			if ($1.ais.length == 2) { /*5910*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3202")) { /*5909*/
					if ($eq($geti($get($1.vals, 0), 0, 1), "9") && ((~~$z($get($1.vals, 1))) <= 9999)) { /*5908*/
						$k[$j++] = "0101"; /*5907*/
						$k[$j++] = false; /*5907*/
						break; /*5907*/
					} /*5907*/
				} /*5907*/
			} /*5907*/
			if ($1.ais.length == 2) { /*5919*/
				if ($eq($get($1.ais, 0), "01") && $eq($get($1.ais, 1), "3203")) { /*5918*/
					if ($eq($geti($get($1.vals, 0), 0, 1), "9") && ((~~$z($get($1.vals, 1))) <= 22767)) { /*5917*/
						$k[$j++] = "0101"; /*5916*/
						$k[$j++] = false; /*5916*/
						break; /*5916*/
					} /*5916*/
				} /*5916*/
			} /*5916*/
			var _1Q = $1.ais.length; /*5922*/
			if ((_1Q == 2) || (_1Q == 3)) { /*5952*/
				$k[$j++] = "ai310x"; /*5923*/
				$k[$j++] = false; /*5923*/
				for (var _1R = 3100; _1R <= 3109; _1R += 1) { /*5923*/
					var _1W = $k[--$j]; /*5923*/
					$k[$j++] = _1W || $eq($cvrs($s(4), _1R, 10), $get($1.ais, 1)); /*5923*/
				} /*5923*/
				var _1X = $k[--$j]; /*5923*/
				$1[$k[--$j]] = _1X; /*5923*/
				$k[$j++] = "ai320x"; /*5924*/
				$k[$j++] = false; /*5924*/
				for (var _1Z = 3200; _1Z <= 3209; _1Z += 1) { /*5924*/
					var _1e = $k[--$j]; /*5924*/
					$k[$j++] = _1e || $eq($cvrs($s(4), _1Z, 10), $get($1.ais, 1)); /*5924*/
				} /*5924*/
				var _1f = $k[--$j]; /*5924*/
				$1[$k[--$j]] = _1f; /*5924*/
				if ($1.ais.length == 3) { /*5928*/
					var _1i = $a(["11", "13", "15", "17"]); /*5926*/
					$k[$j++] = "aibad"; /*5926*/
					$k[$j++] = true; /*5926*/
					for (var _1j = 0, _1k = _1i.length; _1j < _1k; _1j++) { /*5926*/
						var _1o = $k[--$j]; /*5926*/
						$k[$j++] = _1o && $ne($get(_1i, _1j), $get($1.ais, 2)); /*5926*/
					} /*5926*/
					var _1p = $k[--$j]; /*5926*/
					$1[$k[--$j]] = _1p; /*5926*/
				} else { /*5928*/
					$1.aibad = false; /*5928*/
				} /*5928*/
				if (($eq($get($1.ais, 0), "01") && ($1.ai310x || $1.ai320x)) && (!$1.aibad)) { /*5951*/
					if ($1.ais.length == 3) { /*5948*/
						$k[$j++] = $eq($geti($get($1.vals, 0), 0, 1), "9") && ((~~$z($get($1.vals, 1))) <= 99999); /*5943*/
						if ($1.vals && ((~~2) <= 999999)) { /*5943*/
							if ($1.ai310x && $eq($get($1.ais, 2), "11")) { /*5935*/
								$k[$j++] = "0111000"; /*5935*/
								$k[$j++] = false; /*5935*/
								break; /*5935*/
							} /*5935*/
							if ($1.ai320x && $eq($get($1.ais, 2), "11")) { /*5936*/
								$k[$j++] = "0111001"; /*5936*/
								$k[$j++] = false; /*5936*/
								break; /*5936*/
							} /*5936*/
							if ($1.ai310x && $eq($get($1.ais, 2), "13")) { /*5937*/
								$k[$j++] = "0111010"; /*5937*/
								$k[$j++] = false; /*5937*/
								break; /*5937*/
							} /*5937*/
							if ($1.ai320x && $eq($get($1.ais, 2), "13")) { /*5938*/
								$k[$j++] = "0111011"; /*5938*/
								$k[$j++] = false; /*5938*/
								break; /*5938*/
							} /*5938*/
							if ($1.ai310x && $eq($get($1.ais, 2), "15")) { /*5939*/
								$k[$j++] = "0111100"; /*5939*/
								$k[$j++] = false; /*5939*/
								break; /*5939*/
							} /*5939*/
							if ($1.ai320x && $eq($get($1.ais, 2), "15")) { /*5940*/
								$k[$j++] = "0111101"; /*5940*/
								$k[$j++] = false; /*5940*/
								break; /*5940*/
							} /*5940*/
							if ($1.ai310x && $eq($get($1.ais, 2), "17")) { /*5941*/
								$k[$j++] = "0111110"; /*5941*/
								$k[$j++] = false; /*5941*/
								break; /*5941*/
							} /*5941*/
							if ($1.ai320x && $eq($get($1.ais, 2), "17")) { /*5942*/
								$k[$j++] = "0111111"; /*5942*/
								$k[$j++] = false; /*5942*/
								break; /*5942*/
							} /*5942*/
						} /*5942*/
					} else { /*5948*/
						if ($eq($geti($get($1.vals, 0), 0, 1), "9") && ((~~$z($get($1.vals, 1))) <= 99999)) { /*5949*/
							if ($1.ai310x) { /*5947*/
								$k[$j++] = "0111000"; /*5947*/
								$k[$j++] = false; /*5947*/
								break; /*5947*/
							} /*5947*/
							if ($1.ai320x) { /*5948*/
								$k[$j++] = "0111001"; /*5948*/
								$k[$j++] = false; /*5948*/
								break; /*5948*/
							} /*5948*/
						} /*5948*/
					} /*5948*/
				} /*5948*/
			} /*5948*/
			if ($1.ais.length >= 2) { /*5960*/
				$k[$j++] = "ai392x"; /*5956*/
				$k[$j++] = false; /*5956*/
				for (var _2Z = 3920; _2Z <= 3923; _2Z += 1) { /*5956*/
					var _2e = $k[--$j]; /*5956*/
					$k[$j++] = _2e || $eq($cvrs($s(4), _2Z, 10), $get($1.ais, 1)); /*5956*/
				} /*5956*/
				var _2f = $k[--$j]; /*5956*/
				$1[$k[--$j]] = _2f; /*5956*/
				if ($eq($get($1.ais, 0), "01") && $1.ai392x) { /*5959*/
					if ($eq($geti($get($1.vals, 0), 0, 1), "9")) { /*5958*/
						$k[$j++] = "01100"; /*5958*/
						$k[$j++] = true; /*5958*/
						break; /*5958*/
					} /*5958*/
				} /*5958*/
			} /*5958*/
			if ($1.ais.length >= 2) { /*5968*/
				$k[$j++] = "ai393x"; /*5964*/
				$k[$j++] = false; /*5964*/
				for (var _2o = 3930; _2o <= 3933; _2o += 1) { /*5964*/
					var _2t = $k[--$j]; /*5964*/
					$k[$j++] = _2t || $eq($cvrs($s(4), _2o, 10), $get($1.ais, 1)); /*5964*/
				} /*5964*/
				var _2u = $k[--$j]; /*5964*/
				$1[$k[--$j]] = _2u; /*5964*/
				if ($eq($get($1.ais, 0), "01") && $1.ai393x) { /*5967*/
					if ($eq($geti($get($1.vals, 0), 0, 1), "9")) { /*5966*/
						$k[$j++] = "01101"; /*5966*/
						$k[$j++] = true; /*5966*/
						break; /*5966*/
					} /*5966*/
				} /*5966*/
			} /*5966*/
			if ($eq($get($1.ais, 0), "01")) { /*5971*/
				$k[$j++] = "1"; /*5971*/
				$k[$j++] = true; /*5971*/
				break; /*5971*/
			} /*5971*/
			$k[$j++] = "00"; /*5974*/
			$k[$j++] = true; /*5974*/
			break; /*5974*/
		} /*5974*/
		$1.gpfallow = $k[--$j]; /*5977*/
		$1.method = $k[--$j]; /*5978*/
		$1.conv12to40 = function() {
			var _37 = $strcpy($s(40), "0000000000000000000000000000000000000000"); /*5981*/
			var _38 = $k[--$j]; /*5982*/
			var _3C = $cvrs($s(10), ~~$z($geti(_38, 0, 3)), 2); /*5982*/
			$puti($geti(_37, 0, 10), 10 - _3C.length, _3C); /*5982*/
			var _3G = $cvrs($s(10), ~~$z($geti(_38, 3, 3)), 2); /*5983*/
			$puti($geti(_37, 10, 10), 10 - _3G.length, _3G); /*5983*/
			var _3K = $cvrs($s(10), ~~$z($geti(_38, 6, 3)), 2); /*5984*/
			$puti($geti(_37, 20, 10), 10 - _3K.length, _3K); /*5984*/
			var _3O = $cvrs($s(10), ~~$z($geti(_38, 9, 3)), 2); /*5985*/
			$puti($geti(_37, 30, 10), 10 - _3O.length, _3O); /*5985*/
			$k[$j++] = _37; /*5986*/
		}; /*5987*/
		$1.conv13to44 = function() {
			var _3Q = $strcpy($s(44), "00000000000000000000000000000000000000000000"); /*5990*/
			var _3R = $k[--$j]; /*5991*/
			var _3V = $cvrs($s(4), ~~$z($geti(_3R, 0, 1)), 2); /*5991*/
			$puti($geti(_3Q, 0, 4), 4 - _3V.length, _3V); /*5991*/
			$k[$j++] = _3Q; /*5992*/
			$k[$j++] = _3Q; /*5992*/
			$k[$j++] = $geti(_3R, 1, 12); /*5992*/
			$1.conv12to40(); /*5992*/
			var _3X = $k[--$j]; /*5992*/
			$puti($k[--$j], 4, _3X); /*5992*/
		}; /*5993*/
		$1.tobin = function() {
			var _3a = $s($k[--$j]); /*5996*/
			$k[$j++] = _3a; /*5996*/
			for (var _3c = 0, _3b = _3a.length - 1; _3c <= _3b; _3c += 1) { /*5996*/
				var _3d = $k[--$j]; /*5996*/
				$put(_3d, _3c, 48); /*5996*/
				$k[$j++] = _3d; /*5996*/
			} /*5996*/
			var _3e = $k[--$j]; /*5997*/
			var _3h = $cvrs($s(_3e.length), $k[--$j], 2); /*5997*/
			$puti(_3e, _3e.length - _3h.length, _3h); /*5997*/
			$k[$j++] = _3e; /*5997*/
		}; /*5998*/
		if ($eq($1.method, "00")) { /*6003*/
			$1.cdf = $a([]); /*6001*/
			$1.gpf = $a([]); /*6002*/
		} /*6002*/
		if ($eq($1.method, "1")) { /*6011*/
			$k[$j++] = "cdf"; /*6006*/
			$k[$j++] = $geti($get($1.vals, 0), 0, 13); /*6006*/
			$1.conv13to44(); /*6006*/
			var _3p = $k[--$j]; /*6006*/
			$1[$k[--$j]] = _3p; /*6006*/
			$k[$j++] = Infinity; /*6007*/
			var _3r = $1.cdf; /*6007*/
			for (var _3s = 0, _3t = _3r.length; _3s < _3t; _3s++) { /*6007*/
				$k[$j++] = $get(_3r, _3s) - 48; /*6007*/
			} /*6007*/
			$1.cdf = $a(); /*6007*/
			$1.gpf = $a([]); /*6008*/
			$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*6009*/
			$1.vals = $geti($1.vals, 1, $1.vals.length - 1); /*6010*/
		} /*6010*/
		if ($eq($1.method, "0100")) { /*6021*/
			$1.cdf = $s(55); /*6014*/
			$k[$j++] = $1.cdf; /*6015*/
			$k[$j++] = 0; /*6015*/
			$k[$j++] = $geti($get($1.vals, 0), 1, 12); /*6015*/
			$1.conv12to40(); /*6015*/
			var _49 = $k[--$j]; /*6015*/
			var _4A = $k[--$j]; /*6015*/
			$puti($k[--$j], _4A, _49); /*6015*/
			$k[$j++] = $1.cdf; /*6016*/
			$k[$j++] = 40; /*6016*/
			$k[$j++] = ~~$z($get($1.vals, 1)); /*6016*/
			$k[$j++] = 15; /*6016*/
			$1.tobin(); /*6016*/
			var _4F = $k[--$j]; /*6016*/
			var _4G = $k[--$j]; /*6016*/
			$puti($k[--$j], _4G, _4F); /*6016*/
			$k[$j++] = Infinity; /*6017*/
			var _4I = $1.cdf; /*6017*/
			for (var _4J = 0, _4K = _4I.length; _4J < _4K; _4J++) { /*6017*/
				$k[$j++] = $get(_4I, _4J) - 48; /*6017*/
			} /*6017*/
			$1.cdf = $a(); /*6017*/
			$1.gpf = $a([]); /*6018*/
			$1.ais = $a([]); /*6019*/
			$1.vals = $a([]); /*6020*/
		} /*6020*/
		if ($eq($1.method, "0101")) { /*6036*/
			$1.cdf = $s(55); /*6024*/
			$k[$j++] = $1.cdf; /*6025*/
			$k[$j++] = 0; /*6025*/
			$k[$j++] = $geti($get($1.vals, 0), 1, 12); /*6025*/
			$1.conv12to40(); /*6025*/
			var _4W = $k[--$j]; /*6025*/
			var _4X = $k[--$j]; /*6025*/
			$puti($k[--$j], _4X, _4W); /*6025*/
			if ($eq($get($1.ais, 1), "3202")) { /*6029*/
				$k[$j++] = ~~$z($get($1.vals, 1)); /*6027*/
				$k[$j++] = 15; /*6027*/
				$1.tobin(); /*6027*/
			} else { /*6029*/
				$k[$j++] = (~~$z($get($1.vals, 1))) + 10000; /*6029*/
				$k[$j++] = 15; /*6029*/
				$1.tobin(); /*6029*/
			} /*6029*/
			$puti($1.cdf, 40, $k[--$j]); /*6031*/
			$k[$j++] = Infinity; /*6032*/
			var _4h = $1.cdf; /*6032*/
			for (var _4i = 0, _4j = _4h.length; _4i < _4j; _4i++) { /*6032*/
				$k[$j++] = $get(_4h, _4i) - 48; /*6032*/
			} /*6032*/
			$1.cdf = $a(); /*6032*/
			$1.gpf = $a([]); /*6033*/
			$1.ais = $a([]); /*6034*/
			$1.vals = $a([]); /*6035*/
		} /*6035*/
		if ($1.method.length == 7) { /*6057*/
			$1.cdf = $s(76); /*6039*/
			$k[$j++] = $1.cdf; /*6040*/
			$k[$j++] = 0; /*6040*/
			$k[$j++] = $geti($get($1.vals, 0), 1, 12); /*6040*/
			$1.conv12to40(); /*6040*/
			var _4v = $k[--$j]; /*6040*/
			var _4w = $k[--$j]; /*6040*/
			$puti($k[--$j], _4w, _4v); /*6040*/
			var _4y = $s(6); /*6041*/
			$puti(_4y, 0, $geti($get($1.ais, 1), 3, 1)); /*6041*/
			$puti(_4y, 1, $geti($get($1.vals, 1), 1, 5)); /*6042*/
			$k[$j++] = ~~$z(_4y); /*6042*/
			$k[$j++] = 20; /*6042*/
			$1.tobin(); /*6042*/
			$puti($1.cdf, 40, $k[--$j]); /*6043*/
			if ($1.ais.length == 3) { /*6050*/
				var _59 = $get($1.vals, 2); /*6045*/
				$k[$j++] = ((~~$z($geti(_59, 0, 2))) * 384) + ((((~~$z($geti(_59, 2, 2))) - 1) * 32) + (~~$z($geti(_59, 4, 2)))); /*6048*/
			} else { /*6050*/
				$k[$j++] = 38400; /*6050*/
			} /*6050*/
			$k[$j++] = 16; /*6052*/
			$1.tobin(); /*6052*/
			$puti($1.cdf, 60, $k[--$j]); /*6052*/
			$k[$j++] = Infinity; /*6053*/
			var _5F = $1.cdf; /*6053*/
			for (var _5G = 0, _5H = _5F.length; _5G < _5H; _5G++) { /*6053*/
				$k[$j++] = $get(_5F, _5G) - 48; /*6053*/
			} /*6053*/
			$1.cdf = $a(); /*6053*/
			$1.gpf = $a([]); /*6054*/
			$1.ais = $a([]); /*6055*/
			$1.vals = $a([]); /*6056*/
		} /*6056*/
		if ($eq($1.method, "01100")) { /*6067*/
			$1.cdf = $s(42); /*6060*/
			$k[$j++] = $1.cdf; /*6061*/
			$k[$j++] = 0; /*6061*/
			$k[$j++] = $geti($get($1.vals, 0), 1, 12); /*6061*/
			$1.conv12to40(); /*6061*/
			var _5T = $k[--$j]; /*6061*/
			var _5U = $k[--$j]; /*6061*/
			$puti($k[--$j], _5U, _5T); /*6061*/
			$k[$j++] = $1.cdf; /*6062*/
			$k[$j++] = 40; /*6062*/
			$k[$j++] = ~~$z($geti($get($1.ais, 1), 3, 1)); /*6062*/
			$k[$j++] = 2; /*6062*/
			$1.tobin(); /*6062*/
			var _5a = $k[--$j]; /*6062*/
			var _5b = $k[--$j]; /*6062*/
			$puti($k[--$j], _5b, _5a); /*6062*/
			$k[$j++] = Infinity; /*6063*/
			var _5d = $1.cdf; /*6063*/
			for (var _5e = 0, _5f = _5d.length; _5e < _5f; _5e++) { /*6063*/
				$k[$j++] = $get(_5d, _5e) - 48; /*6063*/
			} /*6063*/
			$1.cdf = $a(); /*6063*/
			$k[$j++] = Infinity; /*6064*/
			$forall($get($1.vals, 1)); /*6064*/
			$1.gpf = $a(); /*6064*/
			$1.ais = $geti($1.ais, 2, $1.ais.length - 2); /*6065*/
			$1.vals = $geti($1.vals, 2, $1.vals.length - 2); /*6066*/
		} /*6066*/
		if ($eq($1.method, "01101")) { /*6078*/
			$1.cdf = $s(52); /*6070*/
			$k[$j++] = $1.cdf; /*6071*/
			$k[$j++] = 0; /*6071*/
			$k[$j++] = $geti($get($1.vals, 0), 1, 12); /*6071*/
			$1.conv12to40(); /*6071*/
			var _5x = $k[--$j]; /*6071*/
			var _5y = $k[--$j]; /*6071*/
			$puti($k[--$j], _5y, _5x); /*6071*/
			$k[$j++] = $1.cdf; /*6072*/
			$k[$j++] = 40; /*6072*/
			$k[$j++] = ~~$z($geti($get($1.ais, 1), 3, 1)); /*6072*/
			$k[$j++] = 2; /*6072*/
			$1.tobin(); /*6072*/
			var _64 = $k[--$j]; /*6072*/
			var _65 = $k[--$j]; /*6072*/
			$puti($k[--$j], _65, _64); /*6072*/
			$k[$j++] = $1.cdf; /*6073*/
			$k[$j++] = 42; /*6073*/
			$k[$j++] = ~~$z($geti($get($1.vals, 1), 0, 3)); /*6073*/
			$k[$j++] = 10; /*6073*/
			$1.tobin(); /*6073*/
			var _6B = $k[--$j]; /*6073*/
			var _6C = $k[--$j]; /*6073*/
			$puti($k[--$j], _6C, _6B); /*6073*/
			$k[$j++] = Infinity; /*6074*/
			var _6E = $1.cdf; /*6074*/
			for (var _6F = 0, _6G = _6E.length; _6F < _6G; _6F++) { /*6074*/
				$k[$j++] = $get(_6E, _6F) - 48; /*6074*/
			} /*6074*/
			$1.cdf = $a(); /*6074*/
			$k[$j++] = Infinity; /*6075*/
			var _6K = $get($1.vals, 1); /*6075*/
			$forall($geti(_6K, 3, _6K.length - 3)); /*6075*/
			$1.gpf = $a(); /*6075*/
			$1.ais = $geti($1.ais, 2, $1.ais.length - 2); /*6076*/
			$1.vals = $geti($1.vals, 2, $1.vals.length - 2); /*6077*/
		} /*6077*/
		if ($1.gpfallow) { /*6084*/
			$1.vlf = $a(2); /*6082*/
		} else { /*6084*/
			$1.vlf = $a([]); /*6084*/
		} /*6084*/
		$1.aifixed = {}; /*6090*/
		$k[$j++] = Infinity; /*6092*/
		for (var _6W = 0; _6W <= 4; _6W += 1) { /*6092*/
			$k[$j++] = _6W; /*6092*/
		} /*6092*/
		var _6X = $a(); /*6092*/
		for (var _6Y = 0, _6Z = _6X.length; _6Y < _6Z; _6Y++) { /*6095*/
			var _6c = $strcpy($s(2), "00"); /*6094*/
			$put(_6c, 1, $get(_6X, _6Y) + 48); /*6094*/
			$put($1.aifixed, _6c, _6c); /*6094*/
		} /*6094*/
		$k[$j++] = Infinity; /*6100*/
		for (var _6e = 11; _6e <= 20; _6e += 1) { /*6097*/
			$k[$j++] = _6e; /*6097*/
		} /*6097*/
		$k[$j++] = 23; /*6099*/
		for (var _6f = 31; _6f <= 36; _6f += 1) { /*6099*/
			$k[$j++] = _6f; /*6099*/
		} /*6099*/
		$k[$j++] = 41; /*6100*/
		var _6g = $a(); /*6100*/
		for (var _6h = 0, _6i = _6g.length; _6h < _6i; _6h++) { /*6103*/
			var _6l = $cvrs($s(2), $get(_6g, _6h), 10); /*6102*/
			$put($1.aifixed, _6l, _6l); /*6102*/
		} /*6102*/
		$1.fnc1 = -1; /*6105*/
		$1.lnumeric = -2; /*6105*/
		$1.lalphanumeric = -3; /*6105*/
		$1.liso646 = -4; /*6105*/
		$k[$j++] = "numeric"; /*6117*/
		$k[$j++] = Infinity; /*6117*/
		for (var _6n = 0; _6n <= 119; _6n += 1) { /*6116*/
			var _6p = $strcpy($s(2), "00"); /*6109*/
			var _6r = $cvrs($s(2), _6n, 11); /*6109*/
			$puti(_6p, 2 - _6r.length, _6r); /*6110*/
			$k[$j++] = _6n; /*6111*/
			$k[$j++] = _6p; /*6111*/
			if ($get(_6p, 0) == 65) { /*6111*/
				var _6t = $k[--$j]; /*6111*/
				$put(_6t, 0, 94); /*6111*/
				$k[$j++] = _6t; /*6111*/
			} /*6111*/
			var _6u = $k[--$j]; /*6112*/
			$k[$j++] = _6u; /*6112*/
			if ($get(_6u, 1) == 65) { /*6112*/
				var _6w = $k[--$j]; /*6112*/
				$put(_6w, 1, 94); /*6112*/
				$k[$j++] = _6w; /*6112*/
			} /*6112*/
			var _6x = $k[--$j]; /*6113*/
			var _70 = $strcpy($s(7), "0000000"); /*6114*/
			var _72 = $cvrs($s(7), $k[--$j] + 8, 2); /*6114*/
			$puti(_70, 7 - _72.length, _72); /*6115*/
			$k[$j++] = _6x; /*6115*/
			$k[$j++] = _70; /*6115*/
		} /*6115*/
		$k[$j++] = $1.lalphanumeric; /*6117*/
		$k[$j++] = "0000"; /*6117*/
		var _74 = $d(); /*6117*/
		$1[$k[--$j]] = _74; /*6118*/
		$k[$j++] = "alphanumeric"; /*6127*/
		$k[$j++] = Infinity; /*6127*/
		for (var _76 = 48; _76 <= 57; _76 += 1) { /*6121*/
			$k[$j++] = _76; /*6121*/
			$k[$j++] = _76 - 43; /*6121*/
			$k[$j++] = 5; /*6121*/
			$1.tobin(); /*6121*/
		} /*6121*/
		$k[$j++] = $1.fnc1; /*6123*/
		$k[$j++] = "01111"; /*6123*/
		for (var _78 = 65; _78 <= 90; _78 += 1) { /*6123*/
			$k[$j++] = _78; /*6123*/
			$k[$j++] = _78 - 33; /*6123*/
			$k[$j++] = 6; /*6123*/
			$1.tobin(); /*6123*/
		} /*6123*/
		$k[$j++] = 42; /*6125*/
		$k[$j++] = "111010"; /*6125*/
		for (var _79 = 44; _79 <= 47; _79 += 1) { /*6125*/
			$k[$j++] = _79; /*6125*/
			$k[$j++] = _79 + 15; /*6125*/
			$k[$j++] = 6; /*6125*/
			$1.tobin(); /*6125*/
		} /*6125*/
		$k[$j++] = $1.lnumeric; /*6127*/
		$k[$j++] = "000"; /*6127*/
		$k[$j++] = $1.liso646; /*6127*/
		$k[$j++] = "00100"; /*6127*/
		var _7C = $d(); /*6127*/
		$1[$k[--$j]] = _7C; /*6128*/
		$k[$j++] = "iso646"; /*6142*/
		$k[$j++] = Infinity; /*6142*/
		for (var _7E = 48; _7E <= 57; _7E += 1) { /*6131*/
			$k[$j++] = _7E; /*6131*/
			$k[$j++] = _7E - 43; /*6131*/
			$k[$j++] = 5; /*6131*/
			$1.tobin(); /*6131*/
		} /*6131*/
		$k[$j++] = $1.fnc1; /*6133*/
		$k[$j++] = "01111"; /*6133*/
		for (var _7G = 65; _7G <= 90; _7G += 1) { /*6133*/
			$k[$j++] = _7G; /*6133*/
			$k[$j++] = _7G - 1; /*6133*/
			$k[$j++] = 7; /*6133*/
			$1.tobin(); /*6133*/
		} /*6133*/
		for (var _7H = 97; _7H <= 122; _7H += 1) { /*6134*/
			$k[$j++] = _7H; /*6134*/
			$k[$j++] = _7H - 7; /*6134*/
			$k[$j++] = 7; /*6134*/
			$1.tobin(); /*6134*/
		} /*6134*/
		$k[$j++] = 33; /*6137*/
		$k[$j++] = "11101000"; /*6137*/
		$k[$j++] = 34; /*6137*/
		$k[$j++] = "11101001"; /*6137*/
		for (var _7I = 37; _7I <= 47; _7I += 1) { /*6137*/
			$k[$j++] = _7I; /*6137*/
			$k[$j++] = _7I + 197; /*6137*/
			$k[$j++] = 8; /*6137*/
			$1.tobin(); /*6137*/
		} /*6137*/
		for (var _7J = 58; _7J <= 63; _7J += 1) { /*6138*/
			$k[$j++] = _7J; /*6138*/
			$k[$j++] = _7J + 187; /*6138*/
			$k[$j++] = 8; /*6138*/
			$1.tobin(); /*6138*/
		} /*6138*/
		$k[$j++] = 95; /*6142*/
		$k[$j++] = "11111011"; /*6142*/
		$k[$j++] = 32; /*6142*/
		$k[$j++] = "11111100"; /*6142*/
		$k[$j++] = $1.lnumeric; /*6142*/
		$k[$j++] = "000"; /*6142*/
		$k[$j++] = $1.lalphanumeric; /*6142*/
		$k[$j++] = "00100"; /*6142*/
		var _7M = $d(); /*6142*/
		$1[$k[--$j]] = _7M; /*6143*/
		for (var _7Q = 0, _7P = $1.ais.length - 1; _7Q <= _7P; _7Q += 1) { /*6161*/
			$1.i = _7Q; /*6147*/
			$1.ai = $get($1.ais, $1.i); /*6148*/
			$1.val = $get($1.vals, $1.i); /*6149*/
			var _7a = $a(($1.gpf.length + $1.ai.length) + $1.val.length); /*6150*/
			$puti(_7a, 0, $1.gpf); /*6151*/
			$k[$j++] = _7a; /*6152*/
			$k[$j++] = _7a; /*6152*/
			$k[$j++] = $1.gpf.length; /*6152*/
			$k[$j++] = $1.ai; /*6152*/
			$k[$j++] = Infinity; /*6152*/
			var _7e = $k[--$j]; /*6152*/
			var _7f = $k[--$j]; /*6152*/
			$k[$j++] = _7e; /*6152*/
			$forall(_7f); /*6152*/
			var _7g = $a(); /*6152*/
			var _7h = $k[--$j]; /*6152*/
			$puti($k[--$j], _7h, _7g); /*6152*/
			var _7j = $k[--$j]; /*6153*/
			$k[$j++] = _7j; /*6153*/
			$k[$j++] = _7j; /*6153*/
			$k[$j++] = $1.gpf.length + $1.ai.length; /*6153*/
			$k[$j++] = $1.val; /*6153*/
			$k[$j++] = Infinity; /*6153*/
			var _7n = $k[--$j]; /*6153*/
			var _7o = $k[--$j]; /*6153*/
			$k[$j++] = _7n; /*6153*/
			$forall(_7o); /*6153*/
			var _7p = $a(); /*6153*/
			var _7q = $k[--$j]; /*6153*/
			$puti($k[--$j], _7q, _7p); /*6153*/
			$1.gpf = $k[--$j]; /*6154*/
			var _7y = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*6155*/
			if (($1.i != ($1.ais.length - 1)) && (!_7y)) { /*6160*/
				var _80 = $a($1.gpf.length + 1); /*6156*/
				$puti(_80, 0, $1.gpf); /*6157*/
				$put(_80, $1.gpf.length, $1.fnc1); /*6158*/
				$1.gpf = _80; /*6159*/
			} /*6159*/
		} /*6159*/
		$1.rembits = function() {
			var _84 = $k[--$j]; /*6165*/
			var _85 = 48; /*6167*/
			var _86 = (~~Math.ceil(_84 / 12)) * 12; /*6167*/
			if (((~~Math.ceil(_84 / 12)) * 12) < 48) { /*6167*/
				var _ = _85; /*6167*/
				_85 = _86; /*6167*/
				_86 = _; /*6167*/
			} /*6167*/
			var _87 = ~~(_86 / 12); /*6168*/
			$k[$j++] = _84; /*6172*/
			$k[$j++] = _86; /*6172*/
			$k[$j++] = _87; /*6172*/
			if ((_87 % $1.segments) == 1) { /*6171*/
				var _89 = $k[--$j]; /*6169*/
				var _8A = $k[--$j]; /*6169*/
				$k[$j++] = (_89 + 1) * 12; /*6169*/
			} else { /*6171*/
				$j--; /*6171*/
			} /*6171*/
			var _8B = $k[--$j]; /*6173*/
			var _8C = $k[--$j]; /*6173*/
			$k[$j++] = _8B - _8C; /*6173*/
		}; /*6174*/
		$1.encode = function() {
			var _8D = $k[--$j]; /*6177*/
			$k[$j++] = _8D; /*6177*/
			if ($ne(_8D, "raw")) { /*6177*/
				var _8E = $k[--$j]; /*6177*/
				var _8G = $get(_8E, $k[--$j]); /*6177*/
				$k[$j++] = _8G; /*6177*/
			} else { /*6177*/
				$j--; /*6177*/
			} /*6177*/
			$k[$j++] = Infinity; /*6178*/
			var _8H = $k[--$j]; /*6178*/
			var _8I = $k[--$j]; /*6178*/
			$k[$j++] = _8H; /*6178*/
			$forall(_8I, function() { /*6178*/
				var _8J = $k[--$j]; /*6178*/
				$k[$j++] = _8J - 48; /*6178*/
			}); /*6178*/
			var _8K = $a(); /*6178*/
			$puti($1.gpfenc, $1.j, _8K); /*6180*/
			$1.j = _8K.length + $1.j; /*6181*/
		}; /*6182*/
		$k[$j++] = Infinity; /*6185*/
		for (var _8P = 0, _8Q = $1.gpf.length; _8P < _8Q; _8P++) { /*6185*/
			$k[$j++] = 0; /*6185*/
		} /*6185*/
		$k[$j++] = 0; /*6185*/
		$k[$j++] = -1; /*6185*/
		$1.numericruns = $a(); /*6185*/
		$k[$j++] = Infinity; /*6186*/
		for (var _8T = 0, _8U = $1.gpf.length; _8T < _8U; _8T++) { /*6186*/
			$k[$j++] = 0; /*6186*/
		} /*6186*/
		$k[$j++] = 0; /*6186*/
		$1.alphanumericruns = $a(); /*6186*/
		$k[$j++] = Infinity; /*6187*/
		for (var _8X = 0, _8Y = $1.gpf.length; _8X < _8Y; _8X++) { /*6187*/
			$k[$j++] = 0; /*6187*/
		} /*6187*/
		$k[$j++] = 9999; /*6187*/
		$1.nextiso646only = $a(); /*6187*/
		for (var _8b = $1.gpf.length - 1; _8b >= 0; _8b -= 1) { /*6209*/
			$1.i = _8b; /*6189*/
			var _8g = $strcpy($s(2), "00"); /*6191*/
			var _8j = $get($1.gpf, $1.i); /*6192*/
			$k[$j++] = $get($1.gpf, $1.i); /*6192*/
			$k[$j++] = _8g; /*6192*/
			$k[$j++] = _8g; /*6192*/
			$k[$j++] = 0; /*6192*/
			$k[$j++] = _8j; /*6192*/
			if (_8j == $1.fnc1) { /*6192*/
				$j--; /*6192*/
				$k[$j++] = 94; /*6192*/
			} /*6192*/
			var _8l = $k[--$j]; /*6192*/
			var _8m = $k[--$j]; /*6192*/
			$put($k[--$j], _8m, _8l); /*6192*/
			if ($1.i < ($1.gpf.length - 1)) { /*6193*/
				var _8q = $k[--$j]; /*6193*/
				var _8t = $get($1.gpf, $1.i + 1); /*6193*/
				$k[$j++] = _8q; /*6193*/
				$k[$j++] = _8q; /*6193*/
				$k[$j++] = 1; /*6193*/
				$k[$j++] = _8t; /*6193*/
				if (_8t == $1.fnc1) { /*6193*/
					$j--; /*6193*/
					$k[$j++] = 94; /*6193*/
				} /*6193*/
				var _8v = $k[--$j]; /*6193*/
				var _8w = $k[--$j]; /*6193*/
				$put($k[--$j], _8w, _8v); /*6193*/
			} /*6193*/
			var _90 = $get($1.numeric, $k[--$j]) !== undefined; /*6194*/
			if (_90) { /*6197*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 2) + 2); /*6195*/
			} else { /*6197*/
				$put($1.numericruns, $1.i, 0); /*6197*/
			} /*6197*/
			var _98 = $k[--$j]; /*6199*/
			var _9A = $get($1.alphanumeric, _98) !== undefined; /*6199*/
			$k[$j++] = _98; /*6203*/
			if (_9A) { /*6202*/
				$put($1.alphanumericruns, $1.i, $get($1.alphanumericruns, $1.i + 1) + 1); /*6200*/
			} else { /*6202*/
				$put($1.alphanumericruns, $1.i, 0); /*6202*/
			} /*6202*/
			var _9I = $k[--$j]; /*6204*/
			var _9K = $get($1.iso646, _9I) !== undefined; /*6204*/
			var _9M = $get($1.alphanumeric, _9I) !== undefined; /*6204*/
			if (_9K && (!_9M)) { /*6207*/
				$put($1.nextiso646only, $1.i, 0); /*6205*/
			} else { /*6207*/
				$put($1.nextiso646only, $1.i, $get($1.nextiso646only, $1.i + 1) + 1); /*6207*/
			} /*6207*/
		} /*6207*/
		$1.gpfenc = $a(252); /*6212*/
		$1.i = 0; /*6213*/
		$1.j = 0; /*6213*/
		$1.mode = "numeric"; /*6213*/
		for (;;) { /*6303*/
			if ($1.i == $1.gpf.length) { /*6215*/
				break; /*6215*/
			} /*6215*/
			for (;;) { /*6302*/
				if ($eq($1.mode, "numeric")) { /*6251*/
					if ($1.i <= ($1.gpf.length - 2)) { /*6248*/
						var _9a = $s(2); /*6220*/
						var _9d = $get($1.gpf, $1.i); /*6221*/
						$k[$j++] = _9a; /*6221*/
						$k[$j++] = _9a; /*6221*/
						$k[$j++] = 0; /*6221*/
						$k[$j++] = _9d; /*6221*/
						if (_9d == $1.fnc1) { /*6221*/
							$j--; /*6221*/
							$k[$j++] = 94; /*6221*/
						} /*6221*/
						var _9f = $k[--$j]; /*6221*/
						var _9g = $k[--$j]; /*6221*/
						$put($k[--$j], _9g, _9f); /*6221*/
						var _9i = $k[--$j]; /*6222*/
						var _9l = $get($1.gpf, $1.i + 1); /*6222*/
						$k[$j++] = _9i; /*6222*/
						$k[$j++] = _9i; /*6222*/
						$k[$j++] = 1; /*6222*/
						$k[$j++] = _9l; /*6222*/
						if (_9l == $1.fnc1) { /*6222*/
							$j--; /*6222*/
							$k[$j++] = 94; /*6222*/
						} /*6222*/
						var _9n = $k[--$j]; /*6222*/
						var _9o = $k[--$j]; /*6222*/
						$put($k[--$j], _9o, _9n); /*6222*/
						var _9q = $k[--$j]; /*6223*/
						var _9s = $get($1.numeric, _9q) !== undefined; /*6223*/
						$k[$j++] = _9q; /*6227*/
						if (_9s) { /*6227*/
							$k[$j++] = $1.numeric; /*6224*/
							$1.encode(); /*6224*/
							$1.i = $1.i + 2; /*6225*/
							break; /*6226*/
						} /*6226*/
						$j--; /*6228*/
						$k[$j++] = $1.lalphanumeric; /*6229*/
						$k[$j++] = $1.numeric; /*6229*/
						$1.encode(); /*6229*/
						$1.mode = "alphanumeric"; /*6230*/
						break; /*6231*/
					} else { /*6248*/
						var _9z = $get($1.gpf, $1.i); /*6233*/
						if ((_9z < 48) || (_9z > 57)) { /*6237*/
							$k[$j++] = $1.lalphanumeric; /*6234*/
							$k[$j++] = $1.numeric; /*6234*/
							$1.encode(); /*6234*/
							$1.mode = "alphanumeric"; /*6235*/
							break; /*6236*/
						} /*6236*/
						$k[$j++] = "rem"; /*6238*/
						$k[$j++] = ((((12 + 1) + $1.method.length) + $1.vlf.length) + $1.cdf.length) + $1.j; /*6238*/
						$1.rembits(); /*6238*/
						var _A6 = $k[--$j]; /*6238*/
						$1[$k[--$j]] = _A6; /*6238*/
						if (($1.rem >= 4) && ($1.rem <= 6)) { /*6248*/
							var _AD = $geti($strcpy($s(6), "000000"), 0, $1.rem); /*6240*/
							var _AI = $cvrs($s(4), $get($1.gpf, $1.i) - 47, 2); /*6241*/
							$puti(_AD, 4 - _AI.length, _AI); /*6242*/
							$k[$j++] = _AD; /*6242*/
							$k[$j++] = "raw"; /*6242*/
							$1.encode(); /*6242*/
							$1.i = $1.i + 1; /*6243*/
							break; /*6244*/
						} else { /*6248*/
							var _AK = $s(2); /*6246*/
							$put(_AK, 0, $get($1.gpf, $1.i)); /*6246*/
							$put(_AK, 1, 94); /*6246*/
							$k[$j++] = _AK; /*6246*/
							$k[$j++] = $1.numeric; /*6246*/
							$1.encode(); /*6246*/
							$1.i = $1.i + 1; /*6247*/
							break; /*6248*/
						} /*6248*/
					} /*6248*/
				} /*6248*/
				if ($eq($1.mode, "alphanumeric")) { /*6278*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*6259*/
						$k[$j++] = $1.fnc1; /*6255*/
						$k[$j++] = $1.alphanumeric; /*6255*/
						$1.encode(); /*6255*/
						$1.mode = "numeric"; /*6256*/
						$1.i = $1.i + 1; /*6257*/
						break; /*6258*/
					} /*6258*/
					var _Aa = $get($1.gpf, $1.i); /*6260*/
					var _Ac = $get($1.iso646, _Aa) !== undefined; /*6260*/
					var _Ae = $get($1.alphanumeric, _Aa) !== undefined; /*6260*/
					if (_Ac && (!_Ae)) { /*6264*/
						$k[$j++] = $1.liso646; /*6261*/
						$k[$j++] = $1.alphanumeric; /*6261*/
						$1.encode(); /*6261*/
						$1.mode = "iso646"; /*6262*/
						break; /*6263*/
					} /*6263*/
					if ($get($1.numericruns, $1.i) >= 6) { /*6269*/
						$k[$j++] = $1.lnumeric; /*6266*/
						$k[$j++] = $1.alphanumeric; /*6266*/
						$1.encode(); /*6266*/
						$1.mode = "numeric"; /*6267*/
						break; /*6268*/
					} /*6268*/
					var _Ao = $get($1.numericruns, $1.i); /*6270*/
					if ((_Ao >= 4) && ((_Ao + $1.i) == $1.gpf.length)) { /*6274*/
						$k[$j++] = $1.lnumeric; /*6271*/
						$k[$j++] = $1.alphanumeric; /*6271*/
						$1.encode(); /*6271*/
						$1.mode = "numeric"; /*6272*/
						break; /*6273*/
					} /*6273*/
					$k[$j++] = $get($1.gpf, $1.i); /*6275*/
					$k[$j++] = $1.alphanumeric; /*6275*/
					$1.encode(); /*6275*/
					$1.i = $1.i + 1; /*6276*/
					break; /*6277*/
				} /*6277*/
				if ($eq($1.mode, "iso646")) { /*6300*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*6286*/
						$k[$j++] = $1.fnc1; /*6282*/
						$k[$j++] = $1.iso646; /*6282*/
						$1.encode(); /*6282*/
						$1.mode = "numeric"; /*6283*/
						$1.i = $1.i + 1; /*6284*/
						break; /*6285*/
					} /*6285*/
					if (($get($1.numericruns, $1.i) >= 4) && ($get($1.nextiso646only, $1.i) >= 10)) { /*6291*/
						$k[$j++] = $1.lnumeric; /*6288*/
						$k[$j++] = $1.iso646; /*6288*/
						$1.encode(); /*6288*/
						$1.mode = "numeric"; /*6289*/
						break; /*6290*/
					} /*6290*/
					if (($get($1.alphanumericruns, $1.i) >= 5) && ($get($1.nextiso646only, $1.i) >= 10)) { /*6296*/
						$k[$j++] = $1.lalphanumeric; /*6293*/
						$k[$j++] = $1.iso646; /*6293*/
						$1.encode(); /*6293*/
						$1.mode = "alphanumeric"; /*6294*/
						break; /*6295*/
					} /*6295*/
					$k[$j++] = $get($1.gpf, $1.i); /*6297*/
					$k[$j++] = $1.iso646; /*6297*/
					$1.encode(); /*6297*/
					$1.i = $1.i + 1; /*6298*/
					break; /*6299*/
				} /*6299*/
			} /*6299*/
		} /*6299*/
		$1.gpf = $geti($1.gpfenc, 0, $1.j); /*6304*/
		var _BY = ((((1 + 12) + $1.method.length) + $1.vlf.length) + $1.cdf.length) + $1.gpf.length; /*6308*/
		$k[$j++] = _BY; /*6308*/
		$k[$j++] = _BY; /*6308*/
		$1.rembits(); /*6308*/
		var _BZ = $k[--$j]; /*6308*/
		$1.pad = $a(_BZ); /*6308*/
		$k[$j++] = _BZ; /*6315*/
		if ($1.vlf.length != 0) { /*6314*/
			var _Bc = $k[--$j]; /*6310*/
			var _Be = ~~(($k[--$j] + _Bc) / 12); /*6311*/
			$put($1.vlf, 0, _Be % 2); /*6311*/
			var _Bg = (_Be <= 14) ? 0 : 1; /*6312*/
			$put($1.vlf, 1, _Bg); /*6312*/
		} else { /*6314*/
			$j -= 2; /*6314*/
		} /*6314*/
		if ($1.pad.length > 0) { /*6324*/
			for (var _Bl = 0, _Bk = $1.pad.length - 1; _Bl <= _Bk; _Bl += 5) { /*6320*/
				$1.i = _Bl; /*6318*/
				var _Bm = $1.pad; /*6319*/
				var _Bn = $1.i; /*6319*/
				var _Bo = $a([0, 0, 1, 0, 0]); /*6319*/
				var _Bp = $1.pad; /*6319*/
				var _Bq = $1.i; /*6319*/
				var _Br = 5; /*6319*/
				var _Bs = _Bp.length - _Bq; /*6319*/
				if ((_Bp.length - _Bq) > 5) { /*6319*/
					var _ = _Br; /*6319*/
					_Br = _Bs; /*6319*/
					_Bs = _; /*6319*/
				} /*6319*/
				$puti(_Bm, _Bn, $geti(_Bo, 0, _Bs)); /*6319*/
			} /*6319*/
			if ($eq($1.mode, "numeric")) { /*6323*/
				$k[$j++] = "pad"; /*6322*/
				$k[$j++] = Infinity; /*6322*/
				$k[$j++] = 0; /*6322*/
				$k[$j++] = 0; /*6322*/
				$k[$j++] = 0; /*6322*/
				$k[$j++] = 0; /*6322*/
				$aload($1.pad); /*6322*/
				var _By = $geti($a(), 0, $1.pad.length); /*6322*/
				$1[$k[--$j]] = _By; /*6322*/
			} /*6322*/
		} /*6322*/
		$k[$j++] = Infinity; /*6334*/
		var _C1 = $1.linkage ? 1 : 0; /*6328*/
		$k[$j++] = _C1; /*6329*/
		$forall($1.method, function() { /*6329*/
			var _C3 = $k[--$j]; /*6329*/
			$k[$j++] = _C3 - 48; /*6329*/
		}); /*6329*/
		$aload($1.vlf); /*6330*/
		$aload($1.cdf); /*6331*/
		$aload($1.gpf); /*6332*/
		$aload($1.pad); /*6333*/
		$1.binval = $a(); /*6334*/
		$1.datalen = ~~($1.binval.length / 12); /*6335*/
		$1.ncr = function() {
			var _CA = $k[--$j]; /*6338*/
			var _CB = $k[--$j]; /*6338*/
			var _CC = _CB - _CA; /*6338*/
			if (_CA < (_CB - _CA)) { /*6338*/
				var _ = _CC; /*6338*/
				_CC = _CA; /*6338*/
				_CA = _; /*6338*/
			} /*6338*/
			$k[$j++] = _CC; /*6345*/
			$k[$j++] = 1; /*6345*/
			$k[$j++] = 1; /*6345*/
			for (var _CE = _CB, _CD = _CA + 1; _CE >= _CD; _CE -= 1) { /*6345*/
				var _CF = $k[--$j]; /*6341*/
				var _CG = $k[--$j]; /*6342*/
				var _CH = $k[--$j]; /*6342*/
				$k[$j++] = _CH; /*6344*/
				$k[$j++] = _CG; /*6344*/
				$k[$j++] = _CF * _CE; /*6344*/
				if ($le(_CG, _CH)) { /*6344*/
					var _CI = $k[--$j]; /*6343*/
					var _CJ = $k[--$j]; /*6343*/
					$k[$j++] = _CJ + 1; /*6343*/
					$k[$j++] = ~~(_CI / _CJ); /*6343*/
				} /*6343*/
			} /*6343*/
			for (;;) { /*6349*/
				var _CK = $k[--$j]; /*6347*/
				var _CL = $k[--$j]; /*6347*/
				var _CM = $k[--$j]; /*6347*/
				$k[$j++] = _CM; /*6347*/
				$k[$j++] = _CL; /*6347*/
				$k[$j++] = _CK; /*6347*/
				if ($gt(_CL, _CM)) { /*6347*/
					break; /*6347*/
				} /*6347*/
				var _CN = $k[--$j]; /*6348*/
				var _CO = $k[--$j]; /*6348*/
				$k[$j++] = _CO + 1; /*6348*/
				$k[$j++] = ~~(_CN / _CO); /*6348*/
			} /*6348*/
			var _CP = $k[--$j]; /*6350*/
			var _CQ = $k[--$j]; /*6350*/
			var _CR = $k[--$j]; /*6350*/
			$k[$j++] = _CP; /*6350*/
		}; /*6351*/
		$1.getRSSwidths = function() {
			$1.oe = $k[--$j]; /*6354*/
			$1.el = $k[--$j]; /*6355*/
			$1.mw = $k[--$j]; /*6356*/
			$1.nm = $k[--$j]; /*6357*/
			$1.val = $k[--$j]; /*6358*/
			$1.out = $a($1.el); /*6359*/
			$1.mask = 0; /*6360*/
			for (var _Cb = 0, _Ca = $1.el - 2; _Cb <= _Ca; _Cb += 1) { /*6387*/
				$1.bar = _Cb; /*6362*/
				$1.ew = 1; /*6363*/
				var _Cd = $1.bar; /*6364*/
				$1.mask = $1.mask | ((_Cd < 0 ? 1 >>> -_Cd : 1 << _Cd)); /*6364*/
				for (;;) { /*6383*/
					$k[$j++] = "sval"; /*6365*/
					$k[$j++] = ($1.nm - $1.ew) - 1; /*6365*/
					$k[$j++] = ($1.el - $1.bar) - 2; /*6365*/
					$1.ncr(); /*6365*/
					var _Ci = $k[--$j]; /*6365*/
					$1[$k[--$j]] = _Ci; /*6365*/
					if (($1.oe && ($1.mask == 0)) && (((($1.nm - $1.ew) - ($1.el * 2)) + ($1.bar * 2)) >= -2)) { /*6368*/
						$k[$j++] = "sval"; /*6367*/
						$k[$j++] = $1.sval; /*6367*/
						$k[$j++] = (($1.nm - $1.ew) - $1.el) + $1.bar; /*6367*/
						$k[$j++] = ($1.el - $1.bar) - 2; /*6367*/
						$1.ncr(); /*6367*/
						var _Cx = $k[--$j]; /*6367*/
						var _Cy = $k[--$j]; /*6367*/
						$1[$k[--$j]] = _Cy - _Cx; /*6367*/
					} /*6367*/
					if (($1.el - $1.bar) > 2) { /*6377*/
						$1.lval = 0; /*6370*/
						for (var _D8 = ((($1.nm - $1.ew) - $1.el) + $1.bar) + 2, _D7 = $1.mw + 1; _D8 >= _D7; _D8 -= 1) { /*6374*/
							$k[$j++] = (($1.nm - _D8) - $1.ew) - 1; /*6372*/
							$k[$j++] = ($1.el - $1.bar) - 3; /*6372*/
							$1.ncr(); /*6372*/
							$1.lval = $k[--$j] + $1.lval; /*6373*/
						} /*6373*/
						$1.sval = $1.sval - ($1.lval * (($1.el - $1.bar) - 1)); /*6375*/
					} else { /*6377*/
						if (($1.nm - $1.ew) > $1.mw) { /*6377*/
							$1.sval = $1.sval - 1; /*6377*/
						} /*6377*/
					} /*6377*/
					$1.val = $1.val - $1.sval; /*6379*/
					if ($1.val < 0) { /*6380*/
						break; /*6380*/
					} /*6380*/
					$1.ew = $1.ew + 1; /*6381*/
					var _DS = $1.bar; /*6382*/
					$1.mask = $1.mask & (~((_DS < 0 ? 1 >>> -_DS : 1 << _DS))); /*6382*/
				} /*6382*/
				$1.val = $1.val + $1.sval; /*6384*/
				$1.nm = $1.nm - $1.ew; /*6385*/
				$put($1.out, $1.bar, $1.ew); /*6386*/
			} /*6386*/
			$put($1.out, $1.el - 1, $1.nm); /*6388*/
			$k[$j++] = $1.out; /*6389*/
		}; /*6390*/
		$1.tab174 = $a([347, 0, 12, 5, 7, 2, 87, 4, 1387, 348, 10, 7, 5, 4, 52, 20, 2947, 1388, 8, 9, 4, 5, 30, 52, 3987, 2948, 6, 11, 3, 6, 10, 104, 4191, 3988, 4, 13, 1, 8, 1, 204]); /*6398*/
		$1.dxw = $a($1.datalen); /*6400*/
		for (var _Dj = 0, _Di = $1.datalen - 1; _Dj <= _Di; _Dj += 1) { /*6441*/
			$1.x = _Dj; /*6404*/
			$1.d = $geti($1.binval, $1.x * 12, 12); /*6406*/
			$k[$j++] = "d"; /*6407*/
			$k[$j++] = 0; /*6407*/
			for (var _Dn = 0; _Dn <= 11; _Dn += 1) { /*6407*/
				$1.j = _Dn; /*6407*/
				var _Ds = $k[--$j]; /*6407*/
				$k[$j++] = _Ds + ((~~Math.pow(2, 11 - $1.j)) * $get($1.d, $1.j)); /*6407*/
			} /*6407*/
			var _Dt = $k[--$j]; /*6407*/
			$1[$k[--$j]] = _Dt; /*6407*/
			$1.j = 0; /*6409*/
			for (;;) { /*6419*/
				if ($le($1.d, $get($1.tab174, $1.j))) { /*6417*/
					$forall($geti($1.tab174, $1.j + 1, 7)); /*6411*/
					$1.dte = $k[--$j]; /*6412*/
					$1.dto = $k[--$j]; /*6412*/
					$1.dmwe = $k[--$j]; /*6413*/
					$1.dmwo = $k[--$j]; /*6413*/
					$1.dele = $k[--$j]; /*6414*/
					$1.delo = $k[--$j]; /*6414*/
					$1.dgs = $k[--$j]; /*6415*/
					break; /*6416*/
				} /*6416*/
				$1.j = $1.j + 8; /*6418*/
			} /*6418*/
			$k[$j++] = "dwo"; /*6421*/
			$k[$j++] = ~~(($1.d - $1.dgs) / $1.dte); /*6421*/
			$k[$j++] = $1.delo; /*6421*/
			$k[$j++] = $1.dmwo; /*6421*/
			$k[$j++] = 4; /*6421*/
			$k[$j++] = true; /*6421*/
			$1.getRSSwidths(); /*6421*/
			var _EF = $k[--$j]; /*6421*/
			$1[$k[--$j]] = _EF; /*6421*/
			$k[$j++] = "dwe"; /*6422*/
			$k[$j++] = ($1.d - $1.dgs) % $1.dte; /*6422*/
			$k[$j++] = $1.dele; /*6422*/
			$k[$j++] = $1.dmwe; /*6422*/
			$k[$j++] = 4; /*6422*/
			$k[$j++] = false; /*6422*/
			$1.getRSSwidths(); /*6422*/
			var _EM = $k[--$j]; /*6422*/
			$1[$k[--$j]] = _EM; /*6422*/
			$1.dw = $a(8); /*6424*/
			if (($1.x % 2) == 0) { /*6435*/
				for (var _EQ = 0; _EQ <= 3; _EQ += 1) { /*6430*/
					$1.j = _EQ; /*6427*/
					$put($1.dw, 7 - ($1.j * 2), $get($1.dwo, $1.j)); /*6428*/
					$put($1.dw, 6 - ($1.j * 2), $get($1.dwe, $1.j)); /*6429*/
				} /*6429*/
			} else { /*6435*/
				for (var _Eb = 0; _Eb <= 3; _Eb += 1) { /*6436*/
					$1.j = _Eb; /*6433*/
					$put($1.dw, $1.j * 2, $get($1.dwo, $1.j)); /*6434*/
					$put($1.dw, ($1.j * 2) + 1, $get($1.dwe, $1.j)); /*6435*/
				} /*6435*/
			} /*6435*/
			$put($1.dxw, $1.x, $1.dw); /*6439*/
		} /*6439*/
		$1.finderwidths = $a([1, 8, 4, 1, 1, 1, 1, 4, 8, 1, 3, 6, 4, 1, 1, 1, 1, 4, 6, 3, 3, 4, 6, 1, 1, 1, 1, 6, 4, 3, 3, 2, 8, 1, 1, 1, 1, 8, 2, 3, 2, 6, 5, 1, 1, 1, 1, 5, 6, 2, 2, 2, 9, 1, 1, 1, 1, 9, 2, 2]); /*6450*/
		$1.finderseq = $a([$a([0, 1]), $a([0, 3, 2]), $a([0, 5, 2, 7]), $a([0, 9, 2, 7, 4]), $a([0, 9, 2, 7, 6, 11]), $a([0, 9, 2, 7, 8, 11, 10]), $a([0, 1, 2, 3, 4, 5, 6, 7]), $a([0, 1, 2, 3, 4, 5, 6, 9, 8]), $a([0, 1, 2, 3, 4, 5, 6, 9, 10, 11]), $a([0, 1, 2, 3, 4, 7, 6, 9, 8, 11, 10])]); /*6463*/
		$1.seq = $get($1.finderseq, ~~(($1.datalen - 2) / 2)); /*6465*/
		$1.fxw = $a($1.seq.length); /*6466*/
		for (var _F8 = 0, _F7 = $1.seq.length - 1; _F8 <= _F7; _F8 += 1) { /*6470*/
			$1.x = _F8; /*6468*/
			$put($1.fxw, $1.x, $geti($1.finderwidths, $get($1.seq, $1.x) * 5, 5)); /*6469*/
		} /*6469*/
		$1.checkweights = $a([-1, -1, -1, -1, -1, -1, -1, -1, 77, 96, 32, 81, 27, 9, 3, 1, 20, 60, 180, 118, 143, 7, 21, 63, 205, 209, 140, 117, 39, 13, 145, 189, 193, 157, 49, 147, 19, 57, 171, 91, 132, 44, 85, 169, 197, 136, 186, 62, 185, 133, 188, 142, 4, 12, 36, 108, 50, 87, 29, 80, 97, 173, 128, 113, 150, 28, 84, 41, 123, 158, 52, 156, 166, 196, 206, 139, 187, 203, 138, 46, 76, 17, 51, 153, 37, 111, 122, 155, 146, 119, 110, 107, 106, 176, 129, 43, 16, 48, 144, 10, 30, 90, 59, 177, 164, 125, 112, 178, 200, 137, 116, 109, 70, 210, 208, 202, 184, 130, 179, 115, 190, 204, 68, 93, 31, 151, 191, 134, 148, 22, 66, 198, 172, 94, 71, 2, 40, 154, 192, 64, 162, 54, 18, 6, 120, 149, 25, 75, 14, 42, 126, 167, 175, 199, 207, 69, 23, 78, 26, 79, 103, 98, 83, 38, 114, 131, 182, 124, 159, 53, 88, 170, 127, 183, 61, 161, 55, 165, 73, 8, 24, 72, 5, 15, 89, 100, 174, 58, 160, 194, 135, 45]); /*6497*/
		$k[$j++] = "checkweightseq"; /*6501*/
		$k[$j++] = Infinity; /*6501*/
		$forall($1.seq, function() { /*6500*/
			$aload($geti($1.checkweights, $k[--$j] * 16, 16)); /*6500*/
		}); /*6500*/
		var _FL = $a(); /*6501*/
		$1[$k[--$j]] = $geti(_FL, 8, _FL.length - 8); /*6501*/
		$k[$j++] = Infinity; /*6505*/
		var _FO = $1.dxw; /*6504*/
		for (var _FP = 0, _FQ = _FO.length; _FP < _FQ; _FP++) { /*6504*/
			$forall($get(_FO, _FP)); /*6504*/
		} /*6504*/
		$1.widths = $a(); /*6505*/
		$1.checksum = 0; /*6507*/
		for (var _FV = 0, _FU = $1.widths.length - 1; _FV <= _FU; _FV += 1) { /*6511*/
			$1.i = _FV; /*6509*/
			$1.checksum = $1.checksum + ($get($1.widths, $1.i) * $get($1.checkweightseq, $1.i)); /*6510*/
		} /*6510*/
		$1.checksum = ($1.checksum % 211) + (($1.datalen - 3) * 211); /*6512*/
		$1.i = 0; /*6514*/
		for (;;) { /*6524*/
			if ($1.checksum <= $get($1.tab174, $1.i)) { /*6522*/
				$forall($geti($1.tab174, $1.i + 1, 7)); /*6516*/
				$1.cte = $k[--$j]; /*6517*/
				$1.cto = $k[--$j]; /*6517*/
				$1.cmwe = $k[--$j]; /*6518*/
				$1.cmwo = $k[--$j]; /*6518*/
				$1.cele = $k[--$j]; /*6519*/
				$1.celo = $k[--$j]; /*6519*/
				$1.cgs = $k[--$j]; /*6520*/
				break; /*6521*/
			} /*6521*/
			$1.i = $1.i + 8; /*6523*/
		} /*6523*/
		$k[$j++] = "cwo"; /*6526*/
		$k[$j++] = ~~(($1.checksum - $1.cgs) / $1.cte); /*6526*/
		$k[$j++] = $1.celo; /*6526*/
		$k[$j++] = $1.cmwo; /*6526*/
		$k[$j++] = 4; /*6526*/
		$k[$j++] = true; /*6526*/
		$1.getRSSwidths(); /*6526*/
		var _Fz = $k[--$j]; /*6526*/
		$1[$k[--$j]] = _Fz; /*6526*/
		$k[$j++] = "cwe"; /*6527*/
		$k[$j++] = ($1.checksum - $1.cgs) % $1.cte; /*6527*/
		$k[$j++] = $1.cele; /*6527*/
		$k[$j++] = $1.cmwe; /*6527*/
		$k[$j++] = 4; /*6527*/
		$k[$j++] = false; /*6527*/
		$1.getRSSwidths(); /*6527*/
		var _G6 = $k[--$j]; /*6527*/
		$1[$k[--$j]] = _G6; /*6527*/
		$1.cw = $a(8); /*6529*/
		for (var _G9 = 0; _G9 <= 3; _G9 += 1) { /*6534*/
			$1.i = _G9; /*6531*/
			$put($1.cw, $1.i * 2, $get($1.cwo, $1.i)); /*6532*/
			$put($1.cw, ($1.i * 2) + 1, $get($1.cwe, $1.i)); /*6533*/
		} /*6533*/
		var _GK = $a(22); /*6536*/
		$put(_GK, 0, $1.cw); /*6537*/
		$puti(_GK, 1, $1.dxw); /*6537*/
		$1.dxw = $geti(_GK, 0, $1.datalen + 1); /*6538*/
		$1.datalen = $1.dxw.length; /*6539*/
		$1.rows = $a(~~Math.ceil($1.datalen / $1.segments)); /*6542*/
		$1.numrows = $1.rows.length; /*6543*/
		for (var _GW = 0, _GV = $1.numrows - 1; _GW <= _GV; _GW += 1) { /*6558*/
			$1.r = _GW; /*6545*/
			$k[$j++] = Infinity; /*6546*/
			if ((($1.segments % 4) != 0) && (($1.r % 2) == 1)) { /*6547*/
				$k[$j++] = 0; /*6547*/
			} /*6547*/
			$k[$j++] = 1; /*6555*/
			$k[$j++] = 1; /*6555*/
			for (var _Gb = 0, _Ga = $1.segments - 1; _Gb <= _Ga; _Gb += 1) { /*6555*/
				$1.pos = _Gb + ($1.r * $1.segments); /*6550*/
				if ($1.pos < $1.datalen) { /*6554*/
					$forall($get($1.dxw, $1.pos)); /*6552*/
					if (($1.pos % 2) == 0) { /*6553*/
						$forall($get($1.fxw, ~~($1.pos / 2))); /*6553*/
					} /*6553*/
				} /*6553*/
			} /*6553*/
			var _Gn = $counttomark() + 2; /*6557*/
			$k[$j++] = 1; /*6557*/
			$k[$j++] = 1; /*6557*/
			$astore($a(_Gn)); /*6557*/
			$put($1.rows, $1.r, $k[--$j]); /*6557*/
			$j--; /*6557*/
		} /*6557*/
		if ($ne($1.format, "expandedstacked")) { /*6682*/
			var _Gu = $get($1.rows, 0); /*6563*/
			$1.sbs = $geti(_Gu, 1, _Gu.length - 1); /*6563*/
			$k[$j++] = Infinity; /*6573*/
			$k[$j++] = 1; /*6571*/
			for (var _Gy = 0, _Gx = $1.datalen - 1; _Gy <= _Gx; _Gy += 1) { /*6571*/
				$1.i = _Gy; /*6568*/
				$forall($get($1.dxw, $1.i)); /*6569*/
				if (($1.i % 2) == 0) { /*6570*/
					$forall($get($1.fxw, ~~($1.i / 2))); /*6570*/
				} /*6570*/
			} /*6570*/
			$k[$j++] = 1; /*6572*/
			$k[$j++] = 1; /*6572*/
			$1.sbs = $a(); /*6573*/
			$k[$j++] = Infinity; /*6580*/
			$k[$j++] = "ren"; /*6579*/
			$k[$j++] = $0.renlinear; /*6579*/
			$k[$j++] = "sbs"; /*6579*/
			$k[$j++] = $1.sbs; /*6579*/
			$k[$j++] = "bhs"; /*6579*/
			$k[$j++] = Infinity; /*6579*/
			for (var _H9 = 0, _HA = ~~(($1.sbs.length + 1) / 2); _H9 < _HA; _H9++) { /*6578*/
				$k[$j++] = $1.height; /*6578*/
			} /*6578*/
			var _HC = $a(); /*6579*/
			$k[$j++] = _HC; /*6580*/
			$k[$j++] = "bbs"; /*6580*/
			$k[$j++] = Infinity; /*6580*/
			for (var _HE = 0, _HF = ~~(($1.sbs.length + 1) / 2); _HE < _HF; _HE++) { /*6579*/
				$k[$j++] = 0; /*6579*/
			} /*6579*/
			var _HG = $a(); /*6580*/
			$k[$j++] = _HG; /*6580*/
			$k[$j++] = "opt"; /*6580*/
			$k[$j++] = $1.options; /*6580*/
			var _HI = $d(); /*6580*/
			$k[$j++] = _HI; /*6583*/
			if (!$1.dontdraw) { /*6583*/
				$0.renlinear(); /*6583*/
			} /*6583*/
		} else { /*6682*/
			$1.seps = $a($1.numrows); /*6587*/
			for (var _HO = 0, _HN = $1.numrows - 1; _HO <= _HN; _HO += 1) { /*6643*/
				$1.r = _HO; /*6590*/
				$1.row = $get($1.rows, $1.r); /*6591*/
				$k[$j++] = Infinity; /*6594*/
				for (var _HU = 0, _HT = $1.row.length - 1; _HU <= _HT; _HU += 2) { /*6599*/
					$1.i = _HU; /*6596*/
					for (var _HY = 0, _HZ = $get($1.row, $1.i); _HY < _HZ; _HY++) { /*6597*/
						$k[$j++] = 0; /*6597*/
					} /*6597*/
					if ($1.i < ($1.row.length - 1)) { /*6598*/
						for (var _Hf = 0, _Hg = $get($1.row, $1.i + 1); _Hf < _Hg; _Hf++) { /*6598*/
							$k[$j++] = 1; /*6598*/
						} /*6598*/
					} /*6598*/
				} /*6598*/
				$astore($a($counttomark())); /*6600*/
				$1.row = $k[--$j]; /*6600*/
				$j--; /*6600*/
				$k[$j++] = Infinity; /*6603*/
				$forall($1.row, function() { /*6603*/
					var _Hl = $k[--$j]; /*6603*/
					$k[$j++] = 1 - _Hl; /*6603*/
				}); /*6603*/
				$1.sep = $a(); /*6603*/
				$puti($1.sep, 0, $a([0, 0, 0, 0])); /*6604*/
				$puti($1.sep, $1.row.length - 4, $a([0, 0, 0, 0])); /*6605*/
				$k[$j++] = Infinity; /*6609*/
				for (var _Hu = 19, _Ht = $1.row.length - 13; _Hu <= _Ht; _Hu += 98) { /*6607*/
					$k[$j++] = _Hu; /*6607*/
				} /*6607*/
				for (var _Hx = 68, _Hw = $1.row.length - 13; _Hx <= _Hw; _Hx += 98) { /*6608*/
					$k[$j++] = _Hx; /*6608*/
				} /*6608*/
				$1.finderpos = $a(); /*6609*/
				var _Hz = $1.finderpos; /*6610*/
				for (var _I0 = 0, _I1 = _Hz.length; _I0 < _I1; _I0++) { /*6624*/
					var _I2 = $get(_Hz, _I0); /*6624*/
					for (var _I4 = _I2, _I3 = _I2 + 14; _I4 <= _I3; _I4 += 1) { /*6623*/
						$1.i = _I4; /*6612*/
						if ($get($1.row, $1.i) == 0) { /*6620*/
							if ($get($1.row, $1.i - 1) == 1) { /*6617*/
								$k[$j++] = 1; /*6615*/
							} else { /*6617*/
								var _IE = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*6617*/
								$k[$j++] = _IE; /*6617*/
							} /*6617*/
						} else { /*6620*/
							$k[$j++] = 0; /*6620*/
						} /*6620*/
						$put($1.sep, $1.i, $k[--$j]); /*6622*/
					} /*6622*/
				} /*6622*/
				if ((($1.segments % 4) == 0) && (($1.r % 2) == 1)) { /*6638*/
					if (($get($1.rows, $1.r).length != $get($1.rows, 0).length) && (($1.finderpos.length % 2) == 1)) { /*6636*/
						$k[$j++] = Infinity; /*6630*/
						$k[$j++] = 0; /*6630*/
						$aload($1.row); /*6630*/
						$1.row = $a(); /*6630*/
						$k[$j++] = Infinity; /*6631*/
						$k[$j++] = 0; /*6631*/
						$aload($1.sep); /*6631*/
						$1.sep = $a(); /*6631*/
					} else { /*6636*/
						for (var _IV = $1.row.length - 1; _IV >= 0; _IV -= 1) { /*6633*/
							$k[$j++] = $get($1.row, _IV); /*6633*/
						} /*6633*/
						$astore($1.row); /*6634*/
						$j--; /*6634*/
						for (var _Ia = $1.sep.length - 1; _Ia >= 0; _Ia -= 1) { /*6635*/
							$k[$j++] = $get($1.sep, _Ia); /*6635*/
						} /*6635*/
						$astore($1.sep); /*6636*/
						$j--; /*6636*/
					} /*6636*/
				} /*6636*/
				$put($1.rows, $1.r, $1.row); /*6640*/
				$put($1.seps, $1.r, $1.sep); /*6641*/
			} /*6641*/
			$1.pixx = $get($1.rows, 0).length; /*6646*/
			$k[$j++] = Infinity; /*6647*/
			for (var _In = 0, _Io = $1.pixx; _In < _Io; _In++) { /*6647*/
				$k[$j++] = 0; /*6647*/
			} /*6647*/
			var _Ip = $a(); /*6647*/
			$puti(_Ip, 0, $get($1.rows, $1.numrows - 1)); /*6647*/
			$put($1.rows, $1.numrows - 1, _Ip); /*6648*/
			$k[$j++] = Infinity; /*6649*/
			for (var _Iw = 0, _Ix = $1.pixx; _Iw < _Ix; _Iw++) { /*6649*/
				$k[$j++] = 0; /*6649*/
			} /*6649*/
			var _Iy = $a(); /*6649*/
			$puti(_Iy, 0, $get($1.seps, $1.numrows - 1)); /*6649*/
			$put($1.seps, $1.numrows - 1, _Iy); /*6650*/
			$k[$j++] = "sep"; /*6653*/
			$k[$j++] = Infinity; /*6653*/
			for (var _J5 = 0, _J6 = (~~($1.pixx / 2)) + 1; _J5 < _J6; _J5++) { /*6653*/
				$k[$j++] = 0; /*6653*/
				$k[$j++] = 1; /*6653*/
			} /*6653*/
			var _J9 = $geti($a(), 0, $1.pixx); /*6653*/
			$1[$k[--$j]] = _J9; /*6653*/
			$puti($1.sep, 0, $a([0, 0, 0, 0])); /*6654*/
			$puti($1.sep, $1.pixx - 4, $a([0, 0, 0, 0])); /*6655*/
			$k[$j++] = Infinity; /*6670*/
			for (var _JI = 0, _JH = $1.numrows - 1; _JI <= _JH; _JI += 1) { /*6669*/
				$1.r = _JI; /*6660*/
				if ($1.r != 0) { /*6663*/
					$aload($get($1.seps, $1.r)); /*6662*/
				} /*6662*/
				for (var _JO = 0, _JP = $1.barxmult; _JO < _JP; _JO++) { /*6664*/
					$aload($get($1.rows, $1.r)); /*6664*/
				} /*6664*/
				if ($1.r != ($1.numrows - 1)) { /*6668*/
					$aload($get($1.seps, $1.r)); /*6666*/
					$aload($1.sep); /*6667*/
				} /*6667*/
			} /*6667*/
			$1.pixs = $a(); /*6670*/
			var _Ji = {
				ren: $0.renmatrix,
				pixs: $1.pixs,
				pixx: $1.pixx,
				pixy: ~~($1.pixs.length / $1.pixx),
				height: (~~($1.pixs.length / $1.pixx)) / 72,
				width: $1.pixx / 72,
				opt: $1.options
			}; /*6679*/
			$k[$j++] = _Ji; /*6682*/
			if (!$1.dontdraw) { /*6682*/
				$0.renmatrix(); /*6682*/
			} /*6682*/
		} /*6682*/
	};
	$0.databarexpandedstacked = function() {
		var $1 = {}; /*6712*/
		$1.options = $k[--$j]; /*6714*/
		$1.barcode = $k[--$j]; /*6715*/
		$1.dontdraw = false; /*6717*/
		$forall($1.options, function() { /*6728*/
			var _3 = $k[--$j]; /*6728*/
			$1[$k[--$j]] = _3; /*6728*/
		}); /*6728*/
		$1.options.dontdraw = true; /*6731*/
		$1.options.format = "expandedstacked"; /*6732*/
		$k[$j++] = "args"; /*6734*/
		$k[$j++] = $1.barcode; /*6734*/
		$k[$j++] = $1.options; /*6734*/
		$0.databarexpanded(); /*6734*/
		var _9 = $k[--$j]; /*6734*/
		$1[$k[--$j]] = _9; /*6734*/
		$1.args.opt = $1.options; /*6736*/
		$k[$j++] = $1.args; /*6739*/
		if (!$1.dontdraw) { /*6739*/
			$0.renmatrix(); /*6739*/
		} /*6739*/
	};
	$0.gs1northamericancoupon = function() {
		var $1 = {}; /*6767*/
		$1.options = $k[--$j]; /*6769*/
		$1.barcode = $k[--$j]; /*6770*/
		$1.dontdraw = false; /*6772*/
		$1.includetext = false; /*6774*/
		$1.coupontextfont = "Helvetica"; /*6775*/
		$1.coupontextsize = 9; /*6776*/
		$1.coupontextxoffset = "unset"; /*6777*/
		$1.coupontextyoffset = "unset"; /*6778*/
		$forall($1.options, function() { /*6789*/
			var _3 = $k[--$j]; /*6789*/
			$1[$k[--$j]] = _3; /*6789*/
		}); /*6789*/
		$1.coupontextfont = "" + $1.coupontextfont; /*6791*/
		$1.coupontextsize = +$1.coupontextsize; /*6792*/
		if ($ne($1.coupontextxoffset, "unset")) { /*6793*/
			$1.coupontextxoffset = +$1.coupontextxoffset; /*6793*/
		} /*6793*/
		if ($ne($1.coupontextyoffset, "unset")) { /*6794*/
			$1.coupontextyoffset = +$1.coupontextyoffset; /*6794*/
		} /*6794*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*6798*/
			$1.out = $s($1.in.length); /*6799*/
			$1.j = 0; /*6800*/
			$k[$j++] = $1.in; /*6814*/
			for (;;) { /*6814*/
				$search($k[--$j], "^"); /*6803*/
				if ($k[--$j]) { /*6812*/
					var _H = $k[--$j]; /*6804*/
					$puti($1.out, $1.j, _H); /*6804*/
					$1.j = (_H.length + $1.j) + 1; /*6805*/
					$j--; /*6806*/
					var _L = $k[--$j]; /*6807*/
					$put($1.out, $1.j - 1, ~~$z($geti(_L, 0, 3))); /*6807*/
					$k[$j++] = $geti(_L, 3, _L.length - 3); /*6808*/
				} else { /*6812*/
					var _Q = $k[--$j]; /*6810*/
					$puti($1.out, $1.j, _Q); /*6810*/
					$1.j = _Q.length + $1.j; /*6811*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*6812*/
					break; /*6812*/
				} /*6812*/
			} /*6812*/
		}; /*6815*/
		$1.ais = $a([]); /*6818*/
		$1.vals = $a([]); /*6819*/
		var _Z = $1.barcode; /*6820*/
		$k[$j++] = $geti(_Z, 1, _Z.length - 1); /*6833*/
		for (;;) { /*6833*/
			var _b = $k[--$j]; /*6822*/
			$k[$j++] = _b; /*6822*/
			if ($eq(_b, "")) { /*6822*/
				break; /*6822*/
			} /*6822*/
			$search($k[--$j], ")"); /*6823*/
			$j--; /*6823*/
			var _d = $k[--$j]; /*6824*/
			var _e = $k[--$j]; /*6824*/
			var _f = $k[--$j]; /*6825*/
			$k[$j++] = _d; /*6825*/
			$search(_f, "("); /*6825*/
			if ($k[--$j]) { /*6828*/
				var _h = $k[--$j]; /*6826*/
				var _i = $k[--$j]; /*6826*/
				var _j = $k[--$j]; /*6826*/
				var _k = $k[--$j]; /*6826*/
				$k[$j++] = _j; /*6826*/
				$k[$j++] = _k; /*6826*/
				$k[$j++] = _h; /*6826*/
			} else { /*6828*/
				var _l = $k[--$j]; /*6828*/
				var _m = $k[--$j]; /*6828*/
				$k[$j++] = ""; /*6828*/
				$k[$j++] = _m; /*6828*/
				$k[$j++] = _l; /*6828*/
			} /*6828*/
			$k[$j++] = Infinity; /*6830*/
			$aload($1.ais); /*6830*/
			var _p = $k[$j - 1 - ($counttomark() + 2)]; /*6830*/
			$k[$j++] = _p; /*6830*/
			$1.ais = $a(); /*6830*/
			$k[$j++] = Infinity; /*6831*/
			$aload($1.vals); /*6831*/
			var _t = $k[$j - 1 - ($counttomark() + 1)]; /*6831*/
			$k[$j++] = _t; /*6831*/
			$1.expand(); /*6831*/
			$1.vals = $a(); /*6831*/
			$j -= 2; /*6832*/
		} /*6832*/
		$j--; /*6834*/
		if ($1.ais.length != 1) { /*6839*/
			$k[$j++] = "bwipp.gs1northamericancouponBadAIStructure"; /*6838*/
			$k[$j++] = "A GS1 North American Coupon should consist of a single AI (8110)"; /*6838*/
			$0.raiseerror(); /*6838*/
		} /*6838*/
		if ($ne($get($1.ais, 0), "8110")) { /*6842*/
			$k[$j++] = "bwipp.gs1northamericancouponBadAIStructure"; /*6841*/
			$k[$j++] = "A GS1 North American Coupon should consist of a single AI (8110)"; /*6841*/
			$0.raiseerror(); /*6841*/
		} /*6841*/
		$1.val = $get($1.vals, 0); /*6845*/
		$1.vli = $get($1.val, 0) - 48; /*6846*/
		if (($1.vli < 0) || ($1.vli > 6)) { /*6849*/
			$k[$j++] = "bwipp.gs1northamericancouponBadVLI"; /*6848*/
			$k[$j++] = "The AI (8110) data should start with a Company Prefix length indicator in the range 0 to 6"; /*6848*/
			$0.raiseerror(); /*6848*/
		} /*6848*/
		$1.gcp = $geti($1.val, 1, $1.vli + 6); /*6850*/
		$1.cod = $geti($1.val, $1.vli + 7, 6); /*6851*/
		$1.coupontext = $s($1.gcp.length + 7); /*6852*/
		$puti($1.coupontext, 0, $1.gcp); /*6853*/
		$puti($1.coupontext, $1.gcp.length, "-"); /*6854*/
		$puti($1.coupontext, $1.gcp.length + 1, $1.cod); /*6855*/
		$1.options.dontdraw = true; /*6858*/
		$k[$j++] = "args"; /*6860*/
		$k[$j++] = $1.barcode; /*6860*/
		$k[$j++] = $1.options; /*6860*/
		$0.databarexpandedstacked(); /*6860*/
		var _1M = $k[--$j]; /*6860*/
		$1[$k[--$j]] = _1M; /*6860*/
		if ($1.includetext) { /*6879*/
			if ($1.coupontextxoffset == "unset") { /*6866*/
				$1.coupontextxoffset = 0; /*6865*/
			} /*6865*/
			if ($1.coupontextyoffset == "unset") { /*6869*/
				$1.coupontextyoffset = ($1.args.height * 72) + 3; /*6868*/
			} /*6868*/
			var _1U = $1.args.txt !== undefined; /*6870*/
			if (_1U) { /*6877*/
				$1.txt = $1.args.txt; /*6871*/
				$1.newtxt = $a($1.txt.length + 1); /*6872*/
				$puti($1.newtxt, 0, $1.txt); /*6873*/
				$put($1.newtxt, $1.newtxt.length - 1, $a([$1.coupontext, $1.coupontextxoffset, $1.coupontextyoffset, $1.coupontextfont, $1.coupontextsize])); /*6874*/
				$1.args.txt = $1.newtxt; /*6875*/
			} else { /*6877*/
				$1.args.txt = $a([$a([$1.coupontext, $1.coupontextxoffset, $1.coupontextyoffset, $1.coupontextfont, $1.coupontextsize])]); /*6877*/
			} /*6877*/
		} /*6877*/
		$1.args.opt = $1.options; /*6881*/
		$k[$j++] = $1.args; /*6884*/
		if (!$1.dontdraw) { /*6884*/
			$0.renmatrix(); /*6884*/
		} /*6884*/
	};
	$0.pharmacode = function() {
		var $1 = {}; /*6911*/
		$1.options = $k[--$j]; /*6913*/
		$1.barcode = $k[--$j]; /*6914*/
		$1.dontdraw = false; /*6916*/
		$1.height = (8 * 2.835) / 72; /*6917*/
		$1.nwidth = 0.5 * 2.835; /*6918*/
		$1.wwidth = 1.5 * 2.835; /*6919*/
		$1.swidth = 1 * 2.835; /*6920*/
		$forall($1.options, function() { /*6931*/
			var _3 = $k[--$j]; /*6931*/
			$1[$k[--$j]] = _3; /*6931*/
		}); /*6931*/
		$1.height = +$1.height; /*6933*/
		$1.nwidth = +$1.nwidth; /*6934*/
		$1.wwidth = +$1.wwidth; /*6935*/
		$1.swidth = +$1.swidth; /*6936*/
		if (($1.barcode.length < 1) || ($1.barcode.length > 6)) { /*6941*/
			$k[$j++] = "bwipp.pharmacodeBadLength"; /*6940*/
			$k[$j++] = "Pharmacode must be 1 to 6 digits"; /*6940*/
			$0.raiseerror(); /*6940*/
		} /*6940*/
		$forall($1.barcode, function() { /*6946*/
			var _C = $k[--$j]; /*6943*/
			if ((_C < 48) || (_C > 57)) { /*6945*/
				$k[$j++] = "bwipp.pharmacodeBadCharacter"; /*6944*/
				$k[$j++] = "Pharmacode must contain only digits"; /*6944*/
				$0.raiseerror(); /*6944*/
			} /*6944*/
		}); /*6944*/
		var _E = ~~$z($1.barcode); /*6947*/
		if ((_E < 3) || (_E > 131070)) { /*6949*/
			$k[$j++] = "bwipp.pharmacodeBadValue"; /*6948*/
			$k[$j++] = "Pharmacode value must be between 3 and 131070"; /*6948*/
			$0.raiseerror(); /*6948*/
		} /*6948*/
		$1.txt = $a($1.barcode.length); /*6952*/
		for (var _J = 0, _I = $1.barcode.length - 1; _J <= _I; _J += 1) { /*6956*/
			$1.i = _J; /*6954*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*6955*/
		} /*6955*/
		$1.barcode = $cvrs($s(17), (~~$z($1.barcode)) + 1, 2); /*6959*/
		$1.barcode = $geti($1.barcode, 1, $1.barcode.length - 1); /*6960*/
		$1.barlen = $1.barcode.length; /*6962*/
		$1.sbs = $a($1.barlen * 2); /*6963*/
		for (var _b = 0, _a = $1.barlen - 1; _b <= _a; _b += 1) { /*6974*/
			$1.i = _b; /*6966*/
			$1.enc = $geti($1.barcode, $1.i, 1); /*6967*/
			if ($eq($1.enc, "0")) { /*6971*/
				$put($1.sbs, $1.i * 2, $1.nwidth); /*6969*/
			} else { /*6971*/
				$put($1.sbs, $1.i * 2, $1.wwidth); /*6971*/
			} /*6971*/
			$put($1.sbs, ($1.i * 2) + 1, $1.swidth); /*6973*/
		} /*6973*/
		$k[$j++] = Infinity; /*6984*/
		$k[$j++] = "ren"; /*6981*/
		$k[$j++] = $0.renlinear; /*6981*/
		$k[$j++] = "sbs"; /*6981*/
		$k[$j++] = $1.sbs; /*6981*/
		$k[$j++] = "bhs"; /*6981*/
		$k[$j++] = Infinity; /*6981*/
		for (var _r = 0, _s = ~~(($1.sbs.length + 1) / 2); _r < _s; _r++) { /*6980*/
			$k[$j++] = $1.height; /*6980*/
		} /*6980*/
		var _u = $a(); /*6981*/
		$k[$j++] = _u; /*6982*/
		$k[$j++] = "bbs"; /*6982*/
		$k[$j++] = Infinity; /*6982*/
		for (var _w = 0, _x = ~~(($1.sbs.length + 1) / 2); _w < _x; _w++) { /*6981*/
			$k[$j++] = 0; /*6981*/
		} /*6981*/
		var _y = $a(); /*6982*/
		$k[$j++] = _y; /*6984*/
		$k[$j++] = "txt"; /*6984*/
		$k[$j++] = $1.txt; /*6984*/
		$k[$j++] = "textxalign"; /*6984*/
		$k[$j++] = "center"; /*6984*/
		$k[$j++] = "opt"; /*6984*/
		$k[$j++] = $1.options; /*6984*/
		var _11 = $d(); /*6984*/
		$k[$j++] = _11; /*6987*/
		if (!$1.dontdraw) { /*6987*/
			$0.renlinear(); /*6987*/
		} /*6987*/
	};
	$0.pharmacode2 = function() {
		var $1 = {}; /*7014*/
		$1.options = $k[--$j]; /*7016*/
		$1.barcode = $k[--$j]; /*7017*/
		$1.dontdraw = false; /*7019*/
		$1.includetext = false; /*7020*/
		$1.height = 4; /*7021*/
		$forall($1.options, function() { /*7032*/
			var _3 = $k[--$j]; /*7032*/
			$1[$k[--$j]] = _3; /*7032*/
		}); /*7032*/
		$1.height = +$1.height; /*7034*/
		if (($1.barcode.length < 1) || ($1.barcode.length > 8)) { /*7039*/
			$k[$j++] = "bwipp.pharmacode2BadLength"; /*7038*/
			$k[$j++] = "Two-track Pharmacode must be 1 to 6 digits"; /*7038*/
			$0.raiseerror(); /*7038*/
		} /*7038*/
		$forall($1.barcode, function() { /*7044*/
			var _9 = $k[--$j]; /*7041*/
			if ((_9 < 48) || (_9 > 57)) { /*7043*/
				$k[$j++] = "bwipp.pharmacode2badCharacter"; /*7042*/
				$k[$j++] = "Two-track Pharmacode must contain only digits"; /*7042*/
				$0.raiseerror(); /*7042*/
			} /*7042*/
		}); /*7042*/
		var _B = ~~$z($1.barcode); /*7045*/
		if ((_B < 4) || (_B > 64570080)) { /*7047*/
			$k[$j++] = "bwipp.pharmacode2badValue"; /*7046*/
			$k[$j++] = "Two-track Pharmacode value must be between 4 and 64570080"; /*7046*/
			$0.raiseerror(); /*7046*/
		} /*7046*/
		$1.txt = $a($1.barcode.length); /*7050*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*7054*/
			$1.i = _G; /*7052*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*7053*/
		} /*7053*/
		$1.encstr = $s(16); /*7056*/
		$1.bhs = $a(16); /*7057*/
		$1.bbs = $a(16); /*7058*/
		$1.sbs = $a(32); /*7059*/
		$1.bar = (1 / 25.4) * $1.height; /*7060*/
		$1.spc = (1 / 25.4) * 72; /*7061*/
		$1.i = 15; /*7064*/
		$1.val = ~~$z($1.barcode); /*7065*/
		for (;;) { /*7072*/
			if ($1.val == 0) { /*7067*/
				break; /*7067*/
			} /*7067*/
			var _V = $1.val % 3; /*7068*/
			$1.val = ~~(($1.val - $get($a([3, 1, 2]), _V)) / 3); /*7069*/
			$put($1.encstr, $1.i, $get($a([2, 0, 1]), _V)); /*7070*/
			$1.i = $1.i - 1; /*7071*/
		} /*7071*/
		$1.encstr = $geti($1.encstr, $1.i + 1, 15 - $1.i); /*7073*/
		for (var _k = 0, _j = $1.encstr.length - 1; _k <= _j; _k += 1) { /*7081*/
			$1.i = _k; /*7077*/
			var _n = $get($1.encstr, $1.i); /*7078*/
			$put($1.bhs, $1.i, $1.bar * $get($a([1, 1, 2]), _n)); /*7079*/
			$put($1.bbs, $1.i, $get($a([0, $1.bar, 0]), _n)); /*7080*/
		} /*7080*/
		$k[$j++] = Infinity; /*7092*/
		$k[$j++] = "ren"; /*7089*/
		$k[$j++] = $0.renlinear; /*7089*/
		$k[$j++] = "bhs"; /*7089*/
		$k[$j++] = $1.bhs; /*7089*/
		$k[$j++] = "bbs"; /*7089*/
		$k[$j++] = $1.bbs; /*7089*/
		$k[$j++] = "sbs"; /*7089*/
		$k[$j++] = Infinity; /*7089*/
		for (var _11 = 0, _12 = $1.encstr.length * 2; _11 < _12; _11++) { /*7088*/
			$k[$j++] = $1.spc; /*7088*/
		} /*7088*/
		var _14 = $a(); /*7089*/
		$k[$j++] = _14; /*7092*/
		$k[$j++] = "txt"; /*7092*/
		$k[$j++] = $1.txt; /*7092*/
		$k[$j++] = "textxalign"; /*7092*/
		$k[$j++] = "center"; /*7092*/
		$k[$j++] = "textyoffset"; /*7092*/
		$k[$j++] = 4; /*7092*/
		$k[$j++] = "opt"; /*7092*/
		$k[$j++] = $1.options; /*7092*/
		var _17 = $d(); /*7092*/
		$k[$j++] = _17; /*7095*/
		if (!$1.dontdraw) { /*7095*/
			$0.renlinear(); /*7095*/
		} /*7095*/
	};
	$0.code2of5 = function() {
		var $1 = {}; /*7122*/
		$1.options = $k[--$j]; /*7124*/
		$1.barcode = $k[--$j]; /*7125*/
		$1.dontdraw = false; /*7127*/
		$1.includecheck = false; /*7128*/
		$1.validatecheck = false; /*7129*/
		$1.includetext = false; /*7130*/
		$1.includecheckintext = false; /*7131*/
		$1.textfont = "Courier"; /*7132*/
		$1.textsize = 10; /*7133*/
		$1.textyoffset = -8.5; /*7134*/
		$1.height = 1; /*7135*/
		$1.version = "industrial"; /*7136*/
		$forall($1.options, function() { /*7147*/
			var _3 = $k[--$j]; /*7147*/
			$1[$k[--$j]] = _3; /*7147*/
		}); /*7147*/
		$1.textfont = "" + $1.textfont; /*7149*/
		$1.textsize = +$1.textsize; /*7150*/
		$1.textyoffset = +$1.textyoffset; /*7151*/
		$1.height = +$1.height; /*7152*/
		$forall($1.barcode, function() { /*7159*/
			var _A = $k[--$j]; /*7156*/
			if ((_A < 48) || (_A > 57)) { /*7158*/
				$k[$j++] = "bwipp.code2of5badCharacter"; /*7157*/
				$k[$j++] = "Code 25 must contain only digits"; /*7157*/
				$0.raiseerror(); /*7157*/
			} /*7157*/
		}); /*7157*/
		$k[$j++] = "barlen"; /*7161*/
		$k[$j++] = $1.barcode.length; /*7161*/
		if ($1.validatecheck) { /*7161*/
			var _D = $k[--$j]; /*7161*/
			$k[$j++] = _D - 1; /*7161*/
		} /*7161*/
		var _E = $k[--$j]; /*7161*/
		$1[$k[--$j]] = _E; /*7161*/
		$1.checksum = 0; /*7163*/
		for (var _I = 0, _H = $1.barlen - 1; _I <= _H; _I += 1) { /*7167*/
			$1.i = _I; /*7165*/
			$k[$j++] = "checksum"; /*7166*/
			$k[$j++] = $1.checksum; /*7166*/
			$k[$j++] = $get($1.barcode, $1.i) - 48; /*7166*/
			if ((($1.barlen - $1.i) % 2) != 0) { /*7166*/
				var _P = $k[--$j]; /*7166*/
				$k[$j++] = _P * 3; /*7166*/
			} /*7166*/
			var _Q = $k[--$j]; /*7166*/
			var _R = $k[--$j]; /*7166*/
			$1[$k[--$j]] = _R + _Q; /*7166*/
		} /*7166*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*7168*/
		if ($1.validatecheck) { /*7175*/
			if ($get($1.barcode, $1.barlen) != ($1.checksum + 48)) { /*7172*/
				$k[$j++] = "bwipp.code2of5badCheckDigit"; /*7171*/
				$k[$j++] = "Incorrect Code 25 check digit provided"; /*7171*/
				$0.raiseerror(); /*7171*/
			} /*7171*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*7173*/
			$1.includecheck = true; /*7174*/
		} /*7174*/
		var _h = {
			industrial: $a(["1111313111", "3111111131", "1131111131", "3131111111", "1111311131", "3111311111", "1131311111", "1111113131", "3111113111", "1131113111", "313111", "31113"]),
			iata: $a(["1111313111", "3111111131", "1131111131", "3131111111", "1111311131", "3111311111", "1131311111", "1111113131", "3111113111", "1131113111", "1111", "311"]),
			matrix: $a(["113311", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "131311", "311111", "31111"]),
			coop: $a(["331111", "111331", "113131", "113311", "131131", "131311", "133111", "311131", "311311", "313111", "3131", "133"]),
			datalogic: $a(["113311", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "131311", "1111", "311"])
		}; /*7199*/
		$1.versions = _h; /*7201*/
		var _k = $get($1.versions, $1.version) !== undefined; /*7202*/
		if (!_k) { /*7204*/
			$k[$j++] = "bwipp.code2of5badVersion"; /*7203*/
			$k[$j++] = "Unrecognised Code 25 version"; /*7203*/
			$0.raiseerror(); /*7203*/
		} /*7203*/
		$1.encs = $get($1.versions, $1.version); /*7205*/
		$1.cs = $get($1.encs, 0).length; /*7207*/
		$k[$j++] = "cw"; /*7208*/
		$k[$j++] = 0; /*7208*/
		$forall($get($1.encs, 0), function() { /*7208*/
			var _s = $k[--$j]; /*7208*/
			var _t = $k[--$j]; /*7208*/
			$k[$j++] = _t + (_s - 48); /*7208*/
		}); /*7208*/
		var _u = $k[--$j]; /*7208*/
		$1[$k[--$j]] = _u; /*7208*/
		var _w = $1.encs; /*7209*/
		$1.ss = $get(_w, _w.length - 2).length; /*7209*/
		var _y = $1.encs; /*7210*/
		$k[$j++] = "sw"; /*7210*/
		$k[$j++] = 0; /*7210*/
		$forall($get(_y, _y.length - 2), function() { /*7210*/
			var _10 = $k[--$j]; /*7210*/
			var _11 = $k[--$j]; /*7210*/
			$k[$j++] = _11 + (_10 - 48); /*7210*/
		}); /*7210*/
		var _12 = $k[--$j]; /*7210*/
		$1[$k[--$j]] = _12; /*7210*/
		$1.barchars = "0123456789"; /*7213*/
		$k[$j++] = "sbs"; /*7215*/
		$k[$j++] = $1.barlen; /*7215*/
		if ($1.includecheck) { /*7215*/
			var _16 = $k[--$j]; /*7215*/
			$k[$j++] = _16 + 1; /*7215*/
		} /*7215*/
		var _1B = $s((($k[--$j] * $1.cs) + $1.ss) + $1.ss); /*7215*/
		$1[$k[--$j]] = _1B; /*7215*/
		$k[$j++] = "txt"; /*7216*/
		$k[$j++] = $1.barlen; /*7216*/
		if ($1.includecheck) { /*7216*/
			var _1F = $k[--$j]; /*7216*/
			$k[$j++] = _1F + 1; /*7216*/
		} /*7216*/
		var _1H = $a($k[--$j]); /*7216*/
		$1[$k[--$j]] = _1H; /*7216*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*7219*/
		for (var _1O = 0, _1N = $1.barlen - 1; _1O <= _1N; _1O += 1) { /*7230*/
			$1.i = _1O; /*7221*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*7223*/
			$j--; /*7224*/
			$1.indx = $k[--$j].length; /*7225*/
			$j -= 2; /*7226*/
			$1.enc = $get($1.encs, $1.indx); /*7227*/
			$puti($1.sbs, ($1.i * $1.cs) + $1.ss, $1.enc); /*7228*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*7229*/
		} /*7229*/
		if ($1.includecheck) { /*7242*/
			$puti($1.sbs, ($1.barlen * $1.cs) + $1.ss, $get($1.encs, $1.checksum)); /*7234*/
			$puti($1.sbs, (($1.barlen * $1.cs) + $1.cs) + $1.ss, $get($1.encs, 11)); /*7235*/
			if ($1.includecheckintext) { /*7239*/
				$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*7237*/
			} else { /*7239*/
				$put($1.txt, $1.barlen, $a([" ", ($1.barlen * $1.cw) + $1.sw, $1.textyoffset, $1.textfont, $1.textsize])); /*7239*/
			} /*7239*/
		} else { /*7242*/
			$puti($1.sbs, ($1.barlen * $1.cs) + $1.ss, $get($1.encs, 11)); /*7242*/
		} /*7242*/
		$k[$j++] = Infinity; /*7254*/
		$k[$j++] = "ren"; /*7249*/
		$k[$j++] = $0.renlinear; /*7249*/
		$k[$j++] = "sbs"; /*7249*/
		$k[$j++] = Infinity; /*7249*/
		$forall($1.sbs, function() { /*7248*/
			var _2W = $k[--$j]; /*7248*/
			$k[$j++] = _2W - 48; /*7248*/
		}); /*7248*/
		var _2X = $a(); /*7249*/
		$k[$j++] = _2X; /*7250*/
		$k[$j++] = "bhs"; /*7250*/
		$k[$j++] = Infinity; /*7250*/
		for (var _2Z = 0, _2a = ~~(($1.sbs.length + 1) / 2); _2Z < _2a; _2Z++) { /*7249*/
			$k[$j++] = $1.height; /*7249*/
		} /*7249*/
		var _2c = $a(); /*7250*/
		$k[$j++] = _2c; /*7251*/
		$k[$j++] = "bbs"; /*7251*/
		$k[$j++] = Infinity; /*7251*/
		for (var _2e = 0, _2f = ~~(($1.sbs.length + 1) / 2); _2e < _2f; _2e++) { /*7250*/
			$k[$j++] = 0; /*7250*/
		} /*7250*/
		var _2g = $a(); /*7251*/
		$k[$j++] = _2g; /*7253*/
		if ($1.includetext) { /*7253*/
			$k[$j++] = "txt"; /*7252*/
			$k[$j++] = $1.txt; /*7252*/
		} /*7252*/
		$k[$j++] = "opt"; /*7254*/
		$k[$j++] = $1.options; /*7254*/
		var _2k = $d(); /*7254*/
		$k[$j++] = _2k; /*7257*/
		if (!$1.dontdraw) { /*7257*/
			$0.renlinear(); /*7257*/
		} /*7257*/
	};
	$0.industrial2of5 = function() {
		var $1 = {}; /*7285*/
		$1.options = $k[--$j]; /*7287*/
		$1.barcode = $k[--$j]; /*7288*/
		$1.dontdraw = false; /*7290*/
		$1.includetext = false; /*7291*/
		$1.textfont = "Courier"; /*7292*/
		$1.textsize = 10; /*7293*/
		$1.textxoffset = 0; /*7294*/
		$1.textyoffset = -8.5; /*7295*/
		$1.height = 1; /*7296*/
		$forall($1.options, function() { /*7307*/
			var _3 = $k[--$j]; /*7307*/
			$1[$k[--$j]] = _3; /*7307*/
		}); /*7307*/
		$1.textfont = "" + $1.textfont; /*7309*/
		$1.textsize = +$1.textsize; /*7310*/
		$1.textxoffset = +$1.textxoffset; /*7311*/
		$1.textyoffset = +$1.textyoffset; /*7312*/
		$1.height = +$1.height; /*7313*/
		$1.options.dontdraw = true; /*7316*/
		$1.options.version = "industrial"; /*7317*/
		$k[$j++] = "args"; /*7319*/
		$k[$j++] = $1.barcode; /*7319*/
		$k[$j++] = $1.options; /*7319*/
		$0.code2of5(); /*7319*/
		var _E = $k[--$j]; /*7319*/
		$1[$k[--$j]] = _E; /*7319*/
		$1.args.opt = $1.options; /*7321*/
		$k[$j++] = $1.args; /*7324*/
		if (!$1.dontdraw) { /*7324*/
			$0.renlinear(); /*7324*/
		} /*7324*/
	};
	$0.iata2of5 = function() {
		var $1 = {}; /*7352*/
		$1.options = $k[--$j]; /*7354*/
		$1.barcode = $k[--$j]; /*7355*/
		$1.dontdraw = false; /*7357*/
		$1.includetext = false; /*7358*/
		$1.textfont = "Courier"; /*7359*/
		$1.textsize = 10; /*7360*/
		$1.textxoffset = 0; /*7361*/
		$1.textyoffset = -8.5; /*7362*/
		$1.height = 1; /*7363*/
		$forall($1.options, function() { /*7374*/
			var _3 = $k[--$j]; /*7374*/
			$1[$k[--$j]] = _3; /*7374*/
		}); /*7374*/
		$1.textfont = "" + $1.textfont; /*7376*/
		$1.textsize = +$1.textsize; /*7377*/
		$1.textxoffset = +$1.textxoffset; /*7378*/
		$1.textyoffset = +$1.textyoffset; /*7379*/
		$1.height = +$1.height; /*7380*/
		$1.options.dontdraw = true; /*7383*/
		$1.options.version = "iata"; /*7384*/
		$k[$j++] = "args"; /*7386*/
		$k[$j++] = $1.barcode; /*7386*/
		$k[$j++] = $1.options; /*7386*/
		$0.code2of5(); /*7386*/
		var _E = $k[--$j]; /*7386*/
		$1[$k[--$j]] = _E; /*7386*/
		$1.args.opt = $1.options; /*7388*/
		$k[$j++] = $1.args; /*7391*/
		if (!$1.dontdraw) { /*7391*/
			$0.renlinear(); /*7391*/
		} /*7391*/
	};
	$0.matrix2of5 = function() {
		var $1 = {}; /*7419*/
		$1.options = $k[--$j]; /*7421*/
		$1.barcode = $k[--$j]; /*7422*/
		$1.dontdraw = false; /*7424*/
		$1.includetext = false; /*7425*/
		$1.textfont = "Courier"; /*7426*/
		$1.textsize = 10; /*7427*/
		$1.textxoffset = 0; /*7428*/
		$1.textyoffset = -8.5; /*7429*/
		$1.height = 1; /*7430*/
		$forall($1.options, function() { /*7441*/
			var _3 = $k[--$j]; /*7441*/
			$1[$k[--$j]] = _3; /*7441*/
		}); /*7441*/
		$1.textfont = "" + $1.textfont; /*7443*/
		$1.textsize = +$1.textsize; /*7444*/
		$1.textxoffset = +$1.textxoffset; /*7445*/
		$1.textyoffset = +$1.textyoffset; /*7446*/
		$1.height = +$1.height; /*7447*/
		$1.options.dontdraw = true; /*7450*/
		$1.options.version = "matrix"; /*7451*/
		$k[$j++] = "args"; /*7453*/
		$k[$j++] = $1.barcode; /*7453*/
		$k[$j++] = $1.options; /*7453*/
		$0.code2of5(); /*7453*/
		var _E = $k[--$j]; /*7453*/
		$1[$k[--$j]] = _E; /*7453*/
		$1.args.opt = $1.options; /*7455*/
		$k[$j++] = $1.args; /*7458*/
		if (!$1.dontdraw) { /*7458*/
			$0.renlinear(); /*7458*/
		} /*7458*/
	};
	$0.coop2of5 = function() {
		var $1 = {}; /*7486*/
		$1.options = $k[--$j]; /*7488*/
		$1.barcode = $k[--$j]; /*7489*/
		$1.dontdraw = false; /*7491*/
		$1.includetext = false; /*7492*/
		$1.textfont = "Courier"; /*7493*/
		$1.textsize = 10; /*7494*/
		$1.textxoffset = 0; /*7495*/
		$1.textyoffset = -8.5; /*7496*/
		$1.height = 1; /*7497*/
		$forall($1.options, function() { /*7508*/
			var _3 = $k[--$j]; /*7508*/
			$1[$k[--$j]] = _3; /*7508*/
		}); /*7508*/
		$1.textfont = "" + $1.textfont; /*7510*/
		$1.textsize = +$1.textsize; /*7511*/
		$1.textxoffset = +$1.textxoffset; /*7512*/
		$1.textyoffset = +$1.textyoffset; /*7513*/
		$1.height = +$1.height; /*7514*/
		$1.options.dontdraw = true; /*7517*/
		$1.options.version = "coop"; /*7518*/
		$k[$j++] = "args"; /*7520*/
		$k[$j++] = $1.barcode; /*7520*/
		$k[$j++] = $1.options; /*7520*/
		$0.code2of5(); /*7520*/
		var _E = $k[--$j]; /*7520*/
		$1[$k[--$j]] = _E; /*7520*/
		$1.args.opt = $1.options; /*7522*/
		$k[$j++] = $1.args; /*7525*/
		if (!$1.dontdraw) { /*7525*/
			$0.renlinear(); /*7525*/
		} /*7525*/
	};
	$0.datalogic2of5 = function() {
		var $1 = {}; /*7553*/
		$1.options = $k[--$j]; /*7555*/
		$1.barcode = $k[--$j]; /*7556*/
		$1.dontdraw = false; /*7558*/
		$1.includetext = false; /*7559*/
		$1.textfont = "Courier"; /*7560*/
		$1.textsize = 10; /*7561*/
		$1.textxoffset = 0; /*7562*/
		$1.textyoffset = -8.5; /*7563*/
		$1.height = 1; /*7564*/
		$forall($1.options, function() { /*7575*/
			var _3 = $k[--$j]; /*7575*/
			$1[$k[--$j]] = _3; /*7575*/
		}); /*7575*/
		$1.textfont = "" + $1.textfont; /*7577*/
		$1.textsize = +$1.textsize; /*7578*/
		$1.textxoffset = +$1.textxoffset; /*7579*/
		$1.textyoffset = +$1.textyoffset; /*7580*/
		$1.height = +$1.height; /*7581*/
		$1.options.dontdraw = true; /*7584*/
		$1.options.version = "datalogic"; /*7585*/
		$k[$j++] = "args"; /*7587*/
		$k[$j++] = $1.barcode; /*7587*/
		$k[$j++] = $1.options; /*7587*/
		$0.code2of5(); /*7587*/
		var _E = $k[--$j]; /*7587*/
		$1[$k[--$j]] = _E; /*7587*/
		$1.args.opt = $1.options; /*7589*/
		$k[$j++] = $1.args; /*7592*/
		if (!$1.dontdraw) { /*7592*/
			$0.renlinear(); /*7592*/
		} /*7592*/
	};
	$0.code11 = function() {
		var $1 = {}; /*7619*/
		$1.options = $k[--$j]; /*7621*/
		$1.barcode = $k[--$j]; /*7622*/
		$1.dontdraw = false; /*7624*/
		$1.includecheck = false; /*7625*/
		$1.validatecheck = false; /*7626*/
		$1.includetext = false; /*7627*/
		$1.includecheckintext = false; /*7628*/
		$1.textfont = "Courier"; /*7629*/
		$1.textsize = 10; /*7630*/
		$1.textyoffset = -8.5; /*7631*/
		$1.height = 1; /*7632*/
		$forall($1.options, function() { /*7643*/
			var _3 = $k[--$j]; /*7643*/
			$1[$k[--$j]] = _3; /*7643*/
		}); /*7643*/
		$1.textfont = "" + $1.textfont; /*7645*/
		$1.textsize = +$1.textsize; /*7646*/
		$1.textyoffset = +$1.textyoffset; /*7647*/
		$1.height = +$1.height; /*7648*/
		$1.encs = $a(["111131", "311131", "131131", "331111", "113131", "313111", "133111", "111331", "311311", "311111", "113111", "113311"]); /*7655*/
		$1.barchars = "0123456789-"; /*7658*/
		$1.charvals = {}; /*7659*/
		for (var _A = 0; _A <= 10; _A += 1) { /*7660*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*7660*/
		} /*7660*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*7667*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*7664*/
			if (!_K) { /*7666*/
				$k[$j++] = "bwipp.code11badCharacter"; /*7665*/
				$k[$j++] = "Code 11 must contain only digits and dashes"; /*7665*/
				$0.raiseerror(); /*7665*/
			} /*7665*/
		} /*7665*/
		$1.barlen = $1.barcode.length; /*7669*/
		if ($1.validatecheck) { /*7675*/
			if ($1.barlen == 11) { /*7673*/
				$k[$j++] = "bwipp.code11badLength"; /*7672*/
				$k[$j++] = "Code 11 cannot be 11 characters using check digits"; /*7672*/
				$0.raiseerror(); /*7672*/
			} /*7672*/
			var _Q = ($1.barlen <= 10) ? 1 : 2; /*7674*/
			$1.barlen = $1.barlen - _Q; /*7674*/
		} /*7674*/
		$k[$j++] = "numchecks"; /*7677*/
		if ($1.includecheck || $1.validatecheck) { /*7677*/
			var _U = ($1.barlen >= 10) ? 2 : 1; /*7677*/
			$k[$j++] = _U; /*7677*/
		} else { /*7677*/
			$k[$j++] = 0; /*7677*/
		} /*7677*/
		var _V = $k[--$j]; /*7677*/
		$1[$k[--$j]] = _V; /*7677*/
		$1.checksum1 = 0; /*7678*/
		$1.checksum2 = 0; /*7678*/
		for (var _Z = 0, _Y = $1.barlen - 1; _Z <= _Y; _Z += 1) { /*7684*/
			$1.i = _Z; /*7680*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7681*/
			$1.checksum1 = $1.checksum1 + ((((($1.barlen - $1.i) - 1) % 10) + 1) * $1.indx); /*7682*/
			$1.checksum2 = $1.checksum2 + (((($1.barlen - $1.i) % 9) + 1) * $1.indx); /*7683*/
		} /*7683*/
		$1.checksum1 = $1.checksum1 % 11; /*7685*/
		$1.checksum2 = ($1.checksum2 + $1.checksum1) % 11; /*7686*/
		if ($1.validatecheck) { /*7700*/
			if ($1.numchecks == 1) { /*7695*/
				if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) { /*7691*/
					$k[$j++] = "bwipp.code11badCheckDigit"; /*7690*/
					$k[$j++] = "Incorrect Code 11 check digit provided"; /*7690*/
					$0.raiseerror(); /*7690*/
				} /*7690*/
			} else { /*7695*/
				if (($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) || ($get($1.barcode, $1.barlen + 1) != $get($1.barchars, $1.checksum2))) { /*7696*/
					$k[$j++] = "bwipp.code11badCheckDigits"; /*7695*/
					$k[$j++] = "Incorrect Code 11 check digits provided"; /*7695*/
					$0.raiseerror(); /*7695*/
				} /*7695*/
			} /*7695*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*7698*/
			$1.includecheck = true; /*7699*/
		} /*7699*/
		$1.sbs = $s((($1.barlen + $1.numchecks) * 6) + 12); /*7702*/
		$1.txt = $a($1.barlen + $1.numchecks); /*7703*/
		$puti($1.sbs, 0, $get($1.encs, 11)); /*7706*/
		$1.xpos = 8; /*7708*/
		for (var _1O = 0, _1N = $1.barlen - 1; _1O <= _1N; _1O += 1) { /*7718*/
			$1.i = _1O; /*7710*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7711*/
			$1.enc = $get($1.encs, $1.indx); /*7712*/
			$puti($1.sbs, ($1.i * 6) + 6, $1.enc); /*7713*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7714*/
			for (var _1k = 0; _1k <= 5; _1k += 1) { /*7717*/
				$1.xpos = ($get($1.enc, _1k) - 48) + $1.xpos; /*7716*/
			} /*7716*/
		} /*7716*/
		if ($1.includecheck) { /*7747*/
			if ($1.barlen >= 10) { /*7744*/
				$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, $1.checksum1)); /*7723*/
				$puti($1.sbs, ($1.barlen * 6) + 12, $get($1.encs, $1.checksum2)); /*7724*/
				if ($1.includecheckintext) { /*7734*/
					$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7726*/
					$1.enc = $get($1.encs, $1.checksum1); /*7727*/
					for (var _2E = 0; _2E <= 5; _2E += 1) { /*7730*/
						$1.xpos = ($get($1.enc, _2E) - 48) + $1.xpos; /*7729*/
					} /*7729*/
					$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum2, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7731*/
				} else { /*7734*/
					$put($1.txt, $1.barlen, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7733*/
					$put($1.txt, $1.barlen + 1, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7734*/
				} /*7734*/
				$puti($1.sbs, ($1.barlen * 6) + 18, $get($1.encs, 11)); /*7736*/
			} else { /*7744*/
				$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, $1.checksum1)); /*7738*/
				if ($1.includecheckintext) { /*7742*/
					$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7740*/
				} else { /*7742*/
					$put($1.txt, $1.barlen, $a(["", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7742*/
				} /*7742*/
				$puti($1.sbs, ($1.barlen * 6) + 12, $get($1.encs, 11)); /*7744*/
			} /*7744*/
		} else { /*7747*/
			$puti($1.sbs, ($1.barlen * 6) + 6, $get($1.encs, 11)); /*7747*/
		} /*7747*/
		$k[$j++] = Infinity; /*7759*/
		$k[$j++] = "ren"; /*7754*/
		$k[$j++] = $0.renlinear; /*7754*/
		$k[$j++] = "sbs"; /*7754*/
		$k[$j++] = Infinity; /*7754*/
		var _3F = $1.sbs; /*7753*/
		for (var _3G = 0, _3H = _3F.length; _3G < _3H; _3G++) { /*7753*/
			$k[$j++] = $get(_3F, _3G) - 48; /*7753*/
		} /*7753*/
		var _3J = $a(); /*7754*/
		$k[$j++] = _3J; /*7755*/
		$k[$j++] = "bhs"; /*7755*/
		$k[$j++] = Infinity; /*7755*/
		for (var _3L = 0, _3M = ~~(($1.sbs.length + 1) / 2); _3L < _3M; _3L++) { /*7754*/
			$k[$j++] = $1.height; /*7754*/
		} /*7754*/
		var _3O = $a(); /*7755*/
		$k[$j++] = _3O; /*7756*/
		$k[$j++] = "bbs"; /*7756*/
		$k[$j++] = Infinity; /*7756*/
		for (var _3Q = 0, _3R = ~~(($1.sbs.length + 1) / 2); _3Q < _3R; _3Q++) { /*7755*/
			$k[$j++] = 0; /*7755*/
		} /*7755*/
		var _3S = $a(); /*7756*/
		$k[$j++] = _3S; /*7758*/
		if ($1.includetext) { /*7758*/
			$k[$j++] = "txt"; /*7757*/
			$k[$j++] = $1.txt; /*7757*/
		} /*7757*/
		$k[$j++] = "opt"; /*7759*/
		$k[$j++] = $1.options; /*7759*/
		var _3W = $d(); /*7759*/
		$k[$j++] = _3W; /*7762*/
		if (!$1.dontdraw) { /*7762*/
			$0.renlinear(); /*7762*/
		} /*7762*/
	};
	$0.bc412 = function() {
		var $1 = {}; /*7789*/
		$1.options = $k[--$j]; /*7791*/
		$1.barcode = $k[--$j]; /*7792*/
		$1.dontdraw = false; /*7794*/
		$1.includecheck = false; /*7795*/
		$1.validatecheck = false; /*7796*/
		$1.includetext = false; /*7797*/
		$1.includecheckintext = false; /*7798*/
		$1.includestartstop = false; /*7799*/
		$1.semi = false; /*7800*/
		$1.textfont = "Courier"; /*7801*/
		$1.textsize = 10; /*7802*/
		$1.textyoffset = -8.5; /*7803*/
		$1.height = 1; /*7804*/
		$forall($1.options, function() { /*7815*/
			var _3 = $k[--$j]; /*7815*/
			$1[$k[--$j]] = _3; /*7815*/
		}); /*7815*/
		$1.textfont = "" + $1.textfont; /*7817*/
		$1.textsize = +$1.textsize; /*7818*/
		$1.textyoffset = +$1.textyoffset; /*7819*/
		$1.height = +$1.height; /*7820*/
		if ($1.semi) { /*7825*/
			$1.includecheck = true; /*7823*/
			$1.includestartstop = true; /*7824*/
		} /*7824*/
		$1.barchars = "0R9GLVHA8EZ4NTS1J2Q6C7DYKBUIX3FWP5M"; /*7828*/
		$1.charvals = {}; /*7829*/
		for (var _A = 0; _A <= 34; _A += 1) { /*7830*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*7830*/
		} /*7830*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*7837*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*7834*/
			if (!_K) { /*7836*/
				$k[$j++] = "bwipp.bc412badCharacter"; /*7835*/
				$k[$j++] = "BC412 must contain only digits and capital letters except O"; /*7835*/
				$0.raiseerror(); /*7835*/
			} /*7835*/
		} /*7835*/
		$k[$j++] = "barlen"; /*7839*/
		$k[$j++] = $1.barcode.length; /*7839*/
		if ($1.validatecheck) { /*7839*/
			var _N = $k[--$j]; /*7839*/
			$k[$j++] = _N - 1; /*7839*/
		} /*7839*/
		var _O = $k[--$j]; /*7839*/
		$1[$k[--$j]] = _O; /*7839*/
		$1.checksum = 0; /*7841*/
		for (var _S = 0, _R = $1.barlen - 1; _S <= _R; _S += 1) { /*7845*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _S, 1)) + $1.checksum; /*7844*/
		} /*7844*/
		$1.checksum = $1.checksum % 35; /*7846*/
		if ($1.validatecheck) { /*7853*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*7850*/
				$k[$j++] = "bwipp.bc412badCheckDigit"; /*7849*/
				$k[$j++] = "Incorrect BC412 check digit provided"; /*7849*/
				$0.raiseerror(); /*7849*/
			} /*7849*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*7851*/
			$1.includecheck = true; /*7852*/
		} /*7852*/
		$1.encs = $a(["11111115", "13111212", "11131113", "12111213", "12121311", "13131111", "12111312", "11131212", "11121411", "11151111", "15111111", "11111511", "12131211", "13121112", "13111212", "11111214", "12121113", "11111313", "13111113", "11121213", "11141112", "11121312", "11141211", "14121111", "12121212", "11131311", "13121211", "12111411", "14111211", "11111412", "12111114", "14111112", "12141111", "11121114", "12131112", "12", "111"]); /*7865*/
		$1.sbs = $s((($1.barlen + 1) * 8) + 5); /*7867*/
		if ($1.includecheck) { /*7871*/
			$1.txt = $a($1.barlen + 1); /*7869*/
		} else { /*7871*/
			$1.txt = $a($1.barlen); /*7871*/
		} /*7871*/
		if ($1.includestartstop) { /*7881*/
			$puti($1.sbs, 0, $get($1.encs, 35)); /*7876*/
			$1.pos = 2; /*7877*/
			$1.txtpos = 3; /*7878*/
		} else { /*7881*/
			$1.pos = 0; /*7880*/
			$1.txtpos = 0; /*7881*/
		} /*7881*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*7890*/
			$1.i = _x; /*7885*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*7886*/
			$puti($1.sbs, $1.pos, $get($1.encs, $1.indx)); /*7887*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7888*/
			$1.pos = $1.pos + 8; /*7889*/
		} /*7889*/
		if ($1.includecheck) { /*7901*/
			$puti($1.sbs, $1.pos, $get($1.encs, $1.checksum)); /*7894*/
			if ($1.includecheckintext) { /*7898*/
				$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), ($1.barlen * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7896*/
			} else { /*7898*/
				$put($1.txt, $1.barlen, $a(["", ($1.barlen * 12) + $1.txtpos, $1.textyoffset, $1.textfont, $1.textsize])); /*7898*/
			} /*7898*/
			$1.pos = $1.pos + 8; /*7900*/
		} /*7900*/
		if ($1.includestartstop) { /*7907*/
			$puti($1.sbs, $1.pos, $get($1.encs, 36)); /*7905*/
			$1.pos = $1.pos + 2; /*7906*/
		} /*7906*/
		$1.sbs = $geti($1.sbs, 0, $1.pos); /*7910*/
		$k[$j++] = Infinity; /*7919*/
		$k[$j++] = "ren"; /*7914*/
		$k[$j++] = $0.renlinear; /*7914*/
		$k[$j++] = "sbs"; /*7914*/
		$k[$j++] = Infinity; /*7914*/
		$forall($1.sbs, function() { /*7913*/
			var _1v = $k[--$j]; /*7913*/
			$k[$j++] = _1v - 48; /*7913*/
		}); /*7913*/
		var _1w = $a(); /*7914*/
		$k[$j++] = _1w; /*7915*/
		$k[$j++] = "bhs"; /*7915*/
		$k[$j++] = Infinity; /*7915*/
		for (var _1y = 0, _1z = ~~(($1.sbs.length + 1) / 2); _1y < _1z; _1y++) { /*7914*/
			$k[$j++] = $1.height; /*7914*/
		} /*7914*/
		var _21 = $a(); /*7915*/
		$k[$j++] = _21; /*7916*/
		$k[$j++] = "bbs"; /*7916*/
		$k[$j++] = Infinity; /*7916*/
		for (var _23 = 0, _24 = ~~(($1.sbs.length + 1) / 2); _23 < _24; _23++) { /*7915*/
			$k[$j++] = 0; /*7915*/
		} /*7915*/
		var _25 = $a(); /*7916*/
		$k[$j++] = _25; /*7918*/
		if ($1.includetext) { /*7918*/
			$k[$j++] = "txt"; /*7917*/
			$k[$j++] = $1.txt; /*7917*/
		} /*7917*/
		$k[$j++] = "opt"; /*7919*/
		$k[$j++] = $1.options; /*7919*/
		var _29 = $d(); /*7919*/
		$k[$j++] = _29; /*7922*/
		if (!$1.dontdraw) { /*7922*/
			$0.renlinear(); /*7922*/
		} /*7922*/
	};
	$0.rationalizedCodabar = function() {
		var $1 = {}; /*7949*/
		$1.options = $k[--$j]; /*7951*/
		$1.barcode = $k[--$j]; /*7952*/
		$1.dontdraw = false; /*7954*/
		$1.altstartstop = false; /*7955*/
		$1.includecheck = false; /*7956*/
		$1.validatecheck = false; /*7957*/
		$1.includetext = false; /*7958*/
		$1.includecheckintext = false; /*7959*/
		$1.textfont = "Courier"; /*7960*/
		$1.textsize = 10; /*7961*/
		$1.textyoffset = -8.5; /*7962*/
		$1.height = 1; /*7963*/
		$forall($1.options, function() { /*7974*/
			var _3 = $k[--$j]; /*7974*/
			$1[$k[--$j]] = _3; /*7974*/
		}); /*7974*/
		$1.textfont = "" + $1.textfont; /*7976*/
		$1.textsize = +$1.textsize; /*7977*/
		$1.textyoffset = +$1.textyoffset; /*7978*/
		$1.height = +$1.height; /*7979*/
		$1.encs = $a(["11111331", "11113311", "11131131", "33111111", "11311311", "31111311", "13111131", "13113111", "13311111", "31131111", "11133111", "11331111", "31113131", "31311131", "31313111", "11313131", "11331311", "13131131", "11131331", "11133311"]); /*7987*/
		if ($1.altstartstop) { /*7993*/
			$1.barchars = "0123456789-$:/.+TN*E"; /*7991*/
		} else { /*7993*/
			$1.barchars = "0123456789-$:/.+ABCD"; /*7993*/
		} /*7993*/
		$1.charvals = {}; /*7995*/
		for (var _B = 0; _B <= 19; _B += 1) { /*7996*/
			$put($1.charvals, $geti($1.barchars, _B, 1), _B); /*7996*/
		} /*7996*/
		$1.bodyvals = {}; /*7997*/
		for (var _F = 0; _F <= 15; _F += 1) { /*7998*/
			$put($1.bodyvals, $geti($1.barchars, _F, 1), _F); /*7998*/
		} /*7998*/
		$1.ssvals = {}; /*7999*/
		for (var _J = 16; _J <= 19; _J += 1) { /*8000*/
			$put($1.ssvals, $geti($1.barchars, _J, 1), _J); /*8000*/
		} /*8000*/
		var _Q = $get($1.ssvals, $geti($1.barcode, 0, 1)) !== undefined; /*8003*/
		var _V = $get($1.ssvals, $geti($1.barcode, $1.barcode.length - 1, 1)) !== undefined; /*8004*/
		if ((!_Q) || (!_V)) { /*8010*/
			if ($1.altstartstop) { /*8008*/
				$k[$j++] = "bwipp.rationalizedCodabarBadAltStartStop"; /*8006*/
				$k[$j++] = "Codabar start and stop characters must be one of E N T or *"; /*8006*/
				$0.raiseerror(); /*8006*/
			} else { /*8008*/
				$k[$j++] = "bwipp.rationalizedCodabarBadStartStop"; /*8008*/
				$k[$j++] = "Codabar start and stop characters must be one of A B C or D"; /*8008*/
				$0.raiseerror(); /*8008*/
			} /*8008*/
		} /*8008*/
		for (var _Z = 1, _Y = $1.barcode.length - 2; _Z <= _Y; _Z += 1) { /*8015*/
			var _d = $get($1.bodyvals, $geti($1.barcode, _Z, 1)) !== undefined; /*8012*/
			if (!_d) { /*8014*/
				$k[$j++] = "bwipp.rationalizedCodabarBadCharacter"; /*8013*/
				$k[$j++] = "Codabar body must contain only digits and symbols - $ : / . +"; /*8013*/
				$0.raiseerror(); /*8013*/
			} /*8013*/
		} /*8013*/
		$k[$j++] = "barlen"; /*8017*/
		$k[$j++] = $1.barcode.length; /*8017*/
		if ($1.validatecheck) { /*8017*/
			var _g = $k[--$j]; /*8017*/
			$k[$j++] = _g - 1; /*8017*/
		} /*8017*/
		var _h = $k[--$j]; /*8017*/
		$1[$k[--$j]] = _h; /*8017*/
		$1.checksum = 0; /*8019*/
		for (var _l = 0, _k = $1.barlen - 2; _l <= _k; _l += 1) { /*8023*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _l, 1)) + $1.checksum; /*8022*/
		} /*8022*/
		$1.checksum = $get($1.charvals, $geti($1.barcode, $1.barcode.length - 1, 1)) + $1.checksum; /*8025*/
		$1.checksum = (16 - ($1.checksum % 16)) % 16; /*8026*/
		if ($1.validatecheck) { /*8036*/
			if ($get($1.barcode, $1.barlen - 1) != $get($1.barchars, $1.checksum)) { /*8030*/
				$k[$j++] = "bwipp.rationalizedCodabarBadCheckDigit"; /*8029*/
				$k[$j++] = "Incorrect Codabar check digit provided"; /*8029*/
				$0.raiseerror(); /*8029*/
			} /*8029*/
			var _16 = $s($1.barlen); /*8031*/
			$puti(_16, 0, $geti($1.barcode, 0, $1.barlen - 1)); /*8032*/
			$puti(_16, $1.barlen - 1, $geti($1.barcode, $1.barlen, 1)); /*8033*/
			$1.barcode = _16; /*8034*/
			$1.includecheck = true; /*8035*/
		} /*8035*/
		$k[$j++] = "sbs"; /*8038*/
		$k[$j++] = $1.barlen; /*8038*/
		if ($1.includecheck) { /*8038*/
			var _1G = $k[--$j]; /*8038*/
			$k[$j++] = _1G + 1; /*8038*/
		} /*8038*/
		var _1I = $s($k[--$j] * 8); /*8038*/
		$1[$k[--$j]] = _1I; /*8038*/
		$k[$j++] = "txt"; /*8039*/
		$k[$j++] = $1.barlen; /*8039*/
		if ($1.includecheck) { /*8039*/
			var _1M = $k[--$j]; /*8039*/
			$k[$j++] = _1M + 1; /*8039*/
		} /*8039*/
		var _1O = $a($k[--$j]); /*8039*/
		$1[$k[--$j]] = _1O; /*8039*/
		$1.xpos = 0; /*8041*/
		for (var _1S = 0, _1R = $1.barlen - 2; _1S <= _1R; _1S += 1) { /*8051*/
			$1.i = _1S; /*8043*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8044*/
			$1.enc = $get($1.encs, $1.indx); /*8045*/
			$puti($1.sbs, $1.i * 8, $1.enc); /*8046*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*8047*/
			for (var _1o = 0; _1o <= 7; _1o += 1) { /*8050*/
				$1.xpos = ($get($1.enc, _1o) - 48) + $1.xpos; /*8049*/
			} /*8049*/
		} /*8049*/
		if ($1.includecheck) { /*8075*/
			$puti($1.sbs, ($1.barlen * 8) - 8, $get($1.encs, $1.checksum)); /*8056*/
			if ($1.includecheckintext) { /*8060*/
				$put($1.txt, $1.barlen - 1, $a([$geti($1.barchars, $1.checksum, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*8058*/
			} else { /*8060*/
				$put($1.txt, $1.barlen - 1, $a([" ", $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*8060*/
			} /*8060*/
			for (var _2G = 0; _2G <= 7; _2G += 1) { /*8064*/
				$1.xpos = ($get($get($1.encs, $1.checksum), _2G) - 48) + $1.xpos; /*8063*/
			} /*8063*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.barlen - 1, 1)); /*8066*/
			$1.enc = $get($1.encs, $1.indx); /*8067*/
			$puti($1.sbs, $1.barlen * 8, $1.enc); /*8068*/
			$put($1.txt, $1.barlen, $a([$geti($1.barcode, $1.barlen - 1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*8069*/
		} else { /*8075*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.barlen - 1, 1)); /*8072*/
			$1.enc = $get($1.encs, $1.indx); /*8073*/
			$puti($1.sbs, ($1.barlen * 8) - 8, $1.enc); /*8074*/
			$put($1.txt, $1.barlen - 1, $a([$geti($1.barcode, $1.barlen - 1, 1), $1.xpos, $1.textyoffset, $1.textfont, $1.textsize])); /*8075*/
		} /*8075*/
		$k[$j++] = Infinity; /*8087*/
		$k[$j++] = "ren"; /*8082*/
		$k[$j++] = $0.renlinear; /*8082*/
		$k[$j++] = "sbs"; /*8082*/
		$k[$j++] = Infinity; /*8082*/
		$forall($1.sbs, function() { /*8081*/
			var _33 = $k[--$j]; /*8081*/
			$k[$j++] = _33 - 48; /*8081*/
		}); /*8081*/
		var _34 = $a(); /*8082*/
		$k[$j++] = _34; /*8083*/
		$k[$j++] = "bhs"; /*8083*/
		$k[$j++] = Infinity; /*8083*/
		for (var _36 = 0, _37 = ~~(($1.sbs.length + 1) / 2); _36 < _37; _36++) { /*8082*/
			$k[$j++] = $1.height; /*8082*/
		} /*8082*/
		var _39 = $a(); /*8083*/
		$k[$j++] = _39; /*8084*/
		$k[$j++] = "bbs"; /*8084*/
		$k[$j++] = Infinity; /*8084*/
		for (var _3B = 0, _3C = ~~(($1.sbs.length + 1) / 2); _3B < _3C; _3B++) { /*8083*/
			$k[$j++] = 0; /*8083*/
		} /*8083*/
		var _3D = $a(); /*8084*/
		$k[$j++] = _3D; /*8086*/
		if ($1.includetext) { /*8086*/
			$k[$j++] = "txt"; /*8085*/
			$k[$j++] = $1.txt; /*8085*/
		} /*8085*/
		$k[$j++] = "opt"; /*8087*/
		$k[$j++] = $1.options; /*8087*/
		var _3H = $d(); /*8087*/
		$k[$j++] = _3H; /*8090*/
		if (!$1.dontdraw) { /*8090*/
			$0.renlinear(); /*8090*/
		} /*8090*/
	};
	$0.onecode = function() {
		var $1 = {}; /*8117*/
		$1.options = $k[--$j]; /*8119*/
		$1.barcode = $k[--$j]; /*8120*/
		$1.dontdraw = false; /*8122*/
		$1.height = 0.15; /*8123*/
		$forall($1.options, function() { /*8134*/
			var _3 = $k[--$j]; /*8134*/
			$1[$k[--$j]] = _3; /*8134*/
		}); /*8134*/
		$1.height = +$1.height; /*8136*/
		$1.barlen = $1.barcode.length; /*8138*/
		$k[$j++] = "txtdict"; /*8147*/
		$k[$j++] = Infinity; /*8147*/
		var _9 = $eq($geti($1.barcode, 5, 1), "9") ? 14 : 11; /*8144*/
		$k[$j++] = 2; /*8147*/
		$k[$j++] = 2; /*8147*/
		$k[$j++] = 5; /*8147*/
		$k[$j++] = 5; /*8147*/
		$k[$j++] = _9; /*8147*/
		$k[$j++] = _9; /*8147*/
		$k[$j++] = 20; /*8147*/
		$k[$j++] = 20; /*8147*/
		$k[$j++] = 25; /*8147*/
		$k[$j++] = 25; /*8147*/
		$k[$j++] = 29; /*8147*/
		$k[$j++] = 29; /*8147*/
		var _A = $d(); /*8147*/
		$1[$k[--$j]] = _A; /*8148*/
		$1.txt = $a($1.barlen + 6); /*8149*/
		$1.spacecnt = 0; /*8150*/
		for (var _G = 0, _F = $1.barlen - 1; _G <= _F; _G += 1) { /*8158*/
			$1.i = _G; /*8152*/
			var _J = $get($1.txtdict, $1.i) !== undefined; /*8153*/
			if (_J) { /*8156*/
				$put($1.txt, $1.i + $1.spacecnt, $a([" ", 0, 0, "", 0])); /*8154*/
				$1.spacecnt = $1.spacecnt + 1; /*8155*/
			} /*8155*/
			$put($1.txt, $1.i + $1.spacecnt, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*8157*/
		} /*8157*/
		$1.txt = $geti($1.txt, 0, $1.barcode.length + $1.spacecnt); /*8159*/
		$1.normalize = function() {
			$1.base = $k[--$j]; /*8162*/
			$1.num = $k[--$j]; /*8163*/
			for (var _d = $1.num.length - 1; _d >= 1; _d -= 1) { /*8168*/
				$1.i = _d; /*8165*/
				var _e = $1.num; /*8166*/
				var _f = $1.i; /*8166*/
				$put(_e, _f - 1, $get(_e, _f - 1) + (~~($get($1.num, $1.i) / $1.base))); /*8166*/
				$put($1.num, $1.i, $get($1.num, $1.i) % $1.base); /*8167*/
			} /*8167*/
			for (;;) { /*8174*/
				if ($lt($get($1.num, 0), $1.base)) { /*8170*/
					break; /*8170*/
				} /*8170*/
				$k[$j++] = Infinity; /*8171*/
				$k[$j++] = 0; /*8171*/
				$forall($1.num); /*8171*/
				$1.num = $a(); /*8171*/
				$put($1.num, 0, $get($1.num, 0) + (~~($get($1.num, 1) / $1.base))); /*8172*/
				$put($1.num, 1, $get($1.num, 1) % $1.base); /*8173*/
			} /*8173*/
			$k[$j++] = Infinity; /*8176*/
			$1.i = true; /*8176*/
			var _16 = $1.num; /*8176*/
			for (var _17 = 0, _18 = _16.length; _17 < _18; _17++) { /*8176*/
				var _19 = $get(_16, _17); /*8176*/
				$k[$j++] = _19; /*8176*/
				if ((_19 == 0) && $1.i) { /*8176*/
					$j--; /*8176*/
				} else { /*8176*/
					$1.i = false; /*8176*/
				} /*8176*/
			} /*8176*/
			$1.num = $a(); /*8176*/
			if ($1.num.length == 0) { /*8177*/
				$1.num = $a([0]); /*8177*/
			} /*8177*/
			$k[$j++] = $1.num; /*8178*/
		}; /*8179*/
		$1.bigadd = function() {
			var _1F = $k[--$j]; /*8182*/
			var _1G = $k[--$j]; /*8182*/
			$1.offset = Math.abs(_1F.length - _1G.length); /*8183*/
			if (_1F.length < _1G.length) { /*8184*/
				var _ = _1F; /*8184*/
				_1F = _1G; /*8184*/
				_1G = _; /*8184*/
			} /*8184*/
			$1.a = _1F; /*8185*/
			$1.b = _1G; /*8185*/
			for (var _1J = 0, _1I = $1.b.length - 1; _1J <= _1I; _1J += 1) { /*8188*/
				var _1K = $1.a; /*8187*/
				var _1L = $1.offset; /*8187*/
				$put(_1K, _1J + _1L, $get(_1K, _1J + _1L) + $get($1.b, _1J)); /*8187*/
			} /*8187*/
			$k[$j++] = $1.a; /*8189*/
		}; /*8190*/
		if ($1.barlen == 20) { /*8193*/
			$k[$j++] = $a([0]); /*8193*/
		} /*8193*/
		if ($1.barlen == 25) { /*8194*/
			$k[$j++] = $a([1]); /*8194*/
		} /*8194*/
		if ($1.barlen == 29) { /*8195*/
			$k[$j++] = $a([1, 0, 0, 0, 0, 1]); /*8195*/
		} /*8195*/
		if ($1.barlen == 31) { /*8196*/
			$k[$j++] = $a([1, 0, 0, 0, 1, 0, 0, 0, 0, 1]); /*8196*/
		} /*8196*/
		var _1Y = $k[--$j]; /*8197*/
		$k[$j++] = "binval"; /*8197*/
		$k[$j++] = _1Y; /*8197*/
		$k[$j++] = Infinity; /*8197*/
		$forall($geti($1.barcode, 20, $1.barlen - 20), function() { /*8197*/
			var _1c = $k[--$j]; /*8197*/
			$k[$j++] = _1c - 48; /*8197*/
		}); /*8197*/
		var _1d = $a(); /*8197*/
		$k[$j++] = _1d; /*8197*/
		$1.bigadd(); /*8197*/
		var _1e = $k[--$j]; /*8197*/
		$1[$k[--$j]] = _1e; /*8197*/
		$k[$j++] = Infinity; /*8198*/
		var _1g = $1.binval; /*8198*/
		for (var _1h = 0, _1i = _1g.length; _1h < _1i; _1h++) { /*8198*/
			$k[$j++] = $get(_1g, _1h); /*8198*/
		} /*8198*/
		$k[$j++] = $get($1.barcode, 0) - 48; /*8198*/
		$1.binval = $a(); /*8198*/
		$k[$j++] = "binval"; /*8199*/
		$k[$j++] = Infinity; /*8199*/
		var _1n = $1.binval; /*8199*/
		for (var _1o = 0, _1p = _1n.length; _1o < _1p; _1o++) { /*8199*/
			$k[$j++] = $get(_1n, _1o) * 5; /*8199*/
		} /*8199*/
		var _1r = $a(); /*8199*/
		$k[$j++] = _1r; /*8199*/
		$k[$j++] = $a([$get($1.barcode, 1) - 48]); /*8199*/
		$1.bigadd(); /*8199*/
		$k[$j++] = 10; /*8199*/
		$1.normalize(); /*8199*/
		var _1v = $k[--$j]; /*8199*/
		$1[$k[--$j]] = _1v; /*8199*/
		$k[$j++] = Infinity; /*8200*/
		var _1x = $1.binval; /*8200*/
		for (var _1y = 0, _1z = _1x.length; _1y < _1z; _1y++) { /*8200*/
			$k[$j++] = $get(_1x, _1y); /*8200*/
		} /*8200*/
		$forall($geti($1.barcode, 2, 18), function() { /*8200*/
			var _23 = $k[--$j]; /*8200*/
			$k[$j++] = _23 - 48; /*8200*/
		}); /*8200*/
		$1.binval = $a(); /*8200*/
		$1.bytes = $a(13); /*8203*/
		$k[$j++] = Infinity; /*8204*/
		var _26 = $1.binval; /*8204*/
		for (var _27 = 0, _28 = _26.length; _27 < _28; _27++) { /*8204*/
			$k[$j++] = $get(_26, _27); /*8204*/
		} /*8204*/
		$1.bintmp = $a(); /*8204*/
		for (var _2B = 12; _2B >= 0; _2B -= 1) { /*8214*/
			$1.i = _2B; /*8206*/
			for (var _2E = 0, _2D = $1.bintmp.length - 2; _2E <= _2D; _2E += 1) { /*8211*/
				$1.j = _2E; /*8208*/
				var _2F = $1.bintmp; /*8209*/
				var _2G = $1.j; /*8209*/
				$put(_2F, _2G + 1, $get(_2F, _2G + 1) + (($get($1.bintmp, $1.j) % 256) * 10)); /*8209*/
				$put($1.bintmp, $1.j, ~~($get($1.bintmp, $1.j) / 256)); /*8210*/
			} /*8210*/
			$put($1.bytes, $1.i, $get($1.bintmp, $1.bintmp.length - 1) % 256); /*8212*/
			var _2V = $1.bintmp; /*8213*/
			var _2W = $1.bintmp; /*8213*/
			$put(_2V, _2W.length - 1, ~~($get(_2V, _2W.length - 1) / 256)); /*8213*/
		} /*8213*/
		$1.fcs = 2047; /*8217*/
		$1.dat = $get($1.bytes, 0) << 5; /*8218*/
		for (var _2a = 0, _2b = 6; _2a < _2b; _2a++) { /*8227*/
			if ((($1.fcs ^ $1.dat) & 1024) != 0) { /*8223*/
				$1.fcs = ($1.fcs << 1) ^ 3893; /*8221*/
			} else { /*8223*/
				$1.fcs = $1.fcs << 1; /*8223*/
			} /*8223*/
			$1.fcs = $1.fcs & 2047; /*8225*/
			$1.dat = $1.dat << 1; /*8226*/
		} /*8226*/
		for (var _2i = 1; _2i <= 12; _2i += 1) { /*8239*/
			$1.dat = $get($1.bytes, _2i) << 3; /*8229*/
			for (var _2l = 0, _2m = 8; _2l < _2m; _2l++) { /*8238*/
				if ((($1.fcs ^ $1.dat) & 1024) != 0) { /*8234*/
					$1.fcs = ($1.fcs << 1) ^ 3893; /*8232*/
				} else { /*8234*/
					$1.fcs = $1.fcs << 1; /*8234*/
				} /*8234*/
				$1.fcs = $1.fcs & 2047; /*8236*/
				$1.dat = $1.dat << 1; /*8237*/
			} /*8237*/
		} /*8237*/
		$1.codewords = $a(10); /*8242*/
		for (var _2u = 9; _2u >= 0; _2u -= 1) { /*8257*/
			$1.i = _2u; /*8244*/
			if ($1.i == 9) { /*8248*/
				$1.b = 636; /*8246*/
			} else { /*8248*/
				$1.b = 1365; /*8248*/
			} /*8248*/
			for (var _2y = 0, _2x = $1.binval.length - 2; _2y <= _2x; _2y += 1) { /*8254*/
				$1.j = _2y; /*8251*/
				var _2z = $1.binval; /*8252*/
				var _30 = $1.j; /*8252*/
				$put(_2z, _30 + 1, $get(_2z, _30 + 1) + (($get($1.binval, $1.j) % $1.b) * 10)); /*8252*/
				$put($1.binval, $1.j, ~~($get($1.binval, $1.j) / $1.b)); /*8253*/
			} /*8253*/
			$put($1.codewords, $1.i, $get($1.binval, $1.binval.length - 1) % $1.b); /*8255*/
			var _3I = $1.binval; /*8256*/
			var _3J = $1.binval; /*8256*/
			$put(_3I, _3J.length - 1, ~~($get(_3I, _3J.length - 1) / $1.b)); /*8256*/
		} /*8256*/
		$put($1.codewords, 9, $get($1.codewords, 9) * 2); /*8260*/
		if (($1.fcs & 1024) != 0) { /*8263*/
			$put($1.codewords, 0, $get($1.codewords, 0) + 659); /*8262*/
		} /*8262*/
		$1.tab513 = $a([31, 7936, 47, 7808, 55, 7552, 59, 7040, 61, 6016, 62, 3968, 79, 7744, 87, 7488, 91, 6976, 93, 5952, 94, 3904, 103, 7360, 107, 6848, 109, 5824, 110, 3776, 115, 6592, 117, 5568, 118, 3520, 121, 5056, 122, 3008, 124, 1984, 143, 7712, 151, 7456, 155, 6944, 157, 5920, 158, 3872, 167, 7328, 171, 6816, 173, 5792, 174, 3744, 179, 6560, 181, 5536, 182, 3488, 185, 5024, 186, 2976, 188, 1952, 199, 7264, 203, 6752, 205, 5728, 206, 3680, 211, 6496, 213, 5472, 214, 3424, 217, 4960, 218, 2912, 220, 1888, 227, 6368, 229, 5344, 230, 3296, 233, 4832, 234, 2784, 236, 1760, 241, 4576, 242, 2528, 244, 1504, 248, 992, 271, 7696, 279, 7440, 283, 6928, 285, 5904, 286, 3856, 295, 7312, 299, 6800, 301, 5776, 302, 3728, 307, 6544, 309, 5520, 310, 3472, 313, 5008, 314, 2960, 316, 1936, 327, 7248, 331, 6736, 333, 5712, 334, 3664, 339, 6480, 341, 5456, 342, 3408, 345, 4944, 346, 2896, 348, 1872, 355, 6352, 357, 5328, 358, 3280, 361, 4816, 362, 2768, 364, 1744, 369, 4560, 370, 2512, 372, 1488, 376, 976, 391, 7216, 395, 6704, 397, 5680, 398, 3632, 403, 6448, 405, 5424, 406, 3376, 409, 4912, 410, 2864, 412, 1840, 419, 6320, 421, 5296, 422, 3248, 425, 4784, 426, 2736, 428, 1712, 433, 4528, 434, 2480, 436, 1456, 440, 944, 451, 6256, 453, 5232, 454, 3184, 457, 4720, 458, 2672, 460, 1648, 465, 4464, 466, 2416, 468, 1392, 472, 880, 481, 4336, 482, 2288, 484, 1264, 488, 752, 527, 7688, 535, 7432, 539, 6920, 541, 5896, 542, 3848, 551, 7304, 555, 6792, 557, 5768, 558, 3720, 563, 6536, 565, 5512, 566, 3464, 569, 5000, 570, 2952, 572, 1928, 583, 7240, 587, 6728, 589, 5704, 590, 3656, 595, 6472, 597, 5448, 598, 3400, 601, 4936, 602, 2888, 604, 1864, 611, 6344, 613, 5320, 614, 3272, 617, 4808, 618, 2760, 620, 1736, 625, 4552, 626, 2504, 628, 1480, 632, 968, 647, 7208, 651, 6696, 653, 5672, 654, 3624, 659, 6440, 661, 5416, 662, 3368, 665, 4904, 666, 2856, 668, 1832, 675, 6312, 677, 5288, 678, 3240, 681, 4776, 682, 2728, 684, 1704, 689, 4520, 690, 2472, 692, 1448, 696, 936, 707, 6248, 709, 5224, 710, 3176, 713, 4712, 714, 2664, 716, 1640, 721, 4456, 722, 2408, 724, 1384, 728, 872, 737, 4328, 738, 2280, 740, 1256, 775, 7192, 779, 6680, 781, 5656, 782, 3608, 787, 6424, 789, 5400, 790, 3352, 793, 4888, 794, 2840, 796, 1816, 803, 6296, 805, 5272, 806, 3224, 809, 4760, 810, 2712, 812, 1688, 817, 4504, 818, 2456, 820, 1432, 824, 920, 835, 6232, 837, 5208, 838, 3160, 841, 4696, 842, 2648, 844, 1624, 849, 4440, 850, 2392, 852, 1368, 865, 4312, 866, 2264, 868, 1240, 899, 6200, 901, 5176, 902, 3128, 905, 4664, 906, 2616, 908, 1592, 913, 4408, 914, 2360, 916, 1336, 929, 4280, 930, 2232, 932, 1208, 961, 4216, 962, 2168, 964, 1144, 1039, 7684, 1047, 7428, 1051, 6916, 1053, 5892, 1054, 3844, 1063, 7300, 1067, 6788, 1069, 5764, 1070, 3716, 1075, 6532, 1077, 5508, 1078, 3460, 1081, 4996, 1082, 2948, 1084, 1924, 1095, 7236, 1099, 6724, 1101, 5700, 1102, 3652, 1107, 6468, 1109, 5444, 1110, 3396, 1113, 4932, 1114, 2884, 1116, 1860, 1123, 6340, 1125, 5316, 1126, 3268, 1129, 4804, 1130, 2756, 1132, 1732, 1137, 4548, 1138, 2500, 1140, 1476, 1159, 7204, 1163, 6692, 1165, 5668, 1166, 3620, 1171, 6436, 1173, 5412, 1174, 3364, 1177, 4900, 1178, 2852, 1180, 1828, 1187, 6308, 1189, 5284, 1190, 3236, 1193, 4772, 1194, 2724, 1196, 1700, 1201, 4516, 1202, 2468, 1204, 1444, 1219, 6244, 1221, 5220, 1222, 3172, 1225, 4708, 1226, 2660, 1228, 1636, 1233, 4452, 1234, 2404, 1236, 1380, 1249, 4324, 1250, 2276, 1287, 7188, 1291, 6676, 1293, 5652, 1294, 3604, 1299, 6420, 1301, 5396, 1302, 3348, 1305, 4884, 1306, 2836, 1308, 1812, 1315, 6292, 1317, 5268, 1318, 3220, 1321, 4756, 1322, 2708, 1324, 1684, 1329, 4500, 1330, 2452, 1332, 1428, 1347, 6228, 1349, 5204, 1350, 3156, 1353, 4692, 1354, 2644, 1356, 1620, 1361, 4436, 1362, 2388, 1377, 4308, 1378, 2260, 1411, 6196, 1413, 5172, 1414, 3124, 1417, 4660, 1418, 2612, 1420, 1588, 1425, 4404, 1426, 2356, 1441, 4276, 1442, 2228, 1473, 4212, 1474, 2164, 1543, 7180, 1547, 6668, 1549, 5644, 1550, 3596, 1555, 6412, 1557, 5388, 1558, 3340, 1561, 4876, 1562, 2828, 1564, 1804, 1571, 6284, 1573, 5260, 1574, 3212, 1577, 4748, 1578, 2700, 1580, 1676, 1585, 4492, 1586, 2444, 1603, 6220, 1605, 5196, 1606, 3148, 1609, 4684, 1610, 2636, 1617, 4428, 1618, 2380, 1633, 4300, 1634, 2252, 1667, 6188, 1669, 5164, 1670, 3116, 1673, 4652, 1674, 2604, 1681, 4396, 1682, 2348, 1697, 4268, 1698, 2220, 1729, 4204, 1730, 2156, 1795, 6172, 1797, 5148, 1798, 3100, 1801, 4636, 1802, 2588, 1809, 4380, 1810, 2332, 1825, 4252, 1826, 2204, 1857, 4188, 1858, 2140, 1921, 4156, 1922, 2108, 2063, 7682, 2071, 7426, 2075, 6914, 2077, 5890, 2078, 3842, 2087, 7298, 2091, 6786, 2093, 5762, 2094, 3714, 2099, 6530, 2101, 5506, 2102, 3458, 2105, 4994, 2106, 2946, 2119, 7234, 2123, 6722, 2125, 5698, 2126, 3650, 2131, 6466, 2133, 5442, 2134, 3394, 2137, 4930, 2138, 2882, 2147, 6338, 2149, 5314, 2150, 3266, 2153, 4802, 2154, 2754, 2161, 4546, 2162, 2498, 2183, 7202, 2187, 6690, 2189, 5666, 2190, 3618, 2195, 6434, 2197, 5410, 2198, 3362, 2201, 4898, 2202, 2850, 2211, 6306, 2213, 5282, 2214, 3234, 2217, 4770, 2218, 2722, 2225, 4514, 2226, 2466, 2243, 6242, 2245, 5218, 2246, 3170, 2249, 4706, 2250, 2658, 2257, 4450, 2258, 2402, 2273, 4322, 2311, 7186, 2315, 6674, 2317, 5650, 2318, 3602, 2323, 6418, 2325, 5394, 2326, 3346, 2329, 4882, 2330, 2834, 2339, 6290, 2341, 5266, 2342, 3218, 2345, 4754, 2346, 2706, 2353, 4498, 2354, 2450, 2371, 6226, 2373, 5202, 2374, 3154, 2377, 4690, 2378, 2642, 2385, 4434, 2401, 4306, 2435, 6194, 2437, 5170, 2438, 3122, 2441, 4658, 2442, 2610, 2449, 4402, 2465, 4274, 2497, 4210, 2567, 7178, 2571, 6666, 2573, 5642, 2574, 3594, 2579, 6410, 2581, 5386, 2582, 3338, 2585, 4874, 2586, 2826, 2595, 6282, 2597, 5258, 2598, 3210, 2601, 4746, 2602, 2698, 2609, 4490, 2627, 6218, 2629, 5194, 2630, 3146, 2633, 4682, 2641, 4426, 2657, 4298, 2691, 6186, 2693, 5162, 2694, 3114, 2697, 4650, 2705, 4394, 2721, 4266, 2753, 4202, 2819, 6170, 2821, 5146, 2822, 3098, 2825, 4634, 2833, 4378, 2849, 4250, 2881, 4186, 2945, 4154, 3079, 7174, 3083, 6662, 3085, 5638, 3086, 3590, 3091, 6406, 3093, 5382, 3094, 3334, 3097, 4870, 3107, 6278, 3109, 5254, 3110, 3206, 3113, 4742, 3121, 4486, 3139, 6214, 3141, 5190, 3145, 4678, 3153, 4422, 3169, 4294, 3203, 6182, 3205, 5158, 3209, 4646, 3217, 4390, 3233, 4262, 3265, 4198, 3331, 6166, 3333, 5142, 3337, 4630, 3345, 4374, 3361, 4246, 3393, 4182, 3457, 4150, 3587, 6158, 3589, 5134, 3593, 4622, 3601, 4366, 3617, 4238, 3649, 4174, 3713, 4142, 3841, 4126, 4111, 7681, 4119, 7425, 4123, 6913, 4125, 5889, 4135, 7297, 4139, 6785, 4141, 5761, 4147, 6529, 4149, 5505, 4153, 4993, 4167, 7233, 4171, 6721, 4173, 5697, 4179, 6465, 4181, 5441, 4185, 4929, 4195, 6337, 4197, 5313, 4201, 4801, 4209, 4545, 4231, 7201, 4235, 6689, 4237, 5665, 4243, 6433, 4245, 5409, 4249, 4897, 4259, 6305, 4261, 5281, 4265, 4769, 4273, 4513, 4291, 6241, 4293, 5217, 4297, 4705, 4305, 4449, 4359, 7185, 4363, 6673, 4365, 5649, 4371, 6417, 4373, 5393, 4377, 4881, 4387, 6289, 4389, 5265, 4393, 4753, 4401, 4497, 4419, 6225, 4421, 5201, 4425, 4689, 4483, 6193, 4485, 5169, 4489, 4657, 4615, 7177, 4619, 6665, 4621, 5641, 4627, 6409, 4629, 5385, 4633, 4873, 4643, 6281, 4645, 5257, 4649, 4745, 4675, 6217, 4677, 5193, 4739, 6185, 4741, 5161, 4867, 6169, 4869, 5145, 5127, 7173, 5131, 6661, 5133, 5637, 5139, 6405, 5141, 5381, 5155, 6277, 5157, 5253, 5187, 6213, 5251, 6181, 5379, 6165, 5635, 6157, 6151, 7171, 6155, 6659, 6163, 6403, 6179, 6275, 6211, 5189, 4681, 4433, 4321, 3142, 2634, 2386, 2274, 1612, 1364, 1252, 856, 744, 496]); /*8353*/
		$1.tab213 = $a([3, 6144, 5, 5120, 6, 3072, 9, 4608, 10, 2560, 12, 1536, 17, 4352, 18, 2304, 20, 1280, 24, 768, 33, 4224, 34, 2176, 36, 1152, 40, 640, 48, 384, 65, 4160, 66, 2112, 68, 1088, 72, 576, 80, 320, 96, 192, 129, 4128, 130, 2080, 132, 1056, 136, 544, 144, 288, 257, 4112, 258, 2064, 260, 1040, 264, 528, 513, 4104, 514, 2056, 516, 1032, 1025, 4100, 1026, 2052, 2049, 4098, 4097, 2050, 1028, 520, 272, 160]); /*8362*/
		$1.chars = $a(10); /*8364*/
		for (var _3W = 0; _3W <= 9; _3W += 1) { /*8373*/
			$1.i = _3W; /*8366*/
			var _3Z = $get($1.codewords, $1.i); /*8367*/
			$k[$j++] = _3Z; /*8371*/
			if (_3Z <= 1286) { /*8370*/
				var _3c = $get($1.tab513, $k[--$j]); /*8368*/
				$k[$j++] = _3c; /*8368*/
			} else { /*8370*/
				var _3f = $get($1.tab213, $k[--$j] - 1287); /*8370*/
				$k[$j++] = _3f; /*8370*/
			} /*8370*/
			$put($1.chars, $1.i, $k[--$j]); /*8372*/
		} /*8372*/
		for (var _3j = 9; _3j >= 0; _3j -= 1) { /*8380*/
			$1.i = _3j; /*8376*/
			if (((~~Math.pow(2, $1.i)) & $1.fcs) != 0) { /*8379*/
				$put($1.chars, $1.i, $get($1.chars, $1.i) ^ 8191); /*8378*/
			} /*8378*/
		} /*8378*/
		$1.barmap = $a([7, 2, 4, 3, 1, 10, 0, 0, 9, 12, 2, 8, 5, 5, 6, 11, 8, 9, 3, 1, 0, 1, 5, 12, 2, 5, 1, 8, 4, 4, 9, 11, 6, 3, 8, 10, 3, 9, 7, 6, 5, 11, 1, 4, 8, 5, 2, 12, 9, 10, 0, 2, 7, 1, 6, 7, 3, 6, 4, 9, 0, 3, 8, 6, 6, 4, 2, 7, 1, 1, 9, 9, 7, 10, 5, 2, 4, 0, 3, 8, 6, 2, 0, 4, 8, 11, 1, 0, 9, 8, 3, 12, 2, 6, 7, 7, 5, 1, 4, 10, 1, 12, 6, 9, 7, 3, 8, 0, 5, 8, 9, 7, 4, 6, 2, 10, 3, 4, 0, 5, 8, 4, 5, 7, 7, 11, 1, 9, 6, 0, 9, 6, 0, 6, 4, 8, 2, 1, 3, 2, 5, 9, 8, 12, 4, 11, 6, 1, 9, 5, 7, 4, 3, 3, 1, 2, 0, 7, 2, 0, 1, 3, 4, 1, 6, 10, 3, 5, 8, 7, 9, 4, 2, 11, 5, 6, 0, 8, 7, 12, 4, 2, 8, 1, 5, 10, 3, 0, 9, 3, 0, 9, 6, 5, 2, 4, 7, 8, 1, 7, 5, 0, 4, 5, 2, 3, 0, 10, 6, 12, 9, 2, 3, 11, 1, 6, 8, 8, 7, 9, 5, 4, 0, 11, 1, 5, 2, 2, 9, 1, 4, 12, 8, 3, 6, 6, 7, 0, 3, 7, 4, 7, 7, 5, 0, 12, 1, 11, 2, 9, 9, 0, 6, 8, 5, 3, 3, 10, 8, 2]); /*8397*/
		$1.bbs = $a(65); /*8399*/
		$1.bhs = $a(65); /*8400*/
		for (var _3u = 0; _3u <= 64; _3u += 1) { /*8421*/
			$1.i = _3u; /*8402*/
			$1.dec = ($get($1.chars, $get($1.barmap, $1.i * 4)) & (~~Math.pow(2, $get($1.barmap, ($1.i * 4) + 1)))) != 0; /*8403*/
			$1.asc = ($get($1.chars, $get($1.barmap, ($1.i * 4) + 2)) & (~~Math.pow(2, $get($1.barmap, ($1.i * 4) + 3)))) != 0; /*8404*/
			if ((!$1.dec) && (!$1.asc)) { /*8408*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8406*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8407*/
			} /*8407*/
			if ((!$1.dec) && $1.asc) { /*8412*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8410*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8411*/
			} /*8411*/
			if ($1.dec && (!$1.asc)) { /*8416*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8414*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8415*/
			} /*8415*/
			if ($1.dec && $1.asc) { /*8420*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8418*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8419*/
			} /*8419*/
		} /*8419*/
		$k[$j++] = Infinity; /*8434*/
		$k[$j++] = "ren"; /*8429*/
		$k[$j++] = $0.renlinear; /*8429*/
		$k[$j++] = "bbs"; /*8429*/
		$k[$j++] = $1.bbs; /*8429*/
		$k[$j++] = "bhs"; /*8429*/
		$k[$j++] = $1.bhs; /*8429*/
		$k[$j++] = "sbs"; /*8429*/
		$k[$j++] = Infinity; /*8429*/
		for (var _4k = 0, _4l = $1.bhs.length - 1; _4k < _4l; _4k++) { /*8428*/
			$k[$j++] = 1.44; /*8428*/
			$k[$j++] = 1.872; /*8428*/
		} /*8428*/
		$k[$j++] = 1.44; /*8428*/
		var _4m = $a(); /*8429*/
		$k[$j++] = _4m; /*8434*/
		$k[$j++] = "txt"; /*8434*/
		$k[$j++] = $1.txt; /*8434*/
		$k[$j++] = "textxalign"; /*8434*/
		$k[$j++] = "left"; /*8434*/
		$k[$j++] = "textfont"; /*8434*/
		$k[$j++] = "Helvetica"; /*8434*/
		$k[$j++] = "textyoffset"; /*8434*/
		$k[$j++] = 1; /*8434*/
		$k[$j++] = "textxoffset"; /*8434*/
		$k[$j++] = -0.3; /*8434*/
		$k[$j++] = "opt"; /*8434*/
		$k[$j++] = $1.options; /*8434*/
		var _4p = $d(); /*8434*/
		$k[$j++] = _4p; /*8437*/
		if (!$1.dontdraw) { /*8437*/
			$0.renlinear(); /*8437*/
		} /*8437*/
	};
	$0.postnet = function() {
		var $1 = {}; /*8464*/
		$1.options = $k[--$j]; /*8466*/
		$1.barcode = $k[--$j]; /*8467*/
		$1.dontdraw = false; /*8469*/
		$1.includetext = false; /*8470*/
		$1.validatecheck = false; /*8471*/
		$1.includecheckintext = false; /*8472*/
		$1.textfont = "Courier"; /*8473*/
		$1.textsize = 10; /*8474*/
		$1.textyoffset = -8.5; /*8475*/
		$1.height = 0.125; /*8476*/
		$forall($1.options, function() { /*8487*/
			var _3 = $k[--$j]; /*8487*/
			$1[$k[--$j]] = _3; /*8487*/
		}); /*8487*/
		$1.textfont = "" + $1.textfont; /*8489*/
		$1.textsize = +$1.textsize; /*8490*/
		$1.textyoffset = +$1.textyoffset; /*8491*/
		$1.height = +$1.height; /*8492*/
		$k[$j++] = "barlen"; /*8494*/
		$k[$j++] = $1.barcode.length; /*8494*/
		if ($1.validatecheck) { /*8494*/
			var _B = $k[--$j]; /*8494*/
			$k[$j++] = _B - 1; /*8494*/
		} /*8494*/
		var _C = $k[--$j]; /*8494*/
		$1[$k[--$j]] = _C; /*8494*/
		if ((($1.barlen != 5) && ($1.barlen != 9)) && ($1.barlen != 11)) { /*8499*/
			$k[$j++] = "bwipp.postnetBadLength"; /*8498*/
			$k[$j++] = "USPS POSTNET must be 5, 9 or 11 digits excluding check digit"; /*8498*/
			$0.raiseerror(); /*8498*/
		} /*8498*/
		$forall($1.barcode, function() { /*8504*/
			var _I = $k[--$j]; /*8501*/
			if ((_I < 48) || (_I > 57)) { /*8503*/
				$k[$j++] = "bwipp.postnetBadCharacter"; /*8502*/
				$k[$j++] = "USPS POSTNET must contain only digits"; /*8502*/
				$0.raiseerror(); /*8502*/
			} /*8502*/
		}); /*8502*/
		$1.barchars = "0123456789"; /*8507*/
		$1.checksum = 0; /*8509*/
		for (var _L = 0, _K = $1.barlen - 1; _L <= _K; _L += 1) { /*8513*/
			$1.i = _L; /*8511*/
			$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*8512*/
		} /*8512*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*8514*/
		if ($1.validatecheck) { /*8520*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8518*/
				$k[$j++] = "bwipp.postnetBadCheckDigit"; /*8517*/
				$k[$j++] = "Incorrect USPS POSTNET check digit provided"; /*8517*/
				$0.raiseerror(); /*8517*/
			} /*8517*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8519*/
		} /*8519*/
		$1.encs = $a(["55222", "22255", "22525", "22552", "25225", "25252", "25522", "52225", "52252", "52522", "5", "5"]); /*8527*/
		$1.bhs = $a(($1.barlen * 5) + 7); /*8529*/
		$1.txt = $a($1.barlen + 1); /*8530*/
		$1.enc = $get($1.encs, 10); /*8533*/
		$1.heights = $a($1.enc.length); /*8534*/
		for (var _m = 0, _l = $1.enc.length - 1; _m <= _l; _m += 1) { /*8538*/
			$1.j = _m; /*8536*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8537*/
		} /*8537*/
		$puti($1.bhs, 0, $1.heights); /*8539*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*8551*/
			$1.i = _x; /*8542*/
			$1.enc = $get($1.encs, $get($1.barcode, $1.i) - 48); /*8543*/
			$1.heights = $a($1.enc.length); /*8544*/
			for (var _17 = 0, _16 = $1.enc.length - 1; _17 <= _16; _17 += 1) { /*8548*/
				$1.j = _17; /*8546*/
				$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8547*/
			} /*8547*/
			$puti($1.bhs, ($1.i * 5) + 1, $1.heights); /*8549*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8550*/
		} /*8550*/
		$1.enc = $get($1.encs, $1.checksum); /*8554*/
		$1.heights = $a($1.enc.length); /*8555*/
		for (var _1Y = 0, _1X = $1.enc.length - 1; _1Y <= _1X; _1Y += 1) { /*8559*/
			$1.j = _1Y; /*8557*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8558*/
		} /*8558*/
		$puti($1.bhs, ($1.barlen * 5) + 1, $1.heights); /*8560*/
		if ($1.includecheckintext) { /*8565*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8563*/
		} else { /*8565*/
			$put($1.txt, $1.barlen, $a([" ", ((($1.barlen * 5) + 1) * 72) / 25, $1.textyoffset, $1.textfont, $1.textsize])); /*8565*/
		} /*8565*/
		$1.enc = $get($1.encs, 11); /*8569*/
		$1.heights = $a($1.enc.length); /*8570*/
		for (var _26 = 0, _25 = $1.enc.length - 1; _26 <= _25; _26 += 1) { /*8574*/
			$1.j = _26; /*8572*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8573*/
		} /*8573*/
		$puti($1.bhs, ($1.barlen * 5) + 6, $1.heights); /*8575*/
		$k[$j++] = Infinity; /*8586*/
		$k[$j++] = "ren"; /*8582*/
		$k[$j++] = $0.renlinear; /*8582*/
		$k[$j++] = "bhs"; /*8582*/
		$k[$j++] = $1.bhs; /*8582*/
		$k[$j++] = "bbs"; /*8582*/
		$k[$j++] = Infinity; /*8582*/
		for (var _2I = 0, _2J = $1.bhs.length; _2I < _2J; _2I++) { /*8581*/
			$k[$j++] = 0; /*8581*/
		} /*8581*/
		var _2K = $a(); /*8582*/
		$k[$j++] = _2K; /*8583*/
		$k[$j++] = "sbs"; /*8583*/
		$k[$j++] = Infinity; /*8583*/
		for (var _2M = 0, _2N = $1.bhs.length - 1; _2M < _2N; _2M++) { /*8582*/
			$k[$j++] = 1.44; /*8582*/
			$k[$j++] = 1.872; /*8582*/
		} /*8582*/
		$k[$j++] = 1.44; /*8582*/
		var _2O = $a(); /*8583*/
		$k[$j++] = _2O; /*8585*/
		if ($1.includetext) { /*8585*/
			$k[$j++] = "txt"; /*8584*/
			$k[$j++] = $1.txt; /*8584*/
		} /*8584*/
		$k[$j++] = "opt"; /*8586*/
		$k[$j++] = $1.options; /*8586*/
		var _2S = $d(); /*8586*/
		$k[$j++] = _2S; /*8589*/
		if (!$1.dontdraw) { /*8589*/
			$0.renlinear(); /*8589*/
		} /*8589*/
	};
	$0.planet = function() {
		var $1 = {}; /*8616*/
		$1.options = $k[--$j]; /*8618*/
		$1.barcode = $k[--$j]; /*8619*/
		$1.dontdraw = false; /*8621*/
		$1.includetext = false; /*8622*/
		$1.validatecheck = false; /*8623*/
		$1.includecheckintext = false; /*8624*/
		$1.textfont = "Courier"; /*8625*/
		$1.textsize = 10; /*8626*/
		$1.textyoffset = -8.5; /*8627*/
		$1.height = 0.125; /*8628*/
		$forall($1.options, function() { /*8639*/
			var _3 = $k[--$j]; /*8639*/
			$1[$k[--$j]] = _3; /*8639*/
		}); /*8639*/
		$1.textfont = "" + $1.textfont; /*8641*/
		$1.textsize = +$1.textsize; /*8642*/
		$1.textyoffset = +$1.textyoffset; /*8643*/
		$1.height = +$1.height; /*8644*/
		$k[$j++] = "barlen"; /*8646*/
		$k[$j++] = $1.barcode.length; /*8646*/
		if ($1.validatecheck) { /*8646*/
			var _B = $k[--$j]; /*8646*/
			$k[$j++] = _B - 1; /*8646*/
		} /*8646*/
		var _C = $k[--$j]; /*8646*/
		$1[$k[--$j]] = _C; /*8646*/
		if (($1.barlen != 11) && ($1.barlen != 13)) { /*8651*/
			$k[$j++] = "bwipp.planetBadLength"; /*8650*/
			$k[$j++] = "USPS PLANET must be 11 or 13 digits excluding check digit"; /*8650*/
			$0.raiseerror(); /*8650*/
		} /*8650*/
		$forall($1.barcode, function() { /*8656*/
			var _H = $k[--$j]; /*8653*/
			if ((_H < 48) || (_H > 57)) { /*8655*/
				$k[$j++] = "bwipp.planetBadCharacter"; /*8654*/
				$k[$j++] = "USPS PLANET must contain only digits"; /*8654*/
				$0.raiseerror(); /*8654*/
			} /*8654*/
		}); /*8654*/
		$1.barchars = "0123456789"; /*8659*/
		$1.checksum = 0; /*8662*/
		for (var _K = 0, _J = $1.barlen - 1; _K <= _J; _K += 1) { /*8666*/
			$1.i = _K; /*8664*/
			$1.checksum = $1.checksum + ($get($1.barcode, $1.i) - 48); /*8665*/
		} /*8665*/
		$1.checksum = (10 - ($1.checksum % 10)) % 10; /*8667*/
		if ($1.validatecheck) { /*8673*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8671*/
				$k[$j++] = "bwipp.planetBadCheckDigit"; /*8670*/
				$k[$j++] = "Incorrect USPS PLANET check digit provided"; /*8670*/
				$0.raiseerror(); /*8670*/
			} /*8670*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8672*/
		} /*8672*/
		$1.encs = $a(["22555", "55522", "55252", "55225", "52552", "52525", "52255", "25552", "25525", "25255", "5", "5"]); /*8680*/
		$1.bhs = $a(($1.barlen * 5) + 7); /*8682*/
		$1.txt = $a($1.barlen + 1); /*8683*/
		$1.enc = $get($1.encs, 10); /*8686*/
		$1.heights = $a($1.enc.length); /*8687*/
		for (var _l = 0, _k = $1.enc.length - 1; _l <= _k; _l += 1) { /*8691*/
			$1.j = _l; /*8689*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8690*/
		} /*8690*/
		$puti($1.bhs, 0, $1.heights); /*8692*/
		for (var _w = 0, _v = $1.barlen - 1; _w <= _v; _w += 1) { /*8704*/
			$1.i = _w; /*8695*/
			$1.enc = $get($1.encs, $get($1.barcode, $1.i) - 48); /*8696*/
			$1.heights = $a($1.enc.length); /*8697*/
			for (var _16 = 0, _15 = $1.enc.length - 1; _16 <= _15; _16 += 1) { /*8701*/
				$1.j = _16; /*8699*/
				$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8700*/
			} /*8700*/
			$puti($1.bhs, ($1.i * 5) + 1, $1.heights); /*8702*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8703*/
		} /*8703*/
		$1.enc = $get($1.encs, $1.checksum); /*8707*/
		$1.heights = $a($1.enc.length); /*8708*/
		for (var _1X = 0, _1W = $1.enc.length - 1; _1X <= _1W; _1X += 1) { /*8712*/
			$1.j = _1X; /*8710*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8711*/
		} /*8711*/
		$puti($1.bhs, ($1.barlen * 5) + 1, $1.heights); /*8713*/
		if ($1.includecheckintext) { /*8718*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 5) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8716*/
		} else { /*8718*/
			$put($1.txt, $1.barlen, $a([" ", ((($1.barlen * 5) + 1) * 72) / 25, $1.textyoffset, $1.textfont, $1.textsize])); /*8718*/
		} /*8718*/
		$1.enc = $get($1.encs, 11); /*8722*/
		$1.heights = $a($1.enc.length); /*8723*/
		for (var _25 = 0, _24 = $1.enc.length - 1; _25 <= _24; _25 += 1) { /*8727*/
			$1.j = _25; /*8725*/
			$put($1.heights, $1.j, ((~~$z($geti($1.enc, $1.j, 1))) * $1.height) / 5); /*8726*/
		} /*8726*/
		$puti($1.bhs, ($1.barlen * 5) + 6, $1.heights); /*8728*/
		$k[$j++] = Infinity; /*8739*/
		$k[$j++] = "ren"; /*8735*/
		$k[$j++] = $0.renlinear; /*8735*/
		$k[$j++] = "bhs"; /*8735*/
		$k[$j++] = $1.bhs; /*8735*/
		$k[$j++] = "bbs"; /*8735*/
		$k[$j++] = Infinity; /*8735*/
		for (var _2H = 0, _2I = $1.bhs.length; _2H < _2I; _2H++) { /*8734*/
			$k[$j++] = 0; /*8734*/
		} /*8734*/
		var _2J = $a(); /*8735*/
		$k[$j++] = _2J; /*8736*/
		$k[$j++] = "sbs"; /*8736*/
		$k[$j++] = Infinity; /*8736*/
		for (var _2L = 0, _2M = $1.bhs.length - 1; _2L < _2M; _2L++) { /*8735*/
			$k[$j++] = 1.44; /*8735*/
			$k[$j++] = 1.872; /*8735*/
		} /*8735*/
		$k[$j++] = 1.44; /*8735*/
		var _2N = $a(); /*8736*/
		$k[$j++] = _2N; /*8738*/
		if ($1.includetext) { /*8738*/
			$k[$j++] = "txt"; /*8737*/
			$k[$j++] = $1.txt; /*8737*/
		} /*8737*/
		$k[$j++] = "opt"; /*8739*/
		$k[$j++] = $1.options; /*8739*/
		var _2R = $d(); /*8739*/
		$k[$j++] = _2R; /*8742*/
		if (!$1.dontdraw) { /*8742*/
			$0.renlinear(); /*8742*/
		} /*8742*/
	};
	$0.royalmail = function() {
		var $1 = {}; /*8769*/
		$1.options = $k[--$j]; /*8771*/
		$1.barcode = $k[--$j]; /*8772*/
		$1.dontdraw = false; /*8774*/
		$1.includetext = false; /*8775*/
		$1.validatecheck = false; /*8776*/
		$1.includecheckintext = false; /*8777*/
		$1.textfont = "Courier"; /*8778*/
		$1.textsize = 10; /*8779*/
		$1.textyoffset = -8.5; /*8780*/
		$1.height = 0.175; /*8781*/
		$forall($1.options, function() { /*8792*/
			var _3 = $k[--$j]; /*8792*/
			$1[$k[--$j]] = _3; /*8792*/
		}); /*8792*/
		$1.textfont = "" + $1.textfont; /*8794*/
		$1.textsize = +$1.textsize; /*8795*/
		$1.textyoffset = +$1.textyoffset; /*8796*/
		$1.height = +$1.height; /*8797*/
		$1.barchars = "ZUVWXY501234B6789AHCDEFGNIJKLMTOPQRS"; /*8800*/
		$1.charvals = {}; /*8801*/
		for (var _9 = 0; _9 <= 35; _9 += 1) { /*8802*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*8802*/
		} /*8802*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*8809*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*8806*/
			if (!_J) { /*8808*/
				$k[$j++] = "bwipp.royalmailBadCharacter"; /*8807*/
				$k[$j++] = "RM4SCC must contain only capital letters and digits"; /*8807*/
				$0.raiseerror(); /*8807*/
			} /*8807*/
		} /*8807*/
		$k[$j++] = "barlen"; /*8811*/
		$k[$j++] = $1.barcode.length; /*8811*/
		if ($1.validatecheck) { /*8811*/
			var _M = $k[--$j]; /*8811*/
			$k[$j++] = _M - 1; /*8811*/
		} /*8811*/
		var _N = $k[--$j]; /*8811*/
		$1[$k[--$j]] = _N; /*8811*/
		$1.checksumrow = 0; /*8813*/
		$1.checksumcol = 0; /*8814*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*8820*/
			$1.i = _R; /*8816*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8817*/
			$1.checksumrow = $1.checksumrow + (~~($1.indx / 6)); /*8818*/
			$1.checksumcol = $1.checksumcol + ($1.indx % 6); /*8819*/
		} /*8819*/
		$1.checksum = (($1.checksumrow % 6) * 6) + ($1.checksumcol % 6); /*8821*/
		if ($1.validatecheck) { /*8827*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*8825*/
				$k[$j++] = "bwipp.royalmailBadCheckDigit"; /*8824*/
				$k[$j++] = "Incorrect RM4SCC check digit provided"; /*8824*/
				$0.raiseerror(); /*8824*/
			} /*8824*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*8826*/
		} /*8826*/
		$1.encs = $a(["3300", "2211", "2301", "2310", "3201", "3210", "1122", "0033", "0123", "0132", "1023", "1032", "1302", "0213", "0303", "0312", "1203", "1212", "1320", "0231", "0321", "0330", "1221", "1230", "3102", "2013", "2103", "2112", "3003", "3012", "3120", "2031", "2121", "2130", "3021", "3030", "2", "3"]); /*8838*/
		$1.encstr = $s(($1.barlen * 4) + 6); /*8840*/
		$1.txt = $a($1.barlen + 1); /*8841*/
		$puti($1.encstr, 0, $get($1.encs, 36)); /*8844*/
		for (var _x = 0, _w = $1.barlen - 1; _x <= _w; _x += 1) { /*8851*/
			$1.i = _x; /*8847*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*8848*/
			$puti($1.encstr, ($1.i * 4) + 1, $get($1.encs, $1.indx)); /*8849*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.i * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8850*/
		} /*8850*/
		$puti($1.encstr, ($1.barlen * 4) + 1, $get($1.encs, $1.checksum)); /*8854*/
		if ($1.includecheckintext) { /*8858*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum, 1), (($1.barlen * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8856*/
		} else { /*8858*/
			$put($1.txt, $1.barlen, $a([" ", (($1.barlen * 4) + 1) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8858*/
		} /*8858*/
		$puti($1.encstr, ($1.barlen * 4) + 5, $get($1.encs, 37)); /*8862*/
		$1.bbs = $a($1.encstr.length); /*8864*/
		$1.bhs = $a($1.encstr.length); /*8865*/
		for (var _1p = 0, _1o = $1.encstr.length - 1; _1p <= _1o; _1p += 1) { /*8885*/
			$1.i = _1p; /*8867*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*8868*/
			if ($eq($1.enc, "0")) { /*8872*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8870*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*8871*/
			} /*8871*/
			if ($eq($1.enc, "1")) { /*8876*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8874*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8875*/
			} /*8875*/
			if ($eq($1.enc, "2")) { /*8880*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*8878*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*8879*/
			} /*8879*/
			if ($eq($1.enc, "3")) { /*8884*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*8882*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*8883*/
			} /*8883*/
		} /*8883*/
		$k[$j++] = Infinity; /*8896*/
		$k[$j++] = "ren"; /*8893*/
		$k[$j++] = $0.renlinear; /*8893*/
		$k[$j++] = "bbs"; /*8893*/
		$k[$j++] = $1.bbs; /*8893*/
		$k[$j++] = "bhs"; /*8893*/
		$k[$j++] = $1.bhs; /*8893*/
		$k[$j++] = "sbs"; /*8893*/
		$k[$j++] = Infinity; /*8893*/
		for (var _2O = 0, _2P = $1.bhs.length - 1; _2O < _2P; _2O++) { /*8892*/
			$k[$j++] = 1.44; /*8892*/
			$k[$j++] = 1.872; /*8892*/
		} /*8892*/
		$k[$j++] = 1.44; /*8892*/
		var _2Q = $a(); /*8893*/
		$k[$j++] = _2Q; /*8895*/
		if ($1.includetext) { /*8895*/
			$k[$j++] = "txt"; /*8894*/
			$k[$j++] = $1.txt; /*8894*/
		} /*8894*/
		$k[$j++] = "opt"; /*8896*/
		$k[$j++] = $1.options; /*8896*/
		var _2U = $d(); /*8896*/
		$k[$j++] = _2U; /*8899*/
		if (!$1.dontdraw) { /*8899*/
			$0.renlinear(); /*8899*/
		} /*8899*/
	};
	$0.auspost = function() {
		var $1 = {}; /*8926*/
		$1.options = $k[--$j]; /*8928*/
		$1.barcode = $k[--$j]; /*8929*/
		$1.dontdraw = false; /*8931*/
		$1.includetext = false; /*8932*/
		$1.textfont = "Courier"; /*8933*/
		$1.textsize = 10; /*8934*/
		$1.textyoffset = -8.5; /*8935*/
		$1.height = 0.175; /*8936*/
		$1.custinfoenc = "character"; /*8937*/
		$forall($1.options, function() { /*8948*/
			var _3 = $k[--$j]; /*8948*/
			$1[$k[--$j]] = _3; /*8948*/
		}); /*8948*/
		$1.textfont = "" + $1.textfont; /*8950*/
		$1.textsize = +$1.textsize; /*8951*/
		$1.textyoffset = +$1.textyoffset; /*8952*/
		$1.height = +$1.height; /*8953*/
		$1.encs = $a(["000", "001", "002", "010", "011", "012", "020", "021", "022", "100", "101", "102", "110", "111", "112", "120", "121", "122", "200", "201", "202", "210", "211", "212", "220", "221", "222", "300", "301", "302", "310", "311", "312", "320", "321", "322", "023", "030", "031", "032", "033", "103", "113", "123", "130", "131", "132", "133", "203", "213", "223", "230", "231", "232", "233", "303", "313", "323", "330", "331", "332", "333", "003", "013", "00", "01", "02", "10", "11", "12", "20", "21", "22", "30", "13", "3"]); /*8967*/
		$1.barchars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz #"; /*8970*/
		$1.barlen = $1.barcode.length; /*8972*/
		if ($eq($geti($1.barcode, 0, 2), "11")) { /*8973*/
			$k[$j++] = 37; /*8973*/
		} /*8973*/
		if ($eq($geti($1.barcode, 0, 2), "45")) { /*8974*/
			$k[$j++] = 37; /*8974*/
		} /*8974*/
		if ($eq($geti($1.barcode, 0, 2), "59")) { /*8975*/
			$k[$j++] = 52; /*8975*/
		} /*8975*/
		if ($eq($geti($1.barcode, 0, 2), "62")) { /*8976*/
			$k[$j++] = 67; /*8976*/
		} /*8976*/
		$1.encstr = $s($k[--$j]); /*8977*/
		$1.txt = $a($1.barlen - 2); /*8978*/
		$puti($1.encstr, 0, $get($1.encs, 74)); /*8981*/
		for (var _Q = 0; _Q <= 1; _Q += 1) { /*8988*/
			$1.i = _Q; /*8985*/
			$puti($1.encstr, ($1.i * 2) + 2, $get($1.encs, (~~$z($geti($1.barcode, $1.i, 1))) + 64)); /*8987*/
		} /*8987*/
		for (var _Y = 2; _Y <= 9; _Y += 1) { /*8996*/
			$1.i = _Y; /*8992*/
			$puti($1.encstr, ($1.i * 2) + 2, $get($1.encs, (~~$z($geti($1.barcode, $1.i, 1))) + 64)); /*8994*/
			$put($1.txt, $1.i - 2, $a([$geti($1.barcode, $1.i, 1), ((($1.i - 2) * 2) + 6) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*8995*/
		} /*8995*/
		if ($eq($1.custinfoenc, "numeric")) { /*9018*/
			for (var _t = 0, _s = $1.barlen - 11; _t <= _s; _t += 1) { /*9005*/
				$1.i = _t; /*9001*/
				$puti($1.encstr, ($1.i * 2) + 22, $get($1.encs, (~~$z($geti($1.barcode, $1.i + 10, 1))) + 64)); /*9003*/
				$put($1.txt, $1.i + 8, $a([$geti($1.barcode, $1.i + 10, 1), (($1.i * 2) + 22) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9004*/
			} /*9004*/
			$1.ciflen = ($1.barlen - 10) * 2; /*9006*/
		} else { /*9018*/
			for (var _1E = 0, _1D = $1.barlen - 11; _1E <= _1D; _1E += 1) { /*9017*/
				$1.i = _1E; /*9009*/
				$search($1.barchars, $geti($1.barcode, $1.i + 10, 1)); /*9010*/
				$j--; /*9011*/
				$1.indx = $k[--$j].length; /*9012*/
				$j -= 2; /*9013*/
				$1.enc = $get($1.encs, $1.indx); /*9014*/
				$puti($1.encstr, ($1.i * 3) + 22, $1.enc); /*9015*/
				$put($1.txt, $1.i + 8, $a([$geti($1.barcode, $1.i + 10, 1), (($1.i * 3) + 22) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9016*/
			} /*9016*/
			$1.ciflen = ($1.barlen - 10) * 3; /*9018*/
		} /*9018*/
		for (var _1e = 22 + $1.ciflen, _1d = $1.encstr.length - 14; _1e <= _1d; _1e += 1) { /*9024*/
			$puti($1.encstr, _1e, $get($1.encs, 75)); /*9023*/
		} /*9023*/
		$1.rstable = $a(64 * 64); /*9027*/
		$k[$j++] = $1.rstable; /*9028*/
		$k[$j++] = 0; /*9028*/
		$k[$j++] = Infinity; /*9028*/
		for (var _1k = 0, _1l = 64; _1k < _1l; _1k++) { /*9028*/
			$k[$j++] = 0; /*9028*/
		} /*9028*/
		var _1m = $a(); /*9028*/
		var _1n = $k[--$j]; /*9028*/
		$puti($k[--$j], _1n, _1m); /*9028*/
		$k[$j++] = $1.rstable; /*9029*/
		$k[$j++] = 64; /*9029*/
		$k[$j++] = Infinity; /*9029*/
		for (var _1q = 0; _1q <= 63; _1q += 1) { /*9029*/
			$k[$j++] = _1q; /*9029*/
		} /*9029*/
		var _1r = $a(); /*9029*/
		var _1s = $k[--$j]; /*9029*/
		$puti($k[--$j], _1s, _1r); /*9029*/
		$1.prev = 1; /*9030*/
		for (var _1u = 0, _1v = 64; _1u < _1v; _1u++) { /*9045*/
			$1.next = $1.prev << 1; /*9032*/
			if (($1.next & 64) != 0) { /*9035*/
				$1.next = $1.next ^ 67; /*9034*/
			} /*9034*/
			for (var _1z = 0; _1z <= 63; _1z += 1) { /*9043*/
				$1.j = _1z; /*9037*/
				$1.nextcell = function() {
					$k[$j++] = $1.rstable; /*9038*/
					$k[$j++] = (64 * $1.next) + $1.j; /*9038*/
				}; /*9038*/
				$1.nextcell(); /*9039*/
				var _27 = $k[--$j]; /*9039*/
				$put($k[--$j], _27, $get($1.rstable, (64 * $1.prev) + $1.j) << 1); /*9039*/
				$1.nextcell(); /*9040*/
				var _29 = $k[--$j]; /*9040*/
				if (($get($k[--$j], _29) & 64) != 0) { /*9042*/
					$1.nextcell(); /*9041*/
					$1.nextcell(); /*9041*/
					var _2C = $k[--$j]; /*9041*/
					var _2E = $get($k[--$j], _2C); /*9041*/
					var _2F = $k[--$j]; /*9041*/
					$put($k[--$j], _2F, _2E ^ 67); /*9041*/
				} /*9041*/
			} /*9041*/
			$1.prev = $1.next; /*9044*/
		} /*9044*/
		$1.rscodes = $a((~~(($1.encstr.length - 16) / 3)) + 4); /*9048*/
		$k[$j++] = $1.rscodes; /*9049*/
		$k[$j++] = 0; /*9049*/
		$k[$j++] = Infinity; /*9049*/
		for (var _2L = 0, _2M = 4; _2L < _2M; _2L++) { /*9049*/
			$k[$j++] = 0; /*9049*/
		} /*9049*/
		var _2N = $a(); /*9049*/
		var _2O = $k[--$j]; /*9049*/
		$puti($k[--$j], _2O, _2N); /*9049*/
		for (var _2S = 2, _2R = $1.encstr.length - 16; _2S <= _2R; _2S += 3) { /*9057*/
			$1.i = _2S; /*9051*/
			$put($1.rscodes, ($1.rscodes.length - (~~(($1.i - 2) / 3))) - 1, (((~~$z($geti($1.encstr, $1.i, 1))) * 16) + ((~~$z($geti($1.encstr, $1.i + 1, 1))) * 4)) + (~~$z($geti($1.encstr, $1.i + 2, 1)))); /*9056*/
		} /*9056*/
		for (var _2g = $1.rscodes.length - 5; _2g >= 0; _2g -= 1) { /*9066*/
			$1.i = _2g; /*9059*/
			for (var _2h = 0; _2h <= 4; _2h += 1) { /*9065*/
				$1.j = _2h; /*9061*/
				$put($1.rscodes, $1.i + $1.j, $xo($get($1.rscodes, $1.i + $1.j), $get($1.rstable, (64 * $get($a([48, 17, 29, 30, 1]), $1.j)) + $get($1.rscodes, $1.i + 4)))); /*9064*/
			} /*9064*/
		} /*9064*/
		$1.checkcode = $strcpy($s(12), "000000000000"); /*9067*/
		for (var _2z = 0; _2z <= 3; _2z += 1) { /*9072*/
			$1.i = _2z; /*9069*/
			$1.enc = $cvrs($s(3), $get($1.rscodes, 3 - $1.i), 4); /*9070*/
			$puti($1.checkcode, ($1.i * 3) + (3 - $1.enc.length), $1.enc); /*9071*/
		} /*9071*/
		$puti($1.encstr, $1.encstr.length - 14, $1.checkcode); /*9075*/
		$puti($1.encstr, $1.encstr.length - 2, $get($1.encs, 74)); /*9076*/
		$1.bbs = $a($1.encstr.length); /*9078*/
		$1.bhs = $a($1.encstr.length); /*9079*/
		for (var _3M = 0, _3L = $1.encstr.length - 1; _3M <= _3L; _3M += 1) { /*9099*/
			$1.i = _3M; /*9081*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*9082*/
			if ($eq($1.enc, "0")) { /*9086*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*9084*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*9085*/
			} /*9085*/
			if ($eq($1.enc, "1")) { /*9090*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*9088*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*9089*/
			} /*9089*/
			if ($eq($1.enc, "2")) { /*9094*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*9092*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*9093*/
			} /*9093*/
			if ($eq($1.enc, "3")) { /*9098*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*9096*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*9097*/
			} /*9097*/
		} /*9097*/
		$k[$j++] = Infinity; /*9110*/
		$k[$j++] = "ren"; /*9107*/
		$k[$j++] = $0.renlinear; /*9107*/
		$k[$j++] = "bbs"; /*9107*/
		$k[$j++] = $1.bbs; /*9107*/
		$k[$j++] = "bhs"; /*9107*/
		$k[$j++] = $1.bhs; /*9107*/
		$k[$j++] = "sbs"; /*9107*/
		$k[$j++] = Infinity; /*9107*/
		for (var _3v = 0, _3w = $1.bhs.length - 1; _3v < _3w; _3v++) { /*9106*/
			$k[$j++] = 1.44; /*9106*/
			$k[$j++] = 1.872; /*9106*/
		} /*9106*/
		$k[$j++] = 1.44; /*9106*/
		var _3x = $a(); /*9107*/
		$k[$j++] = _3x; /*9109*/
		if ($1.includetext) { /*9109*/
			$k[$j++] = "txt"; /*9108*/
			$k[$j++] = $1.txt; /*9108*/
		} /*9108*/
		$k[$j++] = "opt"; /*9110*/
		$k[$j++] = $1.options; /*9110*/
		var _41 = $d(); /*9110*/
		$k[$j++] = _41; /*9113*/
		if (!$1.dontdraw) { /*9113*/
			$0.renlinear(); /*9113*/
		} /*9113*/
	};
	$0.kix = function() {
		var $1 = {}; /*9140*/
		$1.options = $k[--$j]; /*9142*/
		$1.barcode = $k[--$j]; /*9143*/
		$1.dontdraw = false; /*9145*/
		$1.includetext = false; /*9146*/
		$1.textfont = "Courier"; /*9147*/
		$1.textsize = 10; /*9148*/
		$1.textyoffset = -8.5; /*9149*/
		$1.height = 0.175; /*9150*/
		$forall($1.options, function() { /*9161*/
			var _3 = $k[--$j]; /*9161*/
			$1[$k[--$j]] = _3; /*9161*/
		}); /*9161*/
		$1.textfont = "" + $1.textfont; /*9163*/
		$1.textsize = +$1.textsize; /*9164*/
		$1.textyoffset = +$1.textyoffset; /*9165*/
		$1.height = +$1.height; /*9166*/
		$1.encs = $a(["0033", "0123", "0132", "1023", "1032", "1122", "0213", "0303", "0312", "1203", "1212", "1302", "0231", "0321", "0330", "1221", "1230", "1320", "2013", "2103", "2112", "3003", "3012", "3102", "2031", "2121", "2130", "3021", "3030", "3120", "2211", "2301", "2310", "3201", "3210", "3300"]); /*9176*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"; /*9179*/
		$1.charvals = {}; /*9180*/
		for (var _A = 0; _A <= 35; _A += 1) { /*9181*/
			$put($1.charvals, $geti($1.barchars, _A, 1), _A); /*9181*/
		} /*9181*/
		for (var _G = 0, _F = $1.barcode.length - 1; _G <= _F; _G += 1) { /*9188*/
			var _K = $get($1.charvals, $geti($1.barcode, _G, 1)) !== undefined; /*9185*/
			if (!_K) { /*9187*/
				$k[$j++] = "bwipp.kixBadCharacter"; /*9186*/
				$k[$j++] = "KIX must contain only capital letters and digits"; /*9186*/
				$0.raiseerror(); /*9186*/
			} /*9186*/
		} /*9186*/
		$1.barlen = $1.barcode.length; /*9190*/
		$1.encstr = $s($1.barlen * 4); /*9191*/
		$1.txt = $a($1.barlen); /*9192*/
		for (var _S = 0, _R = $1.barlen - 1; _S <= _R; _S += 1) { /*9199*/
			$1.i = _S; /*9195*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*9196*/
			$puti($1.encstr, $1.i * 4, $get($1.encs, $1.indx)); /*9197*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 4) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9198*/
		} /*9198*/
		$1.bbs = $a($1.encstr.length); /*9201*/
		$1.bhs = $a($1.encstr.length); /*9202*/
		for (var _t = 0, _s = $1.encstr.length - 1; _t <= _s; _t += 1) { /*9222*/
			$1.i = _t; /*9204*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*9205*/
			if ($eq($1.enc, "0")) { /*9209*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*9207*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*9208*/
			} /*9208*/
			if ($eq($1.enc, "1")) { /*9213*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*9211*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*9212*/
			} /*9212*/
			if ($eq($1.enc, "2")) { /*9217*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*9215*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*9216*/
			} /*9216*/
			if ($eq($1.enc, "3")) { /*9221*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*9219*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*9220*/
			} /*9220*/
		} /*9220*/
		$k[$j++] = Infinity; /*9233*/
		$k[$j++] = "ren"; /*9230*/
		$k[$j++] = $0.renlinear; /*9230*/
		$k[$j++] = "bbs"; /*9230*/
		$k[$j++] = $1.bbs; /*9230*/
		$k[$j++] = "bhs"; /*9230*/
		$k[$j++] = $1.bhs; /*9230*/
		$k[$j++] = "sbs"; /*9230*/
		$k[$j++] = Infinity; /*9230*/
		for (var _1S = 0, _1T = $1.bhs.length - 1; _1S < _1T; _1S++) { /*9229*/
			$k[$j++] = 1.44; /*9229*/
			$k[$j++] = 1.872; /*9229*/
		} /*9229*/
		$k[$j++] = 1.44; /*9229*/
		var _1U = $a(); /*9230*/
		$k[$j++] = _1U; /*9232*/
		if ($1.includetext) { /*9232*/
			$k[$j++] = "txt"; /*9231*/
			$k[$j++] = $1.txt; /*9231*/
		} /*9231*/
		$k[$j++] = "opt"; /*9233*/
		$k[$j++] = $1.options; /*9233*/
		var _1Y = $d(); /*9233*/
		$k[$j++] = _1Y; /*9236*/
		if (!$1.dontdraw) { /*9236*/
			$0.renlinear(); /*9236*/
		} /*9236*/
	};
	$0.japanpost = function() {
		var $1 = {}; /*9263*/
		$1.options = $k[--$j]; /*9265*/
		$1.barcode = $k[--$j]; /*9266*/
		$1.dontdraw = false; /*9268*/
		$1.includetext = false; /*9269*/
		$1.includecheckintext = false; /*9270*/
		$1.textfont = "Courier"; /*9271*/
		$1.textsize = 10; /*9272*/
		$1.textyoffset = -8.5; /*9273*/
		$1.height = 0.175; /*9274*/
		$forall($1.options, function() { /*9285*/
			var _3 = $k[--$j]; /*9285*/
			$1[$k[--$j]] = _3; /*9285*/
		}); /*9285*/
		$1.textfont = "" + $1.textfont; /*9287*/
		$1.textsize = +$1.textsize; /*9288*/
		$1.textyoffset = +$1.textyoffset; /*9289*/
		$1.height = +$1.height; /*9290*/
		$1.encs = $a(["300", "330", "312", "132", "321", "303", "123", "231", "213", "033", "030", "120", "102", "210", "012", "201", "021", "003", "333", "31", "13"]); /*9298*/
		$1.barchars = "0123456789-ABCDEFGHIJKLMNOPQRSTUVWXYZ"; /*9301*/
		$1.barlen = $1.barcode.length; /*9302*/
		$1.encstr = $s(((20 + 1) * 3) + 4); /*9304*/
		$1.digits = $a(20); /*9305*/
		$1.txt = $a($1.barlen + 1); /*9306*/
		$puti($1.encstr, 0, $get($1.encs, 19)); /*9309*/
		$1.checksum = 0; /*9311*/
		$1.j = 0; /*9312*/
		$1.i = 0; /*9312*/
		for (var _K = 0, _J = $1.barlen - 1; _K <= _J; _K += 1) { /*9346*/
			$1.i = _K; /*9314*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*9315*/
			$j--; /*9316*/
			$1.indx = $k[--$j].length; /*9317*/
			$j -= 2; /*9318*/
			if (($1.indx >= 11) && ($1.indx < 37)) { /*9329*/
				if ($1.j > 18) { /*9320*/
					break; /*9320*/
				} /*9320*/
				$1.digit = (~~(($1.indx - 1) / 10)) + 10; /*9324*/
				$puti($1.encstr, ($1.j * 3) + 2, $get($1.encs, $1.digit)); /*9325*/
				$1.checksum = $1.checksum + $1.digit; /*9326*/
				$put($1.digits, $1.j, $1.digit); /*9327*/
				$1.j = $1.j + 1; /*9328*/
			} /*9328*/
			if ($1.j > 19) { /*9330*/
				break; /*9330*/
			} /*9330*/
			$1.digit = 0; /*9331*/
			if ($1.indx == 37) { /*9334*/
				$1.digit = 14; /*9333*/
			} /*9333*/
			if (($1.indx >= 11) && ($1.indx < 37)) { /*9337*/
				$1.digit = ($1.indx - 1) % 10; /*9336*/
			} /*9336*/
			if ($1.indx < 11) { /*9340*/
				$1.digit = $1.indx; /*9339*/
			} /*9339*/
			$puti($1.encstr, ($1.j * 3) + 2, $get($1.encs, $1.digit)); /*9341*/
			$1.checksum = $1.checksum + $1.digit; /*9342*/
			$put($1.digits, $1.j, $1.digit); /*9343*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), (($1.j * 3) + 2) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9344*/
			$1.j = $1.j + 1; /*9345*/
		} /*9345*/
		for (var _19 = $1.j, _18 = 20 - 1; _19 <= _18; _19 += 1) { /*9354*/
			$1.k = _19; /*9350*/
			$puti($1.encstr, ($1.k * 3) + 2, $get($1.encs, 14)); /*9351*/
			$1.checksum = $1.checksum + 14; /*9352*/
			$put($1.digits, $1.k, 14); /*9353*/
		} /*9353*/
		$1.checksum = 19 - ($1.checksum % 19); /*9357*/
		$puti($1.encstr, 2 + (20 * 3), $get($1.encs, $1.checksum)); /*9358*/
		$puti($1.encstr, 2 + (21 * 3), $get($1.encs, 20)); /*9361*/
		$1.checkdigit = " "; /*9362*/
		if ($1.includecheckintext) { /*9365*/
			$1.checkdigit = $geti($1.barchars, $1.checksum, 1); /*9364*/
		} /*9364*/
		$put($1.txt, $1.i + 1, $a([$1.checkdigit, ((20 * 3) + 2) * 3.312, $1.textyoffset, $1.textfont, $1.textsize])); /*9366*/
		$puti($1.encstr, ((20 + 1) * 3) + 2, $get($1.encs, 20)); /*9369*/
		$1.bbs = $a((21 * 3) + 4); /*9371*/
		$1.bhs = $a($1.bbs.length); /*9372*/
		for (var _1i = 0, _1h = $1.bbs.length - 1; _1i <= _1h; _1i += 1) { /*9396*/
			$1.i = _1i; /*9374*/
			$1.enc = $geti($1.encstr, $1.i, 1); /*9375*/
			$1.bunit = 0; /*9376*/
			$1.hunit = 0; /*9377*/
			if ($eq($1.enc, "0")) { /*9381*/
				$1.bunit = 3; /*9379*/
				$1.hunit = 2; /*9380*/
			} /*9380*/
			if ($eq($1.enc, "1")) { /*9385*/
				$1.bunit = 0; /*9383*/
				$1.hunit = 5; /*9384*/
			} /*9384*/
			if ($eq($1.enc, "2")) { /*9389*/
				$1.bunit = 3; /*9387*/
				$1.hunit = 5; /*9388*/
			} /*9388*/
			if ($eq($1.enc, "3")) { /*9393*/
				$1.bunit = 0; /*9391*/
				$1.hunit = 8; /*9392*/
			} /*9392*/
			$put($1.bbs, $1.i, ($1.bunit * $1.height) / 8); /*9394*/
			$put($1.bhs, $1.i, ($1.hunit * $1.height) / 8); /*9395*/
		} /*9395*/
		$k[$j++] = Infinity; /*9407*/
		$k[$j++] = "ren"; /*9404*/
		$k[$j++] = $0.renlinear; /*9404*/
		$k[$j++] = "bbs"; /*9404*/
		$k[$j++] = $1.bbs; /*9404*/
		$k[$j++] = "bhs"; /*9404*/
		$k[$j++] = $1.bhs; /*9404*/
		$k[$j++] = "sbs"; /*9404*/
		$k[$j++] = Infinity; /*9404*/
		for (var _21 = 0, _22 = $1.bhs.length - 1; _21 < _22; _21++) { /*9403*/
			$k[$j++] = 1.44; /*9403*/
			$k[$j++] = 1.872; /*9403*/
		} /*9403*/
		$k[$j++] = 1.44; /*9403*/
		var _23 = $a(); /*9404*/
		$k[$j++] = _23; /*9406*/
		if ($1.includetext) { /*9406*/
			$k[$j++] = "txt"; /*9405*/
			$k[$j++] = $1.txt; /*9405*/
		} /*9405*/
		$k[$j++] = "opt"; /*9407*/
		$k[$j++] = $1.options; /*9407*/
		var _27 = $d(); /*9407*/
		$k[$j++] = _27; /*9410*/
		if (!$1.dontdraw) { /*9410*/
			$0.renlinear(); /*9410*/
		} /*9410*/
	};
	$0.msi = function() {
		var $1 = {}; /*9437*/
		$1.options = $k[--$j]; /*9439*/
		$1.barcode = $k[--$j]; /*9440*/
		$1.dontdraw = false; /*9442*/
		$1.includecheck = false; /*9443*/
		$1.includetext = false; /*9444*/
		$1.includecheckintext = false; /*9445*/
		$1.checktype = "mod10"; /*9446*/
		$1.badmod11 = false; /*9447*/
		$1.textfont = "Courier"; /*9448*/
		$1.textsize = 10; /*9449*/
		$1.textyoffset = -8.5; /*9450*/
		$1.height = 1; /*9451*/
		$forall($1.options, function() { /*9462*/
			var _3 = $k[--$j]; /*9462*/
			$1[$k[--$j]] = _3; /*9462*/
		}); /*9462*/
		$1.textfont = "" + $1.textfont; /*9464*/
		$1.textsize = +$1.textsize; /*9465*/
		$1.textyoffset = +$1.textyoffset; /*9466*/
		$1.height = +$1.height; /*9467*/
		$1.encs = $a(["12121212", "12121221", "12122112", "12122121", "12211212", "12211221", "12212112", "12212121", "21121212", "21121221", "21", "121"]); /*9474*/
		$1.barchars = "0123456789"; /*9477*/
		$1.barlen = $1.barcode.length; /*9479*/
		$1.txtlen = $1.barlen; /*9480*/
		$1.mod10 = function() {
			$1.code = $k[--$j]; /*9483*/
			$k[$j++] = 0; /*9484*/
			$k[$j++] = 0; /*9484*/
			$forall($1.code, function() { /*9484*/
				var _E = $k[--$j]; /*9484*/
				var _F = $k[--$j]; /*9484*/
				var _G = $k[--$j]; /*9484*/
				$k[$j++] = (_E - 48) + (_F * 10); /*9484*/
				$k[$j++] = _G; /*9484*/
			}); /*9484*/
			$j--; /*9484*/
			var _H = $k[--$j]; /*9484*/
			$k[$j++] = _H * 2; /*9485*/
			$k[$j++] = 0; /*9485*/
			for (;;) { /*9485*/
				var _I = $k[--$j]; /*9485*/
				var _J = $k[--$j]; /*9485*/
				var _K = ~~(_J / 10); /*9485*/
				$k[$j++] = _I + (_J % 10); /*9485*/
				$k[$j++] = _K; /*9485*/
				if (_K == 0) { /*9485*/
					$j--; /*9485*/
					break; /*9485*/
				} /*9485*/
				var _L = $k[--$j]; /*9485*/
				var _M = $k[--$j]; /*9485*/
				$k[$j++] = _L; /*9485*/
				$k[$j++] = _M; /*9485*/
			} /*9485*/
			$k[$j++] = 0; /*9486*/
			$k[$j++] = 0; /*9486*/
			$forall($1.code, function() { /*9486*/
				var _O = $k[--$j]; /*9486*/
				var _P = $k[--$j]; /*9486*/
				var _Q = $k[--$j]; /*9486*/
				$k[$j++] = _P + (_O - 48); /*9486*/
				$k[$j++] = _Q; /*9486*/
			}); /*9486*/
			var _R = $k[--$j]; /*9486*/
			var _S = $k[--$j]; /*9486*/
			var _V = $s($1.code.length + 1); /*9488*/
			$puti(_V, 0, $1.code); /*9488*/
			$put(_V, $1.code.length, ((10 - (($k[--$j] + _R) % 10)) % 10) + 48); /*9488*/
			$k[$j++] = _V; /*9488*/
		}; /*9489*/
		$1.mod11 = function() {
			$1.code = $k[--$j]; /*9492*/
			$k[$j++] = $1.code.length - 1; /*9493*/
			$forall($1.code, function() { /*9493*/
				var _b = $k[--$j]; /*9493*/
				var _c = $k[--$j]; /*9493*/
				$k[$j++] = _b - 48; /*9493*/
				$k[$j++] = (_c % 6) + 2; /*9493*/
				$k[$j++] = _c - 1; /*9493*/
			}); /*9493*/
			$j--; /*9493*/
			$k[$j++] = 0; /*9494*/
			for (var _e = 0, _f = $1.code.length; _e < _f; _e++) { /*9494*/
				var _g = $k[--$j]; /*9494*/
				var _h = $k[--$j]; /*9494*/
				var _i = $k[--$j]; /*9494*/
				$k[$j++] = _g + (_i * _h); /*9494*/
			} /*9494*/
			var _k = (11 - ($k[--$j] % 11)) % 11; /*9496*/
			$k[$j++] = _k; /*9500*/
			if ((_k == 10) && $1.badmod11) { /*9499*/
				$j--; /*9497*/
				var _n = $s($1.code.length + 2); /*9497*/
				$puti(_n, 0, $1.code); /*9497*/
				$puti(_n, $1.code.length, "10"); /*9497*/
				$k[$j++] = _n; /*9497*/
			} else { /*9499*/
				var _r = $s($1.code.length + 1); /*9499*/
				$puti(_r, 0, $1.code); /*9499*/
				$put(_r, $1.code.length, $k[--$j] + 48); /*9499*/
				$k[$j++] = _r; /*9499*/
			} /*9499*/
		}; /*9501*/
		$1.ncrmod11 = function() {
			$1.code = $k[--$j]; /*9504*/
			$k[$j++] = $1.code.length - 1; /*9505*/
			$forall($1.code, function() { /*9505*/
				var _y = $k[--$j]; /*9505*/
				var _z = $k[--$j]; /*9505*/
				$k[$j++] = _y - 48; /*9505*/
				$k[$j++] = (_z % 8) + 2; /*9505*/
				$k[$j++] = _z - 1; /*9505*/
			}); /*9505*/
			$j--; /*9505*/
			$k[$j++] = 0; /*9506*/
			for (var _11 = 0, _12 = $1.code.length; _11 < _12; _11++) { /*9506*/
				var _13 = $k[--$j]; /*9506*/
				var _14 = $k[--$j]; /*9506*/
				var _15 = $k[--$j]; /*9506*/
				$k[$j++] = _13 + (_15 * _14); /*9506*/
			} /*9506*/
			var _17 = (11 - ($k[--$j] % 11)) % 11; /*9508*/
			$k[$j++] = _17; /*9512*/
			if ((_17 == 10) && $1.badmod11) { /*9511*/
				$j--; /*9509*/
				var _1A = $s($1.code.length + 2); /*9509*/
				$puti(_1A, 0, $1.code); /*9509*/
				$puti(_1A, $1.code.length, "10"); /*9509*/
				$k[$j++] = _1A; /*9509*/
			} else { /*9511*/
				var _1E = $s($1.code.length + 1); /*9511*/
				$puti(_1E, 0, $1.code); /*9511*/
				$put(_1E, $1.code.length, $k[--$j] + 48); /*9511*/
				$k[$j++] = _1E; /*9511*/
			} /*9511*/
		}; /*9513*/
		if ($1.includecheck) { /*9526*/
			if ($eq($1.checktype, "mod10")) { /*9517*/
				$k[$j++] = $1.barcode; /*9517*/
				$1.mod10(); /*9517*/
			} /*9517*/
			if ($eq($1.checktype, "mod1010")) { /*9518*/
				$k[$j++] = $1.barcode; /*9518*/
				$1.mod10(); /*9518*/
				$1.mod10(); /*9518*/
			} /*9518*/
			if ($eq($1.checktype, "mod11")) { /*9519*/
				$k[$j++] = $1.barcode; /*9519*/
				$1.mod11(); /*9519*/
			} /*9519*/
			if ($eq($1.checktype, "ncrmod11")) { /*9520*/
				$k[$j++] = $1.barcode; /*9520*/
				$1.ncrmod11(); /*9520*/
			} /*9520*/
			if ($eq($1.checktype, "mod1110")) { /*9521*/
				$k[$j++] = $1.barcode; /*9521*/
				$1.mod11(); /*9521*/
				$1.mod10(); /*9521*/
			} /*9521*/
			if ($eq($1.checktype, "ncrmod1110")) { /*9522*/
				$k[$j++] = $1.barcode; /*9522*/
				$1.ncrmod11(); /*9522*/
				$1.mod10(); /*9522*/
			} /*9522*/
			$1.barcode = $k[--$j]; /*9523*/
			$1.barlen = $1.barcode.length; /*9524*/
			if ($1.includecheckintext) { /*9525*/
				$1.txtlen = $1.barlen; /*9525*/
			} /*9525*/
		} /*9525*/
		$1.sbs = $s(($1.barlen * 8) + 5); /*9528*/
		$1.txt = $a($1.barlen); /*9529*/
		$puti($1.sbs, 0, $get($1.encs, 10)); /*9532*/
		for (var _1i = 0, _1h = $1.barlen - 1; _1i <= _1h; _1i += 1) { /*9544*/
			$1.i = _1i; /*9535*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*9537*/
			$j--; /*9538*/
			$1.indx = $k[--$j].length; /*9539*/
			$j -= 2; /*9540*/
			$1.enc = $get($1.encs, $1.indx); /*9541*/
			$puti($1.sbs, ($1.i * 8) + 2, $1.enc); /*9542*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 12) + 3, $1.textyoffset, $1.textfont, $1.textsize])); /*9543*/
		} /*9543*/
		$puti($1.sbs, ($1.barlen * 8) + 2, $get($1.encs, 11)); /*9547*/
		$k[$j++] = Infinity; /*9558*/
		$k[$j++] = "ren"; /*9553*/
		$k[$j++] = $0.renlinear; /*9553*/
		$k[$j++] = "sbs"; /*9553*/
		$k[$j++] = Infinity; /*9553*/
		var _28 = $1.sbs; /*9552*/
		for (var _29 = 0, _2A = _28.length; _29 < _2A; _29++) { /*9552*/
			$k[$j++] = $get(_28, _29) - 48; /*9552*/
		} /*9552*/
		var _2C = $a(); /*9553*/
		$k[$j++] = _2C; /*9554*/
		$k[$j++] = "bhs"; /*9554*/
		$k[$j++] = Infinity; /*9554*/
		for (var _2E = 0, _2F = ~~(($1.sbs.length + 1) / 2); _2E < _2F; _2E++) { /*9553*/
			$k[$j++] = $1.height; /*9553*/
		} /*9553*/
		var _2H = $a(); /*9554*/
		$k[$j++] = _2H; /*9555*/
		$k[$j++] = "bbs"; /*9555*/
		$k[$j++] = Infinity; /*9555*/
		for (var _2J = 0, _2K = ~~(($1.sbs.length + 1) / 2); _2J < _2K; _2J++) { /*9554*/
			$k[$j++] = 0; /*9554*/
		} /*9554*/
		var _2L = $a(); /*9555*/
		$k[$j++] = _2L; /*9557*/
		if ($1.includetext) { /*9557*/
			$k[$j++] = "txt"; /*9556*/
			$k[$j++] = $geti($1.txt, 0, $1.txtlen); /*9556*/
		} /*9556*/
		$k[$j++] = "opt"; /*9558*/
		$k[$j++] = $1.options; /*9558*/
		var _2R = $d(); /*9558*/
		$k[$j++] = _2R; /*9561*/
		if (!$1.dontdraw) { /*9561*/
			$0.renlinear(); /*9561*/
		} /*9561*/
	};
	$0.plessey = function() {
		var $1 = {}; /*9588*/
		$1.options = $k[--$j]; /*9590*/
		$1.barcode = $k[--$j]; /*9591*/
		$1.dontdraw = false; /*9593*/
		$1.includetext = false; /*9594*/
		$1.validatecheck = false; /*9595*/
		$1.includecheckintext = false; /*9596*/
		$1.unidirectional = false; /*9597*/
		$1.textfont = "Courier"; /*9598*/
		$1.textsize = 10; /*9599*/
		$1.textyoffset = -8.5; /*9600*/
		$1.height = 1; /*9601*/
		$forall($1.options, function() { /*9612*/
			var _3 = $k[--$j]; /*9612*/
			$1[$k[--$j]] = _3; /*9612*/
		}); /*9612*/
		$1.textfont = "" + $1.textfont; /*9614*/
		$1.textsize = +$1.textsize; /*9615*/
		$1.textyoffset = +$1.textyoffset; /*9616*/
		$1.height = +$1.height; /*9617*/
		$1.barchars = "0123456789ABCDEF"; /*9620*/
		$1.charvals = {}; /*9621*/
		for (var _9 = 0; _9 <= 15; _9 += 1) { /*9622*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*9622*/
		} /*9622*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*9629*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*9626*/
			if (!_J) { /*9628*/
				$k[$j++] = "bwipp.plesseyBadCharacter"; /*9627*/
				$k[$j++] = "Plessey must contain only digits and letters A B C D E F"; /*9627*/
				$0.raiseerror(); /*9627*/
			} /*9627*/
		} /*9627*/
		$k[$j++] = "barlen"; /*9631*/
		$k[$j++] = $1.barcode.length; /*9631*/
		if ($1.validatecheck) { /*9631*/
			var _M = $k[--$j]; /*9631*/
			$k[$j++] = _M - 2; /*9631*/
		} /*9631*/
		var _N = $k[--$j]; /*9631*/
		$1[$k[--$j]] = _N; /*9631*/
		$1.checkbits = $a(($1.barlen * 4) + 8); /*9634*/
		$puti($1.checkbits, $1.barlen * 4, $a([0, 0, 0, 0, 0, 0, 0, 0])); /*9635*/
		for (var _W = 0, _V = $1.barlen - 1; _W <= _V; _W += 1) { /*9645*/
			$1.i = _W; /*9637*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*9638*/
			$puti($1.checkbits, $1.i * 4, $a([$1.indx & 1, ($1.indx >>> 1) & 1, ($1.indx >>> 2) & 1, $1.indx >>> 3])); /*9644*/
		} /*9644*/
		$1.checksalt = $a([1, 1, 1, 1, 0, 1, 0, 0, 1]); /*9646*/
		for (var _m = 0, _l = ($1.barlen * 4) - 1; _m <= _l; _m += 1) { /*9655*/
			$1.i = _m; /*9648*/
			if ($get($1.checkbits, $1.i) == 1) { /*9654*/
				for (var _q = 0; _q <= 8; _q += 1) { /*9653*/
					$1.j = _q; /*9651*/
					$put($1.checkbits, $1.i + $1.j, $xo($get($1.checkbits, $1.i + $1.j), $get($1.checksalt, $1.j))); /*9652*/
				} /*9652*/
			} /*9652*/
		} /*9652*/
		$1.checkval = 0; /*9656*/
		for (var _11 = 0; _11 <= 7; _11 += 1) { /*9660*/
			$1.i = _11; /*9658*/
			$1.checkval = $1.checkval + ((~~Math.pow(2, $1.i)) * $get($1.checkbits, ($1.barlen * 4) + $1.i)); /*9659*/
		} /*9659*/
		$1.checksum1 = $1.checkval & 15; /*9661*/
		$1.checksum2 = $1.checkval >>> 4; /*9662*/
		if ($1.validatecheck) { /*9669*/
			if (($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum1)) || ($get($1.barcode, $1.barlen + 1) != $get($1.barchars, $1.checksum2))) { /*9667*/
				$k[$j++] = "bwipp.plesseyBadCheckDigits"; /*9666*/
				$k[$j++] = "Incorrect Plessey check digits provided"; /*9666*/
				$0.raiseerror(); /*9666*/
			} /*9666*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*9668*/
		} /*9668*/
		$1.encs = $a(["14141414", "32141414", "14321414", "32321414", "14143214", "32143214", "14323214", "32323214", "14141432", "32141432", "14321432", "32321432", "14143232", "32143232", "14323232", "32323232", "32321432", "541412323", "323"]); /*9678*/
		var _1T = $1.unidirectional ? 27 : 33; /*9680*/
		$1.sbs = $s(($1.barlen * 8) + _1T); /*9680*/
		$1.txt = $a($1.barlen + 2); /*9681*/
		$puti($1.sbs, 0, $get($1.encs, 16)); /*9684*/
		for (var _1c = 0, _1b = $1.barlen - 1; _1c <= _1b; _1c += 1) { /*9691*/
			$1.i = _1c; /*9687*/
			$1.indx = $get($1.charvals, $geti($1.barcode, $1.i, 1)); /*9688*/
			$puti($1.sbs, ($1.i * 8) + 8, $get($1.encs, $1.indx)); /*9689*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), ($1.i * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9690*/
		} /*9690*/
		$puti($1.sbs, ($1.barlen * 8) + 8, $get($1.encs, $1.checksum1)); /*9694*/
		$puti($1.sbs, ($1.barlen * 8) + 16, $get($1.encs, $1.checksum2)); /*9695*/
		if ($1.includecheckintext) { /*9701*/
			$put($1.txt, $1.barlen, $a([$geti($1.barchars, $1.checksum1, 1), ($1.barlen * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9697*/
			$put($1.txt, $1.barlen + 1, $a([$geti($1.barchars, $1.checksum2, 1), (($1.barlen + 1) * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9698*/
		} else { /*9701*/
			$put($1.txt, $1.barlen, $a([" ", ($1.barlen * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9700*/
			$put($1.txt, $1.barlen + 1, $a([" ", (($1.barlen + 1) * 20) + 20, $1.textyoffset, $1.textfont, $1.textsize])); /*9701*/
		} /*9701*/
		var _2k = $1.unidirectional ? 18 : 17; /*9705*/
		$puti($1.sbs, ($1.barlen * 8) + 24, $get($1.encs, _2k)); /*9705*/
		$k[$j++] = Infinity; /*9716*/
		$k[$j++] = "ren"; /*9711*/
		$k[$j++] = $0.renlinear; /*9711*/
		$k[$j++] = "sbs"; /*9711*/
		$k[$j++] = Infinity; /*9711*/
		var _2m = $1.sbs; /*9710*/
		for (var _2n = 0, _2o = _2m.length; _2n < _2o; _2n++) { /*9710*/
			$k[$j++] = $get(_2m, _2n) - 48; /*9710*/
		} /*9710*/
		var _2q = $a(); /*9711*/
		$k[$j++] = _2q; /*9712*/
		$k[$j++] = "bhs"; /*9712*/
		$k[$j++] = Infinity; /*9712*/
		for (var _2s = 0, _2t = ~~(($1.sbs.length + 1) / 2); _2s < _2t; _2s++) { /*9711*/
			$k[$j++] = $1.height; /*9711*/
		} /*9711*/
		var _2v = $a(); /*9712*/
		$k[$j++] = _2v; /*9713*/
		$k[$j++] = "bbs"; /*9713*/
		$k[$j++] = Infinity; /*9713*/
		for (var _2x = 0, _2y = ~~(($1.sbs.length + 1) / 2); _2x < _2y; _2x++) { /*9712*/
			$k[$j++] = 0; /*9712*/
		} /*9712*/
		var _2z = $a(); /*9713*/
		$k[$j++] = _2z; /*9715*/
		if ($1.includetext) { /*9715*/
			$k[$j++] = "txt"; /*9714*/
			$k[$j++] = $1.txt; /*9714*/
		} /*9714*/
		$k[$j++] = "opt"; /*9716*/
		$k[$j++] = $1.options; /*9716*/
		var _33 = $d(); /*9716*/
		$k[$j++] = _33; /*9719*/
		if (!$1.dontdraw) { /*9719*/
			$0.renlinear(); /*9719*/
		} /*9719*/
	};
	$0.telepen = function() {
		var $1 = {}; /*9746*/
		$1.options = $k[--$j]; /*9748*/
		$1.barcode = $k[--$j]; /*9749*/
		$1.numeric = false; /*9751*/
		$1.dontdraw = false; /*9752*/
		$1.includetext = false; /*9753*/
		$1.textfont = "Courier"; /*9754*/
		$1.textsize = 10; /*9755*/
		$1.textyoffset = -8.5; /*9756*/
		$1.height = 1; /*9757*/
		$1.parse = false; /*9758*/
		$forall($1.options, function() { /*9769*/
			var _3 = $k[--$j]; /*9769*/
			$1[$k[--$j]] = _3; /*9769*/
		}); /*9769*/
		$1.textfont = "" + $1.textfont; /*9771*/
		$1.textsize = +$1.textsize; /*9772*/
		$1.textyoffset = +$1.textyoffset; /*9773*/
		$1.height = +$1.height; /*9774*/
		$1.encs = $a(["31313131", "1131313111", "33313111", "1111313131", "3111313111", "11333131", "13133131", "111111313111", "31333111", "1131113131", "33113131", "1111333111", "3111113131", "1113133111", "1311133111", "111111113131", "3131113111", "11313331", "333331", "111131113111", "31113331", "1133113111", "1313113111", "1111113331", "31131331", "113111113111", "3311113111", "1111131331", "311111113111", "1113111331", "1311111331", "11111111113111", "31313311", "1131311131", "33311131", "1111313311", "3111311131", "11333311", "13133311", "111111311131", "31331131", "1131113311", "33113311", "1111331131", "3111113311", "1113131131", "1311131131", "111111113311", "3131111131", "1131131311", "33131311", "111131111131", "3111131311", "1133111131", "1313111131", "111111131311", "3113111311", "113111111131", "3311111131", "111113111311", "311111111131", "111311111311", "131111111311", "11111111111131", "3131311111", "11313133", "333133", "111131311111", "31113133", "1133311111", "1313311111", "1111113133", "313333", "113111311111", "3311311111", "11113333", "311111311111", "11131333", "13111333", "11111111311111", "31311133", "1131331111", "33331111", "1111311133", "3111331111", "11331133", "13131133", "111111331111", "3113131111", "1131111133", "33111133", "111113131111", "3111111133", "111311131111", "131111131111", "111111111133", "31311313", "113131111111", "3331111111", "1111311313", "311131111111", "11331313", "13131313", "11111131111111", "3133111111", "1131111313", "33111313", "111133111111", "3111111313", "111313111111", "131113111111", "111111111313", "313111111111", "1131131113", "33131113", "11113111111111", "3111131113", "113311111111", "131311111111", "111111131113", "3113111113", "11311111111111", "331111111111", "111113111113", "31111111111111", "111311111113", "131111111113", "1111111111111111"]); /*9831*/
		$1.barlen = $1.barcode.length; /*9833*/
		$1.sbs = $s(($1.barlen * 16) + 48); /*9834*/
		$1.txt = $a($1.barlen); /*9835*/
		$1.enc = $get($1.encs, 95); /*9838*/
		$puti($1.sbs, 0, $1.enc); /*9839*/
		$1.l = $1.enc.length; /*9840*/
		$1.checksum = 0; /*9842*/
		$1.i = 0; /*9843*/
		$1.j = 0; /*9843*/
		for (;;) { /*9875*/
			if ($1.i == $1.barlen) { /*9845*/
				break; /*9845*/
			} /*9845*/
			if ($1.numeric) { /*9868*/
				if ($get($1.barcode, $1.i) > 16) { /*9859*/
					$1.np = $geti($1.barcode, $1.i, 2); /*9848*/
					if ($eq($geti($1.np, 1, 1), "X")) { /*9852*/
						$1.indx = (~~$z($geti($1.np, 0, 1))) + 17; /*9850*/
					} else { /*9852*/
						$1.indx = (~~$z($1.np)) + 27; /*9852*/
					} /*9852*/
					$put($1.txt, $1.j, $a([$1.np, ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9854*/
					$1.i = $1.i + 2; /*9855*/
				} else { /*9859*/
					$1.indx = $get($1.barcode, $1.i); /*9857*/
					$put($1.txt, $1.j, $a([" ", ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9858*/
					$1.i = $1.i + 1; /*9859*/
				} /*9859*/
			} else { /*9868*/
				$1.indx = $get($1.barcode, $1.i); /*9862*/
				if (($1.indx >= 32) && ($1.indx <= 126)) { /*9866*/
					$put($1.txt, $1.j, $a([$geti($1.barcode, $1.i, 1), ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9864*/
				} else { /*9866*/
					$put($1.txt, $1.j, $a([" ", ($1.j * 16) + 16, $1.textyoffset, $1.textfont, $1.textsize])); /*9866*/
				} /*9866*/
				$1.i = $1.i + 1; /*9868*/
			} /*9868*/
			$1.checksum = $1.checksum + $1.indx; /*9870*/
			$1.enc = $get($1.encs, $1.indx); /*9871*/
			$puti($1.sbs, $1.l, $1.enc); /*9872*/
			$1.l = $1.l + $1.enc.length; /*9873*/
			$1.j = $1.j + 1; /*9874*/
		} /*9874*/
		$1.checksum = (127 - ($1.checksum % 127)) % 127; /*9878*/
		$1.enc = $get($1.encs, $1.checksum); /*9879*/
		$puti($1.sbs, $1.l, $1.enc); /*9880*/
		$1.l = $1.l + $1.enc.length; /*9881*/
		$1.enc = $get($1.encs, 122); /*9884*/
		$puti($1.sbs, $1.l, $1.enc); /*9885*/
		$1.l = $1.l + $1.enc.length; /*9886*/
		$1.sbs = $geti($1.sbs, 0, $1.l); /*9889*/
		$1.txt = $geti($1.txt, 0, $1.j); /*9890*/
		$k[$j++] = Infinity; /*9901*/
		$k[$j++] = "ren"; /*9896*/
		$k[$j++] = $0.renlinear; /*9896*/
		$k[$j++] = "sbs"; /*9896*/
		$k[$j++] = Infinity; /*9896*/
		$forall($1.sbs, function() { /*9895*/
			var _1n = $k[--$j]; /*9895*/
			$k[$j++] = _1n - 48; /*9895*/
		}); /*9895*/
		var _1o = $a(); /*9896*/
		$k[$j++] = _1o; /*9897*/
		$k[$j++] = "bhs"; /*9897*/
		$k[$j++] = Infinity; /*9897*/
		for (var _1q = 0, _1r = ~~(($1.sbs.length + 1) / 2); _1q < _1r; _1q++) { /*9896*/
			$k[$j++] = $1.height; /*9896*/
		} /*9896*/
		var _1t = $a(); /*9897*/
		$k[$j++] = _1t; /*9898*/
		$k[$j++] = "bbs"; /*9898*/
		$k[$j++] = Infinity; /*9898*/
		for (var _1v = 0, _1w = ~~(($1.sbs.length + 1) / 2); _1v < _1w; _1v++) { /*9897*/
			$k[$j++] = 0; /*9897*/
		} /*9897*/
		var _1x = $a(); /*9898*/
		$k[$j++] = _1x; /*9900*/
		if ($1.includetext) { /*9900*/
			$k[$j++] = "txt"; /*9899*/
			$k[$j++] = $1.txt; /*9899*/
		} /*9899*/
		$k[$j++] = "opt"; /*9901*/
		$k[$j++] = $1.options; /*9901*/
		var _21 = $d(); /*9901*/
		$k[$j++] = _21; /*9904*/
		if (!$1.dontdraw) { /*9904*/
			$0.renlinear(); /*9904*/
		} /*9904*/
	};
	$0.telepennumeric = function() {
		var $1 = {}; /*9932*/
		$1.options = $k[--$j]; /*9934*/
		$1.barcode = $k[--$j]; /*9935*/
		$1.dontdraw = false; /*9937*/
		$1.includetext = false; /*9938*/
		$1.textfont = "Courier"; /*9939*/
		$1.textsize = 10; /*9940*/
		$1.textxoffset = 0; /*9941*/
		$1.textyoffset = -8.5; /*9942*/
		$1.height = 1; /*9943*/
		$forall($1.options, function() { /*9954*/
			var _3 = $k[--$j]; /*9954*/
			$1[$k[--$j]] = _3; /*9954*/
		}); /*9954*/
		$1.textfont = "" + $1.textfont; /*9956*/
		$1.textsize = +$1.textsize; /*9957*/
		$1.textxoffset = +$1.textxoffset; /*9958*/
		$1.textyoffset = +$1.textyoffset; /*9959*/
		$1.height = +$1.height; /*9960*/
		$1.options.dontdraw = true; /*9963*/
		$1.options.numeric = true; /*9964*/
		$k[$j++] = "args"; /*9966*/
		$k[$j++] = $1.barcode; /*9966*/
		$k[$j++] = $1.options; /*9966*/
		$0.telepen(); /*9966*/
		var _E = $k[--$j]; /*9966*/
		$1[$k[--$j]] = _E; /*9966*/
		$1.args.opt = $1.options; /*9968*/
		$k[$j++] = $1.args; /*9971*/
		if (!$1.dontdraw) { /*9971*/
			$0.renlinear(); /*9971*/
		} /*9971*/
	};
	$0.posicode = function() {
		var $1 = {}; /*9998*/
		$1.options = $k[--$j]; /*10000*/
		$1.barcode = $k[--$j]; /*10001*/
		$1.dontdraw = false; /*10003*/
		$1.includetext = false; /*10004*/
		$1.textfont = "Courier"; /*10005*/
		$1.textsize = 10; /*10006*/
		$1.textxoffset = 0; /*10007*/
		$1.textyoffset = -8.5; /*10008*/
		$1.height = 1; /*10009*/
		$1.encoding = "auto"; /*10010*/
		$1.version = "a"; /*10011*/
		$1.checkoffset = 0; /*10012*/
		$1.raw = false; /*10013*/
		$1.parse = false; /*10014*/
		$1.parsefnc = false; /*10015*/
		$forall($1.options, function() { /*10026*/
			var _3 = $k[--$j]; /*10026*/
			$1[$k[--$j]] = _3; /*10026*/
		}); /*10026*/
		$1.textfont = "" + $1.textfont; /*10028*/
		$1.textsize = +$1.textsize; /*10029*/
		$1.textxoffset = +$1.textxoffset; /*10030*/
		$1.textyoffset = +$1.textyoffset; /*10031*/
		$1.encoding = "" + $1.encoding; /*10032*/
		$1.version = "" + $1.version; /*10033*/
		$1.checkoffset = ~~$1.checkoffset; /*10034*/
		$1.height = +$1.height; /*10035*/
		$1.barlen = $1.barcode.length; /*10058*/
		$1.la0 = -1; /*10061*/
		$1.la1 = -2; /*10061*/
		$1.la2 = -3; /*10061*/
		$1.sf0 = -4; /*10062*/
		$1.sf1 = -5; /*10062*/
		$1.sf2 = -6; /*10062*/
		$1.fn1 = -7; /*10063*/
		$1.fn2 = -8; /*10063*/
		$1.fn3 = -9; /*10063*/
		$1.fn4 = -10; /*10063*/
		var _1m = {
			normal: $a([$a(["0", "^", "'"]), $a(["1", ";", 27]), $a(["2", "<", 28]), $a(["3", "=", 29]), $a(["4", ">", 30]), $a(["5", "?", 31]), $a(["6", "@", "!"]), $a(["7", "[", "\""]), $a(["8", 92, "#"]), $a(["9", "]", "&"]), $a(["A", "a", 1]), $a(["B", "b", 2]), $a(["C", "c", 3]), $a(["D", "d", 4]), $a(["E", "e", 5]), $a(["F", "f", 6]), $a(["G", "g", 7]), $a(["H", "h", 8]), $a(["I", "i", 9]), $a(["J", "j", 10]), $a(["K", "k", 11]), $a(["L", "l", 12]), $a(["M", "m", 13]), $a(["N", "n", 14]), $a(["O", "o", 15]), $a(["P", "p", 16]), $a(["Q", "q", 17]), $a(["R", "r", 18]), $a(["S", "s", 19]), $a(["T", "t", 20]), $a(["U", "u", 21]), $a(["V", "v", 22]), $a(["W", "w", 23]), $a(["X", "x", 24]), $a(["Y", "y", 25]), $a(["Z", "z", 26]), $a(["-", "_", 40]), $a([".", "`", 41]), $a([" ", 127, 0]), $a(["$", "{", "*"]), $a(["/", "|", ","]), $a(["+", "}", ":"]), $a(["%", "~", $1.fn1]), $a([$1.la1, $1.la0, $1.fn2]), $a([$1.sf1, $1.sf0, $1.fn3]), $a([$1.sf2, $1.sf2, $1.fn4])]),
			limited: $a([$a(["0", -98, -98]), $a(["1", -98, -98]), $a(["2", -98, -98]), $a(["3", -98, -98]), $a(["4", -98, -98]), $a(["5", -98, -98]), $a(["6", -98, -98]), $a(["7", -98, -98]), $a(["8", -98, -98]), $a(["9", -98, -98]), $a(["A", -98, -98]), $a(["B", -98, -98]), $a(["C", -98, -98]), $a(["D", -98, -98]), $a(["E", -98, -98]), $a(["F", -98, -98]), $a(["G", -98, -98]), $a(["H", -98, -98]), $a(["I", -98, -98]), $a(["J", -98, -98]), $a(["K", -98, -98]), $a(["L", -98, -98]), $a(["M", -98, -98]), $a(["N", -98, -98]), $a(["O", -98, -98]), $a(["P", -98, -98]), $a(["Q", -98, -98]), $a(["R", -98, -98]), $a(["S", -98, -98]), $a(["T", -98, -98]), $a(["U", -98, -98]), $a(["V", -98, -98]), $a(["W", -98, -98]), $a(["X", -98, -98]), $a(["Y", -98, -98]), $a(["Z", -98, -98]), $a(["-", -98, -98]), $a([".", -98, -98])])
		}; /*10101*/
		$k[$j++] = _1m; /*10104*/
		if ($eq($1.version, "a") || $eq($1.version, "b")) { /*10104*/
			$k[$j++] = "normal"; /*10104*/
		} else { /*10104*/
			$k[$j++] = "limited"; /*10104*/
		} /*10104*/
		var _1p = $k[--$j]; /*10104*/
		$1.charmaps = $get($k[--$j], _1p); /*10105*/
		var _1s = $1.charmaps; /*10109*/
		var _1t = $1.charmaps; /*10109*/
		var _1u = $1.charmaps; /*10109*/
		$1.charvals = $a([{}, {}, {}]); /*10110*/
		for (var _1y = 0, _1x = $1.charmaps.length - 1; _1y <= _1x; _1y += 1) { /*10119*/
			$1.i = _1y; /*10112*/
			$1.encs = $get($1.charmaps, $1.i); /*10113*/
			for (var _22 = 0; _22 <= 2; _22 += 1) { /*10118*/
				$1.j = _22; /*10115*/
				var _25 = $get($1.encs, $1.j); /*10116*/
				$k[$j++] = _25; /*10116*/
				if ($eq($type(_25), "stringtype")) { /*10116*/
					var _28 = $get($k[--$j], 0); /*10116*/
					$k[$j++] = _28; /*10116*/
				} /*10116*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*10117*/
			} /*10117*/
		} /*10117*/
		$1.set0 = $get($1.charvals, 0); /*10120*/
		$1.set1 = $get($1.charvals, 1); /*10121*/
		$1.set2 = $get($1.charvals, 2); /*10122*/
		if ($1.raw) { /*10124*/
			$1.encoding = "raw"; /*10124*/
		} /*10124*/
		if ($eq($1.encoding, "raw")) { /*10138*/
			$1.cws = $a($1.barlen); /*10127*/
			$1.i = 0; /*10128*/
			$1.j = 0; /*10128*/
			for (;;) { /*10135*/
				if ($1.i == $1.barlen) { /*10130*/
					break; /*10130*/
				} /*10130*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*10131*/
				$put($1.cws, $1.j, $1.cw); /*10132*/
				$1.i = $1.i + 4; /*10133*/
				$1.j = $1.j + 1; /*10134*/
			} /*10134*/
			$1.cws = $geti($1.cws, 0, $1.j); /*10136*/
			$1.text = ""; /*10137*/
		} /*10137*/
		if ($eq($1.encoding, "auto")) { /*10266*/
			var _2f = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3
			}; /*10145*/
			$1.fncvals = _2f; /*10147*/
			$1.msg = $a($1.barlen); /*10150*/
			$1.text = $s($1.barlen); /*10151*/
			$1.i = 0; /*10152*/
			$1.j = 0; /*10152*/
			for (;;) { /*10168*/
				if ($1.i == $1.barlen) { /*10153*/
					break; /*10153*/
				} /*10153*/
				$1.char = $get($1.barcode, $1.i); /*10154*/
				$put($1.text, $1.j, $1.char); /*10155*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*10164*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*10162*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*10158*/
						$puti($1.text, $1.j, " "); /*10159*/
						$1.i = $1.i + 4; /*10160*/
					} else { /*10162*/
						$1.i = $1.i + 1; /*10162*/
					} /*10162*/
				} /*10162*/
				$put($1.msg, $1.j, $1.char); /*10165*/
				$1.i = $1.i + 1; /*10166*/
				$1.j = $1.j + 1; /*10167*/
			} /*10167*/
			$1.msg = $geti($1.msg, 0, $1.j); /*10169*/
			$1.msglen = $1.msg.length; /*10170*/
			$1.text = $geti($1.text, 0, $1.j); /*10171*/
			$k[$j++] = Infinity; /*10174*/
			for (var _3L = 0, _3M = $1.msglen; _3L < _3M; _3L++) { /*10174*/
				$k[$j++] = 0; /*10174*/
			} /*10174*/
			$k[$j++] = 0; /*10174*/
			$1.numSA = $a(); /*10174*/
			$k[$j++] = Infinity; /*10175*/
			for (var _3P = 0, _3Q = $1.msglen; _3P < _3Q; _3P++) { /*10175*/
				$k[$j++] = 0; /*10175*/
			} /*10175*/
			$k[$j++] = 0; /*10175*/
			$1.numEA = $a(); /*10175*/
			for (var _3T = $1.msglen - 1; _3T >= 0; _3T -= 1) { /*10185*/
				$1.i = _3T; /*10177*/
				if ($get($1.msg, $1.i) >= 0) { /*10184*/
					if ($get($1.msg, $1.i) >= 128) { /*10182*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*10180*/
					} else { /*10182*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*10182*/
					} /*10182*/
				} /*10182*/
			} /*10182*/
			$1.ea = false; /*10188*/
			$1.msgtmp = $a([]); /*10188*/
			for (var _3n = 0, _3m = $1.msglen - 1; _3n <= _3m; _3n += 1) { /*10203*/
				$1.i = _3n; /*10190*/
				$1.c = $get($1.msg, $1.i); /*10191*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*10201*/
					if ($1.ea) { /*10193*/
						$k[$j++] = $1.numSA; /*10193*/
					} else { /*10193*/
						$k[$j++] = $1.numEA; /*10193*/
					} /*10193*/
					var _3z = $get($k[--$j], $1.i); /*10193*/
					var _42 = ((_3z + $1.i) == $1.msglen) ? 3 : 5; /*10194*/
					if (_3z < _42) { /*10199*/
						$k[$j++] = Infinity; /*10196*/
						$aload($1.msgtmp); /*10196*/
						$k[$j++] = $1.fn4; /*10196*/
						$1.msgtmp = $a(); /*10196*/
					} else { /*10199*/
						$k[$j++] = Infinity; /*10198*/
						$aload($1.msgtmp); /*10198*/
						$k[$j++] = $1.fn4; /*10198*/
						$k[$j++] = $1.fn4; /*10198*/
						$1.msgtmp = $a(); /*10198*/
						$1.ea = !$1.ea; /*10199*/
					} /*10199*/
				} /*10199*/
				$k[$j++] = Infinity; /*10202*/
				$aload($1.msgtmp); /*10202*/
				if ($1.c >= 0) { /*10202*/
					$k[$j++] = $1.c & 127; /*10202*/
				} else { /*10202*/
					$k[$j++] = $1.c; /*10202*/
				} /*10202*/
				$1.msgtmp = $a(); /*10202*/
			} /*10202*/
			$1.msg = $1.msgtmp; /*10204*/
			$1.msglen = $1.msg.length; /*10205*/
			$1.enc = function() {
				var _4I = $k[--$j]; /*10209*/
				$put($1.cws, $1.j, $get(_4I, $k[--$j])); /*10209*/
				$1.j = $1.j + 1; /*10210*/
			}; /*10211*/
			$1.cws = $a($1.msglen * 2); /*10213*/
			$1.i = 0; /*10214*/
			$1.j = 0; /*10214*/
			$1.cset = "set0"; /*10214*/
			for (;;) { /*10264*/
				if ($1.i == $1.msglen) { /*10216*/
					break; /*10216*/
				} /*10216*/
				for (;;) { /*10262*/
					$1.char1 = $get($1.msg, $1.i); /*10221*/
					$k[$j++] = "char2"; /*10222*/
					if (($1.i + 1) < $1.msglen) { /*10222*/
						$k[$j++] = $get($1.msg, $1.i + 1); /*10222*/
					} else { /*10222*/
						$k[$j++] = -99; /*10222*/
					} /*10222*/
					var _4a = $k[--$j]; /*10222*/
					$1[$k[--$j]] = _4a; /*10222*/
					var _4f = $get($1[$1.cset], $1.char1) !== undefined; /*10225*/
					if (_4f) { /*10229*/
						$k[$j++] = $1.char1; /*10226*/
						$k[$j++] = $1[$1.cset]; /*10226*/
						$1.enc(); /*10226*/
						$1.i = $1.i + 1; /*10227*/
						break; /*10228*/
					} /*10228*/
					var _4m = $get($1.set2, $1.char1) !== undefined; /*10232*/
					if (_4m) { /*10237*/
						$k[$j++] = $1.sf2; /*10233*/
						$k[$j++] = $1[$1.cset]; /*10233*/
						$1.enc(); /*10233*/
						$k[$j++] = $1.char1; /*10234*/
						$k[$j++] = $1.set2; /*10234*/
						$1.enc(); /*10234*/
						$1.i = $1.i + 1; /*10235*/
						break; /*10236*/
					} /*10236*/
					var _4w = $get($1[$1.cset], $1.char2) !== undefined; /*10240*/
					if (!_4w) { /*10258*/
						if ($eq($1.cset, "set0")) { /*10246*/
							$k[$j++] = $1.la1; /*10242*/
							$k[$j++] = $1[$1.cset]; /*10242*/
							$1.enc(); /*10242*/
							$1.cset = "set1"; /*10243*/
						} else { /*10246*/
							$k[$j++] = $1.la0; /*10245*/
							$k[$j++] = $1[$1.cset]; /*10245*/
							$1.enc(); /*10245*/
							$1.cset = "set0"; /*10246*/
						} /*10246*/
						break; /*10248*/
					} else { /*10258*/
						if ($eq($1.cset, "set0")) { /*10255*/
							$k[$j++] = $1.sf1; /*10251*/
							$k[$j++] = $1[$1.cset]; /*10251*/
							$1.enc(); /*10251*/
							$k[$j++] = $1.char1; /*10252*/
							$k[$j++] = $1.set1; /*10252*/
							$1.enc(); /*10252*/
						} else { /*10255*/
							$k[$j++] = $1.sf0; /*10254*/
							$k[$j++] = $1[$1.cset]; /*10254*/
							$1.enc(); /*10254*/
							$k[$j++] = $1.char1; /*10255*/
							$k[$j++] = $1.set0; /*10255*/
							$1.enc(); /*10255*/
						} /*10255*/
						$1.i = $1.i + 1; /*10257*/
						break; /*10258*/
					} /*10258*/
					break; /*10261*/
				} /*10261*/
			} /*10261*/
			$1.cws = $geti($1.cws, 0, $1.j); /*10265*/
		} /*10265*/
		var _5N = {
			a: $a(["141112", "131212", "121312", "111412", "131113", "121213", "111313", "121114", "111214", "111115", "181111", "171211", "161311", "151411", "141511", "131611", "121711", "111811", "171112", "161212", "151312", "141412", "131512", "121612", "111712", "161113", "151213", "141313", "131413", "121513", "111613", "151114", "141214", "131314", "121414", "111514", "141115", "131215", "121315", "111415", "131116", "121216", "111316", "121117", "111217", "111118", "1<111112", "111111111;1"]),
			b: $a(["151213", "141313", "131413", "121513", "141214", "131314", "121414", "131215", "121315", "121216", "191212", "181312", "171412", "161512", "151612", "141712", "131812", "121912", "181213", "171313", "161413", "151513", "141613", "131713", "121813", "171214", "161314", "151414", "141514", "131614", "121714", "161215", "151315", "141415", "131515", "121615", "151216", "141316", "131416", "121516", "141217", "131317", "121417", "131218", "121318", "121219", "1<121312", "121212121<1"]),
			limiteda: $a(["111411", "111312", "111213", "111114", "121311", "121212", "121113", "141111", "131211", "131112", "171111", "161211", "151311", "141411", "131511", "121611", "111711", "161112", "151212", "141312", "131412", "121512", "111612", "151113", "141213", "131313", "121413", "111513", "141114", "131214", "121314", "111414", "131115", "121215", "111315", "121116", "111216", "111117", "151111", "1"]),
			limitedb: $a(["121512", "121413", "121314", "121215", "131412", "131313", "131214", "151212", "141312", "141213", "181212", "171312", "161412", "151512", "141612", "131712", "121812", "171213", "161313", "151413", "141513", "131613", "121713", "161214", "151314", "141414", "131514", "121614", "151215", "141315", "131415", "121515", "141216", "131316", "121416", "131217", "121317", "121218", "141212", "1"])
		}; /*10312*/
		$1.encs = $get(_5N, $1.version); /*10315*/
		$1.c2w = $a([$a([495, 330, 210, 126, 70, 35, 15, 5]), $a([165, 120, 84, 56, 35, 20, 10, 4]), $a([45, 36, 28, 21, 15, 10, 6, 3]), $a([9, 8, 7, 6, 5, 4, 3, 2]), $a([1, 1, 1, 1, 1, 1, 1, 1])]); /*10323*/
		$1.v = 0; /*10324*/
		$forall($1.cws, function() { /*10334*/
			$1.cw = $k[--$j]; /*10326*/
			for (var _5Y = 0, _5Z = 6; _5Y < _5Z; _5Y++) { /*10333*/
				if ((($1.cw ^ $1.v) & 1) != 0) { /*10330*/
					$1.v = $1.v ^ 7682; /*10329*/
				} /*10329*/
				$1.v = $1.v >>> 1; /*10331*/
				$1.cw = $1.cw >>> 1; /*10332*/
			} /*10332*/
		}); /*10332*/
		$1.v = $1.v + $1.checkoffset; /*10335*/
		if ($eq($1.version, "limiteda") || $eq($1.version, "limitedb")) { /*10343*/
			$1.v = $1.v & 1023; /*10338*/
			if (($1.v > 824) && ($1.v < 853)) { /*10341*/
				$1.v = $1.v + 292; /*10340*/
			} /*10340*/
		} else { /*10343*/
			$1.v = ($1.v & 1023) + 45; /*10343*/
		} /*10343*/
		$1.d = $a([2, 2, 2, 2, 2, 2]); /*10346*/
		$1.r = 0; /*10347*/
		$1.c = 0; /*10347*/
		$1.w = 0; /*10347*/
		$1.sum = 0; /*10347*/
		for (;;) { /*10366*/
			if ($1.sum == $1.v) { /*10349*/
				break; /*10349*/
			} /*10349*/
			$1.t = $1.sum + $get($get($1.c2w, $1.r), $1.c); /*10350*/
			if ($1.t == $1.v) { /*10355*/
				$1.w = $1.w + 1; /*10352*/
				$put($1.d, $1.r, $1.w + 2); /*10353*/
				$1.sum = $1.t; /*10354*/
			} /*10354*/
			if ($1.t > $1.v) { /*10360*/
				$put($1.d, $1.r, $1.w + 2); /*10357*/
				$1.r = $1.r + 1; /*10358*/
				$1.w = 0; /*10359*/
			} /*10359*/
			if ($1.t < $1.v) { /*10365*/
				$1.c = $1.c + 1; /*10362*/
				$1.w = $1.w + 1; /*10363*/
				$1.sum = $1.t; /*10364*/
			} /*10364*/
		} /*10364*/
		$k[$j++] = 20; /*10367*/
		for (var _6F = 0; _6F <= 4; _6F += 1) { /*10367*/
			var _6I = $k[--$j]; /*10367*/
			$k[$j++] = _6I - $get($1.d, _6F); /*10367*/
		} /*10367*/
		$put($1.d, 5, $k[--$j]); /*10368*/
		if ($eq($1.version, "b") || $eq($1.version, "limitedb")) { /*10371*/
			$k[$j++] = Infinity; /*10370*/
			var _6N = $1.d; /*10370*/
			for (var _6O = 0, _6P = _6N.length; _6O < _6P; _6O++) { /*10370*/
				$k[$j++] = $get(_6N, _6O) + 1; /*10370*/
			} /*10370*/
			$1.d = $a(); /*10370*/
		} /*10370*/
		$1.cbs = $strcpy($s(12), "111111111111"); /*10372*/
		for (var _6U = 5; _6U >= 0; _6U -= 1) { /*10376*/
			$1.i = _6U; /*10374*/
			$put($1.cbs, ((5 - $1.i) * 2) + 1, $get($1.d, $1.i) + 47); /*10375*/
		} /*10375*/
		$1.sbs = $s(($1.cws.length * 6) + 31); /*10379*/
		var _6e = $get($1.encs, $1.encs.length - 2); /*10380*/
		$puti($1.sbs, 0, _6e); /*10381*/
		$1.j = _6e.length; /*10382*/
		for (var _6i = 0, _6h = $1.cws.length - 1; _6i <= _6h; _6i += 1) { /*10387*/
			$1.i = _6i; /*10384*/
			$puti($1.sbs, $1.j, $get($1.encs, $get($1.cws, $1.i))); /*10385*/
			$1.j = $1.j + 6; /*10386*/
		} /*10386*/
		$puti($1.sbs, $1.j, $1.cbs); /*10388*/
		$1.j = $1.j + 12; /*10389*/
		var _6x = $get($1.encs, $1.encs.length - 1); /*10390*/
		$puti($1.sbs, $1.j, _6x); /*10391*/
		$1.j = _6x.length + $1.j; /*10392*/
		$1.sbs = $geti($1.sbs, 0, $1.j); /*10393*/
		$k[$j++] = Infinity; /*10403*/
		$k[$j++] = "ren"; /*10399*/
		$k[$j++] = $0.renlinear; /*10399*/
		$k[$j++] = "sbs"; /*10399*/
		$k[$j++] = Infinity; /*10399*/
		$forall($1.sbs, function() { /*10398*/
			var _75 = $k[--$j]; /*10398*/
			$k[$j++] = _75 - 48; /*10398*/
		}); /*10398*/
		var _76 = $a(); /*10399*/
		$k[$j++] = _76; /*10400*/
		$k[$j++] = "bhs"; /*10400*/
		$k[$j++] = Infinity; /*10400*/
		for (var _78 = 0, _79 = ~~(($1.sbs.length + 1) / 2); _78 < _79; _78++) { /*10399*/
			$k[$j++] = $1.height; /*10399*/
		} /*10399*/
		var _7B = $a(); /*10400*/
		$k[$j++] = _7B; /*10401*/
		$k[$j++] = "bbs"; /*10401*/
		$k[$j++] = Infinity; /*10401*/
		for (var _7D = 0, _7E = ~~(($1.sbs.length + 1) / 2); _7D < _7E; _7D++) { /*10400*/
			$k[$j++] = 0; /*10400*/
		} /*10400*/
		var _7F = $a(); /*10401*/
		$k[$j++] = _7F; /*10403*/
		$k[$j++] = "txt"; /*10403*/
		$k[$j++] = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*10403*/
		$k[$j++] = "textxalign"; /*10403*/
		$k[$j++] = "center"; /*10403*/
		$k[$j++] = "opt"; /*10403*/
		$k[$j++] = $1.options; /*10403*/
		var _7O = $d(); /*10403*/
		$k[$j++] = _7O; /*10406*/
		if (!$1.dontdraw) { /*10406*/
			$0.renlinear(); /*10406*/
		} /*10406*/
	};
	$0.codablockf = function() {
		var $1 = {}; /*10433*/
		$1.options = $k[--$j]; /*10435*/
		$1.barcode = $k[--$j]; /*10436*/
		$1.dontdraw = false; /*10438*/
		$1.rows = -1; /*10439*/
		$1.columns = 8; /*10440*/
		$1.rowheight = 10; /*10441*/
		$1.sepheight = 1; /*10442*/
		$1.parse = false; /*10443*/
		$1.parsefnc = false; /*10444*/
		$forall($1.options, function() { /*10455*/
			var _3 = $k[--$j]; /*10455*/
			$1[$k[--$j]] = _3; /*10455*/
		}); /*10455*/
		$1.rows = ~~$1.rows; /*10457*/
		$1.columns = ~~$1.columns; /*10458*/
		$1.rowheight = ~~$1.rowheight; /*10459*/
		$1.sepheight = ~~$1.sepheight; /*10460*/
		if ((($1.columns >= 4) && ($1.columns <= 62)) && ((($1.rows >= 2) && ($1.rows <= 44)) || ($1.rows == -1))) { /*10463*/
			$1.c = $1.columns; /*10463*/
		} /*10463*/
		$1.barlen = $1.barcode.length; /*10486*/
		$1.swa = -1; /*10489*/
		$1.swb = -2; /*10489*/
		$1.swc = -3; /*10489*/
		$1.sft = -4; /*10489*/
		$1.fn1 = -5; /*10490*/
		$1.fn2 = -6; /*10490*/
		$1.fn3 = -7; /*10490*/
		$1.fn4 = -8; /*10490*/
		$1.sta = -9; /*10491*/
		$1.stp = -10; /*10491*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sft, $1.sft, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.sta, $1.sta, $1.sta]), $a([$1.stp, $1.stp, $1.stp])]); /*10531*/
		$1.charvals = $a([{}, {}, {}]); /*10534*/
		for (var _2O = 0, _2N = $1.charmaps.length - 1; _2O <= _2N; _2O += 1) { /*10543*/
			$1.i = _2O; /*10536*/
			$1.encs = $get($1.charmaps, $1.i); /*10537*/
			for (var _2S = 0; _2S <= 2; _2S += 1) { /*10542*/
				$1.j = _2S; /*10539*/
				var _2V = $get($1.encs, $1.j); /*10540*/
				$k[$j++] = _2V; /*10540*/
				if ($eq($type(_2V), "stringtype")) { /*10540*/
					var _2Y = $get($k[--$j], 0); /*10540*/
					$k[$j++] = _2Y; /*10540*/
				} /*10540*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*10541*/
			} /*10541*/
		} /*10541*/
		$1.seta = $get($1.charvals, 0); /*10544*/
		$1.setb = $get($1.charvals, 1); /*10545*/
		$1.setc = $get($1.charvals, 2); /*10546*/
		var _2m = {
			FNC1: $1.fn1,
			FNC3: $1.fn3
		}; /*10551*/
		$1.fncvals = _2m; /*10553*/
		$1.msg = $a($1.barlen); /*10554*/
		$1.i = 0; /*10555*/
		$1.j = 0; /*10555*/
		for (;;) { /*10569*/
			if ($1.i == $1.barlen) { /*10556*/
				break; /*10556*/
			} /*10556*/
			$1.char = $get($1.barcode, $1.i); /*10557*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*10565*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*10563*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*10560*/
					$1.i = $1.i + 4; /*10561*/
				} else { /*10563*/
					$1.i = $1.i + 1; /*10563*/
				} /*10563*/
			} /*10563*/
			$put($1.msg, $1.j, $1.char); /*10566*/
			$1.i = $1.i + 1; /*10567*/
			$1.j = $1.j + 1; /*10568*/
		} /*10568*/
		$1.msg = $geti($1.msg, 0, $1.j); /*10570*/
		$1.msglen = $1.msg.length; /*10571*/
		$1.msgtmp = $a([]); /*10574*/
		$forall($1.msg, function() { /*10578*/
			$1.char = $k[--$j]; /*10576*/
			$k[$j++] = Infinity; /*10577*/
			$aload($1.msgtmp); /*10577*/
			if ($1.char < 128) { /*10577*/
				$k[$j++] = $1.char; /*10577*/
			} else { /*10577*/
				$k[$j++] = $1.fn4; /*10577*/
				$k[$j++] = $1.char & 127; /*10577*/
			} /*10577*/
			$1.msgtmp = $a(); /*10577*/
		}); /*10577*/
		$1.msg = $1.msgtmp; /*10579*/
		$1.msglen = $1.msg.length; /*10580*/
		$1.numsscr = function() {
			$1.n = 0; /*10584*/
			$1.s = 0; /*10584*/
			$1.p = $k[--$j]; /*10585*/
			for (;;) { /*10596*/
				if ($1.p >= $1.msglen) { /*10586*/
					break; /*10586*/
				} /*10586*/
				var _3X = $get($1.msg, $1.p); /*10587*/
				var _3Z = $get($1.setc, _3X) !== undefined; /*10588*/
				$k[$j++] = _3X; /*10588*/
				if (!_3Z) { /*10588*/
					$j--; /*10588*/
					break; /*10588*/
				} /*10588*/
				if ($k[--$j] == $1.fn1) { /*10592*/
					if (($1.s % 2) == 0) { /*10591*/
						$1.s = $1.s + 1; /*10591*/
					} else { /*10591*/
						break; /*10591*/
					} /*10591*/
				} /*10591*/
				$1.n = $1.n + 1; /*10593*/
				$1.s = $1.s + 1; /*10594*/
				$1.p = $1.p + 1; /*10595*/
			} /*10595*/
			$k[$j++] = $1.n; /*10597*/
			$k[$j++] = $1.s; /*10597*/
		}; /*10598*/
		$1.enca = function() {
			$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*10602*/
			$1.j = $1.j + 1; /*10603*/
		}; /*10604*/
		$1.encb = function() {
			$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*10606*/
			$1.j = $1.j + 1; /*10607*/
		}; /*10608*/
		$1.encc = function() {
			var _3v = $k[--$j]; /*10610*/
			$k[$j++] = _3v; /*10614*/
			if ($ne($type(_3v), "arraytype")) { /*10613*/
				var _3z = $get($1.setc, $k[--$j]); /*10611*/
				$k[$j++] = _3z; /*10611*/
			} else { /*10613*/
				$aload($k[--$j]); /*10613*/
				var _41 = $k[--$j]; /*10613*/
				var _42 = $k[--$j]; /*10613*/
				$k[$j++] = (_41 - 48) + ((_42 - 48) * 10); /*10613*/
			} /*10613*/
			$put($1.cws, $1.j, $k[--$j]); /*10615*/
			$1.j = $1.j + 1; /*10616*/
		}; /*10617*/
		$1.anotb = function() {
			var _47 = $k[--$j]; /*10620*/
			var _49 = $get($1.seta, _47) !== undefined; /*10620*/
			var _4B = $get($1.setb, _47) !== undefined; /*10620*/
			$k[$j++] = _49 && (!_4B); /*10620*/
		}; /*10620*/
		$1.bnota = function() {
			var _4C = $k[--$j]; /*10621*/
			var _4E = $get($1.setb, _4C) !== undefined; /*10621*/
			var _4G = $get($1.seta, _4C) !== undefined; /*10621*/
			$k[$j++] = _4E && (!_4G); /*10621*/
		}; /*10621*/
		$k[$j++] = Infinity; /*10624*/
		for (var _4I = 0, _4J = $1.msg.length; _4I < _4J; _4I++) { /*10624*/
			$k[$j++] = 0; /*10624*/
		} /*10624*/
		$k[$j++] = 9999; /*10624*/
		$1.nextanotb = $a(); /*10624*/
		$k[$j++] = Infinity; /*10625*/
		for (var _4M = 0, _4N = $1.msg.length; _4M < _4N; _4M++) { /*10625*/
			$k[$j++] = 0; /*10625*/
		} /*10625*/
		$k[$j++] = 9999; /*10625*/
		$1.nextbnota = $a(); /*10625*/
		for (var _4Q = $1.msg.length - 1; _4Q >= 0; _4Q -= 1) { /*10638*/
			$1.i = _4Q; /*10627*/
			$k[$j++] = $get($1.msg, $1.i); /*10628*/
			$1.anotb(); /*10628*/
			if ($k[--$j]) { /*10631*/
				$put($1.nextanotb, $1.i, 0); /*10629*/
			} else { /*10631*/
				$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*10631*/
			} /*10631*/
			$k[$j++] = $get($1.msg, $1.i); /*10633*/
			$1.bnota(); /*10633*/
			if ($k[--$j]) { /*10636*/
				$put($1.nextbnota, $1.i, 0); /*10634*/
			} else { /*10636*/
				$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*10636*/
			} /*10636*/
		} /*10636*/
		$1.abeforeb = function() {
			var _4n = $k[--$j]; /*10641*/
			$k[$j++] = $lt($get($1.nextanotb, _4n), $get($1.nextbnota, _4n)); /*10641*/
		}; /*10641*/
		$1.bbeforea = function() {
			var _4s = $k[--$j]; /*10642*/
			$k[$j++] = $lt($get($1.nextbnota, _4s), $get($1.nextanotb, _4s)); /*10642*/
		}; /*10642*/
		$1.padrow = function() {
			for (var _4y = 0, _4z = $k[--$j]; _4y < _4z; _4y++) { /*10652*/
				for (;;) { /*10651*/
					if ($eq($1.cset, "seta")) { /*10648*/
						$k[$j++] = $1.swc; /*10648*/
						$1.enca(); /*10648*/
						$1.cset = "setc"; /*10648*/
						break; /*10648*/
					} /*10648*/
					if ($eq($1.cset, "setb")) { /*10649*/
						$k[$j++] = $1.swc; /*10649*/
						$1.encb(); /*10649*/
						$1.cset = "setc"; /*10649*/
						break; /*10649*/
					} /*10649*/
					if ($eq($1.cset, "setc")) { /*10650*/
						$k[$j++] = $1.swb; /*10650*/
						$1.encc(); /*10650*/
						$1.cset = "setb"; /*10650*/
						break; /*10650*/
					} /*10650*/
				} /*10650*/
			} /*10650*/
		}; /*10653*/
		$k[$j++] = "cws"; /*10656*/
		$k[$j++] = $1.c + 5; /*10656*/
		if ($1.rows != -1) { /*10656*/
			$k[$j++] = $1.rows; /*10656*/
		} else { /*10656*/
			$k[$j++] = 44; /*10656*/
		} /*10656*/
		var _59 = $k[--$j]; /*10656*/
		var _5B = $a($k[--$j] * _59); /*10656*/
		$1[$k[--$j]] = _5B; /*10656*/
		$1.i = 0; /*10658*/
		$1.j = 0; /*10658*/
		$1.r = 1; /*10658*/
		$1.lastrow = false; /*10659*/
		for (;;) { /*10827*/
			if ($1.lastrow) { /*10661*/
				break; /*10661*/
			} /*10661*/
			$k[$j++] = $1.sta; /*10664*/
			$1.enca(); /*10664*/
			if ($1.i < $1.msglen) { /*10665*/
				$k[$j++] = $1.i; /*10665*/
				$1.numsscr(); /*10665*/
			} else { /*10665*/
				$k[$j++] = -1; /*10665*/
				$k[$j++] = -1; /*10665*/
			} /*10665*/
			$1.nums = $k[--$j]; /*10665*/
			$1.nchars = $k[--$j]; /*10665*/
			for (;;) { /*10685*/
				if ($1.msglen == 0) { /*10671*/
					$k[$j++] = $1.swb; /*10668*/
					$1.enca(); /*10668*/
					$1.cset = "setb"; /*10669*/
					break; /*10670*/
				} /*10670*/
				if ($1.nums >= 2) { /*10676*/
					$k[$j++] = $1.swc; /*10673*/
					$1.enca(); /*10673*/
					$1.cset = "setc"; /*10674*/
					break; /*10675*/
				} /*10675*/
				$k[$j++] = $1.i; /*10677*/
				$1.abeforeb(); /*10677*/
				if ($k[--$j]) { /*10681*/
					$k[$j++] = $1.sft; /*10678*/
					$1.enca(); /*10678*/
					$1.cset = "seta"; /*10679*/
					break; /*10680*/
				} /*10680*/
				$k[$j++] = $1.swb; /*10682*/
				$1.enca(); /*10682*/
				$1.cset = "setb"; /*10683*/
				break; /*10684*/
			} /*10684*/
			$1.j = $1.j + 1; /*10686*/
			$1.endofrow = false; /*10689*/
			for (;;) { /*10812*/
				$1.rem = ($1.c + 3) - ($1.j % ($1.c + 5)); /*10690*/
				if (($1.i == $1.msglen) || $1.endofrow) { /*10692*/
					break; /*10692*/
				} /*10692*/
				$k[$j++] = $1.i; /*10694*/
				$1.numsscr(); /*10694*/
				$1.nums = $k[--$j]; /*10694*/
				$1.nchars = $k[--$j]; /*10694*/
				for (;;) { /*10810*/
					if ((($eq($1.cset, "seta") || $eq($1.cset, "setb")) && ($1.nums >= 4)) && ($get($1.msg, $1.i) != $1.fn1)) { /*10732*/
						if ((($1.nums % 2) == 0) && ($1.rem >= 3)) { /*10714*/
							$k[$j++] = $1.swc; /*10702*/
							if ($eq($1.cset, "seta")) { /*10702*/
								$1.enca(); /*10702*/
							} else { /*10702*/
								$1.encb(); /*10702*/
							} /*10702*/
							$1.cset = "setc"; /*10703*/
							for (var _5n = 0, _5o = 2; _5n < _5o; _5n++) { /*10712*/
								if ($get($1.msg, $1.i) == $1.fn1) { /*10710*/
									$k[$j++] = $1.fn1; /*10706*/
									$1.encc(); /*10706*/
									$1.i = $1.i + 1; /*10707*/
								} else { /*10710*/
									$k[$j++] = $geti($1.msg, $1.i, 2); /*10709*/
									$1.encc(); /*10709*/
									$1.i = $1.i + 2; /*10710*/
								} /*10710*/
							} /*10710*/
							break; /*10713*/
						} /*10713*/
						if ((($1.nums % 2) != 0) && ($1.rem >= 4)) { /*10731*/
							$k[$j++] = $get($1.msg, $1.i); /*10717*/
							if ($eq($1.cset, "seta")) { /*10717*/
								$1.enca(); /*10717*/
							} else { /*10717*/
								$1.encb(); /*10717*/
							} /*10717*/
							$1.i = $1.i + 1; /*10718*/
							$k[$j++] = $1.swc; /*10719*/
							if ($eq($1.cset, "seta")) { /*10719*/
								$1.enca(); /*10719*/
							} else { /*10719*/
								$1.encb(); /*10719*/
							} /*10719*/
							$1.cset = "setc"; /*10720*/
							for (var _68 = 0, _69 = 2; _68 < _69; _68++) { /*10729*/
								if ($get($1.msg, $1.i) == $1.fn1) { /*10727*/
									$k[$j++] = $1.fn1; /*10723*/
									$1.encc(); /*10723*/
									$1.i = $1.i + 1; /*10724*/
								} else { /*10727*/
									$k[$j++] = $geti($1.msg, $1.i, 2); /*10726*/
									$1.encc(); /*10726*/
									$1.i = $1.i + 2; /*10727*/
								} /*10727*/
							} /*10727*/
							break; /*10730*/
						} /*10730*/
					} /*10730*/
					$k[$j++] = $eq($1.cset, "setb"); /*10733*/
					$k[$j++] = $get($1.msg, $1.i); /*10733*/
					$1.anotb(); /*10733*/
					var _6O = $k[--$j]; /*10733*/
					if (($k[--$j] && _6O) && ($1.rem >= 2)) { /*10748*/
						if ($1.i < ($1.msglen - 1)) { /*10742*/
							$k[$j++] = $1.i + 1; /*10736*/
							$1.bbeforea(); /*10736*/
							if ($k[--$j]) { /*10741*/
								$k[$j++] = $1.sft; /*10737*/
								$1.encb(); /*10737*/
								$k[$j++] = $get($1.msg, $1.i); /*10738*/
								$1.enca(); /*10738*/
								$1.i = $1.i + 1; /*10739*/
								break; /*10740*/
							} /*10740*/
						} /*10740*/
						$k[$j++] = $1.swa; /*10743*/
						$1.encb(); /*10743*/
						$1.cset = "seta"; /*10744*/
						$k[$j++] = $get($1.msg, $1.i); /*10745*/
						$1.enca(); /*10745*/
						$1.i = $1.i + 1; /*10746*/
						break; /*10747*/
					} /*10747*/
					$k[$j++] = $eq($1.cset, "seta"); /*10749*/
					$k[$j++] = $get($1.msg, $1.i); /*10749*/
					$1.bnota(); /*10749*/
					var _6j = $k[--$j]; /*10749*/
					if (($k[--$j] && _6j) && ($1.rem >= 2)) { /*10764*/
						if ($1.i < ($1.msglen - 1)) { /*10758*/
							$k[$j++] = $1.i + 1; /*10752*/
							$1.abeforeb(); /*10752*/
							if ($k[--$j]) { /*10757*/
								$k[$j++] = $1.sft; /*10753*/
								$1.enca(); /*10753*/
								$k[$j++] = $get($1.msg, $1.i); /*10754*/
								$1.encb(); /*10754*/
								$1.i = $1.i + 1; /*10755*/
								break; /*10756*/
							} /*10756*/
						} /*10756*/
						$k[$j++] = $1.swb; /*10759*/
						$1.enca(); /*10759*/
						$1.cset = "setb"; /*10760*/
						$k[$j++] = $get($1.msg, $1.i); /*10761*/
						$1.encb(); /*10761*/
						$1.i = $1.i + 1; /*10762*/
						break; /*10763*/
					} /*10763*/
					if (($eq($1.cset, "setc") && ($1.nums < 2)) && ($1.rem >= 2)) { /*10779*/
						$k[$j++] = $1.i; /*10767*/
						$1.abeforeb(); /*10767*/
						if ($k[--$j]) { /*10773*/
							$k[$j++] = $1.swa; /*10768*/
							$1.encc(); /*10768*/
							$1.cset = "seta"; /*10769*/
							$k[$j++] = $get($1.msg, $1.i); /*10770*/
							$1.enca(); /*10770*/
							$1.i = $1.i + 1; /*10771*/
							break; /*10772*/
						} /*10772*/
						$k[$j++] = $1.swb; /*10774*/
						$1.encc(); /*10774*/
						$1.cset = "setb"; /*10775*/
						$k[$j++] = $get($1.msg, $1.i); /*10776*/
						$1.encb(); /*10776*/
						$1.i = $1.i + 1; /*10777*/
						break; /*10778*/
					} /*10778*/
					var _7K = $get($1.seta, $get($1.msg, $1.i)) !== undefined; /*10782*/
					if (($eq($1.cset, "seta") && _7K) && ($1.rem >= 1)) { /*10787*/
						$k[$j++] = $get($1.msg, $1.i); /*10784*/
						$1.enca(); /*10784*/
						$1.i = $1.i + 1; /*10785*/
						break; /*10786*/
					} /*10786*/
					var _7V = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*10788*/
					if (($eq($1.cset, "setb") && _7V) && ($1.rem >= 1)) { /*10793*/
						$k[$j++] = $get($1.msg, $1.i); /*10790*/
						$1.encb(); /*10790*/
						$1.i = $1.i + 1; /*10791*/
						break; /*10792*/
					} /*10792*/
					if (($eq($1.cset, "setc") && ($1.nums >= 2)) && ($1.rem >= 1)) { /*10804*/
						if ($get($1.msg, $1.i) == $1.fn1) { /*10801*/
							$k[$j++] = $1.fn1; /*10797*/
							$1.encc(); /*10797*/
							$1.i = $1.i + 1; /*10798*/
						} else { /*10801*/
							$k[$j++] = $geti($1.msg, $1.i, 2); /*10800*/
							$1.encc(); /*10800*/
							$1.i = $1.i + 2; /*10801*/
						} /*10801*/
						break; /*10803*/
					} /*10803*/
					$1.endofrow = true; /*10807*/
					break; /*10808*/
				} /*10808*/
			} /*10808*/
			if ((((($1.r == $1.rows) || ($1.rows == -1)) && ($1.r > 1)) && ($1.i == $1.msglen)) && ($1.rem >= 2)) { /*10824*/
				$k[$j++] = $1.rem - 2; /*10816*/
				$1.padrow(); /*10816*/
				$1.j = $1.j + 3; /*10817*/
				$k[$j++] = $1.stp; /*10818*/
				$1.enca(); /*10818*/
				$1.lastrow = true; /*10819*/
			} else { /*10824*/
				$k[$j++] = $1.rem; /*10821*/
				$1.padrow(); /*10821*/
				$1.j = $1.j + 1; /*10822*/
				$k[$j++] = $1.stp; /*10823*/
				$1.enca(); /*10823*/
				$1.r = $1.r + 1; /*10824*/
			} /*10824*/
		} /*10824*/
		$1.cws = $geti($1.cws, 0, $1.j); /*10828*/
		$k[$j++] = Infinity; /*10835*/
		for (var _85 = 64; _85 <= 95; _85 += 1) { /*10832*/
			$k[$j++] = _85; /*10832*/
		} /*10832*/
		for (var _86 = 0; _86 <= 15; _86 += 1) { /*10833*/
			$k[$j++] = _86; /*10833*/
		} /*10833*/
		for (var _87 = 26; _87 <= 63; _87 += 1) { /*10834*/
			$k[$j++] = _87; /*10834*/
		} /*10834*/
		$1.abmap = $a(); /*10835*/
		$k[$j++] = Infinity; /*10836*/
		for (var _89 = 0; _89 <= 85; _89 += 1) { /*10836*/
			$k[$j++] = _89; /*10836*/
		} /*10836*/
		$1.cmap = $a(); /*10836*/
		$1.chkmsg = $a($1.msglen); /*10839*/
		$1.j = 0; /*10840*/
		for (var _8F = 0, _8E = $1.msglen - 1; _8F <= _8E; _8F += 1) { /*10846*/
			$1.i = _8F; /*10842*/
			$1.char = $get($1.msg, $1.i); /*10843*/
			if ($1.char >= 0) { /*10844*/
				$put($1.chkmsg, $1.j, $1.char); /*10844*/
				$1.j = $1.j + 1; /*10844*/
			} /*10844*/
			if (($1.char == $1.fn1) && ($1.i != 0)) { /*10845*/
				$put($1.chkmsg, $1.j, 29); /*10845*/
				$1.j = $1.j + 1; /*10845*/
			} /*10845*/
		} /*10845*/
		$1.t1 = 0; /*10847*/
		$1.t2 = 0; /*10847*/
		$1.k1 = 0; /*10847*/
		$1.k2 = 0; /*10847*/
		for (var _8W = 0, _8V = $1.j - 1; _8W <= _8V; _8W += 1) { /*10854*/
			$1.i = _8W; /*10849*/
			$1.t1 = ($get($1.chkmsg, $1.i) * $1.i) % 86; /*10850*/
			$1.t2 = ($1.t1 + $get($1.chkmsg, $1.i)) % 86; /*10851*/
			$1.k1 = ($1.k1 + $1.t2) % 86; /*10852*/
			$1.k2 = ($1.k2 + $1.t1) % 86; /*10853*/
		} /*10853*/
		$k[$j++] = $1.cws; /*10855*/
		$k[$j++] = $1.cws.length - 4; /*10855*/
		if ($ne($1.cset, "setc")) { /*10855*/
			$k[$j++] = $1.abmap; /*10855*/
		} else { /*10855*/
			$k[$j++] = $1.cmap; /*10855*/
		} /*10855*/
		var _8q = $get($k[--$j], $1.k1); /*10855*/
		var _8r = $k[--$j]; /*10855*/
		$put($k[--$j], _8r, _8q); /*10855*/
		$k[$j++] = $1.cws; /*10856*/
		$k[$j++] = $1.cws.length - 3; /*10856*/
		if ($ne($1.cset, "setc")) { /*10856*/
			$k[$j++] = $1.abmap; /*10856*/
		} else { /*10856*/
			$k[$j++] = $1.cmap; /*10856*/
		} /*10856*/
		var _90 = $get($k[--$j], $1.k2); /*10856*/
		var _91 = $k[--$j]; /*10856*/
		$put($k[--$j], _91, _90); /*10856*/
		var _93 = $1.cws; /*10859*/
		$k[$j++] = _93; /*10859*/
		$k[$j++] = 2; /*10859*/
		if ($get(_93, 2 - 1) != 99) { /*10859*/
			$k[$j++] = $1.abmap; /*10859*/
		} else { /*10859*/
			$k[$j++] = $1.cmap; /*10859*/
		} /*10859*/
		var _99 = $get($k[--$j], $1.r - 2); /*10859*/
		var _9A = $k[--$j]; /*10859*/
		$put($k[--$j], _9A, _99); /*10859*/
		for (var _9E = 1, _9D = $1.r - 1; _9E <= _9D; _9E += 1) { /*10863*/
			$1.i = _9E; /*10861*/
			var _9F = $1.cws; /*10862*/
			var _9G = $1.i; /*10862*/
			var _9H = $1.c; /*10862*/
			$k[$j++] = _9F; /*10862*/
			$k[$j++] = (_9G * (_9H + 5)) + 2; /*10862*/
			if ($get(_9F, ((_9G * (_9H + 5)) + 2) - 1) != 99) { /*10862*/
				$k[$j++] = $1.abmap; /*10862*/
			} else { /*10862*/
				$k[$j++] = $1.cmap; /*10862*/
			} /*10862*/
			var _9N = $get($k[--$j], $1.i + 42); /*10862*/
			var _9O = $k[--$j]; /*10862*/
			$put($k[--$j], _9O, _9N); /*10862*/
		} /*10862*/
		for (var _9S = 0, _9R = $1.r - 1; _9S <= _9R; _9S += 1) { /*10874*/
			$1.rcws = $geti($1.cws, _9S * ($1.c + 5), $1.c + 4); /*10867*/
			$1.csum = $get($1.rcws, 0); /*10868*/
			for (var _9b = 1, _9a = $1.rcws.length - 2; _9b <= _9a; _9b += 1) { /*10872*/
				$1.i = _9b; /*10870*/
				$1.csum = $1.csum + ($get($1.rcws, $1.i) * $1.i); /*10871*/
			} /*10871*/
			$put($1.rcws, $1.rcws.length - 1, $1.csum % 103); /*10873*/
		} /*10873*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "2331112"]); /*10893*/
		$1.rowbits = $a($1.r); /*10896*/
		for (var _9p = 0, _9o = $1.r - 1; _9p <= _9o; _9p += 1) { /*10908*/
			$1.i = _9p; /*10898*/
			$k[$j++] = Infinity; /*10903*/
			$forall($geti($1.cws, $1.i * ($1.c + 5), $1.c + 5), function() { /*10902*/
				$forall($get($1.encs, $k[--$j]), function() { /*10901*/
					var _9y = $k[--$j]; /*10901*/
					$k[$j++] = _9y - 48; /*10901*/
				}); /*10901*/
			}); /*10901*/
			$1.sbs = $a(); /*10903*/
			$k[$j++] = Infinity; /*10904*/
			var _A0 = $1.sbs; /*10905*/
			$k[$j++] = 0; /*10905*/
			for (var _A1 = 0, _A2 = _A0.length; _A1 < _A2; _A1++) { /*10905*/
				var _A4 = $k[--$j]; /*10905*/
				var _A5 = (_A4 == 1) ? 0 : 1; /*10905*/
				$k[$j++] = _A4; /*10905*/
				for (var _A6 = 0, _A7 = $get(_A0, _A1); _A6 < _A7; _A6++) { /*10905*/
					$k[$j++] = _A5 /*10905*/
				} /*10905*/
			} /*10905*/
			$astore($a($counttomark() - 1)); /*10906*/
			var _AA = $k[--$j]; /*10906*/
			var _AB = $k[--$j]; /*10906*/
			var _AC = $k[--$j]; /*10906*/
			$put($1.rowbits, $1.i, _AA); /*10907*/
		} /*10907*/
		$1.symwid = ($1.c * 11) + 57; /*10911*/
		$k[$j++] = Infinity; /*10925*/
		for (var _AI = 0, _AJ = $1.symwid * $1.sepheight; _AI < _AJ; _AI++) { /*10913*/
			$k[$j++] = 1; /*10913*/
		} /*10913*/
		for (var _AM = 0, _AL = $1.r - 2; _AM <= _AL; _AM += 1) { /*10922*/
			$1.i = _AM; /*10915*/
			for (var _AO = 0, _AP = $1.rowheight; _AO < _AP; _AO++) { /*10916*/
				$aload($get($1.rowbits, $1.i)); /*10916*/
			} /*10916*/
			for (var _AU = 0, _AV = $1.sepheight; _AU < _AV; _AU++) { /*10921*/
				$k[$j++] = 1; /*10919*/
				$k[$j++] = 1; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 1; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 1; /*10919*/
				$k[$j++] = 0; /*10919*/
				$k[$j++] = 0; /*10919*/
				for (var _AX = 0, _AY = $1.symwid - 24; _AX < _AY; _AX++) { /*10919*/
					$k[$j++] = 1; /*10919*/
				} /*10919*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 0; /*10920*/
				$k[$j++] = 0; /*10920*/
				$k[$j++] = 0; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 0; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 0; /*10920*/
				$k[$j++] = 1; /*10920*/
				$k[$j++] = 1; /*10920*/
			} /*10920*/
		} /*10920*/
		for (var _Aa = 0, _Ab = $1.rowheight; _Aa < _Ab; _Aa++) { /*10923*/
			$aload($get($1.rowbits, $1.r - 1)); /*10923*/
		} /*10923*/
		for (var _Ah = 0, _Ai = $1.symwid * $1.sepheight; _Ah < _Ai; _Ah++) { /*10924*/
			$k[$j++] = 1; /*10924*/
		} /*10924*/
		$1.pixs = $a(); /*10925*/
		var _As = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.symwid,
			pixy: ~~($1.pixs.length / $1.symwid),
			height: (~~($1.pixs.length / $1.symwid)) / 72,
			width: $1.symwid / 72,
			opt: $1.options
		}; /*10935*/
		$k[$j++] = _As; /*10938*/
		if (!$1.dontdraw) { /*10938*/
			$0.renmatrix(); /*10938*/
		} /*10938*/
	};
	$0.code16k = function() {
		var $1 = {}; /*10965*/
		$1.options = $k[--$j]; /*10967*/
		$1.barcode = $k[--$j]; /*10968*/
		$1.dontdraw = false; /*10970*/
		$1.mode = -1; /*10971*/
		$1.pos = -1; /*10972*/
		$1.rows = 0; /*10973*/
		$1.rowheight = 8; /*10974*/
		$1.sepheight = 1; /*10975*/
		$1.encoding = "auto"; /*10976*/
		$1.raw = false; /*10977*/
		$1.parse = false; /*10978*/
		$1.parsefnc = false; /*10979*/
		$forall($1.options, function() { /*10990*/
			var _3 = $k[--$j]; /*10990*/
			$1[$k[--$j]] = _3; /*10990*/
		}); /*10990*/
		$1.mode = ~~$1.mode; /*10992*/
		$1.pos = ~~$1.pos; /*10993*/
		$1.rows = ~~$1.rows; /*10994*/
		$1.rowheight = ~~$1.rowheight; /*10995*/
		$1.sepheight = ~~$1.sepheight; /*10996*/
		if ($1.pos != -1) { /*10998*/
			$1.rows = 16; /*10998*/
		} /*10998*/
		$1.barlen = $1.barcode.length; /*11021*/
		$1.swa = -1; /*11024*/
		$1.swb = -2; /*11024*/
		$1.swc = -3; /*11024*/
		$1.sa1 = -4; /*11025*/
		$1.sb1 = -5; /*11025*/
		$1.sc1 = -6; /*11025*/
		$1.sa2 = -7; /*11026*/
		$1.sb2 = -8; /*11026*/
		$1.sc2 = -9; /*11026*/
		$1.pad = -10; /*11027*/
		$1.sb3 = -11; /*11027*/
		$1.sc3 = -12; /*11027*/
		$1.fn1 = -13; /*11028*/
		$1.fn2 = -14; /*11028*/
		$1.fn3 = -15; /*11028*/
		$1.fn4 = -16; /*11028*/
		$1.charmaps = $a([$a([32, 32, "00"]), $a(["!", "!", "01"]), $a(["\"", "\"", "02"]), $a(["#", "#", "03"]), $a(["$", "$", "04"]), $a(["%", "%", "05"]), $a(["&", "&", "06"]), $a(["'", "'", "07"]), $a([40, 40, "08"]), $a([41, 41, "09"]), $a(["*", "*", "10"]), $a(["+", "+", "11"]), $a([",", ",", "12"]), $a(["-", "-", "13"]), $a([".", ".", "14"]), $a(["/", "/", "15"]), $a(["0", "0", "16"]), $a(["1", "1", "17"]), $a(["2", "2", "18"]), $a(["3", "3", "19"]), $a(["4", "4", "20"]), $a(["5", "5", "21"]), $a(["6", "6", "22"]), $a(["7", "7", "23"]), $a(["8", "8", "24"]), $a(["9", "9", "25"]), $a([":", ":", "26"]), $a([";", ";", "27"]), $a(["<", "<", "28"]), $a(["=", "=", "29"]), $a([">", ">", "30"]), $a(["?", "?", "31"]), $a(["@", "@", "32"]), $a(["A", "A", "33"]), $a(["B", "B", "34"]), $a(["C", "C", "35"]), $a(["D", "D", "36"]), $a(["E", "E", "37"]), $a(["F", "F", "38"]), $a(["G", "G", "39"]), $a(["H", "H", "40"]), $a(["I", "I", "41"]), $a(["J", "J", "42"]), $a(["K", "K", "43"]), $a(["L", "L", "44"]), $a(["M", "M", "45"]), $a(["N", "N", "46"]), $a(["O", "O", "47"]), $a(["P", "P", "48"]), $a(["Q", "Q", "49"]), $a(["R", "R", "50"]), $a(["S", "S", "51"]), $a(["T", "T", "52"]), $a(["U", "U", "53"]), $a(["V", "V", "54"]), $a(["W", "W", "55"]), $a(["X", "X", "56"]), $a(["Y", "Y", "57"]), $a(["Z", "Z", "58"]), $a(["[", "[", "59"]), $a([92, 92, "60"]), $a(["]", "]", "61"]), $a(["^", "^", "62"]), $a(["_", "_", "63"]), $a([0, "`", "64"]), $a([1, "a", "65"]), $a([2, "b", "66"]), $a([3, "c", "67"]), $a([4, "d", "68"]), $a([5, "e", "69"]), $a([6, "f", "70"]), $a([7, "g", "71"]), $a([8, "h", "72"]), $a([9, "i", "73"]), $a([10, "j", "74"]), $a([11, "k", "75"]), $a([12, "l", "76"]), $a([13, "m", "77"]), $a([14, "n", "78"]), $a([15, "o", "79"]), $a([16, "p", "80"]), $a([17, "q", "81"]), $a([18, "r", "82"]), $a([19, "s", "83"]), $a([20, "t", "84"]), $a([21, "u", "85"]), $a([22, "v", "86"]), $a([23, "w", "87"]), $a([24, "x", "88"]), $a([25, "y", "89"]), $a([26, "z", "90"]), $a([27, "{", "91"]), $a([28, "|", "92"]), $a([29, "}", "93"]), $a([30, "~", "94"]), $a([31, 127, "95"]), $a([$1.fn3, $1.fn3, "96"]), $a([$1.fn2, $1.fn2, "97"]), $a([$1.sb1, $1.sa1, "98"]), $a([$1.swc, $1.swc, "99"]), $a([$1.swb, $1.fn4, $1.swb]), $a([$1.fn4, $1.swa, $1.swa]), $a([$1.fn1, $1.fn1, $1.fn1]), $a([$1.pad, $1.pad, $1.pad]), $a([$1.sb2, $1.sa2, $1.sb1]), $a([$1.sc2, $1.sc2, $1.sb2]), $a([$1.sc3, $1.sc3, $1.sb3])]); /*11069*/
		$1.charvals = $a([{}, {}, {}]); /*11072*/
		for (var _2S = 0, _2R = $1.charmaps.length - 1; _2S <= _2R; _2S += 1) { /*11081*/
			$1.i = _2S; /*11074*/
			$1.encs = $get($1.charmaps, $1.i); /*11075*/
			for (var _2W = 0; _2W <= 2; _2W += 1) { /*11080*/
				$1.j = _2W; /*11077*/
				var _2Z = $get($1.encs, $1.j); /*11078*/
				$k[$j++] = _2Z; /*11078*/
				if ($eq($type(_2Z), "stringtype")) { /*11078*/
					var _2c = $get($k[--$j], 0); /*11078*/
					$k[$j++] = _2c; /*11078*/
				} /*11078*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*11079*/
			} /*11079*/
		} /*11079*/
		$1.seta = $get($1.charvals, 0); /*11082*/
		$1.setb = $get($1.charvals, 1); /*11083*/
		$1.setc = $get($1.charvals, 2); /*11084*/
		if ($1.raw) { /*11086*/
			$1.encoding = "raw"; /*11086*/
		} /*11086*/
		if ($eq($1.encoding, "raw")) { /*11100*/
			$1.cws = $a($1.barlen); /*11089*/
			$1.i = 0; /*11090*/
			$1.j = 0; /*11090*/
			for (;;) { /*11097*/
				if ($1.i == $1.barlen) { /*11092*/
					break; /*11092*/
				} /*11092*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*11093*/
				$put($1.cws, $1.j, $1.cw); /*11094*/
				$1.i = $1.i + 4; /*11095*/
				$1.j = $1.j + 1; /*11096*/
			} /*11096*/
			$1.cws = $geti($1.cws, 0, $1.j); /*11098*/
			$1.text = ""; /*11099*/
		} /*11099*/
		if ($eq($1.encoding, "auto")) { /*11563*/
			var _39 = {
				FNC1: $1.fn1,
				FNC2: $1.fn2,
				FNC3: $1.fn3
			}; /*11107*/
			$1.fncvals = _39; /*11109*/
			$1.msg = $a($1.barlen); /*11110*/
			$1.i = 0; /*11111*/
			$1.j = 0; /*11111*/
			for (;;) { /*11125*/
				if ($1.i == $1.barlen) { /*11112*/
					break; /*11112*/
				} /*11112*/
				$1.char = $get($1.barcode, $1.i); /*11113*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*11121*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*11119*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*11116*/
						$1.i = $1.i + 4; /*11117*/
					} else { /*11119*/
						$1.i = $1.i + 1; /*11119*/
					} /*11119*/
				} /*11119*/
				$put($1.msg, $1.j, $1.char); /*11122*/
				$1.i = $1.i + 1; /*11123*/
				$1.j = $1.j + 1; /*11124*/
			} /*11124*/
			$1.msg = $geti($1.msg, 0, $1.j); /*11126*/
			$1.msglen = $1.msg.length; /*11127*/
			$k[$j++] = Infinity; /*11130*/
			for (var _3f = 0, _3g = $1.msglen; _3f < _3g; _3f++) { /*11130*/
				$k[$j++] = 0; /*11130*/
			} /*11130*/
			$k[$j++] = 0; /*11130*/
			$1.numSA = $a(); /*11130*/
			$k[$j++] = Infinity; /*11131*/
			for (var _3j = 0, _3k = $1.msglen; _3j < _3k; _3j++) { /*11131*/
				$k[$j++] = 0; /*11131*/
			} /*11131*/
			$k[$j++] = 0; /*11131*/
			$1.numEA = $a(); /*11131*/
			for (var _3n = $1.msglen - 1; _3n >= 0; _3n -= 1) { /*11141*/
				$1.i = _3n; /*11133*/
				if ($get($1.msg, $1.i) >= 0) { /*11140*/
					if ($get($1.msg, $1.i) >= 128) { /*11138*/
						$put($1.numEA, $1.i, $get($1.numEA, $1.i + 1) + 1); /*11136*/
					} else { /*11138*/
						$put($1.numSA, $1.i, $get($1.numSA, $1.i + 1) + 1); /*11138*/
					} /*11138*/
				} /*11138*/
			} /*11138*/
			$1.ea = false; /*11144*/
			$1.msgtmp = $a([]); /*11144*/
			for (var _47 = 0, _46 = $1.msglen - 1; _47 <= _46; _47 += 1) { /*11159*/
				$1.i = _47; /*11146*/
				$1.c = $get($1.msg, $1.i); /*11147*/
				if ((!$xo($1.ea, $1.c < 128)) && ($1.c >= 0)) { /*11157*/
					if ($1.ea) { /*11149*/
						$k[$j++] = $1.numSA; /*11149*/
					} else { /*11149*/
						$k[$j++] = $1.numEA; /*11149*/
					} /*11149*/
					var _4J = $get($k[--$j], $1.i); /*11149*/
					var _4M = ((_4J + $1.i) == $1.msglen) ? 3 : 5; /*11150*/
					if (_4J < _4M) { /*11155*/
						$k[$j++] = Infinity; /*11152*/
						$aload($1.msgtmp); /*11152*/
						$k[$j++] = $1.fn4; /*11152*/
						$1.msgtmp = $a(); /*11152*/
					} else { /*11155*/
						$k[$j++] = Infinity; /*11154*/
						$aload($1.msgtmp); /*11154*/
						$k[$j++] = $1.fn4; /*11154*/
						$k[$j++] = $1.fn4; /*11154*/
						$1.msgtmp = $a(); /*11154*/
						$1.ea = !$1.ea; /*11155*/
					} /*11155*/
				} /*11155*/
				$k[$j++] = Infinity; /*11158*/
				$aload($1.msgtmp); /*11158*/
				if ($1.c >= 0) { /*11158*/
					$k[$j++] = $1.c & 127; /*11158*/
				} else { /*11158*/
					$k[$j++] = $1.c; /*11158*/
				} /*11158*/
				$1.msgtmp = $a(); /*11158*/
			} /*11158*/
			$1.msg = $1.msgtmp; /*11160*/
			$1.msglen = $1.msg.length; /*11161*/
			$1.numsscr = function() {
				$1.n = 0; /*11165*/
				$1.s = 0; /*11165*/
				$1.p = $k[--$j]; /*11166*/
				for (;;) { /*11177*/
					if ($1.p >= $1.msglen) { /*11167*/
						break; /*11167*/
					} /*11167*/
					var _4h = $get($1.msg, $1.p); /*11168*/
					var _4j = $get($1.setc, _4h) !== undefined; /*11169*/
					$k[$j++] = _4h; /*11169*/
					if (!_4j) { /*11169*/
						$j--; /*11169*/
						break; /*11169*/
					} /*11169*/
					if ($k[--$j] == $1.fn1) { /*11173*/
						if (($1.s % 2) == 0) { /*11172*/
							$1.s = $1.s + 1; /*11172*/
						} else { /*11172*/
							break; /*11172*/
						} /*11172*/
					} /*11172*/
					$1.n = $1.n + 1; /*11174*/
					$1.s = $1.s + 1; /*11175*/
					$1.p = $1.p + 1; /*11176*/
				} /*11176*/
				$k[$j++] = $1.n; /*11178*/
				$k[$j++] = $1.s; /*11178*/
			}; /*11179*/
			$1.enca = function() {
				$put($1.cws, $1.j, $get($1.seta, $k[--$j])); /*11183*/
				$1.j = $1.j + 1; /*11184*/
			}; /*11185*/
			$1.encb = function() {
				$put($1.cws, $1.j, $get($1.setb, $k[--$j])); /*11187*/
				$1.j = $1.j + 1; /*11188*/
			}; /*11189*/
			$1.encc = function() {
				var _55 = $k[--$j]; /*11191*/
				$k[$j++] = _55; /*11195*/
				if ($ne($type(_55), "arraytype")) { /*11194*/
					var _59 = $get($1.setc, $k[--$j]); /*11192*/
					$k[$j++] = _59; /*11192*/
				} else { /*11194*/
					$aload($k[--$j]); /*11194*/
					var _5B = $k[--$j]; /*11194*/
					var _5C = $k[--$j]; /*11194*/
					$k[$j++] = (_5B - 48) + ((_5C - 48) * 10); /*11194*/
				} /*11194*/
				$put($1.cws, $1.j, $k[--$j]); /*11196*/
				$1.j = $1.j + 1; /*11197*/
			}; /*11198*/
			$1.anotb = function() {
				var _5H = $k[--$j]; /*11201*/
				var _5J = $get($1.seta, _5H) !== undefined; /*11201*/
				var _5L = $get($1.setb, _5H) !== undefined; /*11201*/
				$k[$j++] = _5J && (!_5L); /*11201*/
			}; /*11201*/
			$1.bnota = function() {
				var _5M = $k[--$j]; /*11202*/
				var _5O = $get($1.setb, _5M) !== undefined; /*11202*/
				var _5Q = $get($1.seta, _5M) !== undefined; /*11202*/
				$k[$j++] = _5O && (!_5Q); /*11202*/
			}; /*11202*/
			$k[$j++] = Infinity; /*11205*/
			for (var _5S = 0, _5T = $1.msg.length; _5S < _5T; _5S++) { /*11205*/
				$k[$j++] = 0; /*11205*/
			} /*11205*/
			$k[$j++] = 9999; /*11205*/
			$1.nextanotb = $a(); /*11205*/
			$k[$j++] = Infinity; /*11206*/
			for (var _5W = 0, _5X = $1.msg.length; _5W < _5X; _5W++) { /*11206*/
				$k[$j++] = 0; /*11206*/
			} /*11206*/
			$k[$j++] = 9999; /*11206*/
			$1.nextbnota = $a(); /*11206*/
			for (var _5a = $1.msg.length - 1; _5a >= 0; _5a -= 1) { /*11219*/
				$1.i = _5a; /*11208*/
				$k[$j++] = $get($1.msg, $1.i); /*11209*/
				$1.anotb(); /*11209*/
				if ($k[--$j]) { /*11212*/
					$put($1.nextanotb, $1.i, 0); /*11210*/
				} else { /*11212*/
					$put($1.nextanotb, $1.i, $get($1.nextanotb, $1.i + 1) + 1); /*11212*/
				} /*11212*/
				$k[$j++] = $get($1.msg, $1.i); /*11214*/
				$1.bnota(); /*11214*/
				if ($k[--$j]) { /*11217*/
					$put($1.nextbnota, $1.i, 0); /*11215*/
				} else { /*11217*/
					$put($1.nextbnota, $1.i, $get($1.nextbnota, $1.i + 1) + 1); /*11217*/
				} /*11217*/
			} /*11217*/
			$1.abeforeb = function() {
				var _5x = $k[--$j]; /*11222*/
				$k[$j++] = $lt($get($1.nextanotb, _5x), $get($1.nextbnota, _5x)); /*11222*/
			}; /*11222*/
			$1.bbeforea = function() {
				var _62 = $k[--$j]; /*11223*/
				$k[$j++] = $lt($get($1.nextbnota, _62), $get($1.nextanotb, _62)); /*11223*/
			}; /*11223*/
			$1.cws = $a(($1.barcode.length * 2) + 3); /*11225*/
			$1.i = 0; /*11228*/
			$1.j = 0; /*11228*/
			for (;;) { /*11318*/
				if ($1.pos != -1) { /*11239*/
					$put($1.cws, 0, (~~($1.pos / 10)) - 1); /*11233*/
					$put($1.cws, 1, ($1.pos % 10) - 1); /*11234*/
					$1.j = 2; /*11235*/
					$1.cset = "setb"; /*11236*/
					$1.mode = 7; /*11237*/
					break; /*11238*/
				} /*11238*/
				if ($1.msglen == 0) { /*11245*/
					$1.cset = "setb"; /*11242*/
					$1.mode = 1; /*11243*/
					break; /*11244*/
				} /*11244*/
				if ($1.msglen >= 2) { /*11254*/
					$k[$j++] = $get($1.msg, 0) == $1.fn1; /*11248*/
					$k[$j++] = 1; /*11248*/
					$1.numsscr(); /*11248*/
					var _6J = $k[--$j]; /*11248*/
					var _6K = $k[--$j]; /*11248*/
					if ($k[--$j] && (_6J >= 2)) { /*11253*/
						$1.cset = "setc"; /*11249*/
						$1.mode = 4; /*11250*/
						$1.i = 1; /*11251*/
						break; /*11252*/
					} /*11252*/
				} /*11252*/
				if ($get($1.msg, 0) == $1.fn1) { /*11261*/
					$1.cset = "setb"; /*11257*/
					$1.mode = 3; /*11258*/
					$1.i = 1; /*11259*/
					break; /*11260*/
				} /*11260*/
				if ($1.msglen >= 2) { /*11307*/
					$k[$j++] = 0; /*11264*/
					$1.numsscr(); /*11264*/
					var _6Q = $k[--$j]; /*11264*/
					var _6R = $k[--$j]; /*11264*/
					if ((_6Q >= 2) && ((_6Q % 2) == 0)) { /*11268*/
						$1.cset = "setc"; /*11265*/
						$1.mode = 2; /*11266*/
						break; /*11267*/
					} /*11267*/
					$k[$j++] = 0; /*11270*/
					$1.numsscr(); /*11270*/
					var _6S = $k[--$j]; /*11270*/
					var _6T = $k[--$j]; /*11270*/
					if ((_6S >= 3) && ((_6S % 2) == 1)) { /*11276*/
						$k[$j++] = $get($1.msg, 0); /*11271*/
						$1.encb(); /*11271*/
						$1.cset = "setc"; /*11272*/
						$1.mode = 5; /*11273*/
						$1.i = 1; /*11274*/
						break; /*11275*/
					} /*11275*/
					var _6Z = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11278*/
					$k[$j++] = _6Z; /*11279*/
					$k[$j++] = 1; /*11279*/
					$1.numsscr(); /*11279*/
					var _6a = $k[--$j]; /*11279*/
					var _6b = $k[--$j]; /*11279*/
					if ($k[--$j] && ((_6a >= 2) && ((_6a % 2) == 0))) { /*11285*/
						$k[$j++] = $get($1.msg, 0); /*11280*/
						$1.encb(); /*11280*/
						$1.cset = "setc"; /*11281*/
						$1.mode = 5; /*11282*/
						$1.i = 1; /*11283*/
						break; /*11284*/
					} /*11284*/
					var _6i = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11287*/
					$k[$j++] = _6i; /*11288*/
					$k[$j++] = 1; /*11288*/
					$1.numsscr(); /*11288*/
					var _6j = $k[--$j]; /*11288*/
					var _6k = $k[--$j]; /*11288*/
					if ($k[--$j] && ((_6j >= 3) && ((_6j % 2) == 1))) { /*11295*/
						$k[$j++] = $get($1.msg, 0); /*11289*/
						$1.encb(); /*11289*/
						$k[$j++] = $get($1.msg, 1); /*11290*/
						$1.encb(); /*11290*/
						$1.cset = "setc"; /*11291*/
						$1.mode = 6; /*11292*/
						$1.i = 2; /*11293*/
						break; /*11294*/
					} /*11294*/
					var _6t = $get($1.setb, $get($1.msg, 0)) !== undefined; /*11297*/
					var _6x = $get($1.setb, $get($1.msg, 1)) !== undefined; /*11298*/
					$k[$j++] = _6t && _6x; /*11299*/
					$k[$j++] = 2; /*11299*/
					$1.numsscr(); /*11299*/
					var _6y = $k[--$j]; /*11299*/
					var _6z = $k[--$j]; /*11299*/
					if ($k[--$j] && ((_6y >= 2) && ((_6y % 2) == 0))) { /*11306*/
						$k[$j++] = $get($1.msg, 0); /*11300*/
						$1.encb(); /*11300*/
						$k[$j++] = $get($1.msg, 1); /*11301*/
						$1.encb(); /*11301*/
						$1.cset = "setc"; /*11302*/
						$1.mode = 6; /*11303*/
						$1.i = 2; /*11304*/
						break; /*11305*/
					} /*11305*/
				} /*11305*/
				$k[$j++] = 0; /*11309*/
				$1.abeforeb(); /*11309*/
				if ($k[--$j]) { /*11313*/
					$1.cset = "seta"; /*11310*/
					$1.mode = 0; /*11311*/
					break; /*11312*/
				} /*11312*/
				$1.cset = "setb"; /*11315*/
				$1.mode = 1; /*11316*/
				break; /*11317*/
			} /*11317*/
			for (;;) { /*11561*/
				if ($1.i == $1.msglen) { /*11321*/
					break; /*11321*/
				} /*11321*/
				$k[$j++] = $1.i; /*11323*/
				$1.numsscr(); /*11323*/
				$1.nums = $k[--$j]; /*11323*/
				$1.nchars = $k[--$j]; /*11323*/
				for (;;) { /*11559*/
					if ($eq($1.cset, "seta")) { /*11400*/
						if ($1.i < ($1.msglen - 1)) { /*11337*/
							$k[$j++] = $get($1.msg, $1.i); /*11330*/
							$1.bnota(); /*11330*/
							$k[$j++] = $1.i + 1; /*11331*/
							$1.abeforeb(); /*11331*/
							var _7I = $k[--$j]; /*11331*/
							if (($k[--$j] && _7I)) { /*11336*/
								$k[$j++] = $1.sb1; /*11332*/
								$1.enca(); /*11332*/
								$k[$j++] = $get($1.msg, $1.i); /*11333*/
								$1.encb(); /*11333*/
								$1.i = $1.i + 1; /*11334*/
								break; /*11335*/
							} /*11335*/
						} /*11335*/
						if ($1.i < ($1.msglen - 2)) { /*11349*/
							$k[$j++] = $get($1.msg, $1.i); /*11340*/
							$1.bnota(); /*11340*/
							$k[$j++] = $get($1.msg, $1.i + 1); /*11341*/
							$1.bnota(); /*11341*/
							var _7X = $k[--$j]; /*11341*/
							var _7Y = $k[--$j]; /*11341*/
							$k[$j++] = $an(_7Y, _7X); /*11342*/
							$k[$j++] = $1.i + 2; /*11342*/
							$1.abeforeb(); /*11342*/
							var _7a = $k[--$j]; /*11342*/
							if (($k[--$j] && _7a)) { /*11348*/
								$k[$j++] = $1.sb2; /*11343*/
								$1.enca(); /*11343*/
								$k[$j++] = $get($1.msg, $1.i); /*11344*/
								$1.encb(); /*11344*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11345*/
								$1.encb(); /*11345*/
								$1.i = $1.i + 2; /*11346*/
								break; /*11347*/
							} /*11347*/
						} /*11347*/
						$k[$j++] = $get($1.msg, $1.i); /*11351*/
						$1.bnota(); /*11351*/
						if ($k[--$j]) { /*11355*/
							$k[$j++] = $1.swb; /*11352*/
							$1.enca(); /*11352*/
							$1.cset = "setb"; /*11353*/
							break; /*11354*/
						} /*11354*/
						if ($1.i < ($1.msglen - 4)) { /*11372*/
							var _7w = $get($1.seta, $get($1.msg, $1.i + 4)) !== undefined; /*11359*/
							if (($1.nums == 4) && _7w) { /*11371*/
								$k[$j++] = $1.sc2; /*11360*/
								$1.enca(); /*11360*/
								for (var _7y = 0, _7z = 2; _7y < _7z; _7y++) { /*11369*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11367*/
										$k[$j++] = $1.fn1; /*11363*/
										$1.encc(); /*11363*/
										$1.i = $1.i + 1; /*11364*/
									} else { /*11367*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11366*/
										$1.encc(); /*11366*/
										$1.i = $1.i + 2; /*11367*/
									} /*11367*/
								} /*11367*/
								break; /*11370*/
							} /*11370*/
						} /*11370*/
						if ($1.i < ($1.msglen - 6)) { /*11389*/
							var _8H = $get($1.seta, $get($1.msg, $1.i + 6)) !== undefined; /*11376*/
							if (($1.nums == 6) && _8H) { /*11388*/
								$k[$j++] = $1.sc3; /*11377*/
								$1.enca(); /*11377*/
								for (var _8J = 0, _8K = 3; _8J < _8K; _8J++) { /*11386*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11384*/
										$k[$j++] = $1.fn1; /*11380*/
										$1.encc(); /*11380*/
										$1.i = $1.i + 1; /*11381*/
									} else { /*11384*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11383*/
										$1.encc(); /*11383*/
										$1.i = $1.i + 2; /*11384*/
									} /*11384*/
								} /*11384*/
								break; /*11387*/
							} /*11387*/
						} /*11387*/
						if (($1.nums >= 4) && (($1.nums % 2) == 0)) { /*11395*/
							$k[$j++] = $1.swc; /*11392*/
							$1.enca(); /*11392*/
							$1.cset = "setc"; /*11393*/
							break; /*11394*/
						} /*11394*/
						$k[$j++] = $get($1.msg, $1.i); /*11397*/
						$1.enca(); /*11397*/
						$1.i = $1.i + 1; /*11398*/
						break; /*11399*/
					} /*11399*/
					if ($eq($1.cset, "setb")) { /*11474*/
						if ($1.i < ($1.msglen - 1)) { /*11411*/
							$k[$j++] = $get($1.msg, $1.i); /*11404*/
							$1.anotb(); /*11404*/
							$k[$j++] = $1.i + 1; /*11405*/
							$1.bbeforea(); /*11405*/
							var _8j = $k[--$j]; /*11405*/
							if (($k[--$j] && _8j)) { /*11410*/
								$k[$j++] = $1.sa1; /*11406*/
								$1.encb(); /*11406*/
								$k[$j++] = $get($1.msg, $1.i); /*11407*/
								$1.enca(); /*11407*/
								$1.i = $1.i + 1; /*11408*/
								break; /*11409*/
							} /*11409*/
						} /*11409*/
						if ($1.i < ($1.msglen - 2)) { /*11423*/
							$k[$j++] = $get($1.msg, $1.i); /*11414*/
							$1.anotb(); /*11414*/
							$k[$j++] = $get($1.msg, $1.i + 1); /*11415*/
							$1.anotb(); /*11415*/
							var _8y = $k[--$j]; /*11415*/
							var _8z = $k[--$j]; /*11415*/
							$k[$j++] = $an(_8z, _8y); /*11416*/
							$k[$j++] = $1.i + 2; /*11416*/
							$1.bbeforea(); /*11416*/
							var _91 = $k[--$j]; /*11416*/
							if (($k[--$j] && _91)) { /*11422*/
								$k[$j++] = $1.sa2; /*11417*/
								$1.encb(); /*11417*/
								$k[$j++] = $get($1.msg, $1.i); /*11418*/
								$1.enca(); /*11418*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11419*/
								$1.enca(); /*11419*/
								$1.i = $1.i + 2; /*11420*/
								break; /*11421*/
							} /*11421*/
						} /*11421*/
						$k[$j++] = $get($1.msg, $1.i); /*11425*/
						$1.anotb(); /*11425*/
						if ($k[--$j]) { /*11429*/
							$k[$j++] = $1.swa; /*11426*/
							$1.encb(); /*11426*/
							$1.cset = "seta"; /*11427*/
							break; /*11428*/
						} /*11428*/
						if ($1.i < ($1.msglen - 4)) { /*11446*/
							var _9N = $get($1.setb, $get($1.msg, $1.i + 4)) !== undefined; /*11433*/
							if (($1.nums == 4) && _9N) { /*11445*/
								$k[$j++] = $1.sc2; /*11434*/
								$1.encb(); /*11434*/
								for (var _9P = 0, _9Q = 2; _9P < _9Q; _9P++) { /*11443*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11441*/
										$k[$j++] = $1.fn1; /*11437*/
										$1.encc(); /*11437*/
										$1.i = $1.i + 1; /*11438*/
									} else { /*11441*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11440*/
										$1.encc(); /*11440*/
										$1.i = $1.i + 2; /*11441*/
									} /*11441*/
								} /*11441*/
								break; /*11444*/
							} /*11444*/
						} /*11444*/
						if ($1.i < ($1.msglen - 6)) { /*11463*/
							var _9i = $get($1.setb, $get($1.msg, $1.i + 6)) !== undefined; /*11450*/
							if (($1.nums == 6) && _9i) { /*11462*/
								$k[$j++] = $1.sc3; /*11451*/
								$1.encb(); /*11451*/
								for (var _9k = 0, _9l = 3; _9k < _9l; _9k++) { /*11460*/
									if ($get($1.msg, $1.i) == $1.fn1) { /*11458*/
										$k[$j++] = $1.fn1; /*11454*/
										$1.encc(); /*11454*/
										$1.i = $1.i + 1; /*11455*/
									} else { /*11458*/
										$k[$j++] = $geti($1.msg, $1.i, 2); /*11457*/
										$1.encc(); /*11457*/
										$1.i = $1.i + 2; /*11458*/
									} /*11458*/
								} /*11458*/
								break; /*11461*/
							} /*11461*/
						} /*11461*/
						if (($1.nums >= 4) && (($1.nums % 2) == 0)) { /*11469*/
							$k[$j++] = $1.swc; /*11466*/
							$1.encb(); /*11466*/
							$1.cset = "setc"; /*11467*/
							break; /*11468*/
						} /*11468*/
						$k[$j++] = $get($1.msg, $1.i); /*11471*/
						$1.encb(); /*11471*/
						$1.i = $1.i + 1; /*11472*/
						break; /*11473*/
					} /*11473*/
					if ($eq($1.cset, "setc")) { /*11557*/
						if ($1.nums >= 2) { /*11486*/
							if ($get($1.msg, $1.i) == $1.fn1) { /*11483*/
								$k[$j++] = $1.fn1; /*11479*/
								$1.encc(); /*11479*/
								$1.i = $1.i + 1; /*11480*/
							} else { /*11483*/
								$k[$j++] = $geti($1.msg, $1.i, 2); /*11482*/
								$1.encc(); /*11482*/
								$1.i = $1.i + 2; /*11483*/
							} /*11483*/
							break; /*11485*/
						} /*11485*/
						if ($1.i < ($1.msglen - 1)) { /*11496*/
							var _AL = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11489*/
							$k[$j++] = _AL; /*11490*/
							$k[$j++] = $1.i + 1; /*11490*/
							$1.numsscr(); /*11490*/
							var _AN = $k[--$j]; /*11490*/
							var _AO = $k[--$j]; /*11490*/
							if ($k[--$j] && ((_AN >= 2) && ((_AN % 2) == 0))) { /*11495*/
								$k[$j++] = $1.sb1; /*11491*/
								$1.encc(); /*11491*/
								$k[$j++] = $get($1.msg, $1.i); /*11492*/
								$1.encb(); /*11492*/
								$1.i = $1.i + 1; /*11493*/
								break; /*11494*/
							} /*11494*/
						} /*11494*/
						if ($1.i < ($1.msglen - 1)) { /*11507*/
							var _Ab = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11499*/
							$k[$j++] = _Ab; /*11500*/
							$k[$j++] = $1.i + 1; /*11500*/
							$1.numsscr(); /*11500*/
							var _Ad = $k[--$j]; /*11500*/
							var _Ae = $k[--$j]; /*11500*/
							if ($k[--$j] && ((_Ad >= 3) && ((_Ad % 2) == 1))) { /*11506*/
								$k[$j++] = $1.sb2; /*11501*/
								$1.encc(); /*11501*/
								$k[$j++] = $get($1.msg, $1.i); /*11502*/
								$1.encb(); /*11502*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11503*/
								$1.encb(); /*11503*/
								$1.i = $1.i + 2; /*11504*/
								break; /*11505*/
							} /*11505*/
						} /*11505*/
						if ($1.i < ($1.msglen - 2)) { /*11519*/
							var _Au = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11510*/
							var _Az = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11511*/
							$k[$j++] = _Au && _Az; /*11512*/
							$k[$j++] = $1.i + 2; /*11512*/
							$1.numsscr(); /*11512*/
							var _B1 = $k[--$j]; /*11512*/
							var _B2 = $k[--$j]; /*11512*/
							if ($k[--$j] && ((_B1 >= 2) && ((_B1 % 2) == 0))) { /*11518*/
								$k[$j++] = $1.sb2; /*11513*/
								$1.encc(); /*11513*/
								$k[$j++] = $get($1.msg, $1.i); /*11514*/
								$1.encb(); /*11514*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11515*/
								$1.encb(); /*11515*/
								$1.i = $1.i + 2; /*11516*/
								break; /*11517*/
							} /*11517*/
						} /*11517*/
						if ($1.i < ($1.msglen - 3)) { /*11532*/
							var _BI = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11522*/
							var _BN = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11523*/
							$k[$j++] = _BI && _BN; /*11524*/
							$k[$j++] = $1.i + 2; /*11524*/
							$1.numsscr(); /*11524*/
							var _BP = $k[--$j]; /*11524*/
							var _BQ = $k[--$j]; /*11524*/
							if ($k[--$j] && ((_BP >= 3) && ((_BP % 2) == 1))) { /*11531*/
								$k[$j++] = $1.sb3; /*11525*/
								$1.encc(); /*11525*/
								$k[$j++] = $get($1.msg, $1.i); /*11526*/
								$1.encb(); /*11526*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11527*/
								$1.encb(); /*11527*/
								$k[$j++] = $get($1.msg, $1.i + 2); /*11528*/
								$1.encb(); /*11528*/
								$1.i = $1.i + 3; /*11529*/
								break; /*11530*/
							} /*11530*/
						} /*11530*/
						if ($1.i < ($1.msglen - 3)) { /*11546*/
							var _Bj = $get($1.setb, $get($1.msg, $1.i)) !== undefined; /*11535*/
							var _Bo = $get($1.setb, $get($1.msg, $1.i + 1)) !== undefined; /*11536*/
							var _Bt = $get($1.setb, $get($1.msg, $1.i + 2)) !== undefined; /*11537*/
							$k[$j++] = (_Bj && _Bo) && _Bt; /*11538*/
							$k[$j++] = $1.i + 3; /*11538*/
							$1.numsscr(); /*11538*/
							var _Bv = $k[--$j]; /*11538*/
							var _Bw = $k[--$j]; /*11538*/
							if ($k[--$j] && ((_Bv >= 2) && ((_Bv % 2) == 0))) { /*11545*/
								$k[$j++] = $1.sb3; /*11539*/
								$1.encc(); /*11539*/
								$k[$j++] = $get($1.msg, $1.i); /*11540*/
								$1.encb(); /*11540*/
								$k[$j++] = $get($1.msg, $1.i + 1); /*11541*/
								$1.encb(); /*11541*/
								$k[$j++] = $get($1.msg, $1.i + 2); /*11542*/
								$1.encb(); /*11542*/
								$1.i = $1.i + 3; /*11543*/
								break; /*11544*/
							} /*11544*/
						} /*11544*/
						$k[$j++] = $1.i; /*11548*/
						$1.abeforeb(); /*11548*/
						if ($k[--$j]) { /*11552*/
							$k[$j++] = $1.swa; /*11549*/
							$1.encc(); /*11549*/
							$1.cset = "seta"; /*11550*/
							break; /*11551*/
						} /*11551*/
						$k[$j++] = $1.swb; /*11554*/
						$1.encc(); /*11554*/
						$1.cset = "setb"; /*11555*/
						break; /*11556*/
					} /*11556*/
					break; /*11558*/
				} /*11558*/
			} /*11558*/
			$1.cws = $geti($1.cws, 0, $1.j); /*11562*/
		} /*11562*/
		$1.metrics = $a([$a([2, 7]), $a([3, 12]), $a([4, 17]), $a([5, 22]), $a([6, 27]), $a([7, 32]), $a([8, 37]), $a([9, 42]), $a([10, 47]), $a([11, 52]), $a([12, 57]), $a([13, 62]), $a([14, 67]), $a([15, 72]), $a([16, 77])]); /*11583*/
		$1.urows = $1.rows; /*11586*/
		$1.i = 0; /*11587*/
		for (;;) { /*11597*/
			$1.m = $get($1.metrics, $1.i); /*11589*/
			$1.r = $get($1.m, 0); /*11590*/
			$1.dcws = $get($1.m, 1); /*11591*/
			$1.okay = true; /*11592*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*11593*/
				$1.okay = false; /*11593*/
			} /*11593*/
			if ($1.cws.length > $1.dcws) { /*11594*/
				$1.okay = false; /*11594*/
			} /*11594*/
			if ($1.okay) { /*11595*/
				break; /*11595*/
			} /*11595*/
			$1.i = $1.i + 1; /*11596*/
		} /*11596*/
		$k[$j++] = Infinity; /*11600*/
		$aload($1.cws); /*11600*/
		for (var _Co = 0, _Cp = $1.dcws - $1.cws.length; _Co < _Cp; _Co++) { /*11600*/
			$k[$j++] = 103; /*11600*/
		} /*11600*/
		$1.cws = $a(); /*11600*/
		$k[$j++] = Infinity; /*11603*/
		$k[$j++] = (($1.r - 2) * 7) + $1.mode; /*11603*/
		$aload($1.cws); /*11603*/
		$1.cws = $a(); /*11603*/
		$k[$j++] = 0; /*11606*/
		for (var _Cx = 0, _Cw = $1.dcws; _Cx <= _Cw; _Cx += 1) { /*11606*/
			var _D0 = $k[--$j]; /*11606*/
			$k[$j++] = _D0 + ((_Cx + 2) * $get($1.cws, _Cx)); /*11606*/
		} /*11606*/
		$1.c1 = $k[--$j] % 107; /*11607*/
		$k[$j++] = 0; /*11608*/
		for (var _D4 = 0, _D3 = $1.dcws; _D4 <= _D3; _D4 += 1) { /*11608*/
			var _D7 = $k[--$j]; /*11608*/
			$k[$j++] = _D7 + ((_D4 + 1) * $get($1.cws, _D4)); /*11608*/
		} /*11608*/
		$1.c2 = ($k[--$j] + ($1.c1 * ($1.dcws + 2))) % 107; /*11609*/
		$k[$j++] = Infinity; /*11610*/
		$aload($1.cws); /*11610*/
		$k[$j++] = $1.c1; /*11610*/
		$k[$j++] = $1.c2; /*11610*/
		$1.cws = $a(); /*11610*/
		$1.encs = $a(["212222", "222122", "222221", "121223", "121322", "131222", "122213", "122312", "132212", "221213", "221312", "231212", "112232", "122132", "122231", "113222", "123122", "123221", "223211", "221132", "221231", "213212", "223112", "312131", "311222", "321122", "321221", "312212", "322112", "322211", "212123", "212321", "232121", "111323", "131123", "131321", "112313", "132113", "132311", "211313", "231113", "231311", "112133", "112331", "132131", "113123", "113321", "133121", "313121", "211331", "231131", "213113", "213311", "213131", "311123", "311321", "331121", "312113", "312311", "332111", "314111", "221411", "431111", "111224", "111422", "121124", "121421", "141122", "141221", "112214", "112412", "122114", "122411", "142112", "142211", "241211", "221114", "413111", "241112", "134111", "111242", "121142", "121241", "114212", "124112", "124211", "411212", "421112", "421211", "212141", "214121", "412121", "111143", "111341", "131141", "114113", "114311", "411113", "411311", "113141", "114131", "311141", "411131", "211412", "211214", "211232", "211133"]); /*11630*/
		$1.startencs = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112"]); /*11636*/
		$1.stopencsodd = $a(["3211", "2221", "2122", "1411", "1132", "1231", "1114", "3112", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411"]); /*11640*/
		$1.stopencseven = $a(["2122", "1411", "1132", "1231", "1114", "3112", "1132", "1231", "1114", "3112", "3211", "2221", "2122", "1411", "3211", "2221"]); /*11644*/
		if (($1.pos == -1) || (((~~($1.pos / 10)) % 2) == 1)) { /*11648*/
			$1.stopencs = $1.stopencsodd; /*11646*/
		} else { /*11648*/
			$1.stopencs = $1.stopencseven; /*11648*/
		} /*11648*/
		$1.rowbits = $a($1.r); /*11652*/
		for (var _DR = 0, _DQ = $1.r - 1; _DR <= _DQ; _DR += 1) { /*11669*/
			$1.i = _DR; /*11654*/
			$k[$j++] = Infinity; /*11664*/
			$k[$j++] = 10; /*11657*/
			$forall($get($1.startencs, $1.i), function() { /*11657*/
				var _DV = $k[--$j]; /*11657*/
				$k[$j++] = _DV - 48; /*11657*/
			}); /*11657*/
			$k[$j++] = 1; /*11661*/
			$forall($geti($1.cws, $1.i * 5, 5), function() { /*11661*/
				$forall($get($1.encs, $k[--$j]), function() { /*11660*/
					var _Dc = $k[--$j]; /*11660*/
					$k[$j++] = _Dc - 48; /*11660*/
				}); /*11660*/
			}); /*11660*/
			$forall($get($1.stopencs, $1.i), function() { /*11662*/
				var _Dg = $k[--$j]; /*11662*/
				$k[$j++] = _Dg - 48; /*11662*/
			}); /*11662*/
			$k[$j++] = 1; /*11663*/
			$1.sbs = $a(); /*11664*/
			$k[$j++] = Infinity; /*11665*/
			var _Di = $1.sbs; /*11666*/
			$k[$j++] = 1; /*11666*/
			for (var _Dj = 0, _Dk = _Di.length; _Dj < _Dk; _Dj++) { /*11666*/
				var _Dm = $k[--$j]; /*11666*/
				var _Dn = (_Dm == 0) ? 1 : 0; /*11666*/
				$k[$j++] = _Dm; /*11666*/
				for (var _Do = 0, _Dp = $get(_Di, _Dj); _Do < _Dp; _Do++) { /*11666*/
					$k[$j++] = _Dn /*11666*/
				} /*11666*/
			} /*11666*/
			$astore($a($counttomark() - 1)); /*11667*/
			var _Ds = $k[--$j]; /*11667*/
			var _Dt = $k[--$j]; /*11667*/
			var _Du = $k[--$j]; /*11667*/
			$put($1.rowbits, $1.i, _Ds); /*11668*/
		} /*11668*/
		$k[$j++] = Infinity; /*11681*/
		for (var _Dy = 0, _Dz = 81 * $1.sepheight; _Dy < _Dz; _Dy++) { /*11673*/
			$k[$j++] = 1; /*11673*/
		} /*11673*/
		for (var _E2 = 0, _E1 = $1.r - 2; _E2 <= _E1; _E2 += 1) { /*11678*/
			$1.i = _E2; /*11675*/
			for (var _E4 = 0, _E5 = $1.rowheight; _E4 < _E5; _E4++) { /*11676*/
				$aload($get($1.rowbits, $1.i)); /*11676*/
			} /*11676*/
			for (var _EA = 0, _EB = $1.sepheight; _EA < _EB; _EA++) { /*11677*/
				for (var _EC = 0, _ED = 10; _EC < _ED; _EC++) { /*11677*/
					$k[$j++] = 0; /*11677*/
				} /*11677*/
				for (var _EE = 0, _EF = 70; _EE < _EF; _EE++) { /*11677*/
					$k[$j++] = 1; /*11677*/
				} /*11677*/
				$k[$j++] = 0; /*11677*/
			} /*11677*/
		} /*11677*/
		for (var _EH = 0, _EI = $1.rowheight; _EH < _EI; _EH++) { /*11679*/
			$aload($get($1.rowbits, $1.r - 1)); /*11679*/
		} /*11679*/
		for (var _EN = 0, _EO = 81 * $1.sepheight; _EN < _EO; _EN++) { /*11680*/
			$k[$j++] = 1; /*11680*/
		} /*11680*/
		$1.pixs = $a(); /*11681*/
		var _EU = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: 81,
			pixy: ~~($1.pixs.length / 81),
			height: (~~($1.pixs.length / 81)) / 72,
			width: 81 / 72,
			opt: $1.options
		}; /*11691*/
		$k[$j++] = _EU; /*11694*/
		if (!$1.dontdraw) { /*11694*/
			$0.renmatrix(); /*11694*/
		} /*11694*/
	};
	$0.code49 = function() {
		var $1 = {}; /*11721*/
		$1.options = $k[--$j]; /*11723*/
		$1.barcode = $k[--$j]; /*11724*/
		$1.dontdraw = false; /*11726*/
		$1.mode = -1; /*11727*/
		$1.pos = -1; /*11728*/
		$1.rows = 0; /*11729*/
		$1.rowheight = 8; /*11730*/
		$1.sepheight = 1; /*11731*/
		$1.parse = false; /*11732*/
		$1.parsefnc = false; /*11733*/
		$forall($1.options, function() { /*11744*/
			var _3 = $k[--$j]; /*11744*/
			$1[$k[--$j]] = _3; /*11744*/
		}); /*11744*/
		$1.mode = ~~$1.mode; /*11746*/
		$1.pos = ~~$1.pos; /*11747*/
		$1.rows = ~~$1.rows; /*11748*/
		$1.rowheight = ~~$1.rowheight; /*11749*/
		$1.sepheight = ~~$1.sepheight; /*11750*/
		$1.barlen = $1.barcode.length; /*11773*/
		$1.s1 = -1; /*11776*/
		$1.s2 = -2; /*11776*/
		$1.fn1 = -3; /*11776*/
		$1.fn2 = -4; /*11776*/
		$1.fn3 = -5; /*11776*/
		$1.ns = -6; /*11776*/
		var _E = {
			FNC1: $1.fn1,
			FNC2: $1.fn2,
			FNC3: $1.fn3
		}; /*11780*/
		$1.fncvals = _E; /*11781*/
		$1.msg = $a($1.barlen); /*11782*/
		$1.i = 0; /*11783*/
		$1.j = 0; /*11783*/
		for (;;) { /*11797*/
			if ($1.i == $1.barlen) { /*11784*/
				break; /*11784*/
			} /*11784*/
			$1.char = $get($1.barcode, $1.i); /*11785*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*11793*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*11791*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*11788*/
					$1.i = $1.i + 4; /*11789*/
				} else { /*11791*/
					$1.i = $1.i + 1; /*11791*/
				} /*11791*/
			} /*11791*/
			$put($1.msg, $1.j, $1.char); /*11794*/
			$1.i = $1.i + 1; /*11795*/
			$1.j = $1.j + 1; /*11796*/
		} /*11796*/
		$1.msg = $geti($1.msg, 0, $1.j); /*11798*/
		$1.msglen = $1.msg.length; /*11799*/
		$1.charmap = $a(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "-", ".", " ", "$", "/", "+", "%", $1.s1, $1.s2, $1.fn1, $1.fn2, $1.fn3, $1.ns]); /*11808*/
		$1.charvals = {}; /*11811*/
		for (var _q = 0; _q <= 48; _q += 1) { /*11817*/
			$1.i = _q; /*11813*/
			var _t = $get($1.charmap, $1.i); /*11814*/
			$k[$j++] = _t; /*11815*/
			if ($eq($type(_t), "stringtype")) { /*11815*/
				var _w = $get($k[--$j], 0); /*11815*/
				$k[$j++] = _w; /*11815*/
			} /*11815*/
			$put($1.charvals, $k[--$j], $1.i); /*11816*/
		} /*11816*/
		$1.combos = $a(["1 ", "1A", "1B", "1C", "1D", "1E", "1F", "1G", "1H", "1I", "1J", "1K", "1L", "1M", "1N", "1O", "1P", "1Q", "1R", "1S", "1T", "1U", "1V", "1W", "1X", "1Y", "1Z", "11", "12", "13", "14", "15", "  ", "16", "17", "18", " $", " %", "19", "10", "1-", "1.", "1$", " +", "1/", " -", " .", " /", " 0", " 1", " 2", " 3", " 4", " 5", " 6", " 7", " 8", " 9", "1+", "21", "22", "23", "24", "25", "26", " A", " B", " C", " D", " E", " F", " G", " H", " I", " J", " K", " L", " M", " N", " O", " P", " Q", " R", " S", " T", " U", " V", " W", " X", " Y", " Z", "27", "28", "29", "20", "2-", "2.", "2A", "2B", "2C", "2D", "2E", "2F", "2G", "2H", "2I", "2J", "2K", "2L", "2M", "2N", "2O", "2P", "2Q", "2R", "2S", "2T", "2U", "2V", "2W", "2X", "2Y", "2Z", "2$", "2/", "2+", "2%", "2 "]); /*11829*/
		for (var _11 = 0; _11 <= 127; _11 += 1) { /*11839*/
			$1.i = _11; /*11831*/
			var _14 = $get($1.combos, $1.i); /*11832*/
			$1.c1 = $get(_14, 0); /*11832*/
			$1.c2 = $get(_14, 1); /*11832*/
			if ($1.c1 == 49) { /*11835*/
				$put($1.charvals, $1.i, $a([$get($1.charvals, $1.s1), $get($1.charvals, $1.c2)])); /*11834*/
			} /*11834*/
			if ($1.c1 == 50) { /*11838*/
				$put($1.charvals, $1.i, $a([$get($1.charvals, $1.s2), $get($1.charvals, $1.c2)])); /*11837*/
			} /*11837*/
		} /*11837*/
		$1.encodealpha = function() {
			var _1T = $get($1.charvals, $k[--$j]); /*11842*/
			$k[$j++] = _1T; /*11843*/
			if ($ne($type(_1T), "arraytype")) { /*11843*/
				$astore($a(1)); /*11843*/
			} /*11843*/
			var _1W = $k[--$j]; /*11844*/
			$puti($1.cws, $1.j, _1W); /*11844*/
			$1.j = _1W.length + $1.j; /*11845*/
		}; /*11846*/
		$1.base48 = function() {
			var _1a = $k[--$j]; /*11849*/
			$k[$j++] = 0; /*11849*/
			$forall(_1a, function() { /*11849*/
				var _1b = $k[--$j]; /*11849*/
				var _1c = $k[--$j]; /*11849*/
				$k[$j++] = (_1b - 48) + (_1c * 10); /*11849*/
			}); /*11849*/
			$k[$j++] = Infinity; /*11850*/
			var _1d = $k[--$j]; /*11850*/
			var _1e = $k[--$j]; /*11850*/
			var _1f = $k[--$j]; /*11850*/
			$k[$j++] = _1d; /*11850*/
			$k[$j++] = _1e; /*11850*/
			for (var _1g = 0, _1h = _1f - 1; _1g < _1h; _1g++) { /*11850*/
				var _1i = $k[--$j]; /*11850*/
				$k[$j++] = _1i % 48; /*11850*/
				$k[$j++] = ~~(_1i / 48); /*11850*/
			} /*11850*/
			var _1j = $a(); /*11850*/
			$k[$j++] = _1j; /*11851*/
			$k[$j++] = Infinity; /*11851*/
			var _1k = $k[--$j]; /*11851*/
			var _1l = $k[--$j]; /*11851*/
			$k[$j++] = _1k; /*11851*/
			$k[$j++] = _1l; /*11851*/
			for (var _1m = _1l.length - 1; _1m >= 0; _1m -= 1) { /*11851*/
				var _1n = $k[--$j]; /*11851*/
				$k[$j++] = $get(_1n, _1m); /*11851*/
				$k[$j++] = _1n; /*11851*/
			} /*11851*/
			$j--; /*11851*/
			var _1p = $a(); /*11851*/
			$puti($1.cws, $1.j, _1p); /*11852*/
			$1.j = _1p.length + $1.j; /*11853*/
		}; /*11854*/
		$1.encodenumeric = function() {
			$1.nums = $k[--$j]; /*11857*/
			var _1v = $1.nums.length; /*11858*/
			var _1w = _1v % 5; /*11858*/
			$k[$j++] = "pre"; /*11858*/
			$k[$j++] = _1v; /*11858*/
			$k[$j++] = _1w; /*11858*/
			if (_1w != 2) { /*11858*/
				var _1x = $k[--$j]; /*11858*/
				var _1y = $k[--$j]; /*11858*/
				$k[$j++] = _1y - _1x; /*11858*/
			} else { /*11858*/
				var _1z = $k[--$j]; /*11858*/
				var _20 = $k[--$j]; /*11858*/
				$k[$j++] = (_20 - _1z) - 5; /*11858*/
			} /*11858*/
			var _21 = $k[--$j]; /*11858*/
			$1[$k[--$j]] = _21; /*11858*/
			for (var _25 = 0, _24 = $1.pre - 1; _25 <= _24; _25 += 5) { /*11859*/
				$k[$j++] = 3; /*11859*/
				$k[$j++] = $geti($1.nums, _25, 5); /*11859*/
				$1.base48(); /*11859*/
			} /*11859*/
			$1.nums = $geti($1.nums, $1.pre, $1.nums.length - $1.pre); /*11860*/
			var _2E = $1.nums.length; /*11862*/
			$k[$j++] = _2E; /*11862*/
			if (_2E == 1) { /*11862*/
				$k[$j++] = $get($1.nums, $1.i); /*11862*/
				$1.encodealpha(); /*11862*/
			} /*11862*/
			var _2I = $k[--$j]; /*11863*/
			$k[$j++] = _2I; /*11863*/
			if (_2I == 3) { /*11863*/
				$k[$j++] = 2; /*11863*/
				$k[$j++] = $1.nums; /*11863*/
				$1.base48(); /*11863*/
			} /*11863*/
			var _2K = $k[--$j]; /*11864*/
			$k[$j++] = _2K; /*11864*/
			if (_2K == 4) { /*11864*/
				$k[$j++] = 3; /*11864*/
				$k[$j++] = Infinity; /*11864*/
				$k[$j++] = 49; /*11864*/
				$k[$j++] = 48; /*11864*/
				$aload($1.nums); /*11864*/
				var _2M = $a(); /*11864*/
				$k[$j++] = _2M; /*11864*/
				$1.base48(); /*11864*/
			} /*11864*/
			if ($k[--$j] == 7) { /*11868*/
				$k[$j++] = 3; /*11866*/
				$k[$j++] = Infinity; /*11866*/
				$k[$j++] = 49; /*11866*/
				$k[$j++] = 48; /*11866*/
				$aload($geti($1.nums, 0, 4)); /*11866*/
				var _2Q = $a(); /*11866*/
				$k[$j++] = _2Q; /*11866*/
				$1.base48(); /*11866*/
				$k[$j++] = 2; /*11867*/
				$k[$j++] = $geti($1.nums, 4, 3); /*11867*/
				$1.base48(); /*11867*/
			} /*11867*/
		}; /*11869*/
		$k[$j++] = Infinity; /*11872*/
		for (var _2U = 0, _2V = $1.msglen; _2U < _2V; _2U++) { /*11872*/
			$k[$j++] = 0; /*11872*/
		} /*11872*/
		$k[$j++] = 0; /*11872*/
		$1.numericruns = $a(); /*11872*/
		for (var _2Y = $1.msglen - 1; _2Y >= 0; _2Y -= 1) { /*11881*/
			$1.i = _2Y; /*11874*/
			var _2b = $get($1.msg, $1.i); /*11875*/
			if ((_2b >= 48) && (_2b <= 57)) { /*11879*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 1) + 1); /*11877*/
			} else { /*11879*/
				$put($1.numericruns, $1.i, 0); /*11879*/
			} /*11879*/
		} /*11879*/
		if ($1.mode == -1) { /*11893*/
			for (;;) { /*11892*/
				if ($1.pos != -1) { /*11886*/
					$1.mode = 3; /*11886*/
					break; /*11886*/
				} /*11886*/
				if ($get($1.numericruns, 0) >= 5) { /*11887*/
					$1.mode = 2; /*11887*/
					break; /*11887*/
				} /*11887*/
				var _2q = $get($1.charvals, $get($1.msg, 0)); /*11888*/
				$k[$j++] = _2q; /*11889*/
				if ($ne($type(_2q), "arraytype")) { /*11889*/
					$j--; /*11889*/
					$1.mode = 0; /*11889*/
					break; /*11889*/
				} /*11889*/
				var _2u = ($get($k[--$j], 0) == 43) ? 4 : 5; /*11890*/
				$1.mode = _2u; /*11890*/
				break; /*11891*/
			} /*11891*/
		} /*11891*/
		$1.cws = $a(($1.msglen * 2) + 1); /*11895*/
		$1.method = "alpha"; /*11896*/
		$1.i = -1; /*11896*/
		$1.j = -1; /*11896*/
		if (($1.mode == 0) || ($1.mode == 1)) { /*11899*/
			$1.method = "alpha"; /*11899*/
			$1.i = 0; /*11899*/
			$1.j = 0; /*11899*/
		} /*11899*/
		if ($1.mode == 2) { /*11900*/
			$1.method = "numeric"; /*11900*/
			$1.i = 0; /*11900*/
			$1.j = 0; /*11900*/
		} /*11900*/
		if ($1.mode == 3) { /*11914*/
			$1.posval = $a([12, 22, 13, 23, 33, 14, 24, 34, 44, 15, 25, 35, 45, 55, 16, 26, 36, 46, 56, 66, 17, 27, 37, 47, 57, 67, 77, 18, 28, 38, 48, 58, 68, 78, 88, 19, 29, 39, 49, 59, 69, 79, 89, 99]); /*11911*/
			$k[$j++] = $1.cws; /*11912*/
			$k[$j++] = 0; /*11912*/
			for (var _33 = 0; _33 <= 43; _33 += 1) { /*11912*/
				$k[$j++] = _33; /*11912*/
				if ($get($1.posval, _33) != $1.pos) { /*11912*/
					$j--; /*11912*/
				} /*11912*/
			} /*11912*/
			var _37 = $k[--$j]; /*11912*/
			var _38 = $k[--$j]; /*11912*/
			$put($k[--$j], _38, _37 + 1); /*11912*/
			$1.method = "alpha"; /*11913*/
			$1.i = 0; /*11913*/
			$1.j = 1; /*11913*/
		} /*11913*/
		if (($1.mode == 4) || ($1.mode == 5)) { /*11918*/
			$put($1.cws, 0, $get($get($1.charvals, $get($1.msg, 0)), 1)); /*11916*/
			$1.method = "alpha"; /*11917*/
			$1.i = 1; /*11917*/
			$1.j = 1; /*11917*/
		} /*11917*/
		for (;;) { /*11945*/
			if ($1.i == $1.msglen) { /*11922*/
				break; /*11922*/
			} /*11922*/
			for (;;) { /*11944*/
				if ($eq($1.method, "alpha")) { /*11933*/
					if ($get($1.numericruns, $1.i) >= 5) { /*11929*/
						$k[$j++] = $1.ns; /*11926*/
						$1.encodealpha(); /*11926*/
						$1.method = "numeric"; /*11927*/
						break; /*11928*/
					} /*11928*/
					$k[$j++] = $get($1.msg, $1.i); /*11930*/
					$1.encodealpha(); /*11930*/
					$1.i = $1.i + 1; /*11931*/
					break; /*11932*/
				} /*11932*/
				if ($eq($1.method, "numeric")) { /*11943*/
					if ($get($1.numericruns, $1.i) < 5) { /*11939*/
						$k[$j++] = $1.ns; /*11936*/
						$1.encodealpha(); /*11936*/
						$1.method = "alpha"; /*11937*/
						break; /*11938*/
					} /*11938*/
					$k[$j++] = $geti($1.msg, $1.i, $get($1.numericruns, $1.i)); /*11940*/
					$1.encodenumeric(); /*11940*/
					$1.i = $1.i + $get($1.numericruns, $1.i); /*11941*/
					break; /*11942*/
				} /*11942*/
			} /*11942*/
		} /*11942*/
		$1.cws = $geti($1.cws, 0, $1.j); /*11946*/
		$1.metrics = $a([$a([2, 9]), $a([3, 16]), $a([4, 23]), $a([5, 30]), $a([6, 37]), $a([7, 42]), $a([8, 49])]); /*11958*/
		$1.urows = $1.rows; /*11961*/
		$1.i = 0; /*11962*/
		for (;;) { /*11972*/
			$1.m = $get($1.metrics, $1.i); /*11964*/
			$1.r = $get($1.m, 0); /*11965*/
			$1.dcws = $get($1.m, 1); /*11966*/
			$1.okay = true; /*11967*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*11968*/
				$1.okay = false; /*11968*/
			} /*11968*/
			if ($1.cws.length > $1.dcws) { /*11969*/
				$1.okay = false; /*11969*/
			} /*11969*/
			if ($1.okay) { /*11970*/
				break; /*11970*/
			} /*11970*/
			$1.i = $1.i + 1; /*11971*/
		} /*11971*/
		$k[$j++] = Infinity; /*11975*/
		$aload($1.cws); /*11975*/
		for (var _4B = 0, _4C = $1.dcws - $1.cws.length; _4B < _4C; _4B++) { /*11975*/
			$k[$j++] = 48; /*11975*/
		} /*11975*/
		$1.cws = $a(); /*11975*/
		$1.ccs = $a($1.r * 8); /*11978*/
		$1.j = 0; /*11979*/
		for (var _4I = 0, _4H = $1.r - 2; _4I <= _4H; _4I += 1) { /*11986*/
			$1.i = _4I; /*11981*/
			$1.cc = $geti($1.cws, $1.j, 7); /*11982*/
			$puti($1.ccs, $1.i * 8, $1.cc); /*11983*/
			$k[$j++] = $1.ccs; /*11984*/
			$k[$j++] = ($1.i * 8) + 7; /*11984*/
			$k[$j++] = 0; /*11984*/
			$forall($1.cc, function() { /*11984*/
				var _4S = $k[--$j]; /*11984*/
				var _4T = $k[--$j]; /*11984*/
				$k[$j++] = _4T + _4S; /*11984*/
			}); /*11984*/
			var _4U = $k[--$j]; /*11984*/
			var _4V = $k[--$j]; /*11984*/
			$put($k[--$j], _4V, _4U % 49); /*11984*/
			$1.j = $1.j + 7; /*11985*/
		} /*11985*/
		if ($1.j < $1.dcws) { /*11989*/
			$puti($1.ccs, $1.ccs.length - 8, $geti($1.cws, $1.j, $1.dcws - $1.j)); /*11988*/
		} /*11988*/
		$1.cr7 = (($1.r - 2) * 7) + $1.mode; /*11992*/
		$put($1.ccs, $1.ccs.length - 2, $1.cr7); /*11993*/
		var _4m = $a([1, 9, 31, 26, 2, 12, 17, 23, 37, 18, 22, 6, 27, 44, 15, 43, 39, 11, 13, 5, 41, 33, 36, 8, 4, 32, 3, 19, 40, 25, 29, 10, 24, 30]); /*11997*/
		$k[$j++] = _4m; /*11998*/
		$k[$j++] = _4m; /*11998*/
		$k[$j++] = Infinity; /*11998*/
		var _4n = $k[--$j]; /*11998*/
		var _4p = $geti($k[--$j], 0, 32); /*11998*/
		$k[$j++] = _4n; /*11998*/
		$k[$j++] = 20; /*11998*/
		$aload(_4p); /*11998*/
		$1.weightx = $a(); /*11998*/
		var _4r = $k[--$j]; /*11999*/
		$k[$j++] = _4r; /*11999*/
		$k[$j++] = _4r; /*11999*/
		$k[$j++] = Infinity; /*11999*/
		var _4s = $k[--$j]; /*11999*/
		var _4u = $geti($k[--$j], 1, 32); /*11999*/
		$k[$j++] = _4s; /*11999*/
		$k[$j++] = 16; /*11999*/
		$aload(_4u); /*11999*/
		$1.weighty = $a(); /*11999*/
		$k[$j++] = Infinity; /*12000*/
		var _4w = $k[--$j]; /*12000*/
		var _4y = $geti($k[--$j], 2, 32); /*12000*/
		$k[$j++] = _4w; /*12000*/
		$k[$j++] = 38; /*12000*/
		$aload(_4y); /*12000*/
		$1.weightz = $a(); /*12000*/
		$1.calccheck = function() {
			$1.weights = $k[--$j]; /*12002*/
			$1.score = 0; /*12003*/
			for (var _53 = 0, _52 = (~~((($1.r - 1) * 8) / 2)) - 1; _53 <= _52; _53 += 1) { /*12008*/
				$1.i = _53; /*12005*/
				$1.score = ((($get($1.ccs, $1.i * 2) * 49) + $get($1.ccs, ($1.i * 2) + 1)) * $get($1.weights, $1.i + 1)) + $1.score; /*12007*/
			} /*12007*/
			$k[$j++] = $1.score; /*12009*/
		}; /*12010*/
		$1.lastrow = $geti($1.ccs, $1.ccs.length - 8, 8); /*12011*/
		if ($1.r >= 7) { /*12018*/
			$k[$j++] = $1.cr7 * $get($1.weightz, 0); /*12015*/
			$k[$j++] = $1.weightz; /*12015*/
			$1.calccheck(); /*12015*/
			var _5N = $k[--$j]; /*12015*/
			var _5P = ($k[--$j] + _5N) % 2401; /*12016*/
			$k[$j++] = ~~(_5P / 49); /*12016*/
			$k[$j++] = _5P % 49; /*12016*/
			$astore($a(2)); /*12016*/
			$puti($1.lastrow, 0, $k[--$j]); /*12017*/
		} /*12017*/
		$1.wr1 = ($get($1.lastrow, 0) * 49) + $get($1.lastrow, 1); /*12019*/
		$k[$j++] = $1.cr7 * $get($1.weighty, 0); /*12022*/
		$k[$j++] = $1.weighty; /*12022*/
		$1.calccheck(); /*12022*/
		var _5b = $k[--$j]; /*12022*/
		var _5h = (($k[--$j] + _5b) + ($1.wr1 * $get($1.weighty, ($1.r * 4) - 3))) % 2401; /*12024*/
		$1.wr2 = _5h; /*12024*/
		$k[$j++] = ~~(_5h / 49); /*12025*/
		$k[$j++] = _5h % 49; /*12025*/
		$astore($a(2)); /*12025*/
		$puti($1.lastrow, 2, $k[--$j]); /*12026*/
		$k[$j++] = $1.cr7 * $get($1.weightx, 0); /*12029*/
		$k[$j++] = $1.weightx; /*12029*/
		$1.calccheck(); /*12029*/
		var _5p = $k[--$j]; /*12029*/
		var _5z = ((($k[--$j] + _5p) + ($1.wr1 * $get($1.weightx, ($1.r * 4) - 3))) + ($1.wr2 * $get($1.weightx, ($1.r * 4) - 2))) % 2401; /*12033*/
		$k[$j++] = ~~(_5z / 49); /*12033*/
		$k[$j++] = _5z % 49; /*12033*/
		$astore($a(2)); /*12033*/
		$puti($1.lastrow, 4, $k[--$j]); /*12034*/
		$k[$j++] = 0; /*12037*/
		$forall($geti($1.ccs, $1.ccs.length - 8, 7), function() { /*12037*/
			var _66 = $k[--$j]; /*12037*/
			var _67 = $k[--$j]; /*12037*/
			$k[$j++] = _67 + _66; /*12037*/
		}); /*12037*/
		$put($1.ccs, $1.ccs.length - 1, $k[--$j] % 49); /*12038*/
		$1.patterns = $a([$a(["11521132", "25112131", "14212132", "25121221", "14221222", "12412132", "23321221", "12421222", "21521221", "15112222", "15121312", "13312222", "24221311", "13321312", "11512222", "22421311", "11521312", "25112311", "14212312", "23312311", "12412312", "21512311", "16121131", "14321131", "12521131", "15212131", "15221221", "13412131", "13421221", "11612131", "16112221", "16121311", "14312221", "14321311", "12512221", "12521311", "15212311", "13412311", "11612311", "11131135", "31131133", "51131131", "21122134", "41122132", "21131224", "41131222", "11113135", "31113133", "51113131", "11122225", "31122223", "51122221", "11131315", "31131313", "51131311", "21113224", "41113222", "21122314", "41122312", "11113315", "31113313", "51113311", "12131134", "32131132", "21231133", "41231131", "22122133", "42122131", "11222134", "22131223", "42131221", "11231224", "31231222", "12113134", "32113132", "12122224", "32122222", "12131314", "32131312", "21231313", "41231311", "22113223", "42113221", "11213224", "22122313", "42122311", "11222314", "31222312", "12113314", "32113312", "21213313", "41213311", "13131133", "33131131", "22231132", "11331133", "31331131", "23122132", "12222133", "23131222", "12231223", "32231221", "21331222", "13113133", "33113131", "13122223", "33122221", "11313133", "13131313", "33131311", "11322223", "22231312", "11331313", "31331311", "23113222", "12213223", "23122312", "12222313", "32222311", "21322312", "13113313", "33113311", "22213312", "11313313", "31313311", "14131132", "23231131", "12331132", "21431131", "24122131", "13222132", "24131221", "13231222", "11422132", "22331221", "11431222", "14113132", "14122222", "12313132", "14131312", "12322222", "23231311", "12331312", "21431311", "24113221", "13213222", "24122311", "13222312", "11413222", "22322311", "11422312", "14113312", "23213311", "12313312", "21413311", "15131131", "13331131", "14222131", "14231221", "12422131", "12431221", "15113131", "15122221", "13313131", "15131311", "13322221", "11513131", "13331311", "11522221", "14213221", "14222311", "12413221", "12422311", "15113311", "13313311", "11513311", "11141134", "31141132", "21132133", "41132131", "21141223", "41141221", "11123134", "31123132", "11132224", "31132222", "11141314", "31141312", "21114133", "41114131", "21123223", "41123221", "21132313", "41132311", "11114224", "31114222", "11123314", "31123312", "21114313", "41114311", "12141133", "32141131", "21241132", "22132132", "11232133", "22141222", "11241223", "31241221", "12123133", "32123131", "12132223", "32132221", "12141313", "32141311", "21241312", "22114132", "11214133", "22123222", "11223223", "22132312", "11232313", "31232311", "12114223", "32114221", "12123313", "32123311", "21223312", "22114312", "11214313", "31214311", "13141132", "22241131", "11341132", "23132131", "12232132", "23141221", "12241222", "21341221", "13123132", "13132222", "11323132", "13141312", "11332222", "22241311", "11341312", "23114131", "12214132", "23123221", "12223222", "23132311", "12232312", "21332311", "13114222", "13123312", "11314222", "22223311", "11323312", "23114311", "12214312", "21314311", "14141131", "12341131", "13232131", "13241221", "11432131", "14123131", "14132221", "12323131", "14141311", "12332221", "12341311", "13214131", "13223221", "11414131", "13232311", "11423221", "11432311", "14114221", "14123311", "12314221", "12323311", "13214311", "11414311", "11151133", "31151131", "21142132", "21151222", "11133133", "31133131", "11142223", "31142221", "11151313", "31151311", "21124132", "21133222", "21142312", "11115133", "31115131", "11124223", "31124221", "11133313", "31133311", "21115222", "21124312", "12151132", "21251131", "22142131", "11242132", "22151221", "11251222", "12133132", "12142222", "12151312", "21251311", "22124131", "11224132", "22133221", "11233222", "22142311", "11242312", "12115132", "12124222", "12133312", "21233311", "22115221", "11215222", "22124311", "11224312", "13151131", "12242131", "12251221", "13133131", "13142221", "11333131", "13151311", "11342221", "12224131", "12233221", "12242311", "13115131", "13124221", "11315131", "13133311", "11324221", "11333311", "12215221", "12224311", "11161132", "21152131", "21161221", "11143132", "11152222", "11161312", "21134131", "21143221", "21152311", "11125132", "11134222", "11143312", "21116131", "21125221", "21134311", "12161131", "11252131", "12143131", "12152221", "12161311", "11234131", "11243221", "11252311", "12125131", "12134221", "12143311", "11216131", "11225221", "11234311", "11111236", "31111234", "51111232", "21111325", "41111323", "61111321", "11111416", "31111414", "51111412", "31211143", "51211141", "12111235", "32111233", "52111231", "21211234", "41211232", "22111324", "42111322", "11211325", "31211323", "51211321", "12111415", "32111413", "52111411", "21211414", "41211412", "12211144", "32211142", "21311143", "41311141", "13111234", "33111232", "22211233", "42211231", "11311234", "31311232", "23111323", "43111321", "12211324", "32211322", "21311323", "41311321", "13111414", "33111412", "22211413", "42211411", "11311414", "31311412", "13211143", "33211141", "22311142", "11411143", "31411141", "14111233", "34111231", "23211232", "12311233", "32311231", "21411232", "24111322", "13211323", "33211321", "22311322", "11411323", "31411321", "14111413", "34111411", "23211412", "12311413", "32311411", "21411412", "14211142", "23311141", "12411142", "21511141", "15111232", "24211231", "13311232", "22411231", "11511232", "25111321", "14211322", "23311321", "12411322", "21511321", "15111412", "24211411", "13311412", "22411411", "11511412", "15211141", "13411141", "11611141", "16111231", "14311231", "12511231", "15211321", "13411321", "11611321", "16111411", "14311411", "12511411", "21121144", "41121142", "11112145", "31112143", "51112141", "11121235", "31121233", "51121231", "21112234", "41112232", "21121324", "41121322", "11112325", "31112323", "51112321", "11121415", "31121413", "51121411", "21112414", "41112412", "22121143", "42121141", "11221144", "31221142", "12112144", "32112142", "12121234", "32121232", "21221233", "41221231", "22112233", "42112231", "11212234", "22121323", "42121321", "11221324", "31221322", "12112324", "32112322", "12121414", "32121412", "21221413", "41221411", "22112413", "42112411", "11212414", "31212412", "23121142", "12221143", "32221141", "21321142", "13112143", "33112141", "13121233", "33121231", "11312143", "22221232", "11321233", "31321231", "23112232", "12212233", "23121322", "12221323", "32221321", "21321322", "13112323", "33112321", "13121413", "33121411", "11312323", "22221412", "11321413", "31321411", "23112412", "12212413", "32212411", "21312412", "24121141", "13221142", "22321141", "11421142", "14112142", "14121232", "12312142", "23221231", "12321232", "21421231", "24112231", "13212232", "24121321", "13221322", "11412232", "22321321", "11421322", "14112322", "14121412", "12312322", "23221411", "12321412", "21421411", "24112411", "13212412", "22312411", "11412412", "14221141", "12421141", "15112141", "15121231", "13312141", "13321231", "11512141", "11521231", "14212231", "14221321", "12412231", "12421321", "15112321", "15121411", "13312321", "13321411", "11512321", "11521411", "14212411", "12412411", "21131143", "41131141", "11122144", "31122142", "11131234", "31131232", "21113143", "41113141", "21122233", "41122231", "21131323", "41131321", "11113234", "31113232", "11122324", "31122322", "11131414", "31131412", "21113323", "41113321", "21122413", "41122411", "11113414", "31113412", "22131142", "11231143", "31231141", "12122143", "32122141", "12131233", "32131231", "21231232", "22113142", "11213143", "22122232", "11222233", "22131322", "11231323", "31231321", "12113233", "32113231", "12122323", "32122321", "12131413", "32131411", "21231412", "22113322", "11213323", "22122412", "11222413", "31222411", "12113413", "32113411", "21213412", "23131141", "12231142", "21331141", "13122142", "13131232", "11322142", "22231231", "11331232", "23113141", "12213142", "23122231", "12222232", "23131321", "12231322", "21331321", "13113232", "13122322", "11313232", "13131412", "11322322", "22231411", "11331412", "23113321", "12213322", "23122411", "12222412", "21322411", "13113412", "22213411", "11313412", "13231141", "11431141", "14122141", "14131231", "12322141", "12331231", "13213141", "13222231", "11413141", "13231321", "11422231", "11431321", "14113231", "14122321", "12313231", "14131411", "12322321", "12331411", "13213321", "13222411", "11413321", "11422411", "14113411", "12313411", "21141142", "11132143", "31132141", "11141233", "31141231", "21123142", "21132232", "21141322", "11114143", "31114141", "11123233", "31123231", "11132323", "31132321", "11141413", "31141411", "21114232", "21123322", "21132412", "11114323", "31114321", "11123413", "31123411", "22141141", "11241142", "12132142", "12141232", "21241231", "22123141", "11223142", "22132231", "11232232", "22141321", "11241322", "12114142", "12123232", "12132322", "12141412", "21241411", "22114231", "11214232", "22123321", "11223322", "22132411", "11232412", "12114322", "12123412", "21223411", "12241141", "13132141", "13141231", "11332141", "11341231", "12223141", "12232231", "12241321", "13114141", "13123231", "11314141", "13132321", "11323231", "13141411", "11332321", "11341411", "12214231", "12223321", "12232411", "13114321", "13123411", "11314321", "11323411", "21151141", "11142142", "11151232", "21133141", "21142231", "21151321", "11124142", "11133232", "11142322", "11151412", "21115141", "21124231", "21133321", "21142411", "11115232", "11124322", "11133412", "11251141", "12142141", "12151231", "11233141", "11242231", "11251321", "12124141", "12133231", "12142321", "12151411", "11215141", "11224231", "11233321", "11242411", "12115231", "12124321", "12133411", "11152141", "11161231", "11134141", "11143231", "11152321", "11161411", "11116141", "11125231", "11134321", "11143411", "21111244", "41111242", "11111335", "31111333", "51111331", "21111424", "41111422", "11111515", "31111513", "51111511", "21211153", "41211151", "22111243", "42111241", "11211244", "31211242", "12111334", "32111332", "21211333", "41211331", "22111423", "42111421", "11211424", "31211422", "12111514", "32111512", "21211513", "41211511", "22211152", "11311153", "31311151", "23111242", "12211243", "32211241", "21311242", "13111333", "33111331", "22211332", "11311333", "31311331", "23111422", "12211423", "32211421", "21311422", "13111513", "33111511", "22211512", "11311513", "31311511", "23211151", "12311152", "21411151", "24111241", "13211242", "22311241", "11411242", "14111332", "23211331", "12311332", "21411331", "24111421", "13211422", "22311421", "11411422", "14111512", "23211511", "12311512", "21411511", "13311151", "11511151", "14211241", "12411241", "15111331", "13311331", "11511331", "14211421", "12411421", "15111511", "13311511", "11511511", "31121152", "21112153", "41112151", "21121243", "41121241", "11112244", "31112242", "11121334", "31121332", "21112333", "41112331", "21121423", "41121421", "11112424", "31112422", "11121514", "31121512", "21112513", "41112511", "12121153", "32121151", "21221152", "22112152", "11212153", "22121242", "11221243", "31221241", "12112243", "32112241", "12121333", "32121331", "21221332", "22112332", "11212333", "22121422", "11221423", "31221421", "12112423", "32112421", "12121513", "32121511", "21221512", "22112512", "11212513", "31212511", "13121152", "22221151", "11321152", "23112151", "12212152", "23121241", "12221242", "21321241", "13112242", "13121332", "11312242", "22221331", "11321332", "23112331", "12212332", "23121421", "12221422", "21321421", "13112422", "13121512", "11312422", "22221511", "11321512", "23112511", "12212512", "21312511", "14121151", "12321151", "13212151", "13221241", "11412151", "11421241", "14112241", "14121331", "12312241", "12321331", "13212331", "13221421", "11412331", "11421421", "14112421", "14121511", "12312421", "12321511", "13212511", "11412511", "11131153", "31131151", "21122152", "21131242", "11113153", "31113151", "11122243", "31122241", "11131333", "31131331", "21113242", "21122332", "21131422", "11113333", "31113331", "11122423", "31122421", "11131513", "31131511", "21113422", "21122512", "12131152", "21231151", "22122151", "11222152", "22131241", "11231242", "12113152", "12122242", "12131332", "21231331", "22113241", "11213242", "22122331", "11222332", "22131421", "11231422", "12113332", "12122422", "12131512", "21231511", "22113421", "11213422", "22122511", "11222512", "13131151", "11331151", "12222151", "12231241", "13113151", "13122241", "11313151", "13131331", "11322241", "11331331", "12213241", "12222331", "12231421", "13113331", "13122421", "11313331", "13131511", "11322421", "11331511", "12213421", "12222511", "11141152", "21132151", "21141241", "11123152", "11132242", "11141332", "21114151", "21123241", "21132331", "21141421", "11114242", "11123332", "11132422", "11141512", "21114331", "21123421", "21132511", "12141151", "11232151", "11241241", "12123151", "12132241", "12141331", "11214151", "11223241", "11232331", "11241421", "12114241", "12123331", "12132421", "12141511", "11214331", "11223421", "11232511", "11151151", "11133151", "11142241", "11151331", "11115151", "11124241", "11133331", "11142421", "11151511", "11111254", "31111252", "21111343", "41111341", "11111434", "31111432", "21111523", "41111521", "11111614", "31111612", "31211161", "12111253", "32111251", "21211252", "22111342", "11211343", "31211341", "12111433", "32111431", "21211432", "22111522", "11211523", "31211521", "12111613", "32111611", "21211612", "12211162", "21311161", "13111252", "22211251", "11311252", "23111341", "12211342", "21311341", "13111432", "22211431", "11311432", "23111521", "12211522", "21311521", "13111612", "22211611", "11311612", "13211161", "11411161", "14111251", "12311251", "13211341", "11411341", "14111431", "12311431", "13211521", "11411521", "14111611", "12311611", "21121162", "11112163", "31112161", "11121253", "31121251", "21112252", "21121342", "11112343", "31112341", "11121433", "31121431", "21112432", "21121522", "11112523", "31112521", "11121613", "31121611", "22121161", "11221162", "12112162", "12121252", "21221251", "22112251", "11212252", "22121341", "11221342", "12112342", "12121432", "21221431", "22112431", "11212432", "22121521", "11221522", "12112522", "12121612", "21221611", "12221161", "13112161", "13121251", "11312161", "11321251", "32121115", "52121113", "21221116", "41221114", "61221112", "22112116", "42112114", "31212115", "51212113", "13121116", "33121114", "22221115", "42221113", "11321116", "31321114", "51321112", "23112115", "43112113", "12212116", "32212114", "52212112", "21312115", "41312113", "61312111", "14121115", "34121113", "23221114", "43221112", "12321115", "32321113", "52321111", "21421114", "41421112", "24112114", "13212115", "33212113", "22312114", "42312112", "11412115", "31412113", "51412111", "15121114", "24221113", "13321114", "33321112", "22421113", "42421111", "11521114", "31521112", "25112113", "14212114", "34212112", "23312113", "43312111", "12412114", "32412112", "21512113", "41512111", "16121113", "25221112", "14321113", "34321111", "23421112", "12521113", "32521111", "15212113", "24312112", "13412113", "33412111", "22512112", "11612113", "31612111", "31131115", "51131113", "21122116", "41122114", "61122112", "31113115", "51113113", "12131116", "32131114", "52131112", "21231115", "41231113", "61231111", "22122115", "42122113", "11222116", "31222114", "51222112", "12113116", "32113114", "52113112", "21213115", "41213113", "61213111", "13131115", "33131113", "22231114", "42231112", "11331115", "31331113", "51331111", "23122114", "43122112", "12222115", "32222113", "52222111", "21322114", "41322112", "13113115", "33113113", "22213114", "42213112", "11313115", "31313113", "51313111", "14131114", "34131112", "23231113", "43231111", "12331114", "32331112", "21431113", "41431111", "24122113", "13222114", "33222112", "22322113", "42322111", "11422114", "31422112", "14113114", "34113112", "23213113", "43213111", "12313114", "32313112", "21413113", "41413111", "15131113", "24231112", "13331113", "33331111", "22431112", "25122112", "14222113", "34222111", "23322112", "12422113", "32422111", "21522112", "15113113", "24213112", "13313113", "33313111", "22413112", "11513113", "31513111", "16131112", "25231111", "14331112", "23431111", "15222112", "24322111", "13422112", "22522111", "16113112", "25213111", "14313112", "23413111", "12513112", "21613111", "11141116", "31141114", "51141112", "21132115", "41132113", "61132111", "11123116", "31123114", "51123112", "21114115", "41114113", "61114111", "12141115", "32141113", "52141111", "21241114", "41241112", "22132114", "42132112", "11232115", "31232113", "51232111", "12123115", "32123113", "52123111", "21223114", "41223112", "22114114", "42114112", "11214115", "31214113", "51214111", "13141114", "33141112", "22241113", "42241111", "11341114", "31341112", "23132113", "43132111", "12232114", "32232112", "21332113", "41332111", "13123114", "33123112", "22223113", "42223111", "11323114", "31323112", "23114113", "43114111", "12214114", "32214112", "21314113", "41314111", "14141113", "34141111", "23241112", "12341113", "32341111", "24132112", "13232113", "33232111", "22332112", "11432113", "31432111", "14123113", "34123111", "23223112", "12323113", "32323111", "21423112", "24114112", "13214113", "33214111", "22314112", "11414113", "31414111", "15141112", "24241111", "13341112", "25132111", "14232112", "23332111", "12432112", "15123112", "24223111", "13323112", "22423111", "11523112", "25114111", "14214112", "23314111", "12414112", "21514111", "16141111", "14341111", "15232111", "13432111", "16123111", "14323111", "12523111", "15214111", "13414111", "11614111", "11151115", "31151113", "51151111", "21142114", "41142112", "11133115", "31133113", "51133111", "21124114", "41124112", "11115115", "31115113", "51115111", "12151114", "32151112", "21251113", "41251111", "22142113", "42142111", "11242114", "31242112", "12133114", "32133112", "21233113", "41233111", "22124113", "42124111", "11224114", "31224112", "12115114", "32115112", "21215113", "41215111", "13151113", "33151111", "22251112", "23142112", "12242113", "32242111", "21342112", "13133113", "33133111", "22233112", "11333113", "31333111", "23124112", "12224113", "32224111", "21324112", "13115113", "33115111", "22215112", "11315113", "31315111", "14151112", "23251111", "24142111", "13242112", "22342111", "14133112", "23233111", "12333112", "21433111", "24124111", "13224112", "22324111", "11424112", "14115112", "23215111", "12315112", "21415111", "15151111", "14242111", "15133111", "13333111", "14224111", "12424111", "15115111", "13315111", "11515111", "11161114", "31161112", "21152113", "41152111", "11143114", "31143112", "21134113", "41134111", "11125114", "31125112", "21116113", "41116111", "12161113", "32161111", "22152112", "11252113", "31252111", "12143113", "32143111", "21243112", "22134112", "11234113", "31234111", "12125113", "32125111", "21225112", "22116112", "11216113", "31216111", "13161112", "23152111", "12252112", "13143112", "22243111", "11343112", "23134111", "12234112", "21334111", "13125112", "22225111", "11325112", "23116111", "12216112", "21316111", "14161111", "13252111", "14143111", "12343111", "13234111", "11434111", "14125111", "12325111", "13216111", "11416111", "31111216", "51111214", "31211125", "51211123", "32111215", "52111213", "21211216", "41211214", "61211212", "12211126", "32211124", "52211122", "21311125", "41311123", "61311121", "13111216", "33111214", "22211215", "42211213", "11311216", "31311214", "51311212", "13211125", "33211123", "22311124", "42311122", "11411125", "31411123", "51411121", "14111215", "34111213", "23211214", "43211212", "12311215", "32311213", "52311211", "21411214", "41411212", "14211124", "34211122", "23311123", "43311121", "12411124", "32411122", "21511123", "41511121", "15111214", "24211213", "13311214", "33311212", "22411213", "42411211", "11511214", "31511212", "15211123", "24311122", "13411123", "33411121", "22511122", "11611123", "31611121", "16111213", "25211212", "14311213", "34311211", "23411212", "12511213", "32511211", "21611212", "21121126", "41121124", "61121122", "31112125", "51112123", "31121215", "51121213", "21112216", "41112214", "61112212", "22121125", "42121123", "11221126", "31221124", "51221122", "12112126", "32112124", "52112122", "12121216", "32121214", "52121212", "21221215", "41221213", "61221211", "22112215", "42112213", "11212216", "31212214", "51212212", "23121124", "43121122", "12221125", "32221123", "52221121", "21321124", "41321122", "13112125", "33112123", "13121215", "33121213", "11312125", "22221214", "42221212", "11321215", "31321213", "51321211", "23112214", "43112212", "12212215", "32212213", "52212211", "21312214", "41312212", "24121123", "13221124", "33221122", "22321123", "42321121", "11421124", "31421122", "14112124", "34112122", "14121214", "34121212", "12312124", "23221213", "43221211", "12321214", "32321212", "21421213", "41421211", "24112213", "13212214", "33212212", "22312213", "42312211", "11412214", "31412212", "25121122", "14221123", "34221121", "23321122", "12421123", "32421121", "21521122", "15112123", "15121213", "13312123", "24221212", "13321213", "33321211", "11512123", "22421212", "11521213", "31521211", "25112212", "14212213", "34212211", "23312212", "12412213", "32412211", "21512212", "15221122", "24321121", "13421122", "22521121", "16112122", "16121212", "14312122", "25221211", "14321212", "12512122", "23421211", "12521212", "15212212", "24312211", "13412212", "22512211", "11612212", "21131125", "41131123", "61131121", "11122126", "31122124", "51122122", "11131216", "31131214", "51131212", "21113125", "41113123", "61113121", "21122215", "41122213", "61122211", "11113216", "31113214", "51113212", "22131124", "42131122", "11231125", "31231123", "51231121", "12122125", "32122123", "52122121", "12131215", "32131213", "52131211", "21231214", "41231212", "22113124", "42113122", "11213125", "22122214", "42122212", "11222215", "31222213", "51222211", "12113215", "32113213", "52113211", "21213214", "41213212", "23131123", "43131121", "12231124", "32231122", "21331123", "41331121", "13122124", "33122122", "13131214", "33131212", "11322124", "22231213", "42231211", "11331214", "31331212", "23113123", "43113121", "12213124", "23122213", "43122211", "12222214", "32222212", "21322213", "41322211", "13113214", "33113212", "22213213", "42213211", "11313214", "31313212", "24131122", "13231123", "33231121", "22331122", "11431123", "31431121", "14122123", "34122121", "14131213", "34131211", "12322123", "23231212", "12331213", "32331211", "21431212", "24113122", "13213123", "24122212", "13222213", "33222211", "11413123", "22322212", "11422213", "31422211", "14113213", "34113211", "23213212", "12313213", "32313211", "21413212", "25131121", "14231122", "23331121", "12431122", "15122122", "15131212", "13322122", "24231211", "13331212", "11522122", "22431211", "25113121", "14213122", "25122211", "14222212", "12413122", "23322211", "12422212", "21522211", "15113212", "24213211", "13313212", "22413211", "11513212", "15231121", "13431121", "16122121", "16131211", "14322121", "14331211", "12522121", "15213121", "15222211", "13413121", "13422211", "11613121", "16113211", "14313211", "12513211", "21141124", "41141122", "11132125", "31132123", "51132121", "11141215", "31141213", "51141211", "21123124", "41123122", "21132214", "41132212", "11114125", "31114123", "51114121", "11123215", "31123213", "51123211", "21114214", "41114212", "22141123", "42141121", "11241124", "31241122", "12132124", "32132122", "12141214", "32141212", "21241213", "41241211", "22123123", "42123121", "11223124", "22132213", "42132211", "11232214", "31232212", "12114124", "32114122", "12123214", "32123212", "21223213", "41223211", "22114213", "42114211", "11214214", "31214212", "23141122", "12241123", "32241121", "21341122", "13132123", "33132121", "13141213", "33141211", "11332123", "22241212", "11341213", "31341211", "23123122", "12223123", "23132212", "12232213", "32232211", "21332212", "13114123", "33114121", "13123213", "33123211", "11314123", "22223212", "11323213", "31323211", "23114212", "12214213", "32214211", "21314212", "24141121", "13241122", "22341121", "14132122", "14141212", "12332122", "23241211", "12341212", "24123121", "13223122", "24132211", "13232212", "11423122", "22332211", "11432212", "14114122", "14123212", "12314122", "23223211", "12323212", "21423211", "24114211", "13214212", "22314211", "11414212", "14241121", "15132121", "15141211", "13332121", "13341211", "14223121", "14232211", "12423121", "12432211", "15114121", "15123211", "13314121", "13323211", "11514121", "11523211", "14214211", "12414211", "21151123", "41151121", "11142124", "31142122", "11151214", "31151212", "21133123", "41133121", "21142213", "41142211", "11124124", "31124122", "11133214", "31133212", "21115123", "41115121", "21124213", "41124211", "11115214", "31115212", "22151122", "11251123", "31251121", "12142123", "32142121", "12151213", "32151211", "21251212", "22133122", "11233123", "22142212", "11242213", "31242211", "12124123", "32124121", "12133213", "32133211", "21233212", "22115122", "11215123", "22124212", "11224213", "31224211", "12115213", "32115211", "21215212", "23151121", "12251122", "13142122", "13151212", "11342122", "22251211", "23133121", "12233122", "23142211", "12242212", "21342211", "13124122", "13133212", "11324122", "22233211", "11333212", "23115121", "12215122", "23124211", "12224212", "21324211", "13115212", "22215211", "11315212", "13251121", "14142121", "14151211", "12342121", "13233121", "13242211", "11433121", "14124121", "14133211", "12324121", "12333211", "13215121", "13224211", "11415121", "11424211", "14115211", "12315211", "21161122", "11152123", "31152121", "11161213", "31161211", "21143122", "21152212", "11134123", "31134121", "11143213", "31143211", "21125122", "21134212", "11116123", "31116121", "11125213", "31125211", "22161121", "12152122", "12161212", "22143121", "11243122", "22152211", "11252212", "12134122", "12143212", "21243211", "22125121", "11225122", "22134211", "11234212", "12116122", "12125212", "21225211", "13152121", "13161211", "12243121", "12252211", "13134121", "13143211", "11334121", "11343211", "12225121", "12234211", "13116121", "13125211", "11316121", "11325211", "21111226", "41111224", "61111222", "31111315", "51111313", "21211135", "41211133", "61211131", "22111225", "42111223", "11211226", "31211224", "51211222", "12111316", "32111314", "52111312", "21211315", "41211313", "61211311", "22211134", "42211132", "11311135", "31311133", "51311131", "23111224", "43111222", "12211225", "32211223", "52211221", "21311224", "41311222", "13111315", "33111313", "22211314", "42211312", "11311315", "31311313", "51311311", "23211133", "43211131", "12311134", "32311132", "21411133", "41411131", "24111223", "13211224", "33211222", "22311223", "42311221", "11411224", "31411222", "14111314", "34111312", "23211313", "43211311", "12311314", "32311312", "21411313", "41411311", "24211132", "13311133", "33311131", "22411132", "11511133", "31511131", "25111222", "14211223", "34211221", "23311222", "12411223", "32411221", "21511222", "15111313", "24211312", "13311313", "33311311", "22411312", "11511313", "31511311", "25211131", "14311132", "23411131", "12511132", "21611131", "15211222", "24311221", "13411222", "22511221", "11611222", "16111312", "25211311", "14311312", "23411311", "12511312", "21611311", "31121134", "51121132", "21112135", "41112133", "61112131", "21121225", "41121223", "61121221", "11112226", "31112224", "51112222", "11121316", "31121314", "51121312", "21112315", "41112313", "61112311", "12121135", "32121133", "52121131", "21221134", "41221132", "22112134", "42112132", "11212135", "22121224", "42121222", "11221225", "31221223", "51221221", "12112225", "32112223", "52112221", "12121315", "32121313", "52121311", "21221314", "41221312", "22112314", "42112312", "11212315", "31212313", "51212311", "13121134", "33121132", "22221133", "42221131", "11321134", "31321132", "23112133", "43112131", "12212134", "23121223", "43121221", "12221224", "32221222", "21321223", "41321221", "13112224", "33112222", "13121314", "33121312", "11312224", "22221313", "42221311", "11321314", "31321312", "23112313", "43112311", "12212314", "32212312", "21312313", "41312311", "14121133", "34121131", "23221132", "12321133", "32321131", "21421132", "24112132", "13212133", "24121222", "13221223", "33221221", "11412133", "22321222", "11421223", "31421221", "14112223", "34112221", "14121313", "34121311", "12312223", "23221312", "12321313", "32321311", "21421312", "24112312", "13212313", "33212311", "22312312", "11412313", "31412311", "15121132", "24221131", "13321132", "22421131"]), $a(["22121116", "42121114", "31221115", "51221113", "32112115", "52112113", "21212116", "41212114", "61212112", "23121115", "43121113", "12221116", "32221114", "52221112", "21321115", "41321113", "61321111", "13112116", "33112114", "22212115", "42212113", "11312116", "31312114", "51312112", "24121114", "13221115", "33221113", "22321114", "42321112", "11421115", "31421113", "51421111", "14112115", "34112113", "23212114", "43212112", "12312115", "32312113", "52312111", "21412114", "41412112", "25121113", "14221114", "34221112", "23321113", "43321111", "12421114", "32421112", "21521113", "41521111", "15112114", "24212113", "13312114", "33312112", "22412113", "42412111", "11512114", "31512112", "15221113", "24321112", "13421113", "33421111", "22521112", "16112113", "25212112", "14312113", "34312111", "23412112", "12512113", "32512111", "21612112", "21131116", "41131114", "61131112", "31122115", "51122113", "21113116", "41113114", "61113112", "22131115", "42131113", "11231116", "31231114", "51231112", "12122116", "32122114", "52122112", "21222115", "41222113", "61222111", "22113115", "42113113", "11213116", "31213114", "51213112", "23131114", "43131112", "12231115", "32231113", "52231111", "21331114", "41331112", "13122115", "33122113", "22222114", "42222112", "11322115", "31322113", "51322111", "23113114", "43113112", "12213115", "32213113", "52213111", "21313114", "41313112", "24131113", "13231114", "33231112", "22331113", "42331111", "11431114", "31431112", "14122114", "34122112", "23222113", "43222111", "12322114", "32322112", "21422113", "41422111", "24113113", "13213114", "33213112", "22313113", "42313111", "11413114", "31413112", "25131112", "14231113", "34231111", "23331112", "12431113", "32431111", "15122113", "24222112", "13322113", "33322111", "22422112", "11522113", "31522111", "25113112", "14213113", "34213111", "23313112", "12413113", "32413111", "21513112", "15231112", "24331111", "13431112", "16122112", "25222111", "14322112", "23422111", "12522112", "15213112", "24313111", "13413112", "22513111", "11613112", "21141115", "41141113", "61141111", "11132116", "31132114", "51132112", "21123115", "41123113", "61123111", "11114116", "31114114", "51114112", "22141114", "42141112", "11241115", "31241113", "51241111", "12132115", "32132113", "52132111", "21232114", "41232112", "22123114", "42123112", "11223115", "31223113", "51223111", "12114115", "32114113", "52114111", "21214114", "41214112", "23141113", "43141111", "12241114", "32241112", "21341113", "41341111", "13132114", "33132112", "22232113", "42232111", "11332114", "31332112", "23123113", "43123111", "12223114", "32223112", "21323113", "41323111", "13114114", "33114112", "22214113", "42214111", "11314114", "31314112", "24141112", "13241113", "33241111", "22341112", "14132113", "34132111", "23232112", "12332113", "32332111", "21432112", "24123112", "13223113", "33223111", "22323112", "11423113", "31423111", "14114113", "34114111", "23214112", "12314113", "32314111", "21414112", "25141111", "14241112", "23341111", "15132112", "24232111", "13332112", "22432111", "25123111", "14223112", "23323111", "12423112", "21523111", "15114112", "24214111", "13314112", "22414111", "11514112", "15241111", "16132111", "14332111", "15223111", "13423111", "16114111", "14314111", "12514111", "21151114", "41151112", "11142115", "31142113", "51142111", "21133114", "41133112", "11124115", "31124113", "51124111", "21115114", "41115112", "22151113", "42151111", "11251114", "31251112", "12142114", "32142112", "21242113", "41242111", "22133113", "42133111", "11233114", "31233112", "12124114", "32124112", "21224113", "41224111", "22115113", "42115111", "11215114", "31215112", "23151112", "12251113", "32251111", "13142113", "33142111", "22242112", "11342113", "31342111", "23133112", "12233113", "32233111", "21333112", "13124113", "33124111", "22224112", "11324113", "31324111", "23115112", "12215113", "32215111", "21315112", "24151111", "13251112", "14142112", "23242111", "12342112", "24133111", "13233112", "22333111", "11433112", "14124112", "23224111", "12324112", "21424111", "24115111", "13215112", "22315111", "11415112", "14251111", "15142111", "13342111", "14233111", "12433111", "15124111", "13324111", "11524111", "14215111", "12415111", "21161113", "41161111", "11152114", "31152112", "21143113", "41143111", "11134114", "31134112", "21125113", "41125111", "11116114", "31116112", "22161112", "12152113", "32152111", "21252112", "22143112", "11243113", "31243111", "12134113", "32134111", "21234112", "22125112", "11225113", "31225111", "12116113", "32116111", "21216112", "23161111", "13152112", "22252111", "23143111", "12243112", "21343111", "13134112", "22234111", "11334112", "23125111", "12225112", "21325111", "13116112", "22216111", "11316112", "14152111", "13243111", "14134111", "12334111", "13225111", "11425111", "14116111", "12316111", "41111215", "61111213", "21211126", "41211124", "61211122", "22111216", "42111214", "31211215", "51211213", "22211125", "42211123", "11311126", "31311124", "51311122", "23111215", "43111213", "12211216", "32211214", "52211212", "21311215", "41311213", "61311211", "23211124", "43211122", "12311125", "32311123", "52311121", "21411124", "41411122", "24111214", "13211215", "33211213", "22311214", "42311212", "11411215", "31411213", "51411211", "24211123", "13311124", "33311122", "22411123", "42411121", "11511124", "31511122", "25111213", "14211214", "34211212", "23311213", "43311211", "12411214", "32411212", "21511213", "41511211", "25211122", "14311123", "34311121", "23411122", "12511123", "32511121", "21611122", "15211213", "24311212", "13411213", "33411211", "22511212", "11611213", "31611211", "31121125", "51121123", "21112126", "41112124", "61112122", "21121216", "41121214", "61121212", "31112215", "51112213", "12121126", "32121124", "52121122", "21221125", "41221123", "61221121", "22112125", "42112123", "11212126", "22121215", "42121213", "11221216", "31221214", "51221212", "12112216", "32112214", "52112212", "21212215", "41212213", "61212211", "13121125", "33121123", "22221124", "42221122", "11321125", "31321123", "51321121", "23112124", "43112122", "12212125", "23121214", "43121212", "12221215", "32221213", "52221211", "21321214", "41321212", "13112215", "33112213", "22212214", "42212212", "11312215", "31312213", "51312211", "14121124", "34121122", "23221123", "43221121", "12321124", "32321122", "21421123", "41421121", "24112123", "13212124", "24121213", "13221214", "33221212", "11412124", "22321213", "42321211", "11421214", "31421212", "14112214", "34112212", "23212213", "43212211", "12312214", "32312212", "21412213", "41412211", "15121123", "24221122", "13321123", "33321121", "22421122", "11521123", "31521121", "25112122", "14212123", "25121212", "14221213", "34221211", "12412123", "23321212", "12421213", "32421211", "21521212", "15112213", "24212212", "13312213", "33312211", "22412212", "11512213", "31512211", "16121122", "25221121", "14321122", "23421121", "12521122", "15212122", "15221212", "13412122", "24321211", "13421212", "11612122", "22521211", "16112212", "25212211", "14312212", "23412211", "12512212", "21612211", "11131126", "31131124", "51131122", "21122125", "41122123", "61122121", "21131215", "41131213", "61131211", "11113126", "31113124", "51113122", "11122216", "31122214", "51122212", "21113215", "41113213", "61113211", "12131125", "32131123", "52131121", "21231124", "41231122", "22122124", "42122122", "11222125", "22131214", "42131212", "11231215", "31231213", "51231211", "12113125", "32113123", "52113121", "12122215", "32122213", "52122211", "21222214", "41222212", "22113214", "42113212", "11213215", "31213213", "51213211", "13131124", "33131122", "22231123", "42231121", "11331124", "31331122", "23122123", "43122121", "12222124", "23131213", "43131211", "12231214", "32231212", "21331213", "41331211", "13113124", "33113122", "13122214", "33122212", "11313124", "22222213", "42222211", "11322214", "31322212", "23113213", "43113211", "12213214", "32213212", "21313213", "41313211", "14131123", "34131121", "23231122", "12331123", "32331121", "21431122", "24122122", "13222123", "24131212", "13231213", "33231211", "11422123", "22331212", "11431213", "31431211", "14113123", "34113121", "14122213", "34122211", "12313123", "23222212", "12322213", "32322211", "21422212", "24113212", "13213213", "33213211", "22313212", "11413213", "31413211", "15131122", "24231121", "13331122", "22431121", "25122121", "14222122", "25131211", "14231212", "12422122", "23331211", "12431212", "15113122", "15122212", "13313122", "24222211", "13322212", "11513122", "22422211", "11522212", "25113211", "14213212", "23313211", "12413212", "21513211", "16131121", "14331121", "15222121", "15231211", "13422121", "13431211", "16113121", "16122211", "14313121", "14322211", "12513121", "12522211", "15213211", "13413211", "11613211", "11141125", "31141123", "51141121", "21132124", "41132122", "21141214", "41141212", "11123125", "31123123", "51123121", "11132215", "31132213", "51132211", "21114124", "41114122", "21123214", "41123212", "11114215", "31114213", "51114211", "12141124", "32141122", "21241123", "41241121", "22132123", "42132121", "11232124", "22141213", "42141211", "11241214", "31241212", "12123124", "32123122", "12132214", "32132212", "21232213", "41232211", "22114123", "42114121", "11214124", "22123213", "42123211", "11223214", "31223212", "12114214", "32114212", "21214213", "41214211", "13141123", "33141121", "22241122", "11341123", "31341121", "23132122", "12232123", "23141212", "12241213", "32241211", "21341212", "13123123", "33123121", "13132213", "33132211", "11323123", "22232212", "11332213", "31332211", "23114122", "12214123", "23123212", "12223213", "32223211", "21323212", "13114213", "33114211", "22214212", "11314213", "31314211", "14141122", "23241121", "12341122", "24132121", "13232122", "24141211", "13241212", "11432122", "22341211", "14123122", "14132212", "12323122", "23232211", "12332212", "21432211", "24114121", "13214122", "24123211", "13223212", "11414122", "22323211", "11423212", "14114212", "23214211", "12314212", "21414211", "15141121", "13341121", "14232121", "14241211", "12432121", "15123121", "15132211", "13323121", "13332211", "11523121", "14214121", "14223211", "12414121", "12423211", "15114211", "13314211", "11514211", "11151124", "31151122", "21142123", "41142121", "21151213", "41151211", "11133124", "31133122", "11142214", "31142212", "21124123", "41124121", "21133213", "41133211", "11115124", "31115122", "11124214", "31124212", "21115213", "41115211", "12151123", "32151121", "21251122", "22142122", "11242123", "22151212", "11251213", "31251211", "12133123", "32133121", "12142213", "32142211", "21242212", "22124122", "11224123", "22133212", "11233213", "31233211", "12115123", "32115121", "12124213", "32124211", "21224212", "22115212", "11215213", "31215211", "13151122", "22251121", "23142121", "12242122", "23151211", "12251212", "13133122", "13142212", "11333122", "22242211", "11342212", "23124121", "12224122", "23133211", "12233212", "21333211", "13115122", "13124212", "11315122", "22224211", "11324212", "23115211", "12215212", "21315211", "14151121", "13242121", "13251211", "14133121", "14142211", "12333121", "12342211", "13224121", "13233211", "11424121", "11433211", "14115121", "14124211", "12315121", "12324211", "13215211", "11415211", "11161123", "31161121", "21152122", "21161212", "11143123", "31143121", "11152213", "31152211", "21134122", "21143212", "11125123", "31125121", "11134213", "31134211", "21116122", "21125212", "12161122", "22152121", "11252122", "22161211", "12143122", "12152212", "21252211", "22134121", "11234122", "22143211", "11243212", "12125122", "12134212", "21234211", "22116121", "11216122", "22125211", "11225212", "13161121", "12252121", "13143121", "13152211", "11343121", "12234121", "12243211", "13125121", "13134211", "11325121", "11334211", "12216121", "12225211", "31111225", "51111223", "21111316", "41111314", "61111312", "31211134", "51211132", "12111226", "32111224", "52111222", "21211225", "41211223", "61211221", "22111315", "42111313", "11211316", "31211314", "51211312", "12211135", "32211133", "52211131", "21311134", "41311132", "13111225", "33111223", "22211224", "42211222", "11311225", "31311223", "51311221", "23111314", "43111312", "12211315", "32211313", "52211311", "21311314", "41311312", "13211134", "33211132", "22311133", "42311131", "11411134", "31411132", "14111224", "34111222", "23211223", "43211221", "12311224", "32311222", "21411223", "41411221", "24111313", "13211314", "33211312", "22311313", "42311311", "11411314", "31411312", "14211133", "34211131", "23311132", "12411133", "32411131", "21511132", "15111223", "24211222", "13311223", "33311221", "22411222", "11511223", "31511221", "25111312", "14211313", "34211311", "23311312", "12411313", "32411311", "21511312", "15211132", "24311131", "13411132", "22511131", "11611132", "16111222", "25211221", "14311222", "23411221", "12511222", "21611221", "15211312", "24311311", "13411312", "22511311", "11611312", "21121135", "41121133", "61121131", "11112136", "31112134", "51112132", "11121226", "31121224", "51121222", "21112225", "41112223", "61112221", "21121315", "41121313", "61121311", "11112316", "31112314", "51112312", "22121134", "42121132", "11221135", "31221133", "51221131", "12112135", "32112133", "52112131", "12121225", "32121223", "52121221", "21221224", "41221222", "22112224", "42112222", "11212225", "22121314", "42121312", "11221315", "31221313", "51221311", "12112315", "32112313", "52112311", "21212314", "41212312", "23121133", "43121131", "12221134", "32221132", "21321133", "41321131", "13112134", "33112132", "13121224", "33121222", "11312134", "22221223", "42221221", "11321224", "31321222", "23112223", "43112221", "12212224", "23121313", "43121311", "12221314", "32221312", "21321313", "41321311", "13112314", "33112312", "22212313", "42212311", "11312314", "31312312", "24121132", "13221133", "33221131", "22321132", "11421133", "31421131", "14112133", "34112131", "14121223", "34121221", "12312133", "23221222", "12321223", "32321221", "21421222", "24112222", "13212223", "24121312", "13221313", "33221311", "11412223", "22321312", "11421313", "31421311", "14112313", "34112311", "23212312", "12312313", "32312311", "21412312", "25121131", "14221132", "23321131", "12421132", "21521131", "15112132", "15121222", "13312132", "24221221", "13321222", "11512132", "22421221", "11521222", "25112221", "14212222", "25121311", "14221312", "12412222", "23321311", "12421312", "21521311", "15112312", "24212311", "13312312", "22412311", "11512312", "15221131", "13421131", "16112131", "16121221", "14312131", "14321221", "12512131", "12521221", "15212221", "15221311", "13412221", "13421311", "11612221", "16112311", "14312311", "12512311", "21131134", "41131132", "11122135", "31122133", "51122131", "11131225", "31131223", "51131221", "21113134", "41113132", "21122224", "41122222", "21131314", "41131312", "11113225", "31113223", "51113221", "11122315", "31122313", "51122311", "21113314", "41113312", "22131133", "42131131", "11231134", "31231132", "12122134", "32122132", "12131224", "32131222", "21231223", "41231221", "22113133", "42113131", "11213134", "22122223", "42122221", "11222224", "22131313", "42131311", "11231314", "31231312", "12113224", "32113222", "12122314", "32122312", "21222313", "41222311", "22113313", "42113311", "11213314", "31213312", "23131132", "12231133", "32231131", "21331132", "13122133", "33122131", "13131223", "33131221", "11322133", "22231222", "11331223", "31331221", "23113132", "12213133", "23122222", "12222223", "23131312", "12231313", "32231311", "21331312", "13113223", "33113221", "13122313", "33122311", "11313223", "22222312", "11322313", "31322311", "23113312", "12213313", "32213311", "21313312", "24131131", "13231132", "22331131", "11431132", "14122132", "14131222", "12322132", "23231221", "12331222", "21431221", "24113131", "13213132", "24122221", "13222222", "24131311", "11413132", "13231312", "11422222", "22331311", "11431312", "14113222", "14122312", "12313222", "23222311", "12322312", "21422311", "24113311", "13213312", "22313311", "11413312", "14231131", "12431131", "15122131", "15131221", "13322131", "13331221", "11522131", "14213131", "14222221", "12413131", "14231311", "12422221", "12431311", "15113221", "15122311", "13313221", "13322311", "11513221", "11522311", "14213311", "12413311", "21141133", "41141131", "11132134", "31132132", "11141224", "31141222", "21123133", "41123131", "21132223", "41132221", "21141313", "41141311", "11114134", "31114132", "11123224", "31123222", "11132314", "31132312", "21114223", "41114221", "21123313", "41123311", "11114314", "31114312", "22141132", "11241133", "31241131", "12132133", "32132131", "12141223", "32141221", "21241222", "22123132", "11223133", "22132222", "11232223", "22141312", "11241313", "31241311", "12114133", "32114131", "12123223", "32123221", "12132313", "32132311", "21232312", "22114222", "11214223", "22123312", "11223313", "31223311", "12114313", "32114311", "21214312", "23141131", "12241132", "21341131", "13132132", "13141222", "11332132", "22241221", "11341222", "23123131", "12223132", "23132221", "12232222", "23141311", "12241312", "21341311", "13114132", "13123222", "11314132", "13132312", "11323222", "22232311", "11332312", "23114221", "12214222", "23123311", "12223312", "21323311", "13114312", "22214311", "11314312", "13241131", "14132131", "14141221", "12332131", "12341221", "13223131", "13232221", "11423131", "13241311", "11432221", "14114131", "14123221", "12314131", "14132311", "12323221", "12332311", "13214221", "13223311", "11414221", "11423311", "14114311", "12314311", "21151132", "11142133", "31142131", "11151223", "31151221", "21133132", "21142222", "21151312", "11124133", "31124131", "11133223", "31133221", "11142313", "31142311", "21115132", "21124222", "21133312", "11115223", "31115221", "11124313", "31124311", "22151131", "11251132", "12142132", "12151222", "21251221", "22133131", "11233132", "22142221", "11242222", "22151311", "11251312", "12124132", "12133222", "12142312", "21242311", "22115131", "11215132", "22124221", "11224222", "22133311", "11233312", "12115222", "12124312", "21224311", "12251131", "13142131", "13151221", "11342131", "12233131", "12242221", "12251311", "13124131", "13133221", "11324131", "13142311", "11333221", "11342311", "12215131", "12224221", "12233311", "13115221", "13124311", "11315221", "11324311", "21161131", "11152132", "11161222", "21143131", "21152221", "21161311", "11134132", "11143222", "11152312", "21125131", "21134221", "21143311", "11116132", "11125222", "11134312", "12152131", "12161221", "11243131", "11252221", "12134131", "12143221", "12152311", "11225131", "11234221", "11243311", "12116131", "12125221", "12134311", "21111235", "41111233", "61111231", "11111326", "31111324", "51111322", "21111415", "41111413", "61111411", "21211144", "41211142", "22111234", "42111232", "11211235", "31211233", "51211231", "12111325", "32111323", "52111321", "21211324", "41211322", "22111414", "42111412", "11211415", "31211413", "51211411", "22211143", "42211141", "11311144", "31311142", "23111233", "43111231", "12211234", "32211232", "21311233", "41311231", "13111324", "33111322", "22211323", "42211321", "11311324", "31311322", "23111413", "43111411", "12211414", "32211412", "21311413", "41311411", "23211142", "12311143", "32311141", "21411142", "24111232", "13211233", "33211231", "22311232", "11411233", "31411231", "14111323", "34111321", "23211322", "12311323", "32311321", "21411322", "24111412", "13211413", "33211411", "22311412", "11411413", "31411411", "24211141", "13311142", "22411141", "11511142", "25111231", "14211232", "23311231", "12411232", "21511231", "15111322", "24211321", "13311322", "22411321", "11511322", "25111411", "14211412", "23311411", "12411412", "21511411", "14311141", "12511141", "15211231", "13411231", "11611231", "16111321", "14311321", "12511321", "15211411", "13411411", "11611411", "31121143", "51121141", "21112144", "41112142", "21121234", "41121232", "11112235", "31112233", "51112231", "11121325", "31121323", "51121321", "21112324", "41112322", "21121414", "41121412", "11112415", "31112413", "51112411", "12121144", "32121142", "21221143", "41221141", "22112143", "42112141", "11212144", "22121233", "42121231", "11221234", "31221232", "12112234", "32112232", "12121324", "32121322", "21221323", "41221321", "22112323", "42112321", "11212324", "22121413", "42121411", "11221414", "31221412", "12112414", "32112412", "21212413", "41212411", "13121143", "33121141", "22221142", "11321143", "31321141", "23112142", "12212143", "23121232", "12221233", "32221231", "21321232", "13112233", "33112231", "13121323", "33121321", "11312233", "22221322", "11321323", "31321321", "23112322", "12212323", "23121412", "12221413", "32221411", "21321412", "13112413", "33112411", "22212412", "11312413", "31312411", "14121142", "23221141", "12321142", "21421141", "24112141", "13212142", "24121231", "13221232", "11412142", "22321231", "11421232", "14112232", "14121322", "12312232", "23221321", "12321322", "21421321", "24112321", "13212322", "24121411", "13221412", "11412322", "22321411", "11421412", "14112412", "23212411", "12312412", "21412411", "15121141", "13321141", "11521141", "14212141", "14221231", "12412141", "12421231", "15112231", "15121321", "13312231", "13321321", "11512231", "11521321", "14212321", "14221411", "12412321", "12421411", "15112411", "13312411", "11512411", "11131144", "31131142", "21122143", "41122141", "21131233", "41131231", "11113144", "31113142", "11122234", "31122232", "11131324", "31131322", "21113233", "41113231", "21122323", "41122321", "21131413", "41131411", "11113324", "31113322", "11122414", "31122412", "21113413", "41113411", "12131143", "32131141", "21231142", "22122142", "11222143", "22131232", "11231233", "31231231", "12113143", "32113141", "12122233", "32122231", "12131323", "32131321", "21231322", "22113232", "11213233", "22122322", "11222323", "22131412", "11231413", "31231411", "12113323", "32113321", "12122413", "32122411", "21222412", "22113412", "11213413", "31213411", "13131142", "22231141", "11331142", "23122141", "12222142", "23131231", "12231232", "21331231", "13113142", "13122232", "11313142", "13131322", "11322232", "22231321", "11331322", "23113231", "12213232", "23122321", "12222322", "23131411", "12231412", "21331411", "13113322", "13122412", "11313322", "22222411", "11322412", "23113411", "12213412", "21313411", "14131141", "12331141", "13222141", "13231231", "11422141", "11431231", "14113141", "14122231", "12313141", "14131321", "12322231", "12331321", "13213231", "13222321", "11413231", "13231411", "11422321", "11431411", "14113321", "14122411", "12313321", "12322411", "13213411", "11413411", "11141143", "31141141", "21132142", "21141232", "11123143", "31123141", "11132233", "31132231", "11141323", "31141321", "21114142", "21123232", "21132322", "21141412", "11114233", "31114231", "11123323", "31123321", "11132413", "31132411", "21114322", "21123412", "12141142", "21241141", "22132141", "11232142", "22141231", "11241232", "12123142", "12132232", "12141322", "21241321", "22114141", "11214142", "22123231", "11223232", "22132321", "11232322", "22141411", "11241412", "12114232", "12123322", "12132412", "21232411", "22114321", "11214322", "22123411", "11223412", "13141141", "11341141", "12232141", "12241231", "13123141", "13132231", "11323141", "13141321", "11332231", "11341321", "12214141", "12223231", "12232321", "12241411", "13114231", "13123321", "11314231", "13132411", "11323321", "11332411", "12214321", "12223411", "11151142", "21142141", "21151231", "11133142", "11142232", "11151322", "21124141", "21133231", "21142321", "21151411", "11115142", "11124232", "11133322", "11142412", "21115231", "21124321", "21133411", "12151141", "11242141", "11251231", "12133141", "12142231", "12151321", "11224141", "11233231", "11242321", "11251411", "12115141", "12124231", "12133321", "12142411", "11215231", "11224321", "11233411", "11161141", "11143141", "11152231", "11161321", "11125141", "11134231", "11143321", "11152411", "11111245", "31111243", "51111241", "21111334", "41111332", "11111425", "31111423", "51111421", "21111514", "41111512", "31211152", "12111244", "32111242", "21211243", "41211241", "22111333", "42111331", "11211334", "31211332", "12111424", "32111422", "21211423", "41211421", "22111513", "42111511", "11211514", "31211512", "12211153", "32211151", "21311152", "13111243", "33111241", "22211242", "11311243", "31311241", "23111332", "12211333", "32211331", "21311332", "13111423", "33111421", "22211422", "11311423", "31311421", "23111512", "12211513", "32211511", "21311512", "13211152", "22311151", "11411152", "14111242", "23211241", "12311242", "21411241", "24111331", "13211332", "22311331", "11411332", "14111422", "23211421", "12311422", "21411421", "24111511", "13211512", "22311511", "11411512", "14211151", "12411151", "15111241", "13311241", "11511241", "14211331", "12411331", "15111421", "13311421", "11511421", "14211511", "12411511", "21121153", "41121151", "11112154", "31112152", "11121244", "31121242", "21112243", "41112241", "21121333", "41121331", "11112334", "31112332", "11121424", "31121422", "21112423", "41112421", "21121513", "41121511", "11112514", "31112512", "22121152", "11221153", "31221151", "12112153", "32112151", "12121243", "32121241", "21221242", "22112242", "11212243", "22121332", "11221333", "31221331", "12112333", "32112331", "12121423", "32121421", "21221422", "22112422", "11212423", "22121512", "11221513", "31221511", "12112513", "32112511", "21212512", "23121151", "12221152", "21321151", "13112152", "13121242", "11312152", "22221241", "11321242", "23112241", "12212242", "23121331", "12221332", "21321331", "13112332", "13121422", "11312332", "22221421", "11321422", "23112421", "12212422", "23121511", "12221512", "21321511", "13112512", "22212511", "11312512", "13221151", "11421151", "14112151", "14121241", "12312151", "12321241", "13212241", "13221331", "11412241", "11421331", "14112331", "14121421", "12312331", "12321421", "13212421", "13221511", "11412421", "11421511", "14112511", "12312511", "21131152", "11122153", "31122151", "11131243", "31131241", "21113152", "21122242", "21131332", "11113243", "31113241", "11122333", "31122331", "11131423", "31131421", "21113332", "21122422", "21131512", "11113423", "31113421", "11122513", "31122511", "22131151", "11231152", "12122152", "12131242", "21231241", "22113151", "11213152", "22122241", "11222242", "22131331", "11231332", "12113242", "12122332", "12131422", "21231421", "22113331", "11213332", "22122421", "11222422", "22131511", "11231512", "12113422", "12122512", "21222511", "12231151", "13122151", "13131241", "11322151", "11331241", "12213151", "12222241", "12231331", "13113241", "13122331", "11313241", "13131421", "11322331", "11331421", "12213331", "12222421", "12231511", "13113421", "13122511", "11313421", "11322511", "21141151", "11132152", "11141242", "21123151", "21132241", "21141331", "11114152", "11123242", "11132332", "11141422", "21114241", "21123331", "21132421", "21141511", "11114332", "11123422", "11132512", "11241151", "12132151", "12141241", "11223151", "11232241", "11241331", "12114151", "12123241", "12132331", "12141421", "11214241", "11223331", "11232421", "11241511", "12114331", "12123421", "12132511", "11142151", "11151241", "11124151", "11133241", "11142331", "11151421", "11115241", "11124331", "11133421", "11142511", "21111253", "41111251", "11111344", "31111342", "21111433", "41111431", "11111524", "31111522", "21111613", "41111611", "21211162", "22111252", "11211253", "31211251", "12111343", "32111341", "21211342", "22111432", "11211433", "31211431", "12111523", "32111521", "21211522", "22111612", "11211613", "31211611", "22211161", "11311162", "23111251", "12211252", "21311251", "13111342", "22211341", "11311342", "23111431", "12211432", "21311431", "13111522", "22211521", "11311522", "23111611", "12211612", "21311611", "12311161", "13211251", "11411251", "14111341", "12311341", "13211431", "11411431", "14111521", "12311521", "13211611", "11411611", "31121161", "21112162", "21121252", "11112253", "31112251", "11121343", "31121341", "21112342", "21121432", "11112433", "31112431", "11121523", "31121521", "21112522", "21121612", "12121162", "21221161", "22112161", "11212162", "22121251", "11221252", "12112252", "12121342", "21221341", "22112341", "11212342", "22121431", "11221432", "12112432", "12121522", "21221521", "22112521", "11212522", "22121611", "11221612", "13121161", "11321161", "12212161", "12221251", "13112251", "13121341", "11312251", "11321341", "12212341", "12221431", "13112431", "13121521", "11312431", "11321521", "12212521", "12221611", "11131162", "21122161", "21131251", "11113162"])]); /*12730*/
		$1.parity = $a(["1001", "0101", "1100", "0011", "1010", "0110", "1111", "0000"]); /*12734*/
		$1.rowbits = $a($1.r); /*12737*/
		for (var _6J = 0, _6I = $1.r - 1; _6J <= _6I; _6J += 1) { /*12757*/
			$1.i = _6J; /*12739*/
			$k[$j++] = "p"; /*12740*/
			if ($1.i != ($1.r - 1)) { /*12740*/
				$k[$j++] = $get($1.parity, $1.i); /*12740*/
			} else { /*12740*/
				$k[$j++] = "0000"; /*12740*/
			} /*12740*/
			var _6P = $k[--$j]; /*12740*/
			$1[$k[--$j]] = _6P; /*12740*/
			$1.ccrow = $geti($1.ccs, $1.i * 8, 8); /*12741*/
			$k[$j++] = Infinity; /*12744*/
			for (var _6U = 0; _6U <= 7; _6U += 2) { /*12743*/
				$aload($geti($1.ccrow, _6U, 2)); /*12743*/
				var _6X = $k[--$j]; /*12743*/
				var _6Y = $k[--$j]; /*12743*/
				$k[$j++] = _6X + (_6Y * 49); /*12743*/
			} /*12743*/
			$1.scrow = $a(); /*12744*/
			$k[$j++] = Infinity; /*12752*/
			$k[$j++] = 10; /*12750*/
			$k[$j++] = 1; /*12750*/
			$k[$j++] = 1; /*12750*/
			for (var _6a = 0; _6a <= 3; _6a += 1) { /*12750*/
				$1.j = _6a; /*12748*/
				$forall($get($get($1.patterns, $get($1.p, $1.j) - 48), $get($1.scrow, $1.j)), function() { /*12749*/
					var _6k = $k[--$j]; /*12749*/
					$k[$j++] = _6k - 48; /*12749*/
				}); /*12749*/
			} /*12749*/
			$k[$j++] = 4; /*12751*/
			$k[$j++] = 1; /*12751*/
			$1.sbs = $a(); /*12752*/
			$k[$j++] = Infinity; /*12753*/
			var _6m = $1.sbs; /*12754*/
			$k[$j++] = 1; /*12754*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*12754*/
				var _6q = $k[--$j]; /*12754*/
				var _6r = (_6q == 0) ? 1 : 0; /*12754*/
				$k[$j++] = _6q; /*12754*/
				for (var _6s = 0, _6t = $get(_6m, _6n); _6s < _6t; _6s++) { /*12754*/
					$k[$j++] = _6r /*12754*/
				} /*12754*/
			} /*12754*/
			$astore($a($counttomark() - 1)); /*12755*/
			var _6w = $k[--$j]; /*12755*/
			var _6x = $k[--$j]; /*12755*/
			var _6y = $k[--$j]; /*12755*/
			$put($1.rowbits, $1.i, _6w); /*12756*/
		} /*12756*/
		$k[$j++] = Infinity; /*12769*/
		for (var _72 = 0, _73 = 81 * $1.sepheight; _72 < _73; _72++) { /*12761*/
			$k[$j++] = 1; /*12761*/
		} /*12761*/
		for (var _76 = 0, _75 = $1.r - 2; _76 <= _75; _76 += 1) { /*12766*/
			$1.i = _76; /*12763*/
			for (var _78 = 0, _79 = $1.rowheight; _78 < _79; _78++) { /*12764*/
				$aload($get($1.rowbits, $1.i)); /*12764*/
			} /*12764*/
			for (var _7E = 0, _7F = $1.sepheight; _7E < _7F; _7E++) { /*12765*/
				for (var _7G = 0, _7H = 10; _7G < _7H; _7G++) { /*12765*/
					$k[$j++] = 0; /*12765*/
				} /*12765*/
				for (var _7I = 0, _7J = 70; _7I < _7J; _7I++) { /*12765*/
					$k[$j++] = 1; /*12765*/
				} /*12765*/
				$k[$j++] = 0; /*12765*/
			} /*12765*/
		} /*12765*/
		for (var _7L = 0, _7M = $1.rowheight; _7L < _7M; _7L++) { /*12767*/
			$aload($get($1.rowbits, $1.r - 1)); /*12767*/
		} /*12767*/
		for (var _7R = 0, _7S = 81 * $1.sepheight; _7R < _7S; _7R++) { /*12768*/
			$k[$j++] = 1; /*12768*/
		} /*12768*/
		$1.pixs = $a(); /*12769*/
		var _7Y = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: 81,
			pixy: ~~($1.pixs.length / 81),
			height: (~~($1.pixs.length / 81)) / 72,
			width: 81 / 72,
			opt: $1.options
		}; /*12779*/
		$k[$j++] = _7Y; /*12782*/
		if (!$1.dontdraw) { /*12782*/
			$0.renmatrix(); /*12782*/
		} /*12782*/
	};
	$0.channelcode = function() {
		var $1 = {}; /*12809*/
		$1.options = $k[--$j]; /*12811*/
		$1.barcode = $k[--$j]; /*12812*/
		$1.dontdraw = false; /*12814*/
		$1.shortfinder = false; /*12815*/
		$1.includetext = false; /*12816*/
		$1.includecheck = false; /*12817*/
		$1.height = 1; /*12818*/
		$forall($1.options, function() { /*12829*/
			var _3 = $k[--$j]; /*12829*/
			$1[$k[--$j]] = _3; /*12829*/
		}); /*12829*/
		$1.height = +$1.height; /*12831*/
		if (($1.barcode.length < 2) || ($1.barcode.length > 7)) { /*12836*/
			$k[$j++] = "bwipp.channelcodeBadLength"; /*12835*/
			$k[$j++] = "Channel Code must be 2 to 7 digits"; /*12835*/
			$0.raiseerror(); /*12835*/
		} /*12835*/
		$forall($1.barcode, function() { /*12841*/
			var _9 = $k[--$j]; /*12838*/
			if ((_9 < 48) || (_9 > 57)) { /*12840*/
				$k[$j++] = "bwipp.channelcodeBadCharacter"; /*12839*/
				$k[$j++] = "Channel Code must contain only digits"; /*12839*/
				$0.raiseerror(); /*12839*/
			} /*12839*/
		}); /*12839*/
		if ((~~$z($1.barcode)) > $get($a([26, 292, 3493, 44072, 576688, 7742862]), $1.barcode.length - 2)) { /*12844*/
			$k[$j++] = "bwipp.channelcodeTooBig"; /*12843*/
			$k[$j++] = "The Channel Code value is too big for the number of channels"; /*12843*/
			$0.raiseerror(); /*12843*/
		} /*12843*/
		$1.nextb = function() {
			var _E = $k[--$j]; /*12847*/
			var _N = (($get($1.s, _E) + ($get($1.b, _E - 1) + ($get($1.b, _E - 2) + $get($1.s, _E - 1)))) > 4) ? 1 : 2; /*12852*/
			$k[$j++] = _E; /*12868*/
			$k[$j++] = _N; /*12868*/
			if (_E < ($1.chan + 2)) { /*12866*/
				var _P = $k[--$j]; /*12854*/
				var _Q = $k[--$j]; /*12854*/
				var _R = $k[--$j]; /*12854*/
				$k[$j++] = _R; /*12857*/
				$k[$j++] = _Q; /*12857*/
				$k[$j++] = _P; /*12857*/
				for (var _T = _P, _S = _R; _T <= _S; _T += 1) { /*12857*/
					var _V = $k[--$j]; /*12855*/
					var _W = $k[--$j]; /*12855*/
					$put($1.b, _W, _T); /*12855*/
					var _X = $k[--$j]; /*12856*/
					var _Y = $k[--$j]; /*12856*/
					$k[$j++] = _Y; /*12856*/
					$k[$j++] = _X; /*12856*/
					$k[$j++] = _W; /*12856*/
					$k[$j++] = _V; /*12856*/
					$k[$j++] = (_X - _T) + 1; /*12856*/
					$k[$j++] = _Y; /*12856*/
					$k[$j++] = _W + 1; /*12856*/
					$1.nexts(); /*12856*/
				} /*12856*/
			} else { /*12866*/
				var _Z = $k[--$j]; /*12859*/
				var _a = $k[--$j]; /*12859*/
				var _b = $k[--$j]; /*12859*/
				$k[$j++] = _b; /*12867*/
				$k[$j++] = _a; /*12867*/
				$k[$j++] = _Z; /*12867*/
				if ($le(_Z, _b)) { /*12867*/
					var _d = $k[--$j]; /*12860*/
					var _e = $k[--$j]; /*12860*/
					var _f = $k[--$j]; /*12860*/
					$put($1.b, _e, _f); /*12860*/
					$k[$j++] = _f; /*12865*/
					$k[$j++] = _e; /*12865*/
					$k[$j++] = _d; /*12865*/
					if ($1.value == $1.target) { /*12865*/
						$k[$j++] = "out"; /*12864*/
						$k[$j++] = Infinity; /*12864*/
						for (var _i = 3; _i <= 10; _i += 1) { /*12863*/
							$k[$j++] = $get($1.s, _i); /*12863*/
							$k[$j++] = $get($1.b, _i); /*12863*/
						} /*12863*/
						var _p = $geti($a(), 0, $1.chan * 2); /*12864*/
						$1[$k[--$j]] = _p; /*12864*/
					} /*12864*/
					$1.value = $1.value + 1; /*12866*/
				} /*12866*/
			} /*12866*/
			$j -= 4; /*12869*/
		}; /*12870*/
		$1.nexts = function() {
			var _s = $k[--$j]; /*12873*/
			$k[$j++] = _s; /*12873*/
			if (_s < ($1.chan + 2)) { /*12873*/
				$k[$j++] = 1; /*12873*/
			} else { /*12873*/
				var _u = $k[--$j]; /*12873*/
				var _v = $k[--$j]; /*12873*/
				$k[$j++] = _v; /*12873*/
				$k[$j++] = _u; /*12873*/
				$k[$j++] = _v; /*12873*/
			} /*12873*/
			var _w = $k[--$j]; /*12873*/
			var _x = $k[--$j]; /*12873*/
			var _y = $k[--$j]; /*12873*/
			$k[$j++] = _y; /*12876*/
			$k[$j++] = _x; /*12876*/
			for (var _10 = _w, _z = _y; _10 <= _z; _10 += 1) { /*12876*/
				var _12 = $k[--$j]; /*12874*/
				$put($1.s, _12, _10); /*12874*/
				var _13 = $k[--$j]; /*12875*/
				var _14 = $k[--$j]; /*12875*/
				$k[$j++] = _14; /*12875*/
				$k[$j++] = _13; /*12875*/
				$k[$j++] = _12; /*12875*/
				$k[$j++] = (_13 - _10) + 1; /*12875*/
				$k[$j++] = _14; /*12875*/
				$k[$j++] = _12; /*12875*/
				$1.nextb(); /*12875*/
			} /*12875*/
			$j -= 3; /*12877*/
		}; /*12878*/
		$1.encode = function() {
			$1.chan = $k[--$j]; /*12881*/
			$1.target = $k[--$j]; /*12882*/
			$1.value = 0; /*12883*/
			$1.out = -1; /*12884*/
			$1.b = $a([1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]); /*12885*/
			$1.s = $a([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]); /*12886*/
			var _19 = $1.chan; /*12887*/
			$k[$j++] = _19; /*12887*/
			$k[$j++] = _19; /*12887*/
			$k[$j++] = 3; /*12887*/
			$1.nexts(); /*12887*/
			$k[$j++] = $1.out; /*12888*/
		}; /*12889*/
		$1.barlen = $1.barcode.length; /*12891*/
		$k[$j++] = "finder"; /*12894*/
		if ($1.shortfinder) { /*12894*/
			$k[$j++] = $a([1, 1, 1, 1, 1]); /*12894*/
		} else { /*12894*/
			$k[$j++] = $a([1, 1, 1, 1, 1, 1, 1, 1, 1]); /*12894*/
		} /*12894*/
		var _1F = $k[--$j]; /*12894*/
		$1[$k[--$j]] = _1F; /*12894*/
		$k[$j++] = "data"; /*12897*/
		$k[$j++] = ~~$z($1.barcode); /*12897*/
		$k[$j++] = $1.barlen + 1; /*12897*/
		$1.encode(); /*12897*/
		var _1J = $k[--$j]; /*12897*/
		$1[$k[--$j]] = _1J; /*12897*/
		$1.check = $a([]); /*12900*/
		if ($1.includecheck) { /*12916*/
			$1.mod23 = $get($a([$a([]), $a([]), $a([13, 12, 4, 9, 3, 1]), $a([13, 2, 12, 3, 18, 16, 4, 1]), $a([11, 16, 17, 8, 20, 4, 10, 2, 5, 1]), $a([1, 4, 16, 18, 3, 12, 2, 8, 9, 13, 6, 1]), $a([20, 16, 22, 13, 15, 12, 5, 4, 8, 9, 21, 3, 7, 1]), $a([2, 6, 18, 8, 1, 3, 9, 4, 12, 13, 16, 2, 6, 18, 8, 1])]), $1.barlen); /*12910*/
			$k[$j++] = 0; /*12914*/
			for (var _1a = 0, _1Z = $1.data.length - 1; _1a <= _1Z; _1a += 1) { /*12914*/
				var _1f = $k[--$j]; /*12913*/
				$k[$j++] = _1f + (($get($1.data, _1a) - 1) * $get($1.mod23, _1a)); /*12913*/
			} /*12913*/
			var _1g = $k[--$j]; /*12915*/
			$k[$j++] = _1g % 23; /*12915*/
			$k[$j++] = 3; /*12915*/
			$1.encode(); /*12915*/
			$1.check = $k[--$j]; /*12915*/
		} /*12915*/
		$k[$j++] = Infinity; /*12923*/
		$aload($1.finder); /*12920*/
		$aload($1.data); /*12921*/
		$aload($1.check); /*12922*/
		$1.sbs = $a(); /*12923*/
		$1.txt = $a($1.barlen); /*12926*/
		for (var _1q = 0, _1p = $1.barlen - 1; _1q <= _1p; _1q += 1) { /*12930*/
			$1.i = _1q; /*12928*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), 0, 0, "", 0])); /*12929*/
		} /*12929*/
		$k[$j++] = Infinity; /*12940*/
		$k[$j++] = "ren"; /*12937*/
		$k[$j++] = $0.renlinear; /*12937*/
		$k[$j++] = "sbs"; /*12937*/
		$k[$j++] = $1.sbs; /*12937*/
		$k[$j++] = "bhs"; /*12937*/
		$k[$j++] = Infinity; /*12937*/
		for (var _1z = 0, _20 = ~~(($1.sbs.length + 1) / 2); _1z < _20; _1z++) { /*12936*/
			$k[$j++] = $1.height; /*12936*/
		} /*12936*/
		var _22 = $a(); /*12937*/
		$k[$j++] = _22; /*12938*/
		$k[$j++] = "bbs"; /*12938*/
		$k[$j++] = Infinity; /*12938*/
		for (var _24 = 0, _25 = ~~(($1.sbs.length + 1) / 2); _24 < _25; _24++) { /*12937*/
			$k[$j++] = 0; /*12937*/
		} /*12937*/
		var _26 = $a(); /*12938*/
		$k[$j++] = _26; /*12940*/
		$k[$j++] = "txt"; /*12940*/
		$k[$j++] = $1.txt; /*12940*/
		$k[$j++] = "textxalign"; /*12940*/
		$k[$j++] = "center"; /*12940*/
		$k[$j++] = "opt"; /*12940*/
		$k[$j++] = $1.options; /*12940*/
		var _29 = $d(); /*12940*/
		$k[$j++] = _29; /*12943*/
		if (!$1.dontdraw) { /*12943*/
			$0.renlinear(); /*12943*/
		} /*12943*/
	};
	$0.flattermarken = function() {
		var $1 = {}; /*12970*/
		$1.options = $k[--$j]; /*12972*/
		$1.barcode = $k[--$j]; /*12973*/
		$1.dontdraw = false; /*12975*/
		$1.includetext = false; /*12976*/
		$1.textfont = "Courier"; /*12977*/
		$1.textsize = 10; /*12978*/
		$1.textyoffset = -8.5; /*12979*/
		$1.height = 0.3; /*12980*/
		$forall($1.barcode, function() { /*12987*/
			var _3 = $k[--$j]; /*12984*/
			if ((_3 < 48) || (_3 > 57)) { /*12986*/
				$k[$j++] = "bwipp.flattermarkenBadCharacter"; /*12985*/
				$k[$j++] = "Flattermarken must contain only digits"; /*12985*/
				$0.raiseerror(); /*12985*/
			} /*12985*/
		}); /*12985*/
		$forall($1.options, function() { /*12998*/
			var _5 = $k[--$j]; /*12998*/
			$1[$k[--$j]] = _5; /*12998*/
		}); /*12998*/
		$1.textfont = "" + $1.textfont; /*13000*/
		$1.textsize = +$1.textsize; /*13001*/
		$1.textyoffset = +$1.textyoffset; /*13002*/
		$1.height = +$1.height; /*13003*/
		$forall($1.barcode, function() { /*13010*/
			var _C = $k[--$j]; /*13007*/
			if ((_C < 48) || (_C > 57)) { /*13009*/
				$k[$j++] = "bwipp.flattermarkenBadCharacter"; /*13008*/
				$k[$j++] = "Flattermarken must contain only digits"; /*13008*/
				$0.raiseerror(); /*13008*/
			} /*13008*/
		}); /*13008*/
		$1.encs = $a(["0018", "0117", "0216", "0315", "0414", "0513", "0612", "0711", "0810", "0900"]); /*13016*/
		$1.barchars = "1234567890"; /*13019*/
		$1.barlen = $1.barcode.length; /*13021*/
		$1.sbs = $s($1.barlen * 4); /*13023*/
		$1.txt = $a($1.barlen); /*13024*/
		for (var _L = 0, _K = $1.barlen - 1; _L <= _K; _L += 1) { /*13036*/
			$1.i = _L; /*13027*/
			$search($1.barchars, $geti($1.barcode, $1.i, 1)); /*13029*/
			$j--; /*13030*/
			$1.indx = $k[--$j].length; /*13031*/
			$j -= 2; /*13032*/
			$1.enc = $get($1.encs, $1.indx); /*13033*/
			$puti($1.sbs, $1.i * 4, $1.enc); /*13034*/
			$put($1.txt, $1.i, $a([$geti($1.barcode, $1.i, 1), $1.i * 9, $1.textyoffset, $1.textfont, $1.textsize])); /*13035*/
		} /*13035*/
		$k[$j++] = Infinity; /*13045*/
		$k[$j++] = "ren"; /*13042*/
		$k[$j++] = $0.renlinear; /*13042*/
		$k[$j++] = "sbs"; /*13042*/
		$k[$j++] = Infinity; /*13042*/
		var _h = $1.sbs; /*13041*/
		for (var _i = 0, _j = _h.length; _i < _j; _i++) { /*13041*/
			$k[$j++] = $get(_h, _i) - 48; /*13041*/
		} /*13041*/
		var _l = $a(); /*13042*/
		$k[$j++] = _l; /*13043*/
		$k[$j++] = "bhs"; /*13043*/
		$k[$j++] = Infinity; /*13043*/
		for (var _n = 0, _o = ~~(($1.sbs.length + 1) / 2); _n < _o; _n++) { /*13042*/
			$k[$j++] = $1.height; /*13042*/
		} /*13042*/
		var _q = $a(); /*13043*/
		$k[$j++] = _q; /*13044*/
		$k[$j++] = "bbs"; /*13044*/
		$k[$j++] = Infinity; /*13044*/
		for (var _s = 0, _t = ~~(($1.sbs.length + 1) / 2); _s < _t; _s++) { /*13043*/
			$k[$j++] = 0; /*13043*/
		} /*13043*/
		var _u = $a(); /*13044*/
		$k[$j++] = _u; /*13045*/
		$k[$j++] = "txt"; /*13045*/
		$k[$j++] = $1.txt; /*13045*/
		$k[$j++] = "opt"; /*13045*/
		$k[$j++] = $1.options; /*13045*/
		var _x = $d(); /*13045*/
		$k[$j++] = _x; /*13048*/
		if (!$1.dontdraw) { /*13048*/
			$0.renlinear(); /*13048*/
		} /*13048*/
	};
	$0.raw = function() {
		var $1 = {}; /*13075*/
		$1.options = $k[--$j]; /*13077*/
		$1.barcode = $k[--$j]; /*13078*/
		$1.dontdraw = false; /*13080*/
		$1.height = 1; /*13081*/
		$forall($1.options, function() { /*13092*/
			var _3 = $k[--$j]; /*13092*/
			$1[$k[--$j]] = _3; /*13092*/
		}); /*13092*/
		$1.height = +$1.height; /*13094*/
		$forall($1.barcode, function() { /*13101*/
			var _7 = $k[--$j]; /*13098*/
			if ((_7 < 49) || (_7 > 57)) { /*13100*/
				$k[$j++] = "bwipp.rawBadCharacter"; /*13099*/
				$k[$j++] = "Raw must contain only digits 1 to 9"; /*13099*/
				$0.raiseerror(); /*13099*/
			} /*13099*/
		}); /*13099*/
		$k[$j++] = Infinity; /*13109*/
		$k[$j++] = "ren"; /*13107*/
		$k[$j++] = $0.renlinear; /*13107*/
		$k[$j++] = "sbs"; /*13107*/
		$k[$j++] = Infinity; /*13107*/
		$forall($1.barcode, function() { /*13106*/
			var _9 = $k[--$j]; /*13106*/
			$k[$j++] = _9 - 48; /*13106*/
		}); /*13106*/
		var _A = $a(); /*13107*/
		$k[$j++] = _A; /*13108*/
		$k[$j++] = "bhs"; /*13108*/
		$k[$j++] = Infinity; /*13108*/
		for (var _C = 0, _D = ~~(($1.barcode.length + 1) / 2); _C < _D; _C++) { /*13107*/
			$k[$j++] = $1.height; /*13107*/
		} /*13107*/
		var _F = $a(); /*13108*/
		$k[$j++] = _F; /*13109*/
		$k[$j++] = "bbs"; /*13109*/
		$k[$j++] = Infinity; /*13109*/
		for (var _H = 0, _I = ~~(($1.barcode.length + 1) / 2); _H < _I; _H++) { /*13108*/
			$k[$j++] = 0; /*13108*/
		} /*13108*/
		var _J = $a(); /*13109*/
		$k[$j++] = _J; /*13109*/
		$k[$j++] = "opt"; /*13109*/
		$k[$j++] = $1.options; /*13109*/
		var _L = $d(); /*13109*/
		$k[$j++] = _L; /*13112*/
		if (!$1.dontdraw) { /*13112*/
			$0.renlinear(); /*13112*/
		} /*13112*/
	};
	$0.daft = function() {
		var $1 = {}; /*13139*/
		$1.options = $k[--$j]; /*13141*/
		$1.barcode = $k[--$j]; /*13142*/
		$1.dontdraw = false; /*13144*/
		$1.height = 0.175; /*13145*/
		$forall($1.options, function() { /*13156*/
			var _3 = $k[--$j]; /*13156*/
			$1[$k[--$j]] = _3; /*13156*/
		}); /*13156*/
		$1.height = +$1.height; /*13158*/
		$forall($1.barcode, function() { /*13164*/
			var _7 = $k[--$j]; /*13161*/
			if ((_7 != 68) && ((_7 != 65) && ((_7 != 70) && (_7 != 84)))) { /*13163*/
				$k[$j++] = "bwipp.daftBadCharacter"; /*13162*/
				$k[$j++] = "DAFT must contain only characters D, A, F and T"; /*13162*/
				$0.raiseerror(); /*13162*/
			} /*13162*/
		}); /*13162*/
		$1.barlen = $1.barcode.length; /*13166*/
		$1.bbs = $a($1.barlen); /*13168*/
		$1.bhs = $a($1.barlen); /*13169*/
		for (var _F = 0, _E = $1.barlen - 1; _F <= _E; _F += 1) { /*13189*/
			$1.i = _F; /*13171*/
			$1.enc = $geti($1.barcode, $1.i, 1); /*13172*/
			if ($eq($1.enc, "D")) { /*13176*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*13174*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*13175*/
			} /*13175*/
			if ($eq($1.enc, "A")) { /*13180*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*13178*/
				$put($1.bhs, $1.i, (5 * $1.height) / 8); /*13179*/
			} /*13179*/
			if ($eq($1.enc, "F")) { /*13184*/
				$put($1.bbs, $1.i, (0 * $1.height) / 8); /*13182*/
				$put($1.bhs, $1.i, (8 * $1.height) / 8); /*13183*/
			} /*13183*/
			if ($eq($1.enc, "T")) { /*13188*/
				$put($1.bbs, $1.i, (3 * $1.height) / 8); /*13186*/
				$put($1.bhs, $1.i, (2 * $1.height) / 8); /*13187*/
			} /*13187*/
		} /*13187*/
		$k[$j++] = Infinity; /*13197*/
		$k[$j++] = "ren"; /*13197*/
		$k[$j++] = $0.renlinear; /*13197*/
		$k[$j++] = "bbs"; /*13197*/
		$k[$j++] = $1.bbs; /*13197*/
		$k[$j++] = "bhs"; /*13197*/
		$k[$j++] = $1.bhs; /*13197*/
		$k[$j++] = "sbs"; /*13197*/
		$k[$j++] = Infinity; /*13197*/
		for (var _o = 0, _p = $1.bhs.length - 1; _o < _p; _o++) { /*13196*/
			$k[$j++] = 1.44; /*13196*/
			$k[$j++] = 1.872; /*13196*/
		} /*13196*/
		$k[$j++] = 1.44; /*13196*/
		var _q = $a(); /*13197*/
		$k[$j++] = _q; /*13197*/
		$k[$j++] = "opt"; /*13197*/
		$k[$j++] = $1.options; /*13197*/
		var _s = $d(); /*13197*/
		$k[$j++] = _s; /*13200*/
		if (!$1.dontdraw) { /*13200*/
			$0.renlinear(); /*13200*/
		} /*13200*/
	};
	$0.symbol = function() {
		var $1 = {}; /*13227*/
		$1.options = $k[--$j]; /*13229*/
		$1.barcode = $k[--$j]; /*13230*/
		$1.dontdraw = false; /*13232*/
		$forall($1.options, function() { /*13243*/
			var _3 = $k[--$j]; /*13243*/
			$1[$k[--$j]] = _3; /*13243*/
		}); /*13243*/
		var _H = {
			fima: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 11.25, 2.25, 11.25, 2.25, 2.25, 2.25]); /*13247*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625]); /*13248*/
				$1.bbs = $a([0, 0, 0, 0, 0]); /*13249*/
			},
			fimb: function() {
				$1.sbs = $a([2.25, 6.75, 2.25, 2.25, 2.25, 6.25, 2.25, 2.25, 2.25, 6.75, 2.25]); /*13252*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13253*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0]); /*13254*/
			},
			fimc: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 6.75, 2.25, 6.75, 2.25, 6.75, 2.25, 2.25, 2.25]); /*13257*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13258*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0]); /*13259*/
			},
			fimd: function() {
				$1.sbs = $a([2.25, 2.25, 2.25, 2.25, 2.25, 6.75, 2.25, 6.75, 2.25, 2.25, 2.25, 2.25, 2.25]); /*13262*/
				$1.bhs = $a([0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625]); /*13263*/
				$1.bbs = $a([0, 0, 0, 0, 0, 0, 0]); /*13264*/
			}
		}; /*13264*/
		$1.symbols = _H; /*13266*/
		var _K = $get($1.symbols, $1.barcode) !== undefined; /*13269*/
		if (!_K) { /*13271*/
			$k[$j++] = "bwipp.symbolUnknownSymbol"; /*13270*/
			$k[$j++] = "Unknown symbol name provided"; /*13270*/
			$0.raiseerror(); /*13270*/
		} /*13270*/
		$get($1.symbols, $1.barcode)(); /*13273*/
		var _S = {
			ren: $0.renlinear,
			sbs: $1.sbs,
			bhs: $1.bhs,
			bbs: $1.bbs,
			opt: $1.options
		}; /*13281*/
		$k[$j++] = _S; /*13284*/
		if (!$1.dontdraw) { /*13284*/
			$0.renlinear(); /*13284*/
		} /*13284*/
	};
	$0.pdf417 = function() {
		var $1 = {}; /*13311*/
		$1.options = $k[--$j]; /*13313*/
		$1.barcode = $k[--$j]; /*13314*/
		$1.dontdraw = false; /*13316*/
		$1.compact = false; /*13317*/
		$1.eclevel = -1; /*13318*/
		$1.columns = 0; /*13319*/
		$1.rows = 0; /*13320*/
		$1.rowmult = 3; /*13321*/
		$1.encoding = "auto"; /*13322*/
		$1.ccc = false; /*13323*/
		$1.raw = false; /*13324*/
		$1.parse = false; /*13325*/
		$forall($1.options, function() { /*13336*/
			var _3 = $k[--$j]; /*13336*/
			$1[$k[--$j]] = _3; /*13336*/
		}); /*13336*/
		$1.eclevel = ~~$1.eclevel; /*13338*/
		$1.columns = ~~$1.columns; /*13339*/
		$1.rows = ~~$1.rows; /*13340*/
		$1.rowmult = +$1.rowmult; /*13341*/
		if ($1.raw) { /*13364*/
			$1.encoding = "raw"; /*13364*/
		} /*13364*/
		if ($eq($1.encoding, "raw")) { /*13378*/
			$1.datcws = $a($1.barcode.length); /*13368*/
			$1.i = 0; /*13369*/
			$1.j = 0; /*13369*/
			for (;;) { /*13376*/
				if ($1.i == $1.barcode.length) { /*13371*/
					break; /*13371*/
				} /*13371*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*13372*/
				$put($1.datcws, $1.j, $1.cw); /*13373*/
				$1.i = $1.i + 4; /*13374*/
				$1.j = $1.j + 1; /*13375*/
			} /*13375*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*13377*/
		} /*13377*/
		$k[$j++] = Infinity; /*13380*/
		$forall($1.barcode); /*13380*/
		$1.barcode = $a(); /*13380*/
		$1.barlen = $1.barcode.length; /*13381*/
		if ($1.ccc) { /*13383*/
			$1.encoding = "ccc"; /*13383*/
		} /*13383*/
		$1.encb = function() {
			$1.in = $k[--$j]; /*13386*/
			$1.inlen = $1.in.length; /*13387*/
			$1.out = $a(((~~($1.inlen / 6)) * 5) + ($1.inlen % 6)); /*13388*/
			for (var _b = 0, _a = (~~($1.inlen / 6)) - 1; _b <= _a; _b += 1) { /*13411*/
				$1.k = _b; /*13390*/
				$k[$j++] = Infinity; /*13391*/
				$aload($geti($1.in, $1.k * 6, 3)); /*13391*/
				$1.msbs = $a(); /*13391*/
				$k[$j++] = Infinity; /*13395*/
				$aload($1.msbs); /*13393*/
				var _h = $k[--$j]; /*13393*/
				var _i = $k[--$j]; /*13393*/
				var _j = $k[--$j]; /*13393*/
				$k[$j++] = (_h + (_i * 256)) + (_j * 65536); /*13394*/
				for (var _k = 0, _l = 3; _k < _l; _k++) { /*13394*/
					var _m = $k[--$j]; /*13394*/
					$k[$j++] = _m % 900; /*13394*/
					$k[$j++] = ~~(_m / 900); /*13394*/
				} /*13394*/
				$1.mscs = $a(); /*13395*/
				$k[$j++] = Infinity; /*13396*/
				$aload($geti($1.in, ($1.k * 6) + 3, 3)); /*13396*/
				$1.lsbs = $a(); /*13396*/
				$k[$j++] = Infinity; /*13400*/
				$aload($1.lsbs); /*13398*/
				var _t = $k[--$j]; /*13398*/
				var _u = $k[--$j]; /*13398*/
				var _v = $k[--$j]; /*13398*/
				$k[$j++] = (_t + (_u * 256)) + (_v * 65536); /*13399*/
				for (var _w = 0, _x = 3; _w < _x; _w++) { /*13399*/
					var _y = $k[--$j]; /*13399*/
					$k[$j++] = _y % 900; /*13399*/
					$k[$j++] = ~~(_y / 900); /*13399*/
				} /*13399*/
				$1.lscs = $a(); /*13400*/
				var _11 = $get($1.lscs, 0); /*13401*/
				var _13 = $get($1.mscs, 0); /*13401*/
				$put($1.out, ($1.k * 5) + 4, (_11 + (_13 * 316)) % 900); /*13402*/
				var _17 = $get($1.lscs, 1); /*13403*/
				var _19 = $get($1.mscs, 0); /*13403*/
				var _1B = $get($1.mscs, 1); /*13403*/
				$put($1.out, ($1.k * 5) + 3, ((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) % 900); /*13404*/
				var _1F = $get($1.lscs, 2); /*13405*/
				var _1H = $get($1.mscs, 0); /*13405*/
				var _1J = $get($1.mscs, 1); /*13405*/
				var _1L = $get($1.mscs, 2); /*13405*/
				$put($1.out, ($1.k * 5) + 2, (((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) % 900); /*13406*/
				var _1P = $get($1.lscs, 3); /*13407*/
				var _1R = $get($1.mscs, 1); /*13407*/
				var _1T = $get($1.mscs, 2); /*13407*/
				$put($1.out, ($1.k * 5) + 1, ((((~~((((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) / 900)) + _1P) + (_1R * 20)) + (_1T * 641)) % 900); /*13408*/
				$put($1.out, $1.k * 5, ((~~(((((~~((((((~~(((((~~((_11 + (_13 * 316)) / 900)) + _17) + (_19 * 641)) + (_1B * 316)) / 900)) + _1F) + (_1H * 20)) + (_1J * 641)) + (_1L * 316)) / 900)) + _1P) + (_1R * 20)) + (_1T * 641)) / 900)) + ($get($1.mscs, 2) * 20)) % 900); /*13410*/
			} /*13410*/
			$1.rem = $1.inlen % 6; /*13412*/
			if ($1.rem != 0) { /*13417*/
				$k[$j++] = $1.out; /*13415*/
				$k[$j++] = $1.out.length - $1.rem; /*13415*/
				$k[$j++] = Infinity; /*13415*/
				$aload($geti($1.in, $1.inlen - $1.rem, $1.rem)); /*13415*/
				var _1k = $a(); /*13415*/
				var _1l = $k[--$j]; /*13416*/
				$puti($k[--$j], _1l, _1k); /*13416*/
			} /*13416*/
			$k[$j++] = $1.out; /*13418*/
		}; /*13419*/
		if ($eq($1.encoding, "byte") || $eq($1.encoding, "ccc")) { /*13426*/
			$1.datcws = $a((((~~($1.barlen / 6)) * 5) + ($1.barlen % 6)) + 1); /*13422*/
			var _1v = (($1.barlen % 6) == 0) ? 924 : 901; /*13423*/
			$put($1.datcws, 0, _1v); /*13423*/
			$k[$j++] = $1.datcws; /*13424*/
			$k[$j++] = 1; /*13424*/
			$k[$j++] = $1.barcode; /*13424*/
			$1.encb(); /*13424*/
			var _1y = $k[--$j]; /*13424*/
			var _1z = $k[--$j]; /*13424*/
			$puti($k[--$j], _1z, _1y); /*13424*/
			if ($eq($1.encoding, "ccc")) { /*13425*/
				$k[$j++] = Infinity; /*13425*/
				$k[$j++] = 920; /*13425*/
				$aload($1.datcws); /*13425*/
				$1.datcws = $a(); /*13425*/
			} /*13425*/
		} /*13425*/
		if ($eq($1.encoding, "auto")) { /*13790*/
			$1.T = 0; /*13431*/
			$1.N = 1; /*13431*/
			$1.B = 2; /*13431*/
			$1.A = 0; /*13432*/
			$1.L = 1; /*13432*/
			$1.M = 2; /*13432*/
			$1.P = 3; /*13432*/
			$1.tl = -1; /*13435*/
			$1.nl = -2; /*13435*/
			$1.bl = -3; /*13435*/
			$1.bl6 = -4; /*13435*/
			$1.bs = -5; /*13435*/
			$1.al = -6; /*13438*/
			$1.ll = -7; /*13438*/
			$1.ml = -8; /*13438*/
			$1.pl = -9; /*13438*/
			$1.as = -10; /*13438*/
			$1.ps = -11; /*13438*/
			$1.charmaps = $a([$a(["A", "a", "0", ";"]), $a(["B", "b", "1", "<"]), $a(["C", "c", "2", ">"]), $a(["D", "d", "3", "@"]), $a(["E", "e", "4", "["]), $a(["F", "f", "5", 92]), $a(["G", "g", "6", "]"]), $a(["H", "h", "7", "_"]), $a(["I", "i", "8", "`"]), $a(["J", "j", "9", "~"]), $a(["K", "k", "&", "!"]), $a(["L", "l", 13, 13]), $a(["M", "m", 9, 9]), $a(["N", "n", ",", ","]), $a(["O", "o", ":", ":"]), $a(["P", "p", "#", 10]), $a(["Q", "q", "-", "-"]), $a(["R", "r", ".", "."]), $a(["S", "s", "$", "$"]), $a(["T", "t", "/", "/"]), $a(["U", "u", "+", "\""]), $a(["V", "v", "%", "|"]), $a(["W", "w", "*", "*"]), $a(["X", "x", "=", 40]), $a(["Y", "y", "^", 41]), $a(["Z", "z", $1.pl, "?"]), $a([" ", " ", " ", "{"]), $a([$1.ll, $1.as, $1.ll, "}"]), $a([$1.ml, $1.ml, $1.al, "'"]), $a([$1.ps, $1.ps, $1.ps, $1.al])]); /*13473*/
			$1.charvals = $a([{}, {}, {}, {}]); /*13476*/
			$1.alltext = {}; /*13477*/
			for (var _2o = 0, _2n = $1.charmaps.length - 1; _2o <= _2n; _2o += 1) { /*13487*/
				$1.i = _2o; /*13479*/
				$1.encs = $get($1.charmaps, $1.i); /*13480*/
				for (var _2s = 0; _2s <= 3; _2s += 1) { /*13486*/
					$1.j = _2s; /*13482*/
					var _2v = $get($1.encs, $1.j); /*13483*/
					$k[$j++] = _2v; /*13483*/
					if ($eq($type(_2v), "stringtype")) { /*13483*/
						var _2y = $get($k[--$j], 0); /*13483*/
						$k[$j++] = _2y; /*13483*/
					} /*13483*/
					var _2z = $k[--$j]; /*13484*/
					$put($get($1.charvals, $1.j), _2z, $1.i); /*13484*/
					$put($1.alltext, _2z, -1); /*13485*/
				} /*13485*/
			} /*13485*/
			$1.e = 10000; /*13489*/
			$1.latlen = $a([$a([0, 1, 1, 2]), $a([2, 0, 1, 2]), $a([1, 1, 0, 1]), $a([1, 2, 2, 0])]); /*13497*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.ml, $1.al]), $a([]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.al]), $a([$1.ll]), $a([]), $a([$1.pl])]), $a([$a([$1.al]), $a([$1.al, $1.ll]), $a([$1.al, $1.ml]), $a([])])]); /*13505*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 1]), $a([1, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, $1.e])]); /*13513*/
			$k[$j++] = Infinity; /*13516*/
			for (var _44 = 0, _45 = $1.barlen; _44 < _45; _44++) { /*13516*/
				$k[$j++] = 0; /*13516*/
			} /*13516*/
			$k[$j++] = 0; /*13516*/
			$1.numdigits = $a(); /*13516*/
			$k[$j++] = Infinity; /*13517*/
			for (var _48 = 0, _49 = $1.barlen; _48 < _49; _48++) { /*13517*/
				$k[$j++] = 0; /*13517*/
			} /*13517*/
			$k[$j++] = 0; /*13517*/
			$1.numtext = $a(); /*13517*/
			$k[$j++] = Infinity; /*13518*/
			for (var _4C = 0, _4D = $1.barlen; _4C < _4D; _4C++) { /*13518*/
				$k[$j++] = 0; /*13518*/
			} /*13518*/
			$k[$j++] = 0; /*13518*/
			$1.numbytes = $a(); /*13518*/
			for (var _4G = $1.barlen - 1; _4G >= 0; _4G -= 1) { /*13530*/
				$1.i = _4G; /*13520*/
				var _4J = $get($1.barcode, $1.i); /*13521*/
				if ((_4J >= 48) && (_4J <= 57)) { /*13523*/
					$put($1.numdigits, $1.i, $get($1.numdigits, $1.i + 1) + 1); /*13522*/
				} /*13522*/
				var _4T = $get($1.alltext, $get($1.barcode, $1.i)) !== undefined; /*13524*/
				if (_4T && ($get($1.numdigits, $1.i) < 13)) { /*13526*/
					$put($1.numtext, $1.i, $get($1.numtext, $1.i + 1) + 1); /*13525*/
				} /*13525*/
				if (($get($1.numtext, $1.i) < 5) && ($get($1.numdigits, $1.i) < 13)) { /*13529*/
					$put($1.numbytes, $1.i, $get($1.numbytes, $1.i + 1) + 1); /*13528*/
				} /*13528*/
			} /*13528*/
			$1.numdigits = $geti($1.numdigits, 0, $1.barlen); /*13531*/
			$1.numtext = $geti($1.numtext, 0, $1.barlen); /*13532*/
			$1.numbytes = $geti($1.numbytes, 0, $1.barlen); /*13533*/
			$1.seq = $a([]); /*13535*/
			$1.seqlen = 0; /*13535*/
			$1.state = $1.T; /*13535*/
			$1.p = 0; /*13535*/
			for (;;) { /*13578*/
				if ($1.p == $1.barlen) { /*13536*/
					break; /*13536*/
				} /*13536*/
				$1.n = $get($1.numdigits, $1.p); /*13537*/
				if ($1.n >= 13) { /*13576*/
					$k[$j++] = Infinity; /*13543*/
					$aload($1.seq); /*13540*/
					$k[$j++] = $1.nl; /*13542*/
					$k[$j++] = Infinity; /*13542*/
					$aload($geti($1.barcode, $1.p, $1.n)); /*13542*/
					var _5A = $a(); /*13542*/
					$k[$j++] = _5A; /*13542*/
					$1.seq = $a(); /*13543*/
					$1.state = $1.N; /*13544*/
					$1.p = $1.p + $1.n; /*13545*/
					$1.seqlen = ($1.seqlen + 1) + $1.n; /*13546*/
				} else { /*13576*/
					$1.t = $get($1.numtext, $1.p); /*13548*/
					if ($1.t >= 5) { /*13576*/
						$k[$j++] = Infinity; /*13554*/
						$aload($1.seq); /*13551*/
						if ($1.state != $1.T) { /*13552*/
							$k[$j++] = $1.tl; /*13552*/
						} /*13552*/
						$k[$j++] = Infinity; /*13553*/
						$aload($geti($1.barcode, $1.p, $1.t)); /*13553*/
						var _5T = $a(); /*13553*/
						$k[$j++] = _5T; /*13553*/
						$1.seq = $a(); /*13554*/
						$1.state = $1.T; /*13555*/
						$1.p = $1.p + $1.t; /*13556*/
						$1.seqlen = ($1.seqlen + 1) + $1.t; /*13557*/
					} else { /*13576*/
						$1.b = $get($1.numbytes, $1.p); /*13559*/
						if (($1.b == 1) && ($1.state == $1.T)) { /*13576*/
							$k[$j++] = Infinity; /*13565*/
							$aload($1.seq); /*13562*/
							$k[$j++] = $1.bs; /*13564*/
							$k[$j++] = $a([$get($1.barcode, $1.p)]); /*13564*/
							$1.seq = $a(); /*13565*/
							$1.p = $1.p + $1.b; /*13566*/
							$1.seqlen = $1.seqlen + 2; /*13567*/
						} else { /*13576*/
							$k[$j++] = Infinity; /*13573*/
							$aload($1.seq); /*13570*/
							if (($1.b % 6) != 0) { /*13571*/
								$k[$j++] = $1.bl; /*13571*/
							} else { /*13571*/
								$k[$j++] = $1.bl6; /*13571*/
							} /*13571*/
							$k[$j++] = Infinity; /*13572*/
							$aload($geti($1.barcode, $1.p, $1.b)); /*13572*/
							var _5y = $a(); /*13572*/
							$k[$j++] = _5y; /*13572*/
							$1.seq = $a(); /*13573*/
							$1.state = $1.B; /*13574*/
							$1.p = $1.p + $1.b; /*13575*/
							$1.seqlen = ($1.seqlen + 1) + $1.b; /*13576*/
						} /*13576*/
					} /*13576*/
				} /*13576*/
			} /*13576*/
			$k[$j++] = "latchcws"; /*13581*/
			$k[$j++] = Infinity; /*13581*/
			$k[$j++] = $1.tl; /*13581*/
			$k[$j++] = 900; /*13581*/
			$k[$j++] = $1.bl; /*13581*/
			$k[$j++] = 901; /*13581*/
			$k[$j++] = $1.bl6; /*13581*/
			$k[$j++] = 924; /*13581*/
			$k[$j++] = $1.nl; /*13581*/
			$k[$j++] = 902; /*13581*/
			$k[$j++] = $1.bs; /*13581*/
			$k[$j++] = 913; /*13581*/
			var _6A = $d(); /*13581*/
			$1[$k[--$j]] = _6A; /*13582*/
			$1.enca = function() {
				var _6G = $get($get($1.charvals, $1.A), $k[--$j]); /*13585*/
				$k[$j++] = _6G; /*13585*/
			}; /*13585*/
			$1.encl = function() {
				var _6L = $get($get($1.charvals, $1.L), $k[--$j]); /*13586*/
				$k[$j++] = _6L; /*13586*/
			}; /*13586*/
			$1.encm = function() {
				var _6Q = $get($get($1.charvals, $1.M), $k[--$j]); /*13587*/
				$k[$j++] = _6Q; /*13587*/
			}; /*13587*/
			$1.encp = function() {
				var _6V = $get($get($1.charvals, $1.P), $k[--$j]); /*13588*/
				$k[$j++] = _6V; /*13588*/
			}; /*13588*/
			$1.textencfuncs = $a(["enca", "encl", "encm", "encp"]); /*13589*/
			$1.addtotext = function() {
				$put($1.text, $1.l, $k[--$j]); /*13592*/
				$1.l = $1.l + 1; /*13593*/
			}; /*13594*/
			$1.enct = function() {
				$1.in = $k[--$j]; /*13598*/
				$1.curlen = $a([$1.e, $1.e, $1.e, $1.e]); /*13600*/
				$put($1.curlen, $1.submode, 0); /*13601*/
				$1.curseq = $a([$a([]), $a([]), $a([]), $a([])]); /*13602*/
				$forall($1.in, function() { /*13672*/
					$1.char = $k[--$j]; /*13607*/
					for (;;) { /*13628*/
						$1.imp = false; /*13611*/
						var _6u = $a([$1.A, $1.L, $1.M, $1.P]); /*13612*/
						for (var _6v = 0, _6w = _6u.length; _6v < _6w; _6v++) { /*13626*/
							$1.x = $get(_6u, _6v); /*13613*/
							var _72 = $a([$1.A, $1.L, $1.M, $1.P]); /*13614*/
							for (var _73 = 0, _74 = _72.length; _73 < _74; _73++) { /*13625*/
								$1.y = $get(_72, _73); /*13615*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*13616*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*13624*/
									$put($1.curlen, $1.y, $1.cost); /*13618*/
									$k[$j++] = $1.curseq; /*13621*/
									$k[$j++] = $1.y; /*13621*/
									$k[$j++] = Infinity; /*13621*/
									$aload($get($1.curseq, $1.x)); /*13620*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*13621*/
									var _7V = $a(); /*13621*/
									var _7W = $k[--$j]; /*13622*/
									$put($k[--$j], _7W, _7V); /*13622*/
									$1.imp = true; /*13623*/
								} /*13623*/
							} /*13623*/
						} /*13623*/
						if (!$1.imp) { /*13627*/
							break; /*13627*/
						} /*13627*/
					} /*13627*/
					$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e]); /*13631*/
					$1.nxtseq = $a(4); /*13632*/
					var _7j = $a([$1.A, $1.L, $1.M, $1.P]); /*13634*/
					for (var _7k = 0, _7l = _7j.length; _7k < _7l; _7k++) { /*13667*/
						$1.x = $get(_7j, _7k); /*13635*/
						for (;;) { /*13665*/
							var _7r = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*13639*/
							if (!_7r) { /*13639*/
								break; /*13639*/
							} /*13639*/
							$1.cost = $get($1.curlen, $1.x) + 1; /*13642*/
							if ($1.cost < $get($1.nxtlen, $1.x)) { /*13646*/
								$put($1.nxtlen, $1.x, $1.cost); /*13644*/
								$k[$j++] = $1.nxtseq; /*13645*/
								$k[$j++] = $1.x; /*13645*/
								$k[$j++] = Infinity; /*13645*/
								$aload($get($1.curseq, $1.x)); /*13645*/
								$k[$j++] = $1.char; /*13645*/
								var _88 = $a(); /*13645*/
								var _89 = $k[--$j]; /*13645*/
								$put($k[--$j], _89, _88); /*13645*/
							} /*13645*/
							var _8F = $a([$1.A, $1.L, $1.M, $1.P]); /*13649*/
							for (var _8G = 0, _8H = _8F.length; _8G < _8H; _8G++) { /*13662*/
								$1.y = $get(_8F, _8G); /*13650*/
								if ($ne($1.x, $1.y)) { /*13661*/
									$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + 1; /*13652*/
									if ($1.cost < $get($1.nxtlen, $1.y)) { /*13660*/
										$put($1.nxtlen, $1.y, $1.cost); /*13654*/
										$k[$j++] = $1.nxtseq; /*13658*/
										$k[$j++] = $1.y; /*13658*/
										$k[$j++] = Infinity; /*13658*/
										$aload($get($1.curseq, $1.y)); /*13656*/
										if ($1.x == $1.A) { /*13657*/
											$k[$j++] = $1.as; /*13657*/
										} else { /*13657*/
											$k[$j++] = $1.ps; /*13657*/
										} /*13657*/
										$k[$j++] = $1.char; /*13658*/
										var _8k = $a(); /*13658*/
										var _8l = $k[--$j]; /*13659*/
										$put($k[--$j], _8l, _8k); /*13659*/
									} /*13659*/
								} /*13659*/
							} /*13659*/
							break; /*13664*/
						} /*13664*/
					} /*13664*/
					$1.curlen = $1.nxtlen; /*13669*/
					$1.curseq = $1.nxtseq; /*13670*/
				}); /*13670*/
				$1.minseq = $1.e; /*13675*/
				var _8u = $a([$1.A, $1.L, $1.M, $1.P]); /*13676*/
				for (var _8v = 0, _8w = _8u.length; _8v < _8w; _8v++) { /*13682*/
					$1.k = $get(_8u, _8v); /*13677*/
					if ($get($1.curlen, $1.k) < $1.minseq) { /*13681*/
						$1.minseq = $get($1.curlen, $1.k); /*13679*/
						$1.txtseq = $get($1.curseq, $1.k); /*13680*/
					} /*13680*/
				} /*13680*/
				$1.text = $a($1.minseq); /*13685*/
				$1.k = 0; /*13686*/
				$1.l = 0; /*13686*/
				for (;;) { /*13706*/
					if ($1.k >= $1.txtseq.length) { /*13687*/
						break; /*13687*/
					} /*13687*/
					$1.char = $get($1.txtseq, $1.k); /*13689*/
					$k[$j++] = $1.char; /*13692*/
					$1[$get($1.textencfuncs, $1.submode)](); /*13692*/
					$1.addtotext(); /*13692*/
					$1.k = $1.k + 1; /*13693*/
					if (($1.char == $1.as) || ($1.char == $1.ps)) { /*13699*/
						$k[$j++] = $get($1.txtseq, $1.k); /*13697*/
						if ($1.char == $1.as) { /*13697*/
							$1.enca(); /*13697*/
						} else { /*13697*/
							$1.encp(); /*13697*/
						} /*13697*/
						$1.addtotext(); /*13697*/
						$1.k = $1.k + 1; /*13698*/
					} /*13698*/
					if ($1.char == $1.al) { /*13702*/
						$1.submode = $1.A; /*13702*/
					} /*13702*/
					if ($1.char == $1.ll) { /*13703*/
						$1.submode = $1.L; /*13703*/
					} /*13703*/
					if ($1.char == $1.ml) { /*13704*/
						$1.submode = $1.M; /*13704*/
					} /*13704*/
					if ($1.char == $1.pl) { /*13705*/
						$1.submode = $1.P; /*13705*/
					} /*13705*/
				} /*13705*/
				if (($1.text.length % 2) == 1) { /*13716*/
					if ($1.submode == $1.P) { /*13713*/
						$k[$j++] = "pad"; /*13710*/
						$k[$j++] = $1.al; /*13710*/
						$1.encp(); /*13710*/
						var _9l = $k[--$j]; /*13710*/
						$1[$k[--$j]] = _9l; /*13710*/
						$1.submode = $1.A; /*13711*/
					} else { /*13713*/
						$k[$j++] = "pad"; /*13713*/
						$k[$j++] = $1.ps; /*13713*/
						$1[$get($1.textencfuncs, $1.submode)](); /*13713*/
						var _9t = $k[--$j]; /*13713*/
						$1[$k[--$j]] = _9t; /*13713*/
					} /*13713*/
					$k[$j++] = Infinity; /*13715*/
					$aload($1.text); /*13715*/
					$k[$j++] = $1.pad; /*13715*/
					$1.text = $a(); /*13715*/
				} /*13715*/
				$1.out = $a(~~($1.text.length / 2)); /*13718*/
				for (var _A2 = 0, _A1 = $1.out.length - 1; _A2 <= _A1; _A2 += 1) { /*13722*/
					$1.k = _A2; /*13720*/
					$put($1.out, $1.k, ($get($1.text, $1.k * 2) * 30) + $get($1.text, ($1.k * 2) + 1)); /*13721*/
				} /*13721*/
				$k[$j++] = $1.out; /*13724*/
			}; /*13726*/
			$1.encn = function() {
				$1.in = $k[--$j]; /*13729*/
				$1.out = $a([]); /*13730*/
				for (var _AG = 0, _AF = $1.in.length - 1; _AG <= _AF; _AG += 44) { /*13758*/
					$1.k = _AG; /*13732*/
					$k[$j++] = Infinity; /*13736*/
					var _AL = $1.in.length - $1.k; /*13734*/
					$k[$j++] = 1; /*13734*/
					$k[$j++] = $1.in; /*13734*/
					$k[$j++] = $1.k; /*13734*/
					$k[$j++] = _AL; /*13734*/
					if (_AL > 44) { /*13734*/
						$j--; /*13734*/
						$k[$j++] = 44; /*13734*/
					} /*13734*/
					var _AM = $k[--$j]; /*13734*/
					var _AN = $k[--$j]; /*13734*/
					$forall($geti($k[--$j], _AN, _AM), function() { /*13735*/
						var _AQ = $k[--$j]; /*13735*/
						$k[$j++] = _AQ - 48; /*13735*/
					}); /*13735*/
					$1.gmod = $a(); /*13736*/
					$1.cwn = $a([]); /*13737*/
					for (;;) { /*13756*/
						$1.dv = 900; /*13738*/
						$1.gmul = $a([]); /*13739*/
						$1.val = 0; /*13739*/
						for (;;) { /*13751*/
							if ($1.gmod.length == 0) { /*13740*/
								break; /*13740*/
							} /*13740*/
							$1.val = ($1.val * 10) + $get($1.gmod, 0); /*13741*/
							$1.gmod = $geti($1.gmod, 1, $1.gmod.length - 1); /*13742*/
							if ($1.val < $1.dv) { /*13748*/
								if ($1.gmul.length != 0) { /*13746*/
									$k[$j++] = Infinity; /*13745*/
									$aload($1.gmul); /*13745*/
									$k[$j++] = 0; /*13745*/
									$1.gmul = $a(); /*13745*/
								} /*13745*/
							} else { /*13748*/
								$k[$j++] = Infinity; /*13748*/
								$aload($1.gmul); /*13748*/
								$k[$j++] = ~~($1.val / $1.dv); /*13748*/
								$1.gmul = $a(); /*13748*/
							} /*13748*/
							$1.val = $1.val % $1.dv; /*13750*/
						} /*13750*/
						$1.dv = $1.val; /*13752*/
						$k[$j++] = Infinity; /*13753*/
						$k[$j++] = $1.dv; /*13753*/
						$aload($1.cwn); /*13753*/
						$1.cwn = $a(); /*13753*/
						$1.gmod = $1.gmul; /*13754*/
						if ($1.gmul.length == 0) { /*13755*/
							break; /*13755*/
						} /*13755*/
					} /*13755*/
					$k[$j++] = Infinity; /*13757*/
					$aload($1.out); /*13757*/
					$aload($1.cwn); /*13757*/
					$1.out = $a(); /*13757*/
				} /*13757*/
				$k[$j++] = $1.out; /*13759*/
			}; /*13760*/
			$1.encfuncs = $a(["enct", "encn", "encb"]); /*13762*/
			$1.addtocws = function() {
				var _Ax = $k[--$j]; /*13765*/
				$puti($1.datcws, $1.j, _Ax); /*13765*/
				$1.j = _Ax.length + $1.j; /*13766*/
			}; /*13767*/
			$1.state = $1.T; /*13770*/
			$1.submode = $1.A; /*13770*/
			$1.datcws = $a($1.seqlen); /*13771*/
			$1.i = 0; /*13772*/
			$1.j = 0; /*13772*/
			for (;;) { /*13788*/
				if ($1.i >= $1.seq.length) { /*13773*/
					break; /*13773*/
				} /*13773*/
				$1.chars = $get($1.seq, $1.i); /*13774*/
				if ($eq($type($1.chars), "arraytype")) { /*13784*/
					$k[$j++] = $1.chars; /*13776*/
					$1[$get($1.encfuncs, $1.state)](); /*13776*/
					$1.addtocws(); /*13776*/
				} else { /*13784*/
					$k[$j++] = $a([$get($1.latchcws, $1.chars)]); /*13778*/
					$1.addtocws(); /*13778*/
					if ($1.chars == $1.tl) { /*13779*/
						$1.state = $1.T; /*13779*/
						$1.submode = $1.A; /*13779*/
					} /*13779*/
					if ($1.chars == $1.nl) { /*13780*/
						$1.state = $1.N; /*13780*/
					} /*13780*/
					if (($1.chars == $1.bl) || ($1.chars == $1.bl6)) { /*13781*/
						$1.state = $1.B; /*13781*/
					} /*13781*/
					if ($1.chars == $1.bs) { /*13785*/
						$1.i = $1.i + 1; /*13783*/
						$k[$j++] = $get($1.seq, $1.i); /*13784*/
						$1.encb(); /*13784*/
						$1.addtocws(); /*13784*/
					} /*13784*/
				} /*13784*/
				$1.i = $1.i + 1; /*13787*/
			} /*13787*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*13789*/
		} /*13789*/
		$1.m = $1.datcws.length; /*13793*/
		if ($1.eclevel == -1) { /*13799*/
			if ($1.m <= 40) { /*13795*/
				$1.eclevel = 2; /*13795*/
			} /*13795*/
			if (($1.m >= 41) && ($1.m <= 160)) { /*13796*/
				$1.eclevel = 3; /*13796*/
			} /*13796*/
			if (($1.m >= 161) && ($1.m <= 320)) { /*13797*/
				$1.eclevel = 4; /*13797*/
			} /*13797*/
			if ($1.m >= 321) { /*13798*/
				$1.eclevel = 5; /*13798*/
			} /*13798*/
		} /*13798*/
		$1.maxeclevel = (~~((Math.log((928 - 1) - $1.m)) / Math.log(2))) - 1; /*13802*/
		if ($1.eclevel > $1.maxeclevel) { /*13803*/
			$1.eclevel = $1.maxeclevel; /*13803*/
		} /*13803*/
		$1.k = ~~Math.pow(2, $1.eclevel + 1); /*13804*/
		if ($1.columns == 0) { /*13807*/
			$1.columns = ~~(Math.round(Math.sqrt(($1.m + $1.k) / 3))); /*13807*/
		} /*13807*/
		if (($1.columns >= 1) && ($1.columns <= 30)) { /*13808*/
			$1.c = $1.columns; /*13808*/
		} /*13808*/
		$1.r = ~~(Math.ceil((($1.m + $1.k) + 1) / $1.columns)); /*13811*/
		if (($1.r < $1.rows) && ($1.rows <= 90)) { /*13812*/
			$1.r = $1.rows; /*13812*/
		} /*13812*/
		if ($1.r < 3) { /*13813*/
			$1.r = 3; /*13813*/
		} /*13813*/
		var _C8 = $1.c; /*13816*/
		var _C9 = $1.r; /*13816*/
		var _CA = $1.m; /*13816*/
		var _CB = 8; /*13816*/
		var _CC = (~~((Math.log(((_C8 * _C9) - 1) - _CA)) / Math.log(2))) - 1; /*13816*/
		if (((~~((Math.log(((_C8 * _C9) - 1) - _CA)) / Math.log(2))) - 1) > 8) { /*13816*/
			var _ = _CB; /*13816*/
			_CB = _CC; /*13816*/
			_CC = _; /*13816*/
		} /*13816*/
		$1.maxeclevel = _CC; /*13816*/
		if ($1.maxeclevel > $1.eclevel) { /*13820*/
			$1.eclevel = $1.maxeclevel; /*13818*/
			$1.k = ~~Math.pow(2, $1.eclevel + 1); /*13819*/
		} /*13819*/
		$1.n = ($1.c * $1.r) - $1.k; /*13823*/
		$1.cws = $a(($1.c * $1.r) + 1); /*13824*/
		$put($1.cws, 0, $1.n); /*13825*/
		$puti($1.cws, 1, $1.datcws); /*13826*/
		$k[$j++] = $1.cws; /*13827*/
		$k[$j++] = $1.m + 1; /*13827*/
		$k[$j++] = Infinity; /*13827*/
		for (var _CV = 0, _CW = ($1.n - $1.m) - 1; _CV < _CW; _CV++) { /*13827*/
			$k[$j++] = 900; /*13827*/
		} /*13827*/
		var _CX = $a(); /*13827*/
		var _CY = $k[--$j]; /*13827*/
		$puti($k[--$j], _CY, _CX); /*13827*/
		$k[$j++] = $1.cws; /*13828*/
		$k[$j++] = $1.n; /*13828*/
		$k[$j++] = Infinity; /*13828*/
		for (var _Cd = 0, _Ce = $1.k; _Cd < _Ce; _Cd++) { /*13828*/
			$k[$j++] = 0; /*13828*/
		} /*13828*/
		$k[$j++] = 0; /*13828*/
		var _Cf = $a(); /*13828*/
		var _Cg = $k[--$j]; /*13828*/
		$puti($k[--$j], _Cg, _Cf); /*13828*/
		$k[$j++] = Infinity; /*13831*/
		$k[$j++] = 1; /*13831*/
		for (var _Ci = 0, _Cj = 928; _Ci < _Cj; _Ci++) { /*13831*/
			var _Ck = $k[--$j]; /*13831*/
			$k[$j++] = _Ck; /*13831*/
			$k[$j++] = (_Ck * 3) % 929; /*13831*/
		} /*13831*/
		$1.rsalog = $a(); /*13831*/
		$1.rslog = $a(929); /*13832*/
		for (var _Cn = 1; _Cn <= 928; _Cn += 1) { /*13833*/
			$put($1.rslog, $get($1.rsalog, _Cn), _Cn); /*13833*/
		} /*13833*/
		$1.rsprod = function() {
			var _Cr = $k[--$j]; /*13837*/
			var _Cs = $k[--$j]; /*13837*/
			$k[$j++] = _Cs; /*13841*/
			$k[$j++] = _Cr; /*13841*/
			if ((_Cr != 0) && (_Cs != 0)) { /*13840*/
				var _Cv = $get($1.rslog, $k[--$j]); /*13838*/
				var _D0 = $get($1.rsalog, (_Cv + $get($1.rslog, $k[--$j])) % 928); /*13838*/
				$k[$j++] = _D0; /*13838*/
			} else { /*13840*/
				$j -= 2; /*13840*/
				$k[$j++] = 0; /*13840*/
			} /*13840*/
		}; /*13842*/
		$k[$j++] = Infinity; /*13845*/
		$k[$j++] = 1; /*13845*/
		for (var _D2 = 0, _D3 = $1.k; _D2 < _D3; _D2++) { /*13845*/
			$k[$j++] = 0; /*13845*/
		} /*13845*/
		$1.coeffs = $a(); /*13845*/
		for (var _D7 = 1, _D6 = $1.k; _D7 <= _D6; _D7 += 1) { /*13854*/
			$1.i = _D7; /*13847*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*13848*/
			for (var _DE = $1.i - 1; _DE >= 1; _DE -= 1) { /*13852*/
				$1.j = _DE; /*13850*/
				$k[$j++] = $1.coeffs; /*13851*/
				$k[$j++] = $1.j; /*13851*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*13851*/
				$k[$j++] = $get($1.coeffs, $1.j); /*13851*/
				$k[$j++] = $get($1.rsalog, $1.i); /*13851*/
				$1.rsprod(); /*13851*/
				var _DQ = $k[--$j]; /*13851*/
				var _DR = $k[--$j]; /*13851*/
				var _DS = $k[--$j]; /*13851*/
				$put($k[--$j], _DS, (_DR + _DQ) % 929); /*13851*/
			} /*13851*/
			$k[$j++] = $1.coeffs; /*13853*/
			$k[$j++] = 0; /*13853*/
			$k[$j++] = $get($1.coeffs, 0); /*13853*/
			$k[$j++] = $get($1.rsalog, $1.i); /*13853*/
			$1.rsprod(); /*13853*/
			var _Da = $k[--$j]; /*13853*/
			var _Db = $k[--$j]; /*13853*/
			$put($k[--$j], _Db, _Da); /*13853*/
		} /*13853*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*13855*/
		for (var _Dh = $1.coeffs.length - 1; _Dh >= 0; _Dh -= 2) { /*13856*/
			var _Di = $1.coeffs; /*13856*/
			$put(_Di, _Dh, 929 - $get(_Di, _Dh)); /*13856*/
		} /*13856*/
		for (var _Dm = 0, _Dl = $1.n - 1; _Dm <= _Dl; _Dm += 1) { /*13865*/
			$1.t = ($get($1.cws, _Dm) + $get($1.cws, $1.n)) % 929; /*13860*/
			for (var _Du = 0, _Dt = $1.k - 1; _Du <= _Dt; _Du += 1) { /*13864*/
				$1.j = _Du; /*13862*/
				$put($1.cws, $1.n + $1.j, ($get($1.cws, ($1.n + $1.j) + 1) + (929 - (($1.t * $get($1.coeffs, ($1.k - $1.j) - 1)) % 929))) % 929); /*13863*/
			} /*13863*/
		} /*13863*/
		for (var _EB = $1.n, _EA = $1.n + $1.k; _EB <= _EA; _EB += 1) { /*13866*/
			$put($1.cws, _EB, (929 - $get($1.cws, _EB)) % 929); /*13866*/
		} /*13866*/
		$1.cws = $geti($1.cws, 0, $1.cws.length - 1); /*13869*/
		$1.clusters = $a([$a([120256, 125680, 128380, 120032, 125560, 128318, 108736, 119920, 108640, 86080, 108592, 86048, 110016, 120560, 125820, 109792, 120440, 125758, 88256, 109680, 88160, 89536, 110320, 120700, 89312, 110200, 120638, 89200, 110140, 89840, 110460, 89720, 110398, 89980, 128506, 119520, 125304, 128190, 107712, 119408, 125244, 107616, 119352, 84032, 107568, 119324, 84000, 107544, 83984, 108256, 119672, 125374, 85184, 108144, 119612, 85088, 108088, 119582, 85040, 108060, 85728, 108408, 119742, 85616, 108348, 85560, 108318, 85880, 108478, 85820, 85790, 107200, 119152, 125116, 107104, 119096, 125086, 83008, 107056, 119068, 82976, 107032, 82960, 82952, 83648, 107376, 119228, 83552, 107320, 119198, 83504, 107292, 83480, 83468, 83824, 107452, 83768, 107422, 83740, 83900, 106848, 118968, 125022, 82496, 106800, 118940, 82464, 106776, 118926, 82448, 106764, 82440, 106758, 82784, 106936, 119006, 82736, 106908, 82712, 106894, 82700, 82694, 106974, 82830, 82240, 106672, 118876, 82208, 106648, 118862, 82192, 106636, 82184, 106630, 82180, 82352, 82328, 82316, 82080, 118830, 106572, 106566, 82050, 117472, 124280, 127678, 103616, 117360, 124220, 103520, 117304, 124190, 75840, 103472, 75808, 104160, 117624, 124350, 76992, 104048, 117564, 76896, 103992, 76848, 76824, 77536, 104312, 117694, 77424, 104252, 77368, 77340, 77688, 104382, 77628, 77758, 121536, 126320, 128700, 121440, 126264, 128670, 111680, 121392, 126236, 111648, 121368, 126222, 111632, 121356, 103104, 117104, 124092, 112320, 103008, 117048, 124062, 112224, 121656, 126366, 93248, 74784, 102936, 117006, 93216, 112152, 93200, 75456, 103280, 117180, 93888, 75360, 103224, 117150, 93792, 112440, 121758, 93744, 75288, 93720, 75632, 103356, 94064, 75576, 103326, 94008, 112542, 93980, 75708, 94140, 75678, 94110, 121184, 126136, 128606, 111168, 121136, 126108, 111136, 121112, 126094, 111120, 121100, 111112, 111108, 102752, 116920, 123998, 111456, 102704, 116892, 91712, 74272, 121244, 116878, 91680, 74256, 102668, 91664, 111372, 102662, 74244, 74592, 102840, 116958, 92000, 74544, 102812, 91952, 111516, 102798, 91928, 74508, 74502, 74680, 102878, 92088, 74652, 92060, 74638, 92046, 92126, 110912, 121008, 126044, 110880, 120984, 126030, 110864, 120972, 110856, 120966, 110852, 110850, 74048, 102576, 116828, 90944, 74016, 102552, 116814, 90912, 111000, 121038, 90896, 73992, 102534, 90888, 110982, 90884, 74160, 102620, 91056, 74136, 102606, 91032, 111054, 91020, 74118, 91014, 91100, 91086, 110752, 120920, 125998, 110736, 120908, 110728, 120902, 110724, 110722, 73888, 102488, 116782, 90528, 73872, 102476, 90512, 110796, 102470, 90504, 73860, 90500, 73858, 73944, 90584, 90572, 90566, 120876, 120870, 110658, 102444, 73800, 90312, 90308, 90306, 101056, 116080, 123580, 100960, 116024, 70720, 100912, 115996, 70688, 100888, 70672, 70664, 71360, 101232, 116156, 71264, 101176, 116126, 71216, 101148, 71192, 71180, 71536, 101308, 71480, 101278, 71452, 71612, 71582, 118112, 124600, 127838, 105024, 118064, 124572, 104992, 118040, 124558, 104976, 118028, 104968, 118022, 100704, 115896, 123486, 105312, 100656, 115868, 79424, 70176, 118172, 115854, 79392, 105240, 100620, 79376, 70152, 79368, 70496, 100792, 115934, 79712, 70448, 118238, 79664, 105372, 100750, 79640, 70412, 79628, 70584, 100830, 79800, 70556, 79772, 70542, 70622, 79838, 122176, 126640, 128860, 122144, 126616, 128846, 122128, 126604, 122120, 126598, 122116, 104768, 117936, 124508, 113472, 104736, 126684, 124494, 113440, 122264, 126670, 113424, 104712, 117894, 113416, 122246, 104706, 69952, 100528, 115804, 78656, 69920, 100504, 115790, 96064, 78624, 104856, 117966, 96032, 113560, 122318, 100486, 96016, 78600, 104838, 96008, 69890, 70064, 100572, 78768, 70040, 100558, 96176, 78744, 104910, 96152, 113614, 70022, 78726, 70108, 78812, 70094, 96220, 78798, 122016, 126552, 128814, 122000, 126540, 121992, 126534, 121988, 121986, 104608, 117848, 124462, 113056, 104592, 126574, 113040, 122060, 117830, 113032, 104580, 113028, 104578, 113026, 69792, 100440, 115758, 78240, 69776, 100428, 95136, 78224, 104652, 100422, 95120, 113100, 69764, 95112, 78212, 69762, 78210, 69848, 100462, 78296, 69836, 95192, 78284, 69830, 95180, 78278, 69870, 95214, 121936, 126508, 121928, 126502, 121924, 121922, 104528, 117804, 112848, 104520, 117798, 112840, 121958, 112836, 104514, 112834, 69712, 100396, 78032, 69704, 100390, 94672, 78024, 104550, 94664, 112870, 69698, 94660, 78018, 94658, 78060, 94700, 94694, 126486, 121890, 117782, 104484, 104482, 69672, 77928, 94440, 69666, 77922, 99680, 68160, 99632, 68128, 99608, 115342, 68112, 99596, 68104, 99590, 68448, 99768, 115422, 68400, 99740, 68376, 99726, 68364, 68358, 68536, 99806, 68508, 68494, 68574, 101696, 116400, 123740, 101664, 116376, 101648, 116364, 101640, 116358, 101636, 67904, 99504, 115292, 72512, 67872, 116444, 115278, 72480, 101784, 116430, 72464, 67848, 99462, 72456, 101766, 67842, 68016, 99548, 72624, 67992, 99534, 72600, 101838, 72588, 67974, 68060, 72668, 68046, 72654, 118432, 124760, 127918, 118416, 124748, 118408, 124742, 118404, 118402, 101536, 116312, 105888, 101520, 116300, 105872, 118476, 116294, 105864, 101508, 105860, 101506, 105858, 67744, 99416, 72096, 67728, 116334, 80800, 72080, 101580, 99398, 80784, 105932, 67716, 80776, 72068, 67714, 72066, 67800, 99438, 72152, 67788, 80856, 72140, 67782, 80844, 72134, 67822, 72174, 80878, 126800, 128940, 126792, 128934, 126788, 126786, 118352, 124716, 122576, 126828, 124710, 122568, 126822, 122564, 118338, 122562, 101456, 116268, 105680, 101448, 116262, 114128, 105672, 118374, 114120, 122598, 101442, 114116, 105666, 114114, 67664, 99372, 71888, 67656, 99366, 80336, 71880, 101478, 97232, 80328, 105702, 67650, 97224, 114150, 71874, 97220, 67692, 71916, 67686, 80364, 71910, 97260, 80358, 97254, 126760, 128918, 126756, 126754, 118312, 124694, 122472, 126774, 122468, 118306, 122466, 101416, 116246, 105576, 101412, 113896, 105572, 101410, 113892, 105570, 113890, 67624, 99350, 71784, 101430, 80104, 71780, 67618, 96744, 80100, 71778, 96740, 80098, 96738, 71798, 96758, 126738, 122420, 122418, 105524, 113780, 113778, 71732, 79988, 96500, 96498, 66880, 66848, 98968, 66832, 66824, 66820, 66992, 66968, 66956, 66950, 67036, 67022, 100000, 99984, 115532, 99976, 115526, 99972, 99970, 66720, 98904, 69024, 100056, 98892, 69008, 100044, 69000, 100038, 68996, 66690, 68994, 66776, 98926, 69080, 100078, 69068, 66758, 69062, 66798, 69102, 116560, 116552, 116548, 116546, 99920, 102096, 116588, 115494, 102088, 116582, 102084, 99906, 102082, 66640, 68816, 66632, 98854, 73168, 68808, 66628, 73160, 68804, 66626, 73156, 68802, 66668, 68844, 66662, 73196, 68838, 73190, 124840, 124836, 124834, 116520, 118632, 124854, 118628, 116514, 118626, 99880, 115478, 101992, 116534, 106216, 101988, 99874, 106212, 101986, 106210, 66600, 98838, 68712, 99894, 72936, 68708, 66594, 81384, 72932, 68706, 81380, 72930, 66614, 68726, 72950, 81398, 128980, 128978, 124820, 126900, 124818, 126898, 116500, 118580, 116498, 122740, 118578, 122738, 99860, 101940, 99858, 106100, 101938, 114420]), $a([128352, 129720, 125504, 128304, 129692, 125472, 128280, 129678, 125456, 128268, 125448, 128262, 125444, 125792, 128440, 129758, 120384, 125744, 128412, 120352, 125720, 128398, 120336, 125708, 120328, 125702, 120324, 120672, 125880, 128478, 110144, 120624, 125852, 110112, 120600, 125838, 110096, 120588, 110088, 120582, 110084, 110432, 120760, 125918, 89664, 110384, 120732, 89632, 110360, 120718, 89616, 110348, 89608, 110342, 89952, 110520, 120798, 89904, 110492, 89880, 110478, 89868, 90040, 110558, 90012, 89998, 125248, 128176, 129628, 125216, 128152, 129614, 125200, 128140, 125192, 128134, 125188, 125186, 119616, 125360, 128220, 119584, 125336, 128206, 119568, 125324, 119560, 125318, 119556, 119554, 108352, 119728, 125404, 108320, 119704, 125390, 108304, 119692, 108296, 119686, 108292, 108290, 85824, 108464, 119772, 85792, 108440, 119758, 85776, 108428, 85768, 108422, 85764, 85936, 108508, 85912, 108494, 85900, 85894, 85980, 85966, 125088, 128088, 129582, 125072, 128076, 125064, 128070, 125060, 125058, 119200, 125144, 128110, 119184, 125132, 119176, 125126, 119172, 119170, 107424, 119256, 125166, 107408, 119244, 107400, 119238, 107396, 107394, 83872, 107480, 119278, 83856, 107468, 83848, 107462, 83844, 83842, 83928, 107502, 83916, 83910, 83950, 125008, 128044, 125000, 128038, 124996, 124994, 118992, 125036, 118984, 125030, 118980, 118978, 106960, 119020, 106952, 119014, 106948, 106946, 82896, 106988, 82888, 106982, 82884, 82882, 82924, 82918, 124968, 128022, 124964, 124962, 118888, 124982, 118884, 118882, 106728, 118902, 106724, 106722, 82408, 106742, 82404, 82402, 124948, 124946, 118836, 118834, 106612, 106610, 124224, 127664, 129372, 124192, 127640, 129358, 124176, 127628, 124168, 127622, 124164, 124162, 117568, 124336, 127708, 117536, 124312, 127694, 117520, 124300, 117512, 124294, 117508, 117506, 104256, 117680, 124380, 104224, 117656, 124366, 104208, 117644, 104200, 117638, 104196, 104194, 77632, 104368, 117724, 77600, 104344, 117710, 77584, 104332, 77576, 104326, 77572, 77744, 104412, 77720, 104398, 77708, 77702, 77788, 77774, 128672, 129880, 93168, 128656, 129868, 92664, 128648, 129862, 92412, 128644, 128642, 124064, 127576, 129326, 126368, 124048, 129902, 126352, 128716, 127558, 126344, 124036, 126340, 124034, 126338, 117152, 124120, 127598, 121760, 117136, 124108, 121744, 126412, 124102, 121736, 117124, 121732, 117122, 121730, 103328, 117208, 124142, 112544, 103312, 117196, 112528, 121804, 117190, 112520, 103300, 112516, 103298, 112514, 75680, 103384, 117230, 94112, 75664, 103372, 94096, 112588, 103366, 94088, 75652, 94084, 75650, 75736, 103406, 94168, 75724, 94156, 75718, 94150, 75758, 128592, 129836, 91640, 128584, 129830, 91388, 128580, 91262, 128578, 123984, 127532, 126160, 123976, 127526, 126152, 128614, 126148, 123970, 126146, 116944, 124012, 121296, 116936, 124006, 121288, 126182, 121284, 116930, 121282, 102864, 116972, 111568, 102856, 116966, 111560, 121318, 111556, 102850, 111554, 74704, 102892, 92112, 74696, 102886, 92104, 111590, 92100, 74690, 92098, 74732, 92140, 74726, 92134, 128552, 129814, 90876, 128548, 90750, 128546, 123944, 127510, 126056, 128566, 126052, 123938, 126050, 116840, 123958, 121064, 116836, 121060, 116834, 121058, 102632, 116854, 111080, 121078, 111076, 102626, 111074, 74216, 102646, 91112, 74212, 91108, 74210, 91106, 74230, 91126, 128532, 90494, 128530, 123924, 126004, 123922, 126002, 116788, 120948, 116786, 120946, 102516, 110836, 102514, 110834, 73972, 90612, 73970, 90610, 128522, 123914, 125978, 116762, 120890, 102458, 110714, 123552, 127320, 129198, 123536, 127308, 123528, 127302, 123524, 123522, 116128, 123608, 127342, 116112, 123596, 116104, 123590, 116100, 116098, 101280, 116184, 123630, 101264, 116172, 101256, 116166, 101252, 101250, 71584, 101336, 116206, 71568, 101324, 71560, 101318, 71556, 71554, 71640, 101358, 71628, 71622, 71662, 127824, 129452, 79352, 127816, 129446, 79100, 127812, 78974, 127810, 123472, 127276, 124624, 123464, 127270, 124616, 127846, 124612, 123458, 124610, 115920, 123500, 118224, 115912, 123494, 118216, 124646, 118212, 115906, 118210, 100816, 115948, 105424, 100808, 115942, 105416, 118246, 105412, 100802, 105410, 70608, 100844, 79824, 70600, 100838, 79816, 105446, 79812, 70594, 79810, 70636, 79852, 70630, 79846, 129960, 95728, 113404, 129956, 95480, 113278, 129954, 95356, 95294, 127784, 129430, 78588, 128872, 129974, 95996, 78462, 128868, 127778, 95870, 128866, 123432, 127254, 124520, 123428, 126696, 128886, 123426, 126692, 124514, 126690, 115816, 123446, 117992, 115812, 122344, 117988, 115810, 122340, 117986, 122338, 100584, 115830, 104936, 100580, 113640, 104932, 100578, 113636, 104930, 113634, 70120, 100598, 78824, 70116, 96232, 78820, 70114, 96228, 78818, 96226, 70134, 78838, 129940, 94968, 113022, 129938, 94844, 94782, 127764, 78206, 128820, 127762, 95102, 128818, 123412, 124468, 123410, 126580, 124466, 126578, 115764, 117876, 115762, 122100, 117874, 122098, 100468, 104692, 100466, 113140, 104690, 113138, 69876, 78324, 69874, 95220, 78322, 95218, 129930, 94588, 94526, 127754, 128794, 123402, 124442, 126522, 115738, 117818, 121978, 100410, 104570, 112890, 69754, 78074, 94714, 94398, 123216, 127148, 123208, 127142, 123204, 123202, 115408, 123244, 115400, 123238, 115396, 115394, 99792, 115436, 99784, 115430, 99780, 99778, 68560, 99820, 68552, 99814, 68548, 68546, 68588, 68582, 127400, 129238, 72444, 127396, 72318, 127394, 123176, 127126, 123752, 123172, 123748, 123170, 123746, 115304, 123190, 116456, 115300, 116452, 115298, 116450, 99560, 115318, 101864, 99556, 101860, 99554, 101858, 68072, 99574, 72680, 68068, 72676, 68066, 72674, 68086, 72694, 129492, 80632, 105854, 129490, 80508, 80446, 127380, 72062, 127924, 127378, 80766, 127922, 123156, 123700, 123154, 124788, 123698, 124786, 115252, 116340, 115250, 118516, 116338, 118514, 99444, 101620, 99442, 105972, 101618, 105970, 67828, 72180, 67826, 80884, 72178, 80882, 97008, 114044, 96888, 113982, 96828, 96798, 129482, 80252, 130010, 97148, 80190, 97086, 127370, 127898, 128954, 123146, 123674, 124730, 126842, 115226, 116282, 118394, 122618, 99386, 101498, 105722, 114170, 67706, 71930, 80378, 96632, 113854, 96572, 96542, 80062, 96702, 96444, 96414, 96350, 123048, 123044, 123042, 115048, 123062, 115044, 115042, 99048, 115062, 99044, 99042, 67048, 99062, 67044, 67042, 67062, 127188, 68990, 127186, 123028, 123316, 123026, 123314, 114996, 115572, 114994, 115570, 98932, 100084, 98930, 100082, 66804, 69108, 66802, 69106, 129258, 73084, 73022, 127178, 127450, 123018, 123290, 123834, 114970, 115514, 116602, 98874, 99962, 102138, 66682, 68858, 73210, 81272, 106174, 81212, 81182, 72894, 81342, 97648, 114364, 97592, 114334, 97564, 97550, 81084, 97724, 81054, 97694, 97464, 114270, 97436, 97422, 80990, 97502, 97372, 97358, 97326, 114868, 114866, 98676, 98674, 66292, 66290, 123098, 114842, 115130, 98618, 99194, 66170, 67322, 69310, 73404, 73374, 81592, 106334, 81564, 81550, 73310, 81630, 97968, 114524, 97944, 114510, 97932, 97926, 81500, 98012, 81486, 97998, 97880, 114478, 97868, 97862, 81454, 97902, 97836, 97830, 69470, 73564, 73550, 81752, 106414, 81740, 81734, 73518, 81774, 81708, 81702]), $a([109536, 120312, 86976, 109040, 120060, 86496, 108792, 119934, 86256, 108668, 86136, 129744, 89056, 110072, 129736, 88560, 109820, 129732, 88312, 109694, 129730, 88188, 128464, 129772, 89592, 128456, 129766, 89340, 128452, 89214, 128450, 125904, 128492, 125896, 128486, 125892, 125890, 120784, 125932, 120776, 125926, 120772, 120770, 110544, 120812, 110536, 120806, 110532, 84928, 108016, 119548, 84448, 107768, 119422, 84208, 107644, 84088, 107582, 84028, 129640, 85488, 108284, 129636, 85240, 108158, 129634, 85116, 85054, 128232, 129654, 85756, 128228, 85630, 128226, 125416, 128246, 125412, 125410, 119784, 125430, 119780, 119778, 108520, 119798, 108516, 108514, 83424, 107256, 119166, 83184, 107132, 83064, 107070, 83004, 82974, 129588, 83704, 107390, 129586, 83580, 83518, 128116, 83838, 128114, 125172, 125170, 119284, 119282, 107508, 107506, 82672, 106876, 82552, 106814, 82492, 82462, 129562, 82812, 82750, 128058, 125050, 119034, 82296, 106686, 82236, 82206, 82366, 82108, 82078, 76736, 103920, 117500, 76256, 103672, 117374, 76016, 103548, 75896, 103486, 75836, 129384, 77296, 104188, 129380, 77048, 104062, 129378, 76924, 76862, 127720, 129398, 77564, 127716, 77438, 127714, 124392, 127734, 124388, 124386, 117736, 124406, 117732, 117730, 104424, 117750, 104420, 104418, 112096, 121592, 126334, 92608, 111856, 121468, 92384, 111736, 121406, 92272, 111676, 92216, 111646, 92188, 75232, 103160, 117118, 93664, 74992, 103036, 93424, 112252, 102974, 93304, 74812, 93244, 74782, 93214, 129332, 75512, 103294, 129908, 129330, 93944, 75388, 129906, 93820, 75326, 93758, 127604, 75646, 128756, 127602, 94078, 128754, 124148, 126452, 124146, 126450, 117236, 121844, 117234, 121842, 103412, 103410, 91584, 111344, 121212, 91360, 111224, 121150, 91248, 111164, 91192, 111134, 91164, 91150, 74480, 102780, 91888, 74360, 102718, 91768, 111422, 91708, 74270, 91678, 129306, 74620, 129850, 92028, 74558, 91966, 127546, 128634, 124026, 126202, 116986, 121338, 102906, 90848, 110968, 121022, 90736, 110908, 90680, 110878, 90652, 90638, 74104, 102590, 91000, 74044, 90940, 74014, 90910, 74174, 91070, 90480, 110780, 90424, 110750, 90396, 90382, 73916, 90556, 73886, 90526, 90296, 110686, 90268, 90254, 73822, 90334, 90204, 90190, 71136, 101112, 116094, 70896, 100988, 70776, 100926, 70716, 70686, 129204, 71416, 101246, 129202, 71292, 71230, 127348, 71550, 127346, 123636, 123634, 116212, 116210, 101364, 101362, 79296, 105200, 118140, 79072, 105080, 118078, 78960, 105020, 78904, 104990, 78876, 78862, 70384, 100732, 79600, 70264, 100670, 79480, 105278, 79420, 70174, 79390, 129178, 70524, 129466, 79740, 70462, 79678, 127290, 127866, 123514, 124666, 115962, 118266, 100858, 113376, 122232, 126654, 95424, 113264, 122172, 95328, 113208, 122142, 95280, 113180, 95256, 113166, 95244, 78560, 104824, 117950, 95968, 78448, 104764, 95856, 113468, 104734, 95800, 78364, 95772, 78350, 95758, 70008, 100542, 78712, 69948, 96120, 78652, 69918, 96060, 78622, 96030, 70078, 78782, 96190, 94912, 113008, 122044, 94816, 112952, 122014, 94768, 112924, 94744, 112910, 94732, 94726, 78192, 104636, 95088, 78136, 104606, 95032, 113054, 95004, 78094, 94990, 69820, 78268, 69790, 95164, 78238, 95134, 94560, 112824, 121950, 94512, 112796, 94488, 112782, 94476, 94470, 78008, 104542, 94648, 77980, 94620, 77966, 94606, 69726, 78046, 94686, 94384, 112732, 94360, 112718, 94348, 94342, 77916, 94428, 77902, 94414, 94296, 112686, 94284, 94278, 77870, 94318, 94252, 94246, 68336, 99708, 68216, 99646, 68156, 68126, 68476, 68414, 127162, 123258, 115450, 99834, 72416, 101752, 116414, 72304, 101692, 72248, 101662, 72220, 72206, 67960, 99518, 72568, 67900, 72508, 67870, 72478, 68030, 72638, 80576, 105840, 118460, 80480, 105784, 118430, 80432, 105756, 80408, 105742, 80396, 80390, 72048, 101564, 80752, 71992, 101534, 80696, 71964, 80668, 71950, 80654, 67772, 72124, 67742, 80828, 72094, 80798, 114016, 122552, 126814, 96832, 113968, 122524, 96800, 113944, 122510, 96784, 113932, 96776, 113926, 96772, 80224, 105656, 118366, 97120, 80176, 105628, 97072, 114076, 105614, 97048, 80140, 97036, 80134, 97030, 71864, 101470, 80312, 71836, 97208, 80284, 71822, 97180, 80270, 97166, 67678, 71902, 80350, 97246, 96576, 113840, 122460, 96544, 113816, 122446, 96528, 113804, 96520, 113798, 96516, 96514, 80048, 105564, 96688, 80024, 105550, 96664, 113870, 96652, 80006, 96646, 71772, 80092, 71758, 96732, 80078, 96718, 96416, 113752, 122414, 96400, 113740, 96392, 113734, 96388, 96386, 79960, 105518, 96472, 79948, 96460, 79942, 96454, 71726, 79982, 96494, 96336, 113708, 96328, 113702, 96324, 96322, 79916, 96364, 79910, 96358, 96296, 113686, 96292, 96290, 79894, 96310, 66936, 99006, 66876, 66846, 67006, 68976, 100028, 68920, 99998, 68892, 68878, 66748, 69052, 66718, 69022, 73056, 102072, 116574, 73008, 102044, 72984, 102030, 72972, 72966, 68792, 99934, 73144, 68764, 73116, 68750, 73102, 66654, 68830, 73182, 81216, 106160, 118620, 81184, 106136, 118606, 81168, 106124, 81160, 106118, 81156, 81154, 72880, 101980, 81328, 72856, 101966, 81304, 106190, 81292, 72838, 81286, 68700, 72924, 68686, 81372, 72910, 81358, 114336, 122712, 126894, 114320, 122700, 114312, 122694, 114308, 114306, 81056, 106072, 118574, 97696, 81040, 106060, 97680, 114380, 106054, 97672, 81028, 97668, 81026, 97666, 72792, 101934, 81112, 72780, 97752, 81100, 72774, 97740, 81094, 97734, 68654, 72814, 81134, 97774, 114256, 122668, 114248, 122662, 114244, 114242, 80976, 106028, 97488, 80968, 106022, 97480, 114278, 97476, 80962, 97474, 72748, 81004, 72742, 97516, 80998, 97510, 114216, 122646, 114212, 114210, 80936, 106006, 97384, 80932, 97380, 80930, 97378, 72726, 80950, 97398, 114196, 114194, 80916, 97332, 80914, 97330, 66236, 66206, 67256, 99166, 67228, 67214, 66142, 67294, 69296, 100188, 69272, 100174, 69260, 69254, 67164, 69340, 67150, 69326, 73376, 102232, 116654, 73360, 102220, 73352, 102214, 73348, 73346, 69208, 100142, 73432, 102254, 73420, 69190, 73414, 67118, 69230, 73454, 106320, 118700, 106312, 118694, 106308, 106306, 73296, 102188, 81616, 106348, 102182, 81608, 73284, 81604, 73282, 81602, 69164, 73324, 69158, 81644, 73318, 81638, 122792, 126934, 122788, 122786, 106280, 118678, 114536, 106276, 114532, 106274, 114530, 73256, 102166, 81512, 73252, 98024, 81508, 73250, 98020, 81506, 98018, 69142, 73270, 81526, 98038, 122772, 122770, 106260, 114484, 106258, 114482, 73236, 81460, 73234, 97908, 81458, 97906, 122762, 106250, 114458, 73226, 81434, 97850, 66396, 66382, 67416, 99246, 67404, 67398, 66350, 67438, 69456, 100268, 69448, 100262, 69444, 69442, 67372, 69484, 67366, 69478, 102312, 116694, 102308, 102306, 69416, 100246, 73576, 102326, 73572, 69410, 73570, 67350, 69430, 73590, 118740, 118738, 102292, 106420, 102290, 106418, 69396, 73524, 69394, 81780, 73522, 81778, 118730, 102282, 106394, 69386, 73498, 81722, 66476, 66470, 67496, 99286, 67492, 67490, 66454, 67510, 100308, 100306, 67476, 69556, 67474, 69554, 116714])]); /*14111*/
		$1.cwtobits = function() {
			var _EO = $get($1.clusters, $k[--$j]); /*14115*/
			$1.v = $get(_EO, $k[--$j]); /*14115*/
			$k[$j++] = Infinity; /*14116*/
			for (var _ER = 0, _ES = 17; _ER < _ES; _ER++) { /*14116*/
				$k[$j++] = 0; /*14116*/
			} /*14116*/
			var _EV = $cvrs($s(17), $1.v, 2); /*14116*/
			for (var _EW = 0, _EX = _EV.length; _EW < _EX; _EW++) { /*14116*/
				$k[$j++] = $get(_EV, _EW) - 48; /*14116*/
			} /*14116*/
			var _EZ = $a(); /*14116*/
			$k[$j++] = $geti(_EZ, _EZ.length - 17, 17); /*14117*/
		}; /*14118*/
		if ($1.compact) { /*14124*/
			$1.rwid = (((17 * $1.c) + 17) + 17) + 1; /*14122*/
		} else { /*14124*/
			$1.rwid = ((((17 * $1.c) + 17) + 17) + 17) + 18; /*14124*/
		} /*14124*/
		$1.pixs = $a($1.rwid * $1.r); /*14126*/
		for (var _Ej = 0, _Ei = $1.r - 1; _Ej <= _Ei; _Ej += 1) { /*14156*/
			$1.i = _Ej; /*14129*/
			if (($1.i % 3) == 0) { /*14134*/
				$1.lcw = ((~~($1.i / 3)) * 30) + (~~(($1.r - 1) / 3)); /*14132*/
				$1.rcw = (((~~($1.i / 3)) * 30) + $1.c) - 1; /*14133*/
			} /*14133*/
			if (($1.i % 3) == 1) { /*14138*/
				$1.lcw = (((~~($1.i / 3)) * 30) + ($1.eclevel * 3)) + (($1.r - 1) % 3); /*14136*/
				$1.rcw = ((~~($1.i / 3)) * 30) + (~~(($1.r - 1) / 3)); /*14137*/
			} /*14137*/
			if (($1.i % 3) == 2) { /*14142*/
				$1.lcw = (((~~($1.i / 3)) * 30) + $1.c) - 1; /*14140*/
				$1.rcw = (((~~($1.i / 3)) * 30) + ($1.eclevel * 3)) + (($1.r - 1) % 3); /*14141*/
			} /*14141*/
			$k[$j++] = $1.pixs; /*14152*/
			$k[$j++] = $1.rwid * $1.i; /*14152*/
			$k[$j++] = Infinity; /*14152*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = 1; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = 0; /*14146*/
			$k[$j++] = $1.lcw; /*14146*/
			$k[$j++] = $1.i % 3; /*14146*/
			$1.cwtobits(); /*14146*/
			$forall($k[--$j]); /*14146*/
			$forall($geti($1.cws, $1.c * $1.i, $1.c), function() { /*14147*/
				$k[$j++] = $1.i % 3; /*14147*/
				$1.cwtobits(); /*14147*/
				$forall($k[--$j]); /*14147*/
			}); /*14147*/
			if ($1.compact) { /*14152*/
				$k[$j++] = 1; /*14149*/
			} else { /*14152*/
				$k[$j++] = $1.rcw; /*14151*/
				$k[$j++] = $1.i % 3; /*14151*/
				$1.cwtobits(); /*14151*/
				$forall($k[--$j]); /*14151*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 1; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 0; /*14152*/
				$k[$j++] = 1; /*14152*/
			} /*14152*/
			var _FI = $a(); /*14152*/
			var _FJ = $k[--$j]; /*14154*/
			$puti($k[--$j], _FJ, _FI); /*14154*/
		} /*14154*/
		var _FS = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.rwid,
			pixy: $1.r,
			height: ($1.r / 72) * $1.rowmult,
			width: $1.rwid / 72,
			opt: $1.options
		}; /*14166*/
		$k[$j++] = _FS; /*14169*/
		if (!$1.dontdraw) { /*14169*/
			$0.renmatrix(); /*14169*/
		} /*14169*/
	};
	$0.pdf417compact = function() {
		var $1 = {}; /*14197*/
		$1.options = $k[--$j]; /*14199*/
		$1.barcode = $k[--$j]; /*14200*/
		$1.dontdraw = false; /*14202*/
		$forall($1.options, function() { /*14213*/
			var _3 = $k[--$j]; /*14213*/
			$1[$k[--$j]] = _3; /*14213*/
		}); /*14213*/
		$1.options.dontdraw = true; /*14216*/
		$1.options.compact = true; /*14217*/
		$k[$j++] = "args"; /*14219*/
		$k[$j++] = $1.barcode; /*14219*/
		$k[$j++] = $1.options; /*14219*/
		$0.pdf417(); /*14219*/
		var _9 = $k[--$j]; /*14219*/
		$1[$k[--$j]] = _9; /*14219*/
		$1.args.opt = $1.options; /*14221*/
		$k[$j++] = $1.args; /*14224*/
		if (!$1.dontdraw) { /*14224*/
			$0.renmatrix(); /*14224*/
		} /*14224*/
	};
	$0.micropdf417 = function() {
		var $1 = {}; /*14251*/
		$1.options = $k[--$j]; /*14253*/
		$1.barcode = $k[--$j]; /*14254*/
		$1.dontdraw = false; /*14256*/
		$1.version = "unset"; /*14257*/
		$1.columns = 0; /*14258*/
		$1.rows = 0; /*14259*/
		$1.rowmult = 2; /*14260*/
		$1.encoding = "auto"; /*14261*/
		$1.cca = false; /*14262*/
		$1.ccb = false; /*14263*/
		$1.raw = false; /*14264*/
		$1.parse = false; /*14265*/
		$forall($1.options, function() { /*14276*/
			var _3 = $k[--$j]; /*14276*/
			$1[$k[--$j]] = _3; /*14276*/
		}); /*14276*/
		if ($ne($1.version, "unset")) { /*14282*/
			$search($1.version, "x"); /*14279*/
			$j--; /*14280*/
			$1.columns = $k[--$j]; /*14280*/
			$j--; /*14281*/
			$1.rows = $k[--$j]; /*14281*/
		} /*14281*/
		$1.columns = ~~$z($1.columns); /*14284*/
		$1.rows = ~~$z($1.rows); /*14285*/
		$1.rowmult = +$1.rowmult; /*14286*/
		if ($1.raw) { /*14309*/
			$1.encoding = "raw"; /*14309*/
		} /*14309*/
		if ($1.cca) { /*14310*/
			$1.encoding = "cca"; /*14310*/
		} /*14310*/
		if ($eq($1.encoding, "raw") || $eq($1.encoding, "cca")) { /*14324*/
			$1.datcws = $a($1.barcode.length); /*14314*/
			$1.i = 0; /*14315*/
			$1.j = 0; /*14315*/
			for (;;) { /*14322*/
				if ($1.i == $1.barcode.length) { /*14317*/
					break; /*14317*/
				} /*14317*/
				$1.cw = ~~$z($geti($1.barcode, $1.i + 1, 3)); /*14318*/
				$put($1.datcws, $1.j, $1.cw); /*14319*/
				$1.i = $1.i + 4; /*14320*/
				$1.j = $1.j + 1; /*14321*/
			} /*14321*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*14323*/
		} /*14323*/
		$k[$j++] = Infinity; /*14326*/
		$forall($1.barcode); /*14326*/
		$1.barcode = $a(); /*14326*/
		$1.barlen = $1.barcode.length; /*14327*/
		if ($1.ccb) { /*14329*/
			$1.encoding = "ccb"; /*14329*/
		} /*14329*/
		$1.encb = function() {
			$1.in = $k[--$j]; /*14332*/
			$1.inlen = $1.in.length; /*14333*/
			$1.out = $a(((~~($1.inlen / 6)) * 5) + ($1.inlen % 6)); /*14334*/
			for (var _g = 0, _f = (~~($1.inlen / 6)) - 1; _g <= _f; _g += 1) { /*14357*/
				$1.k = _g; /*14336*/
				$k[$j++] = Infinity; /*14337*/
				$aload($geti($1.in, $1.k * 6, 3)); /*14337*/
				$1.msbs = $a(); /*14337*/
				$k[$j++] = Infinity; /*14341*/
				$aload($1.msbs); /*14339*/
				var _m = $k[--$j]; /*14339*/
				var _n = $k[--$j]; /*14339*/
				var _o = $k[--$j]; /*14339*/
				$k[$j++] = (_m + (_n * 256)) + (_o * 65536); /*14340*/
				for (var _p = 0, _q = 3; _p < _q; _p++) { /*14340*/
					var _r = $k[--$j]; /*14340*/
					$k[$j++] = _r % 900; /*14340*/
					$k[$j++] = ~~(_r / 900); /*14340*/
				} /*14340*/
				$1.mscs = $a(); /*14341*/
				$k[$j++] = Infinity; /*14342*/
				$aload($geti($1.in, ($1.k * 6) + 3, 3)); /*14342*/
				$1.lsbs = $a(); /*14342*/
				$k[$j++] = Infinity; /*14346*/
				$aload($1.lsbs); /*14344*/
				var _y = $k[--$j]; /*14344*/
				var _z = $k[--$j]; /*14344*/
				var _10 = $k[--$j]; /*14344*/
				$k[$j++] = (_y + (_z * 256)) + (_10 * 65536); /*14345*/
				for (var _11 = 0, _12 = 3; _11 < _12; _11++) { /*14345*/
					var _13 = $k[--$j]; /*14345*/
					$k[$j++] = _13 % 900; /*14345*/
					$k[$j++] = ~~(_13 / 900); /*14345*/
				} /*14345*/
				$1.lscs = $a(); /*14346*/
				var _16 = $get($1.lscs, 0); /*14347*/
				var _18 = $get($1.mscs, 0); /*14347*/
				$put($1.out, ($1.k * 5) + 4, (_16 + (_18 * 316)) % 900); /*14348*/
				var _1C = $get($1.lscs, 1); /*14349*/
				var _1E = $get($1.mscs, 0); /*14349*/
				var _1G = $get($1.mscs, 1); /*14349*/
				$put($1.out, ($1.k * 5) + 3, ((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) % 900); /*14350*/
				var _1K = $get($1.lscs, 2); /*14351*/
				var _1M = $get($1.mscs, 0); /*14351*/
				var _1O = $get($1.mscs, 1); /*14351*/
				var _1Q = $get($1.mscs, 2); /*14351*/
				$put($1.out, ($1.k * 5) + 2, (((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) % 900); /*14352*/
				var _1U = $get($1.lscs, 3); /*14353*/
				var _1W = $get($1.mscs, 1); /*14353*/
				var _1Y = $get($1.mscs, 2); /*14353*/
				$put($1.out, ($1.k * 5) + 1, ((((~~((((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) / 900)) + _1U) + (_1W * 20)) + (_1Y * 641)) % 900); /*14354*/
				$put($1.out, $1.k * 5, ((~~(((((~~((((((~~(((((~~((_16 + (_18 * 316)) / 900)) + _1C) + (_1E * 641)) + (_1G * 316)) / 900)) + _1K) + (_1M * 20)) + (_1O * 641)) + (_1Q * 316)) / 900)) + _1U) + (_1W * 20)) + (_1Y * 641)) / 900)) + ($get($1.mscs, 2) * 20)) % 900); /*14356*/
			} /*14356*/
			$1.rem = $1.inlen % 6; /*14358*/
			if ($1.rem != 0) { /*14363*/
				$k[$j++] = $1.out; /*14361*/
				$k[$j++] = $1.out.length - $1.rem; /*14361*/
				$k[$j++] = Infinity; /*14361*/
				$aload($geti($1.in, $1.inlen - $1.rem, $1.rem)); /*14361*/
				var _1p = $a(); /*14361*/
				var _1q = $k[--$j]; /*14362*/
				$puti($k[--$j], _1q, _1p); /*14362*/
			} /*14362*/
			$k[$j++] = $1.out; /*14364*/
		}; /*14365*/
		if ($eq($1.encoding, "byte") || $eq($1.encoding, "ccb")) { /*14372*/
			$1.datcws = $a((((~~($1.barlen / 6)) * 5) + ($1.barlen % 6)) + 1); /*14368*/
			var _20 = (($1.barlen % 6) == 0) ? 924 : 901; /*14369*/
			$put($1.datcws, 0, _20); /*14369*/
			$k[$j++] = $1.datcws; /*14370*/
			$k[$j++] = 1; /*14370*/
			$k[$j++] = $1.barcode; /*14370*/
			$1.encb(); /*14370*/
			var _23 = $k[--$j]; /*14370*/
			var _24 = $k[--$j]; /*14370*/
			$puti($k[--$j], _24, _23); /*14370*/
			if ($eq($1.encoding, "ccb")) { /*14371*/
				$k[$j++] = Infinity; /*14371*/
				$k[$j++] = 920; /*14371*/
				$aload($1.datcws); /*14371*/
				$1.datcws = $a(); /*14371*/
			} /*14371*/
		} /*14371*/
		if ($eq($1.encoding, "auto")) { /*14736*/
			$1.T = 0; /*14377*/
			$1.N = 1; /*14377*/
			$1.B = 2; /*14377*/
			$1.A = 0; /*14378*/
			$1.L = 1; /*14378*/
			$1.M = 2; /*14378*/
			$1.P = 3; /*14378*/
			$1.tl = -1; /*14381*/
			$1.nl = -2; /*14381*/
			$1.bl = -3; /*14381*/
			$1.bl6 = -4; /*14381*/
			$1.bs = -5; /*14381*/
			$1.al = -6; /*14384*/
			$1.ll = -7; /*14384*/
			$1.ml = -8; /*14384*/
			$1.pl = -9; /*14384*/
			$1.as = -10; /*14384*/
			$1.ps = -11; /*14384*/
			$1.charmaps = $a([$a(["A", "a", "0", ";"]), $a(["B", "b", "1", "<"]), $a(["C", "c", "2", ">"]), $a(["D", "d", "3", "@"]), $a(["E", "e", "4", "["]), $a(["F", "f", "5", 92]), $a(["G", "g", "6", "]"]), $a(["H", "h", "7", "_"]), $a(["I", "i", "8", "`"]), $a(["J", "j", "9", "~"]), $a(["K", "k", "&", "!"]), $a(["L", "l", 13, 13]), $a(["M", "m", 9, 9]), $a(["N", "n", ",", ","]), $a(["O", "o", ":", ":"]), $a(["P", "p", "#", 10]), $a(["Q", "q", "-", "-"]), $a(["R", "r", ".", "."]), $a(["S", "s", "$", "$"]), $a(["T", "t", "/", "/"]), $a(["U", "u", "+", "\""]), $a(["V", "v", "%", "|"]), $a(["W", "w", "*", "*"]), $a(["X", "x", "=", 40]), $a(["Y", "y", "^", 41]), $a(["Z", "z", $1.pl, "?"]), $a([" ", " ", " ", "{"]), $a([$1.ll, $1.as, $1.ll, "}"]), $a([$1.ml, $1.ml, $1.al, "'"]), $a([$1.ps, $1.ps, $1.ps, $1.al])]); /*14419*/
			$1.charvals = $a([{}, {}, {}, {}]); /*14422*/
			$1.alltext = {}; /*14423*/
			for (var _2t = 0, _2s = $1.charmaps.length - 1; _2t <= _2s; _2t += 1) { /*14433*/
				$1.i = _2t; /*14425*/
				$1.encs = $get($1.charmaps, $1.i); /*14426*/
				for (var _2x = 0; _2x <= 3; _2x += 1) { /*14432*/
					$1.j = _2x; /*14428*/
					var _30 = $get($1.encs, $1.j); /*14429*/
					$k[$j++] = _30; /*14429*/
					if ($eq($type(_30), "stringtype")) { /*14429*/
						var _33 = $get($k[--$j], 0); /*14429*/
						$k[$j++] = _33; /*14429*/
					} /*14429*/
					var _34 = $k[--$j]; /*14430*/
					$put($get($1.charvals, $1.j), _34, $1.i); /*14430*/
					$put($1.alltext, _34, -1); /*14431*/
				} /*14431*/
			} /*14431*/
			$1.e = 10000; /*14435*/
			$1.latlen = $a([$a([0, 1, 1, 2]), $a([2, 0, 1, 2]), $a([1, 1, 0, 1]), $a([1, 2, 2, 0])]); /*14443*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.ml, $1.al]), $a([]), $a([$1.ml]), $a([$1.ml, $1.pl])]), $a([$a([$1.al]), $a([$1.ll]), $a([]), $a([$1.pl])]), $a([$a([$1.al]), $a([$1.al, $1.ll]), $a([$1.al, $1.ml]), $a([])])]); /*14451*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 1]), $a([1, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, 1]), $a([$1.e, $1.e, $1.e, $1.e])]); /*14459*/
			$k[$j++] = Infinity; /*14462*/
			for (var _49 = 0, _4A = $1.barlen; _49 < _4A; _49++) { /*14462*/
				$k[$j++] = 0; /*14462*/
			} /*14462*/
			$k[$j++] = 0; /*14462*/
			$1.numdigits = $a(); /*14462*/
			$k[$j++] = Infinity; /*14463*/
			for (var _4D = 0, _4E = $1.barlen; _4D < _4E; _4D++) { /*14463*/
				$k[$j++] = 0; /*14463*/
			} /*14463*/
			$k[$j++] = 0; /*14463*/
			$1.numtext = $a(); /*14463*/
			$k[$j++] = Infinity; /*14464*/
			for (var _4H = 0, _4I = $1.barlen; _4H < _4I; _4H++) { /*14464*/
				$k[$j++] = 0; /*14464*/
			} /*14464*/
			$k[$j++] = 0; /*14464*/
			$1.numbytes = $a(); /*14464*/
			for (var _4L = $1.barlen - 1; _4L >= 0; _4L -= 1) { /*14476*/
				$1.i = _4L; /*14466*/
				var _4O = $get($1.barcode, $1.i); /*14467*/
				if ((_4O >= 48) && (_4O <= 57)) { /*14469*/
					$put($1.numdigits, $1.i, $get($1.numdigits, $1.i + 1) + 1); /*14468*/
				} /*14468*/
				var _4Y = $get($1.alltext, $get($1.barcode, $1.i)) !== undefined; /*14470*/
				if (_4Y && ($get($1.numdigits, $1.i) < 13)) { /*14472*/
					$put($1.numtext, $1.i, $get($1.numtext, $1.i + 1) + 1); /*14471*/
				} /*14471*/
				if (($get($1.numtext, $1.i) < 5) && ($get($1.numdigits, $1.i) < 13)) { /*14475*/
					$put($1.numbytes, $1.i, $get($1.numbytes, $1.i + 1) + 1); /*14474*/
				} /*14474*/
			} /*14474*/
			$1.numdigits = $geti($1.numdigits, 0, $1.barlen); /*14477*/
			$1.numtext = $geti($1.numtext, 0, $1.barlen); /*14478*/
			$1.numbytes = $geti($1.numbytes, 0, $1.barlen); /*14479*/
			$1.seq = $a([]); /*14481*/
			$1.seqlen = 0; /*14481*/
			$1.state = $1.B; /*14481*/
			$1.p = 0; /*14481*/
			for (;;) { /*14524*/
				if ($1.p == $1.barlen) { /*14482*/
					break; /*14482*/
				} /*14482*/
				$1.n = $get($1.numdigits, $1.p); /*14483*/
				if ($1.n >= 13) { /*14522*/
					$k[$j++] = Infinity; /*14489*/
					$aload($1.seq); /*14486*/
					$k[$j++] = $1.nl; /*14488*/
					$k[$j++] = Infinity; /*14488*/
					$aload($geti($1.barcode, $1.p, $1.n)); /*14488*/
					var _5F = $a(); /*14488*/
					$k[$j++] = _5F; /*14488*/
					$1.seq = $a(); /*14489*/
					$1.state = $1.N; /*14490*/
					$1.p = $1.p + $1.n; /*14491*/
					$1.seqlen = ($1.seqlen + 1) + $1.n; /*14492*/
				} else { /*14522*/
					$1.t = $get($1.numtext, $1.p); /*14494*/
					if ($1.t >= 5) { /*14522*/
						$k[$j++] = Infinity; /*14500*/
						$aload($1.seq); /*14497*/
						if ($1.state != $1.T) { /*14498*/
							$k[$j++] = $1.tl; /*14498*/
						} /*14498*/
						$k[$j++] = Infinity; /*14499*/
						$aload($geti($1.barcode, $1.p, $1.t)); /*14499*/
						var _5Y = $a(); /*14499*/
						$k[$j++] = _5Y; /*14499*/
						$1.seq = $a(); /*14500*/
						$1.state = $1.T; /*14501*/
						$1.p = $1.p + $1.t; /*14502*/
						$1.seqlen = ($1.seqlen + 1) + $1.t; /*14503*/
					} else { /*14522*/
						$1.b = $get($1.numbytes, $1.p); /*14505*/
						if (($1.b == 1) && ($1.state == $1.T)) { /*14522*/
							$k[$j++] = Infinity; /*14511*/
							$aload($1.seq); /*14508*/
							$k[$j++] = $1.bs; /*14510*/
							$k[$j++] = $a([$get($1.barcode, $1.p)]); /*14510*/
							$1.seq = $a(); /*14511*/
							$1.p = $1.p + $1.b; /*14512*/
							$1.seqlen = $1.seqlen + 2; /*14513*/
						} else { /*14522*/
							$k[$j++] = Infinity; /*14519*/
							$aload($1.seq); /*14516*/
							if (($1.b % 6) != 0) { /*14517*/
								$k[$j++] = $1.bl; /*14517*/
							} else { /*14517*/
								$k[$j++] = $1.bl6; /*14517*/
							} /*14517*/
							$k[$j++] = Infinity; /*14518*/
							$aload($geti($1.barcode, $1.p, $1.b)); /*14518*/
							var _63 = $a(); /*14518*/
							$k[$j++] = _63; /*14518*/
							$1.seq = $a(); /*14519*/
							$1.state = $1.B; /*14520*/
							$1.p = $1.p + $1.b; /*14521*/
							$1.seqlen = ($1.seqlen + 1) + $1.b; /*14522*/
						} /*14522*/
					} /*14522*/
				} /*14522*/
			} /*14522*/
			$k[$j++] = "latchcws"; /*14527*/
			$k[$j++] = Infinity; /*14527*/
			$k[$j++] = $1.tl; /*14527*/
			$k[$j++] = 900; /*14527*/
			$k[$j++] = $1.bl; /*14527*/
			$k[$j++] = 901; /*14527*/
			$k[$j++] = $1.bl6; /*14527*/
			$k[$j++] = 924; /*14527*/
			$k[$j++] = $1.nl; /*14527*/
			$k[$j++] = 902; /*14527*/
			$k[$j++] = $1.bs; /*14527*/
			$k[$j++] = 913; /*14527*/
			var _6F = $d(); /*14527*/
			$1[$k[--$j]] = _6F; /*14528*/
			$1.enca = function() {
				var _6L = $get($get($1.charvals, $1.A), $k[--$j]); /*14531*/
				$k[$j++] = _6L; /*14531*/
			}; /*14531*/
			$1.encl = function() {
				var _6Q = $get($get($1.charvals, $1.L), $k[--$j]); /*14532*/
				$k[$j++] = _6Q; /*14532*/
			}; /*14532*/
			$1.encm = function() {
				var _6V = $get($get($1.charvals, $1.M), $k[--$j]); /*14533*/
				$k[$j++] = _6V; /*14533*/
			}; /*14533*/
			$1.encp = function() {
				var _6a = $get($get($1.charvals, $1.P), $k[--$j]); /*14534*/
				$k[$j++] = _6a; /*14534*/
			}; /*14534*/
			$1.textencfuncs = $a(["enca", "encl", "encm", "encp"]); /*14535*/
			$1.addtotext = function() {
				$put($1.text, $1.l, $k[--$j]); /*14538*/
				$1.l = $1.l + 1; /*14539*/
			}; /*14540*/
			$1.enct = function() {
				$1.in = $k[--$j]; /*14544*/
				$1.curlen = $a([$1.e, $1.e, $1.e, $1.e]); /*14546*/
				$put($1.curlen, $1.submode, 0); /*14547*/
				$1.curseq = $a([$a([]), $a([]), $a([]), $a([])]); /*14548*/
				$forall($1.in, function() { /*14618*/
					$1.char = $k[--$j]; /*14553*/
					for (;;) { /*14574*/
						$1.imp = false; /*14557*/
						var _6z = $a([$1.A, $1.L, $1.M, $1.P]); /*14558*/
						for (var _70 = 0, _71 = _6z.length; _70 < _71; _70++) { /*14572*/
							$1.x = $get(_6z, _70); /*14559*/
							var _77 = $a([$1.A, $1.L, $1.M, $1.P]); /*14560*/
							for (var _78 = 0, _79 = _77.length; _78 < _79; _78++) { /*14571*/
								$1.y = $get(_77, _78); /*14561*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*14562*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*14570*/
									$put($1.curlen, $1.y, $1.cost); /*14564*/
									$k[$j++] = $1.curseq; /*14567*/
									$k[$j++] = $1.y; /*14567*/
									$k[$j++] = Infinity; /*14567*/
									$aload($get($1.curseq, $1.x)); /*14566*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*14567*/
									var _7a = $a(); /*14567*/
									var _7b = $k[--$j]; /*14568*/
									$put($k[--$j], _7b, _7a); /*14568*/
									$1.imp = true; /*14569*/
								} /*14569*/
							} /*14569*/
						} /*14569*/
						if (!$1.imp) { /*14573*/
							break; /*14573*/
						} /*14573*/
					} /*14573*/
					$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e]); /*14577*/
					$1.nxtseq = $a(4); /*14578*/
					var _7o = $a([$1.A, $1.L, $1.M, $1.P]); /*14580*/
					for (var _7p = 0, _7q = _7o.length; _7p < _7q; _7p++) { /*14613*/
						$1.x = $get(_7o, _7p); /*14581*/
						for (;;) { /*14611*/
							var _7w = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*14585*/
							if (!_7w) { /*14585*/
								break; /*14585*/
							} /*14585*/
							$1.cost = $get($1.curlen, $1.x) + 1; /*14588*/
							if ($1.cost < $get($1.nxtlen, $1.x)) { /*14592*/
								$put($1.nxtlen, $1.x, $1.cost); /*14590*/
								$k[$j++] = $1.nxtseq; /*14591*/
								$k[$j++] = $1.x; /*14591*/
								$k[$j++] = Infinity; /*14591*/
								$aload($get($1.curseq, $1.x)); /*14591*/
								$k[$j++] = $1.char; /*14591*/
								var _8D = $a(); /*14591*/
								var _8E = $k[--$j]; /*14591*/
								$put($k[--$j], _8E, _8D); /*14591*/
							} /*14591*/
							var _8K = $a([$1.A, $1.L, $1.M, $1.P]); /*14595*/
							for (var _8L = 0, _8M = _8K.length; _8L < _8M; _8L++) { /*14608*/
								$1.y = $get(_8K, _8L); /*14596*/
								if ($ne($1.x, $1.y)) { /*14607*/
									$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + 1; /*14598*/
									if ($1.cost < $get($1.nxtlen, $1.y)) { /*14606*/
										$put($1.nxtlen, $1.y, $1.cost); /*14600*/
										$k[$j++] = $1.nxtseq; /*14604*/
										$k[$j++] = $1.y; /*14604*/
										$k[$j++] = Infinity; /*14604*/
										$aload($get($1.curseq, $1.y)); /*14602*/
										if ($1.x == $1.A) { /*14603*/
											$k[$j++] = $1.as; /*14603*/
										} else { /*14603*/
											$k[$j++] = $1.ps; /*14603*/
										} /*14603*/
										$k[$j++] = $1.char; /*14604*/
										var _8p = $a(); /*14604*/
										var _8q = $k[--$j]; /*14605*/
										$put($k[--$j], _8q, _8p); /*14605*/
									} /*14605*/
								} /*14605*/
							} /*14605*/
							break; /*14610*/
						} /*14610*/
					} /*14610*/
					$1.curlen = $1.nxtlen; /*14615*/
					$1.curseq = $1.nxtseq; /*14616*/
				}); /*14616*/
				$1.minseq = $1.e; /*14621*/
				var _8z = $a([$1.A, $1.L, $1.M, $1.P]); /*14622*/
				for (var _90 = 0, _91 = _8z.length; _90 < _91; _90++) { /*14628*/
					$1.k = $get(_8z, _90); /*14623*/
					if ($get($1.curlen, $1.k) < $1.minseq) { /*14627*/
						$1.minseq = $get($1.curlen, $1.k); /*14625*/
						$1.txtseq = $get($1.curseq, $1.k); /*14626*/
					} /*14626*/
				} /*14626*/
				$1.text = $a($1.minseq); /*14631*/
				$1.k = 0; /*14632*/
				$1.l = 0; /*14632*/
				for (;;) { /*14652*/
					if ($1.k >= $1.txtseq.length) { /*14633*/
						break; /*14633*/
					} /*14633*/
					$1.char = $get($1.txtseq, $1.k); /*14635*/
					$k[$j++] = $1.char; /*14638*/
					$1[$get($1.textencfuncs, $1.submode)](); /*14638*/
					$1.addtotext(); /*14638*/
					$1.k = $1.k + 1; /*14639*/
					if (($1.char == $1.as) || ($1.char == $1.ps)) { /*14645*/
						$k[$j++] = $get($1.txtseq, $1.k); /*14643*/
						if ($1.char == $1.as) { /*14643*/
							$1.enca(); /*14643*/
						} else { /*14643*/
							$1.encp(); /*14643*/
						} /*14643*/
						$1.addtotext(); /*14643*/
						$1.k = $1.k + 1; /*14644*/
					} /*14644*/
					if ($1.char == $1.al) { /*14648*/
						$1.submode = $1.A; /*14648*/
					} /*14648*/
					if ($1.char == $1.ll) { /*14649*/
						$1.submode = $1.L; /*14649*/
					} /*14649*/
					if ($1.char == $1.ml) { /*14650*/
						$1.submode = $1.M; /*14650*/
					} /*14650*/
					if ($1.char == $1.pl) { /*14651*/
						$1.submode = $1.P; /*14651*/
					} /*14651*/
				} /*14651*/
				if (($1.text.length % 2) == 1) { /*14662*/
					if ($1.submode == $1.P) { /*14659*/
						$k[$j++] = "pad"; /*14656*/
						$k[$j++] = $1.al; /*14656*/
						$1.encp(); /*14656*/
						var _9q = $k[--$j]; /*14656*/
						$1[$k[--$j]] = _9q; /*14656*/
						$1.submode = $1.A; /*14657*/
					} else { /*14659*/
						$k[$j++] = "pad"; /*14659*/
						$k[$j++] = $1.ps; /*14659*/
						$1[$get($1.textencfuncs, $1.submode)](); /*14659*/
						var _9y = $k[--$j]; /*14659*/
						$1[$k[--$j]] = _9y; /*14659*/
					} /*14659*/
					$k[$j++] = Infinity; /*14661*/
					$aload($1.text); /*14661*/
					$k[$j++] = $1.pad; /*14661*/
					$1.text = $a(); /*14661*/
				} /*14661*/
				$1.out = $a(~~($1.text.length / 2)); /*14664*/
				for (var _A7 = 0, _A6 = $1.out.length - 1; _A7 <= _A6; _A7 += 1) { /*14668*/
					$1.k = _A7; /*14666*/
					$put($1.out, $1.k, ($get($1.text, $1.k * 2) * 30) + $get($1.text, ($1.k * 2) + 1)); /*14667*/
				} /*14667*/
				$k[$j++] = $1.out; /*14670*/
			}; /*14672*/
			$1.encn = function() {
				$1.in = $k[--$j]; /*14675*/
				$1.out = $a([]); /*14676*/
				for (var _AL = 0, _AK = $1.in.length - 1; _AL <= _AK; _AL += 44) { /*14704*/
					$1.k = _AL; /*14678*/
					$k[$j++] = Infinity; /*14682*/
					var _AQ = $1.in.length - $1.k; /*14680*/
					$k[$j++] = 1; /*14680*/
					$k[$j++] = $1.in; /*14680*/
					$k[$j++] = $1.k; /*14680*/
					$k[$j++] = _AQ; /*14680*/
					if (_AQ > 44) { /*14680*/
						$j--; /*14680*/
						$k[$j++] = 44; /*14680*/
					} /*14680*/
					var _AR = $k[--$j]; /*14680*/
					var _AS = $k[--$j]; /*14680*/
					$forall($geti($k[--$j], _AS, _AR), function() { /*14681*/
						var _AV = $k[--$j]; /*14681*/
						$k[$j++] = _AV - 48; /*14681*/
					}); /*14681*/
					$1.gmod = $a(); /*14682*/
					$1.cwn = $a([]); /*14683*/
					for (;;) { /*14702*/
						$1.dv = 900; /*14684*/
						$1.gmul = $a([]); /*14685*/
						$1.val = 0; /*14685*/
						for (;;) { /*14697*/
							if ($1.gmod.length == 0) { /*14686*/
								break; /*14686*/
							} /*14686*/
							$1.val = ($1.val * 10) + $get($1.gmod, 0); /*14687*/
							$1.gmod = $geti($1.gmod, 1, $1.gmod.length - 1); /*14688*/
							if ($1.val < $1.dv) { /*14694*/
								if ($1.gmul.length != 0) { /*14692*/
									$k[$j++] = Infinity; /*14691*/
									$aload($1.gmul); /*14691*/
									$k[$j++] = 0; /*14691*/
									$1.gmul = $a(); /*14691*/
								} /*14691*/
							} else { /*14694*/
								$k[$j++] = Infinity; /*14694*/
								$aload($1.gmul); /*14694*/
								$k[$j++] = ~~($1.val / $1.dv); /*14694*/
								$1.gmul = $a(); /*14694*/
							} /*14694*/
							$1.val = $1.val % $1.dv; /*14696*/
						} /*14696*/
						$1.dv = $1.val; /*14698*/
						$k[$j++] = Infinity; /*14699*/
						$k[$j++] = $1.dv; /*14699*/
						$aload($1.cwn); /*14699*/
						$1.cwn = $a(); /*14699*/
						$1.gmod = $1.gmul; /*14700*/
						if ($1.gmul.length == 0) { /*14701*/
							break; /*14701*/
						} /*14701*/
					} /*14701*/
					$k[$j++] = Infinity; /*14703*/
					$aload($1.out); /*14703*/
					$aload($1.cwn); /*14703*/
					$1.out = $a(); /*14703*/
				} /*14703*/
				$k[$j++] = $1.out; /*14705*/
			}; /*14706*/
			$1.encfuncs = $a(["enct", "encn", "encb"]); /*14708*/
			$1.addtocws = function() {
				var _B2 = $k[--$j]; /*14711*/
				$puti($1.datcws, $1.j, _B2); /*14711*/
				$1.j = _B2.length + $1.j; /*14712*/
			}; /*14713*/
			$1.state = $1.T; /*14716*/
			$1.submode = $1.A; /*14716*/
			$1.datcws = $a($1.seqlen); /*14717*/
			$1.i = 0; /*14718*/
			$1.j = 0; /*14718*/
			for (;;) { /*14734*/
				if ($1.i >= $1.seq.length) { /*14719*/
					break; /*14719*/
				} /*14719*/
				$1.chars = $get($1.seq, $1.i); /*14720*/
				if ($eq($type($1.chars), "arraytype")) { /*14730*/
					$k[$j++] = $1.chars; /*14722*/
					$1[$get($1.encfuncs, $1.state)](); /*14722*/
					$1.addtocws(); /*14722*/
				} else { /*14730*/
					$k[$j++] = $a([$get($1.latchcws, $1.chars)]); /*14724*/
					$1.addtocws(); /*14724*/
					if ($1.chars == $1.tl) { /*14725*/
						$1.state = $1.T; /*14725*/
						$1.submode = $1.A; /*14725*/
					} /*14725*/
					if ($1.chars == $1.nl) { /*14726*/
						$1.state = $1.N; /*14726*/
					} /*14726*/
					if (($1.chars == $1.bl) || ($1.chars == $1.bl6)) { /*14727*/
						$1.state = $1.B; /*14727*/
					} /*14727*/
					if ($1.chars == $1.bs) { /*14731*/
						$1.i = $1.i + 1; /*14729*/
						$k[$j++] = $get($1.seq, $1.i); /*14730*/
						$1.encb(); /*14730*/
						$1.addtocws(); /*14730*/
					} /*14730*/
				} /*14730*/
				$1.i = $1.i + 1; /*14733*/
			} /*14733*/
			$1.datcws = $geti($1.datcws, 0, $1.j); /*14735*/
		} /*14735*/
		$1.metrics = $a([$a([1, 11, 7, 1, 0, 9]), $a([1, 14, 7, 8, 0, 8]), $a([1, 17, 7, 36, 0, 36]), $a([1, 20, 8, 19, 0, 19]), $a([1, 24, 8, 9, 0, 17]), $a([1, 28, 8, 25, 0, 33]), $a([2, 8, 8, 1, 0, 1]), $a([2, 11, 9, 1, 0, 9]), $a([2, 14, 9, 8, 0, 8]), $a([2, 17, 10, 36, 0, 36]), $a([2, 20, 11, 19, 0, 19]), $a([2, 23, 13, 9, 0, 17]), $a([2, 26, 15, 27, 0, 35]), $a([3, 6, 12, 1, 1, 1]), $a([3, 8, 14, 7, 7, 7]), $a([3, 10, 16, 15, 15, 15]), $a([3, 12, 18, 25, 25, 25]), $a([3, 15, 21, 37, 37, 37]), $a([3, 20, 26, 1, 17, 33]), $a([3, 26, 32, 1, 9, 17]), $a([3, 32, 38, 21, 29, 37]), $a([3, 38, 44, 15, 31, 47]), $a([3, 44, 50, 1, 25, 49]), $a([4, 4, 8, 47, 19, 43]), $a([4, 6, 12, 1, 1, 1]), $a([4, 8, 14, 7, 7, 7]), $a([4, 10, 16, 15, 15, 15]), $a([4, 12, 18, 25, 25, 25]), $a([4, 15, 21, 37, 37, 37]), $a([4, 20, 26, 1, 17, 33]), $a([4, 26, 32, 1, 9, 17]), $a([4, 32, 38, 21, 29, 37]), $a([4, 38, 44, 15, 31, 47]), $a([4, 44, 50, 1, 25, 49])]); /*14775*/
		$1.ccametrics = $a([$a([2, 5, 4, 39, 0, 19]), $a([2, 6, 4, 1, 0, 33]), $a([2, 7, 5, 32, 0, 12]), $a([2, 8, 5, 8, 0, 40]), $a([2, 9, 6, 14, 0, 46]), $a([2, 10, 6, 43, 0, 23]), $a([2, 12, 7, 20, 0, 52]), $a([3, 4, 4, 11, 43, 23]), $a([3, 5, 5, 1, 33, 13]), $a([3, 6, 6, 5, 37, 17]), $a([3, 7, 7, 15, 47, 27]), $a([3, 8, 7, 21, 1, 33]), $a([4, 3, 4, 40, 20, 52]), $a([4, 4, 5, 43, 23, 3]), $a([4, 5, 6, 46, 26, 6]), $a([4, 6, 7, 34, 14, 46]), $a([4, 7, 8, 29, 9, 41])]); /*14797*/
		if ($1.cca) { /*14798*/
			$1.metrics = $1.ccametrics; /*14798*/
		} /*14798*/
		$1.urows = $1.rows; /*14801*/
		$1.ucols = $1.columns; /*14802*/
		$1.i = 0; /*14803*/
		for (;;) { /*14819*/
			$1.m = $get($1.metrics, $1.i); /*14805*/
			$1.c = $get($1.m, 0); /*14806*/
			$1.r = $get($1.m, 1); /*14807*/
			$1.k = $get($1.m, 2); /*14808*/
			$1.rapl = $get($1.m, 3); /*14809*/
			$1.rapc = $get($1.m, 4); /*14810*/
			$1.rapr = $get($1.m, 5); /*14811*/
			$1.ncws = ($1.r * $1.c) - $1.k; /*14812*/
			$1.okay = true; /*14813*/
			if ($1.datcws.length > $1.ncws) { /*14814*/
				$1.okay = false; /*14814*/
			} /*14814*/
			if (($1.urows != 0) && ($1.urows != $1.r)) { /*14815*/
				$1.okay = false; /*14815*/
			} /*14815*/
			if (($1.ucols != 0) && ($1.ucols != $1.c)) { /*14816*/
				$1.okay = false; /*14816*/
			} /*14816*/
			if ($1.okay) { /*14817*/
				break; /*14817*/
			} /*14817*/
			$1.i = $1.i + 1; /*14818*/
		} /*14818*/
		$1.m = $1.datcws.length; /*14820*/
		$1.n = ($1.c * $1.r) - $1.k; /*14823*/
		$1.cws = $a(($1.c * $1.r) + 1); /*14824*/
		$puti($1.cws, 0, $1.datcws); /*14825*/
		$k[$j++] = $1.cws; /*14826*/
		$k[$j++] = $1.m; /*14826*/
		$k[$j++] = Infinity; /*14826*/
		for (var _DM = 0, _DN = $1.n - $1.m; _DM < _DN; _DM++) { /*14826*/
			$k[$j++] = 900; /*14826*/
		} /*14826*/
		var _DO = $a(); /*14826*/
		var _DP = $k[--$j]; /*14826*/
		$puti($k[--$j], _DP, _DO); /*14826*/
		$k[$j++] = $1.cws; /*14827*/
		$k[$j++] = $1.n; /*14827*/
		$k[$j++] = Infinity; /*14827*/
		for (var _DU = 0, _DV = $1.k; _DU < _DV; _DU++) { /*14827*/
			$k[$j++] = 0; /*14827*/
		} /*14827*/
		$k[$j++] = 0; /*14827*/
		var _DW = $a(); /*14827*/
		var _DX = $k[--$j]; /*14827*/
		$puti($k[--$j], _DX, _DW); /*14827*/
		$k[$j++] = Infinity; /*14830*/
		$k[$j++] = 1; /*14830*/
		for (var _DZ = 0, _Da = 928; _DZ < _Da; _DZ++) { /*14830*/
			var _Db = $k[--$j]; /*14830*/
			$k[$j++] = _Db; /*14830*/
			$k[$j++] = (_Db * 3) % 929; /*14830*/
		} /*14830*/
		$1.rsalog = $a(); /*14830*/
		$1.rslog = $a(929); /*14831*/
		for (var _De = 1; _De <= 928; _De += 1) { /*14832*/
			$put($1.rslog, $get($1.rsalog, _De), _De); /*14832*/
		} /*14832*/
		$1.rsprod = function() {
			var _Di = $k[--$j]; /*14836*/
			var _Dj = $k[--$j]; /*14836*/
			$k[$j++] = _Dj; /*14840*/
			$k[$j++] = _Di; /*14840*/
			if ((_Di != 0) && (_Dj != 0)) { /*14839*/
				var _Dm = $get($1.rslog, $k[--$j]); /*14837*/
				var _Dr = $get($1.rsalog, (_Dm + $get($1.rslog, $k[--$j])) % 928); /*14837*/
				$k[$j++] = _Dr; /*14837*/
			} else { /*14839*/
				$j -= 2; /*14839*/
				$k[$j++] = 0; /*14839*/
			} /*14839*/
		}; /*14841*/
		$k[$j++] = Infinity; /*14844*/
		$k[$j++] = 1; /*14844*/
		for (var _Dt = 0, _Du = $1.k; _Dt < _Du; _Dt++) { /*14844*/
			$k[$j++] = 0; /*14844*/
		} /*14844*/
		$1.coeffs = $a(); /*14844*/
		for (var _Dy = 1, _Dx = $1.k; _Dy <= _Dx; _Dy += 1) { /*14853*/
			$1.i = _Dy; /*14846*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*14847*/
			for (var _E5 = $1.i - 1; _E5 >= 1; _E5 -= 1) { /*14851*/
				$1.j = _E5; /*14849*/
				$k[$j++] = $1.coeffs; /*14850*/
				$k[$j++] = $1.j; /*14850*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*14850*/
				$k[$j++] = $get($1.coeffs, $1.j); /*14850*/
				$k[$j++] = $get($1.rsalog, $1.i); /*14850*/
				$1.rsprod(); /*14850*/
				var _EH = $k[--$j]; /*14850*/
				var _EI = $k[--$j]; /*14850*/
				var _EJ = $k[--$j]; /*14850*/
				$put($k[--$j], _EJ, (_EI + _EH) % 929); /*14850*/
			} /*14850*/
			$k[$j++] = $1.coeffs; /*14852*/
			$k[$j++] = 0; /*14852*/
			$k[$j++] = $get($1.coeffs, 0); /*14852*/
			$k[$j++] = $get($1.rsalog, $1.i); /*14852*/
			$1.rsprod(); /*14852*/
			var _ER = $k[--$j]; /*14852*/
			var _ES = $k[--$j]; /*14852*/
			$put($k[--$j], _ES, _ER); /*14852*/
		} /*14852*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*14854*/
		for (var _EY = $1.coeffs.length - 1; _EY >= 0; _EY -= 2) { /*14855*/
			var _EZ = $1.coeffs; /*14855*/
			$put(_EZ, _EY, 929 - $get(_EZ, _EY)); /*14855*/
		} /*14855*/
		for (var _Ed = 0, _Ec = $1.n - 1; _Ed <= _Ec; _Ed += 1) { /*14864*/
			$1.t = ($get($1.cws, _Ed) + $get($1.cws, $1.n)) % 929; /*14859*/
			for (var _El = 0, _Ek = $1.k - 1; _El <= _Ek; _El += 1) { /*14863*/
				$1.j = _El; /*14861*/
				$put($1.cws, $1.n + $1.j, ($get($1.cws, ($1.n + $1.j) + 1) + (929 - (($1.t * $get($1.coeffs, ($1.k - $1.j) - 1)) % 929))) % 929); /*14862*/
			} /*14862*/
		} /*14862*/
		for (var _F2 = $1.n, _F1 = $1.n + $1.k; _F2 <= _F1; _F2 += 1) { /*14865*/
			$put($1.cws, _F2, (929 - $get($1.cws, _F2)) % 929); /*14865*/
		} /*14865*/
		$1.cws = $geti($1.cws, 0, $1.cws.length - 1); /*14868*/
		$1.clusters = $a([$a([120256, 125680, 128380, 120032, 125560, 128318, 108736, 119920, 108640, 86080, 108592, 86048, 110016, 120560, 125820, 109792, 120440, 125758, 88256, 109680, 88160, 89536, 110320, 120700, 89312, 110200, 120638, 89200, 110140, 89840, 110460, 89720, 110398, 89980, 128506, 119520, 125304, 128190, 107712, 119408, 125244, 107616, 119352, 84032, 107568, 119324, 84000, 107544, 83984, 108256, 119672, 125374, 85184, 108144, 119612, 85088, 108088, 119582, 85040, 108060, 85728, 108408, 119742, 85616, 108348, 85560, 108318, 85880, 108478, 85820, 85790, 107200, 119152, 125116, 107104, 119096, 125086, 83008, 107056, 119068, 82976, 107032, 82960, 82952, 83648, 107376, 119228, 83552, 107320, 119198, 83504, 107292, 83480, 83468, 83824, 107452, 83768, 107422, 83740, 83900, 106848, 118968, 125022, 82496, 106800, 118940, 82464, 106776, 118926, 82448, 106764, 82440, 106758, 82784, 106936, 119006, 82736, 106908, 82712, 106894, 82700, 82694, 106974, 82830, 82240, 106672, 118876, 82208, 106648, 118862, 82192, 106636, 82184, 106630, 82180, 82352, 82328, 82316, 82080, 118830, 106572, 106566, 82050, 117472, 124280, 127678, 103616, 117360, 124220, 103520, 117304, 124190, 75840, 103472, 75808, 104160, 117624, 124350, 76992, 104048, 117564, 76896, 103992, 76848, 76824, 77536, 104312, 117694, 77424, 104252, 77368, 77340, 77688, 104382, 77628, 77758, 121536, 126320, 128700, 121440, 126264, 128670, 111680, 121392, 126236, 111648, 121368, 126222, 111632, 121356, 103104, 117104, 124092, 112320, 103008, 117048, 124062, 112224, 121656, 126366, 93248, 74784, 102936, 117006, 93216, 112152, 93200, 75456, 103280, 117180, 93888, 75360, 103224, 117150, 93792, 112440, 121758, 93744, 75288, 93720, 75632, 103356, 94064, 75576, 103326, 94008, 112542, 93980, 75708, 94140, 75678, 94110, 121184, 126136, 128606, 111168, 121136, 126108, 111136, 121112, 126094, 111120, 121100, 111112, 111108, 102752, 116920, 123998, 111456, 102704, 116892, 91712, 74272, 121244, 116878, 91680, 74256, 102668, 91664, 111372, 102662, 74244, 74592, 102840, 116958, 92000, 74544, 102812, 91952, 111516, 102798, 91928, 74508, 74502, 74680, 102878, 92088, 74652, 92060, 74638, 92046, 92126, 110912, 121008, 126044, 110880, 120984, 126030, 110864, 120972, 110856, 120966, 110852, 110850, 74048, 102576, 116828, 90944, 74016, 102552, 116814, 90912, 111000, 121038, 90896, 73992, 102534, 90888, 110982, 90884, 74160, 102620, 91056, 74136, 102606, 91032, 111054, 91020, 74118, 91014, 91100, 91086, 110752, 120920, 125998, 110736, 120908, 110728, 120902, 110724, 110722, 73888, 102488, 116782, 90528, 73872, 102476, 90512, 110796, 102470, 90504, 73860, 90500, 73858, 73944, 90584, 90572, 90566, 120876, 120870, 110658, 102444, 73800, 90312, 90308, 90306, 101056, 116080, 123580, 100960, 116024, 70720, 100912, 115996, 70688, 100888, 70672, 70664, 71360, 101232, 116156, 71264, 101176, 116126, 71216, 101148, 71192, 71180, 71536, 101308, 71480, 101278, 71452, 71612, 71582, 118112, 124600, 127838, 105024, 118064, 124572, 104992, 118040, 124558, 104976, 118028, 104968, 118022, 100704, 115896, 123486, 105312, 100656, 115868, 79424, 70176, 118172, 115854, 79392, 105240, 100620, 79376, 70152, 79368, 70496, 100792, 115934, 79712, 70448, 118238, 79664, 105372, 100750, 79640, 70412, 79628, 70584, 100830, 79800, 70556, 79772, 70542, 70622, 79838, 122176, 126640, 128860, 122144, 126616, 128846, 122128, 126604, 122120, 126598, 122116, 104768, 117936, 124508, 113472, 104736, 126684, 124494, 113440, 122264, 126670, 113424, 104712, 117894, 113416, 122246, 104706, 69952, 100528, 115804, 78656, 69920, 100504, 115790, 96064, 78624, 104856, 117966, 96032, 113560, 122318, 100486, 96016, 78600, 104838, 96008, 69890, 70064, 100572, 78768, 70040, 100558, 96176, 78744, 104910, 96152, 113614, 70022, 78726, 70108, 78812, 70094, 96220, 78798, 122016, 126552, 128814, 122000, 126540, 121992, 126534, 121988, 121986, 104608, 117848, 124462, 113056, 104592, 126574, 113040, 122060, 117830, 113032, 104580, 113028, 104578, 113026, 69792, 100440, 115758, 78240, 69776, 100428, 95136, 78224, 104652, 100422, 95120, 113100, 69764, 95112, 78212, 69762, 78210, 69848, 100462, 78296, 69836, 95192, 78284, 69830, 95180, 78278, 69870, 95214, 121936, 126508, 121928, 126502, 121924, 121922, 104528, 117804, 112848, 104520, 117798, 112840, 121958, 112836, 104514, 112834, 69712, 100396, 78032, 69704, 100390, 94672, 78024, 104550, 94664, 112870, 69698, 94660, 78018, 94658, 78060, 94700, 94694, 126486, 121890, 117782, 104484, 104482, 69672, 77928, 94440, 69666, 77922, 99680, 68160, 99632, 68128, 99608, 115342, 68112, 99596, 68104, 99590, 68448, 99768, 115422, 68400, 99740, 68376, 99726, 68364, 68358, 68536, 99806, 68508, 68494, 68574, 101696, 116400, 123740, 101664, 116376, 101648, 116364, 101640, 116358, 101636, 67904, 99504, 115292, 72512, 67872, 116444, 115278, 72480, 101784, 116430, 72464, 67848, 99462, 72456, 101766, 67842, 68016, 99548, 72624, 67992, 99534, 72600, 101838, 72588, 67974, 68060, 72668, 68046, 72654, 118432, 124760, 127918, 118416, 124748, 118408, 124742, 118404, 118402, 101536, 116312, 105888, 101520, 116300, 105872, 118476, 116294, 105864, 101508, 105860, 101506, 105858, 67744, 99416, 72096, 67728, 116334, 80800, 72080, 101580, 99398, 80784, 105932, 67716, 80776, 72068, 67714, 72066, 67800, 99438, 72152, 67788, 80856, 72140, 67782, 80844, 72134, 67822, 72174, 80878, 126800, 128940, 126792, 128934, 126788, 126786, 118352, 124716, 122576, 126828, 124710, 122568, 126822, 122564, 118338, 122562, 101456, 116268, 105680, 101448, 116262, 114128, 105672, 118374, 114120, 122598, 101442, 114116, 105666, 114114, 67664, 99372, 71888, 67656, 99366, 80336, 71880, 101478, 97232, 80328, 105702, 67650, 97224, 114150, 71874, 97220, 67692, 71916, 67686, 80364, 71910, 97260, 80358, 97254, 126760, 128918, 126756, 126754, 118312, 124694, 122472, 126774, 122468, 118306, 122466, 101416, 116246, 105576, 101412, 113896, 105572, 101410, 113892, 105570, 113890, 67624, 99350, 71784, 101430, 80104, 71780, 67618, 96744, 80100, 71778, 96740, 80098, 96738, 71798, 96758, 126738, 122420, 122418, 105524, 113780, 113778, 71732, 79988, 96500, 96498, 66880, 66848, 98968, 66832, 66824, 66820, 66992, 66968, 66956, 66950, 67036, 67022, 100000, 99984, 115532, 99976, 115526, 99972, 99970, 66720, 98904, 69024, 100056, 98892, 69008, 100044, 69000, 100038, 68996, 66690, 68994, 66776, 98926, 69080, 100078, 69068, 66758, 69062, 66798, 69102, 116560, 116552, 116548, 116546, 99920, 102096, 116588, 115494, 102088, 116582, 102084, 99906, 102082, 66640, 68816, 66632, 98854, 73168, 68808, 66628, 73160, 68804, 66626, 73156, 68802, 66668, 68844, 66662, 73196, 68838, 73190, 124840, 124836, 124834, 116520, 118632, 124854, 118628, 116514, 118626, 99880, 115478, 101992, 116534, 106216, 101988, 99874, 106212, 101986, 106210, 66600, 98838, 68712, 99894, 72936, 68708, 66594, 81384, 72932, 68706, 81380, 72930, 66614, 68726, 72950, 81398, 128980, 128978, 124820, 126900, 124818, 126898, 116500, 118580, 116498, 122740, 118578, 122738, 99860, 101940, 99858, 106100, 101938, 114420]), $a([128352, 129720, 125504, 128304, 129692, 125472, 128280, 129678, 125456, 128268, 125448, 128262, 125444, 125792, 128440, 129758, 120384, 125744, 128412, 120352, 125720, 128398, 120336, 125708, 120328, 125702, 120324, 120672, 125880, 128478, 110144, 120624, 125852, 110112, 120600, 125838, 110096, 120588, 110088, 120582, 110084, 110432, 120760, 125918, 89664, 110384, 120732, 89632, 110360, 120718, 89616, 110348, 89608, 110342, 89952, 110520, 120798, 89904, 110492, 89880, 110478, 89868, 90040, 110558, 90012, 89998, 125248, 128176, 129628, 125216, 128152, 129614, 125200, 128140, 125192, 128134, 125188, 125186, 119616, 125360, 128220, 119584, 125336, 128206, 119568, 125324, 119560, 125318, 119556, 119554, 108352, 119728, 125404, 108320, 119704, 125390, 108304, 119692, 108296, 119686, 108292, 108290, 85824, 108464, 119772, 85792, 108440, 119758, 85776, 108428, 85768, 108422, 85764, 85936, 108508, 85912, 108494, 85900, 85894, 85980, 85966, 125088, 128088, 129582, 125072, 128076, 125064, 128070, 125060, 125058, 119200, 125144, 128110, 119184, 125132, 119176, 125126, 119172, 119170, 107424, 119256, 125166, 107408, 119244, 107400, 119238, 107396, 107394, 83872, 107480, 119278, 83856, 107468, 83848, 107462, 83844, 83842, 83928, 107502, 83916, 83910, 83950, 125008, 128044, 125000, 128038, 124996, 124994, 118992, 125036, 118984, 125030, 118980, 118978, 106960, 119020, 106952, 119014, 106948, 106946, 82896, 106988, 82888, 106982, 82884, 82882, 82924, 82918, 124968, 128022, 124964, 124962, 118888, 124982, 118884, 118882, 106728, 118902, 106724, 106722, 82408, 106742, 82404, 82402, 124948, 124946, 118836, 118834, 106612, 106610, 124224, 127664, 129372, 124192, 127640, 129358, 124176, 127628, 124168, 127622, 124164, 124162, 117568, 124336, 127708, 117536, 124312, 127694, 117520, 124300, 117512, 124294, 117508, 117506, 104256, 117680, 124380, 104224, 117656, 124366, 104208, 117644, 104200, 117638, 104196, 104194, 77632, 104368, 117724, 77600, 104344, 117710, 77584, 104332, 77576, 104326, 77572, 77744, 104412, 77720, 104398, 77708, 77702, 77788, 77774, 128672, 129880, 93168, 128656, 129868, 92664, 128648, 129862, 92412, 128644, 128642, 124064, 127576, 129326, 126368, 124048, 129902, 126352, 128716, 127558, 126344, 124036, 126340, 124034, 126338, 117152, 124120, 127598, 121760, 117136, 124108, 121744, 126412, 124102, 121736, 117124, 121732, 117122, 121730, 103328, 117208, 124142, 112544, 103312, 117196, 112528, 121804, 117190, 112520, 103300, 112516, 103298, 112514, 75680, 103384, 117230, 94112, 75664, 103372, 94096, 112588, 103366, 94088, 75652, 94084, 75650, 75736, 103406, 94168, 75724, 94156, 75718, 94150, 75758, 128592, 129836, 91640, 128584, 129830, 91388, 128580, 91262, 128578, 123984, 127532, 126160, 123976, 127526, 126152, 128614, 126148, 123970, 126146, 116944, 124012, 121296, 116936, 124006, 121288, 126182, 121284, 116930, 121282, 102864, 116972, 111568, 102856, 116966, 111560, 121318, 111556, 102850, 111554, 74704, 102892, 92112, 74696, 102886, 92104, 111590, 92100, 74690, 92098, 74732, 92140, 74726, 92134, 128552, 129814, 90876, 128548, 90750, 128546, 123944, 127510, 126056, 128566, 126052, 123938, 126050, 116840, 123958, 121064, 116836, 121060, 116834, 121058, 102632, 116854, 111080, 121078, 111076, 102626, 111074, 74216, 102646, 91112, 74212, 91108, 74210, 91106, 74230, 91126, 128532, 90494, 128530, 123924, 126004, 123922, 126002, 116788, 120948, 116786, 120946, 102516, 110836, 102514, 110834, 73972, 90612, 73970, 90610, 128522, 123914, 125978, 116762, 120890, 102458, 110714, 123552, 127320, 129198, 123536, 127308, 123528, 127302, 123524, 123522, 116128, 123608, 127342, 116112, 123596, 116104, 123590, 116100, 116098, 101280, 116184, 123630, 101264, 116172, 101256, 116166, 101252, 101250, 71584, 101336, 116206, 71568, 101324, 71560, 101318, 71556, 71554, 71640, 101358, 71628, 71622, 71662, 127824, 129452, 79352, 127816, 129446, 79100, 127812, 78974, 127810, 123472, 127276, 124624, 123464, 127270, 124616, 127846, 124612, 123458, 124610, 115920, 123500, 118224, 115912, 123494, 118216, 124646, 118212, 115906, 118210, 100816, 115948, 105424, 100808, 115942, 105416, 118246, 105412, 100802, 105410, 70608, 100844, 79824, 70600, 100838, 79816, 105446, 79812, 70594, 79810, 70636, 79852, 70630, 79846, 129960, 95728, 113404, 129956, 95480, 113278, 129954, 95356, 95294, 127784, 129430, 78588, 128872, 129974, 95996, 78462, 128868, 127778, 95870, 128866, 123432, 127254, 124520, 123428, 126696, 128886, 123426, 126692, 124514, 126690, 115816, 123446, 117992, 115812, 122344, 117988, 115810, 122340, 117986, 122338, 100584, 115830, 104936, 100580, 113640, 104932, 100578, 113636, 104930, 113634, 70120, 100598, 78824, 70116, 96232, 78820, 70114, 96228, 78818, 96226, 70134, 78838, 129940, 94968, 113022, 129938, 94844, 94782, 127764, 78206, 128820, 127762, 95102, 128818, 123412, 124468, 123410, 126580, 124466, 126578, 115764, 117876, 115762, 122100, 117874, 122098, 100468, 104692, 100466, 113140, 104690, 113138, 69876, 78324, 69874, 95220, 78322, 95218, 129930, 94588, 94526, 127754, 128794, 123402, 124442, 126522, 115738, 117818, 121978, 100410, 104570, 112890, 69754, 78074, 94714, 94398, 123216, 127148, 123208, 127142, 123204, 123202, 115408, 123244, 115400, 123238, 115396, 115394, 99792, 115436, 99784, 115430, 99780, 99778, 68560, 99820, 68552, 99814, 68548, 68546, 68588, 68582, 127400, 129238, 72444, 127396, 72318, 127394, 123176, 127126, 123752, 123172, 123748, 123170, 123746, 115304, 123190, 116456, 115300, 116452, 115298, 116450, 99560, 115318, 101864, 99556, 101860, 99554, 101858, 68072, 99574, 72680, 68068, 72676, 68066, 72674, 68086, 72694, 129492, 80632, 105854, 129490, 80508, 80446, 127380, 72062, 127924, 127378, 80766, 127922, 123156, 123700, 123154, 124788, 123698, 124786, 115252, 116340, 115250, 118516, 116338, 118514, 99444, 101620, 99442, 105972, 101618, 105970, 67828, 72180, 67826, 80884, 72178, 80882, 97008, 114044, 96888, 113982, 96828, 96798, 129482, 80252, 130010, 97148, 80190, 97086, 127370, 127898, 128954, 123146, 123674, 124730, 126842, 115226, 116282, 118394, 122618, 99386, 101498, 105722, 114170, 67706, 71930, 80378, 96632, 113854, 96572, 96542, 80062, 96702, 96444, 96414, 96350, 123048, 123044, 123042, 115048, 123062, 115044, 115042, 99048, 115062, 99044, 99042, 67048, 99062, 67044, 67042, 67062, 127188, 68990, 127186, 123028, 123316, 123026, 123314, 114996, 115572, 114994, 115570, 98932, 100084, 98930, 100082, 66804, 69108, 66802, 69106, 129258, 73084, 73022, 127178, 127450, 123018, 123290, 123834, 114970, 115514, 116602, 98874, 99962, 102138, 66682, 68858, 73210, 81272, 106174, 81212, 81182, 72894, 81342, 97648, 114364, 97592, 114334, 97564, 97550, 81084, 97724, 81054, 97694, 97464, 114270, 97436, 97422, 80990, 97502, 97372, 97358, 97326, 114868, 114866, 98676, 98674, 66292, 66290, 123098, 114842, 115130, 98618, 99194, 66170, 67322, 69310, 73404, 73374, 81592, 106334, 81564, 81550, 73310, 81630, 97968, 114524, 97944, 114510, 97932, 97926, 81500, 98012, 81486, 97998, 97880, 114478, 97868, 97862, 81454, 97902, 97836, 97830, 69470, 73564, 73550, 81752, 106414, 81740, 81734, 73518, 81774, 81708, 81702]), $a([109536, 120312, 86976, 109040, 120060, 86496, 108792, 119934, 86256, 108668, 86136, 129744, 89056, 110072, 129736, 88560, 109820, 129732, 88312, 109694, 129730, 88188, 128464, 129772, 89592, 128456, 129766, 89340, 128452, 89214, 128450, 125904, 128492, 125896, 128486, 125892, 125890, 120784, 125932, 120776, 125926, 120772, 120770, 110544, 120812, 110536, 120806, 110532, 84928, 108016, 119548, 84448, 107768, 119422, 84208, 107644, 84088, 107582, 84028, 129640, 85488, 108284, 129636, 85240, 108158, 129634, 85116, 85054, 128232, 129654, 85756, 128228, 85630, 128226, 125416, 128246, 125412, 125410, 119784, 125430, 119780, 119778, 108520, 119798, 108516, 108514, 83424, 107256, 119166, 83184, 107132, 83064, 107070, 83004, 82974, 129588, 83704, 107390, 129586, 83580, 83518, 128116, 83838, 128114, 125172, 125170, 119284, 119282, 107508, 107506, 82672, 106876, 82552, 106814, 82492, 82462, 129562, 82812, 82750, 128058, 125050, 119034, 82296, 106686, 82236, 82206, 82366, 82108, 82078, 76736, 103920, 117500, 76256, 103672, 117374, 76016, 103548, 75896, 103486, 75836, 129384, 77296, 104188, 129380, 77048, 104062, 129378, 76924, 76862, 127720, 129398, 77564, 127716, 77438, 127714, 124392, 127734, 124388, 124386, 117736, 124406, 117732, 117730, 104424, 117750, 104420, 104418, 112096, 121592, 126334, 92608, 111856, 121468, 92384, 111736, 121406, 92272, 111676, 92216, 111646, 92188, 75232, 103160, 117118, 93664, 74992, 103036, 93424, 112252, 102974, 93304, 74812, 93244, 74782, 93214, 129332, 75512, 103294, 129908, 129330, 93944, 75388, 129906, 93820, 75326, 93758, 127604, 75646, 128756, 127602, 94078, 128754, 124148, 126452, 124146, 126450, 117236, 121844, 117234, 121842, 103412, 103410, 91584, 111344, 121212, 91360, 111224, 121150, 91248, 111164, 91192, 111134, 91164, 91150, 74480, 102780, 91888, 74360, 102718, 91768, 111422, 91708, 74270, 91678, 129306, 74620, 129850, 92028, 74558, 91966, 127546, 128634, 124026, 126202, 116986, 121338, 102906, 90848, 110968, 121022, 90736, 110908, 90680, 110878, 90652, 90638, 74104, 102590, 91000, 74044, 90940, 74014, 90910, 74174, 91070, 90480, 110780, 90424, 110750, 90396, 90382, 73916, 90556, 73886, 90526, 90296, 110686, 90268, 90254, 73822, 90334, 90204, 90190, 71136, 101112, 116094, 70896, 100988, 70776, 100926, 70716, 70686, 129204, 71416, 101246, 129202, 71292, 71230, 127348, 71550, 127346, 123636, 123634, 116212, 116210, 101364, 101362, 79296, 105200, 118140, 79072, 105080, 118078, 78960, 105020, 78904, 104990, 78876, 78862, 70384, 100732, 79600, 70264, 100670, 79480, 105278, 79420, 70174, 79390, 129178, 70524, 129466, 79740, 70462, 79678, 127290, 127866, 123514, 124666, 115962, 118266, 100858, 113376, 122232, 126654, 95424, 113264, 122172, 95328, 113208, 122142, 95280, 113180, 95256, 113166, 95244, 78560, 104824, 117950, 95968, 78448, 104764, 95856, 113468, 104734, 95800, 78364, 95772, 78350, 95758, 70008, 100542, 78712, 69948, 96120, 78652, 69918, 96060, 78622, 96030, 70078, 78782, 96190, 94912, 113008, 122044, 94816, 112952, 122014, 94768, 112924, 94744, 112910, 94732, 94726, 78192, 104636, 95088, 78136, 104606, 95032, 113054, 95004, 78094, 94990, 69820, 78268, 69790, 95164, 78238, 95134, 94560, 112824, 121950, 94512, 112796, 94488, 112782, 94476, 94470, 78008, 104542, 94648, 77980, 94620, 77966, 94606, 69726, 78046, 94686, 94384, 112732, 94360, 112718, 94348, 94342, 77916, 94428, 77902, 94414, 94296, 112686, 94284, 94278, 77870, 94318, 94252, 94246, 68336, 99708, 68216, 99646, 68156, 68126, 68476, 68414, 127162, 123258, 115450, 99834, 72416, 101752, 116414, 72304, 101692, 72248, 101662, 72220, 72206, 67960, 99518, 72568, 67900, 72508, 67870, 72478, 68030, 72638, 80576, 105840, 118460, 80480, 105784, 118430, 80432, 105756, 80408, 105742, 80396, 80390, 72048, 101564, 80752, 71992, 101534, 80696, 71964, 80668, 71950, 80654, 67772, 72124, 67742, 80828, 72094, 80798, 114016, 122552, 126814, 96832, 113968, 122524, 96800, 113944, 122510, 96784, 113932, 96776, 113926, 96772, 80224, 105656, 118366, 97120, 80176, 105628, 97072, 114076, 105614, 97048, 80140, 97036, 80134, 97030, 71864, 101470, 80312, 71836, 97208, 80284, 71822, 97180, 80270, 97166, 67678, 71902, 80350, 97246, 96576, 113840, 122460, 96544, 113816, 122446, 96528, 113804, 96520, 113798, 96516, 96514, 80048, 105564, 96688, 80024, 105550, 96664, 113870, 96652, 80006, 96646, 71772, 80092, 71758, 96732, 80078, 96718, 96416, 113752, 122414, 96400, 113740, 96392, 113734, 96388, 96386, 79960, 105518, 96472, 79948, 96460, 79942, 96454, 71726, 79982, 96494, 96336, 113708, 96328, 113702, 96324, 96322, 79916, 96364, 79910, 96358, 96296, 113686, 96292, 96290, 79894, 96310, 66936, 99006, 66876, 66846, 67006, 68976, 100028, 68920, 99998, 68892, 68878, 66748, 69052, 66718, 69022, 73056, 102072, 116574, 73008, 102044, 72984, 102030, 72972, 72966, 68792, 99934, 73144, 68764, 73116, 68750, 73102, 66654, 68830, 73182, 81216, 106160, 118620, 81184, 106136, 118606, 81168, 106124, 81160, 106118, 81156, 81154, 72880, 101980, 81328, 72856, 101966, 81304, 106190, 81292, 72838, 81286, 68700, 72924, 68686, 81372, 72910, 81358, 114336, 122712, 126894, 114320, 122700, 114312, 122694, 114308, 114306, 81056, 106072, 118574, 97696, 81040, 106060, 97680, 114380, 106054, 97672, 81028, 97668, 81026, 97666, 72792, 101934, 81112, 72780, 97752, 81100, 72774, 97740, 81094, 97734, 68654, 72814, 81134, 97774, 114256, 122668, 114248, 122662, 114244, 114242, 80976, 106028, 97488, 80968, 106022, 97480, 114278, 97476, 80962, 97474, 72748, 81004, 72742, 97516, 80998, 97510, 114216, 122646, 114212, 114210, 80936, 106006, 97384, 80932, 97380, 80930, 97378, 72726, 80950, 97398, 114196, 114194, 80916, 97332, 80914, 97330, 66236, 66206, 67256, 99166, 67228, 67214, 66142, 67294, 69296, 100188, 69272, 100174, 69260, 69254, 67164, 69340, 67150, 69326, 73376, 102232, 116654, 73360, 102220, 73352, 102214, 73348, 73346, 69208, 100142, 73432, 102254, 73420, 69190, 73414, 67118, 69230, 73454, 106320, 118700, 106312, 118694, 106308, 106306, 73296, 102188, 81616, 106348, 102182, 81608, 73284, 81604, 73282, 81602, 69164, 73324, 69158, 81644, 73318, 81638, 122792, 126934, 122788, 122786, 106280, 118678, 114536, 106276, 114532, 106274, 114530, 73256, 102166, 81512, 73252, 98024, 81508, 73250, 98020, 81506, 98018, 69142, 73270, 81526, 98038, 122772, 122770, 106260, 114484, 106258, 114482, 73236, 81460, 73234, 97908, 81458, 97906, 122762, 106250, 114458, 73226, 81434, 97850, 66396, 66382, 67416, 99246, 67404, 67398, 66350, 67438, 69456, 100268, 69448, 100262, 69444, 69442, 67372, 69484, 67366, 69478, 102312, 116694, 102308, 102306, 69416, 100246, 73576, 102326, 73572, 69410, 73570, 67350, 69430, 73590, 118740, 118738, 102292, 106420, 102290, 106418, 69396, 73524, 69394, 81780, 73522, 81778, 118730, 102282, 106394, 69386, 73498, 81722, 66476, 66470, 67496, 99286, 67492, 67490, 66454, 67510, 100308, 100306, 67476, 69556, 67474, 69554, 116714])]); /*15110*/
		$1.raps = $a([$a([802, 930, 946, 818, 882, 890, 826, 954, 922, 986, 970, 906, 778, 794, 786, 914, 978, 982, 980, 916, 948, 932, 934, 942, 940, 936, 808, 812, 814, 806, 822, 950, 918, 790, 788, 820, 884, 868, 870, 878, 876, 872, 840, 856, 860, 862, 846, 844, 836, 838, 834, 866]), $a([718, 590, 622, 558, 550, 566, 534, 530, 538, 570, 562, 546, 610, 626, 634, 762, 754, 758, 630, 628, 612, 614, 582, 578, 706, 738, 742, 740, 748, 620, 556, 552, 616, 744, 712, 716, 708, 710, 646, 654, 652, 668, 664, 696, 688, 656, 720, 592, 600, 604, 732, 734])]); /*15125*/
		$1.cwtobits = function() {
			var _FI = $get($1.clusters, $k[--$j]); /*15129*/
			$1.v = $get(_FI, $k[--$j]); /*15129*/
			$k[$j++] = Infinity; /*15130*/
			for (var _FL = 0, _FM = 17; _FL < _FM; _FL++) { /*15130*/
				$k[$j++] = 0; /*15130*/
			} /*15130*/
			var _FP = $cvrs($s(17), $1.v, 2); /*15130*/
			for (var _FQ = 0, _FR = _FP.length; _FQ < _FR; _FQ++) { /*15130*/
				$k[$j++] = $get(_FP, _FQ) - 48; /*15130*/
			} /*15130*/
			var _FT = $a(); /*15130*/
			$k[$j++] = $geti(_FT, _FT.length - 17, 17); /*15131*/
		}; /*15132*/
		$1.raptobits = function() {
			var _FX = $get($1.raps, $k[--$j]); /*15136*/
			$1.v = $get(_FX, $k[--$j]); /*15136*/
			$k[$j++] = Infinity; /*15137*/
			for (var _Fa = 0, _Fb = 10; _Fa < _Fb; _Fa++) { /*15137*/
				$k[$j++] = 0; /*15137*/
			} /*15137*/
			var _Fe = $cvrs($s(10), $1.v, 2); /*15137*/
			for (var _Ff = 0, _Fg = _Fe.length; _Ff < _Fg; _Ff++) { /*15137*/
				$k[$j++] = $get(_Fe, _Ff) - 48; /*15137*/
			} /*15137*/
			var _Fi = $a(); /*15137*/
			$k[$j++] = $geti(_Fi, _Fi.length - 10, 10); /*15138*/
		}; /*15139*/
		$1.rwid = $get($a([38, 55, 82, 99]), $1.c - 1); /*15142*/
		if (($1.c == 3) && $1.cca) { /*15143*/
			$1.rwid = 72; /*15143*/
		} /*15143*/
		$1.pixs = $a($1.rwid * $1.r); /*15144*/
		for (var _Fu = 0, _Ft = $1.r - 1; _Fu <= _Ft; _Fu += 1) { /*15182*/
			$1.i = _Fu; /*15147*/
			$1.clst = (($1.i + $1.rapl) - 1) % 3; /*15148*/
			$k[$j++] = $1.pixs; /*15180*/
			$k[$j++] = $1.rwid * $1.i; /*15180*/
			$k[$j++] = Infinity; /*15180*/
			if ($1.c == 1) { /*15154*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*15151*/
				$k[$j++] = 0; /*15151*/
				$1.raptobits(); /*15151*/
				$aload($k[--$j]); /*15151*/
				$k[$j++] = $get($1.cws, $1.i); /*15152*/
				$k[$j++] = $1.clst; /*15152*/
				$1.cwtobits(); /*15152*/
				$aload($k[--$j]); /*15152*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*15153*/
				$k[$j++] = 0; /*15153*/
				$1.raptobits(); /*15153*/
				$aload($k[--$j]); /*15153*/
			} /*15153*/
			if ($1.c == 2) { /*15160*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*15156*/
				$k[$j++] = 0; /*15156*/
				$1.raptobits(); /*15156*/
				$aload($k[--$j]); /*15156*/
				$k[$j++] = $get($1.cws, $1.i * 2); /*15157*/
				$k[$j++] = $1.clst; /*15157*/
				$1.cwtobits(); /*15157*/
				$aload($k[--$j]); /*15157*/
				$k[$j++] = $get($1.cws, ($1.i * 2) + 1); /*15158*/
				$k[$j++] = $1.clst; /*15158*/
				$1.cwtobits(); /*15158*/
				$aload($k[--$j]); /*15158*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*15159*/
				$k[$j++] = 0; /*15159*/
				$1.raptobits(); /*15159*/
				$aload($k[--$j]); /*15159*/
			} /*15159*/
			if ($1.c == 3) { /*15170*/
				if (!$1.cca) { /*15164*/
					$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*15163*/
					$k[$j++] = 0; /*15163*/
					$1.raptobits(); /*15163*/
					$aload($k[--$j]); /*15163*/
				} /*15163*/
				$k[$j++] = $get($1.cws, $1.i * 3); /*15165*/
				$k[$j++] = $1.clst; /*15165*/
				$1.cwtobits(); /*15165*/
				$aload($k[--$j]); /*15165*/
				$k[$j++] = (($1.i + $1.rapc) - 1) % 52; /*15166*/
				$k[$j++] = 1; /*15166*/
				$1.raptobits(); /*15166*/
				$aload($k[--$j]); /*15166*/
				$k[$j++] = $get($1.cws, ($1.i * 3) + 1); /*15167*/
				$k[$j++] = $1.clst; /*15167*/
				$1.cwtobits(); /*15167*/
				$aload($k[--$j]); /*15167*/
				$k[$j++] = $get($1.cws, ($1.i * 3) + 2); /*15168*/
				$k[$j++] = $1.clst; /*15168*/
				$1.cwtobits(); /*15168*/
				$aload($k[--$j]); /*15168*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*15169*/
				$k[$j++] = 0; /*15169*/
				$1.raptobits(); /*15169*/
				$aload($k[--$j]); /*15169*/
			} /*15169*/
			if ($1.c == 4) { /*15179*/
				$k[$j++] = (($1.i + $1.rapl) - 1) % 52; /*15172*/
				$k[$j++] = 0; /*15172*/
				$1.raptobits(); /*15172*/
				$aload($k[--$j]); /*15172*/
				$k[$j++] = $get($1.cws, $1.i * 4); /*15173*/
				$k[$j++] = $1.clst; /*15173*/
				$1.cwtobits(); /*15173*/
				$aload($k[--$j]); /*15173*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 1); /*15174*/
				$k[$j++] = $1.clst; /*15174*/
				$1.cwtobits(); /*15174*/
				$aload($k[--$j]); /*15174*/
				$k[$j++] = (($1.i + $1.rapc) - 1) % 52; /*15175*/
				$k[$j++] = 1; /*15175*/
				$1.raptobits(); /*15175*/
				$aload($k[--$j]); /*15175*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 2); /*15176*/
				$k[$j++] = $1.clst; /*15176*/
				$1.cwtobits(); /*15176*/
				$aload($k[--$j]); /*15176*/
				$k[$j++] = $get($1.cws, ($1.i * 4) + 3); /*15177*/
				$k[$j++] = $1.clst; /*15177*/
				$1.cwtobits(); /*15177*/
				$aload($k[--$j]); /*15177*/
				$k[$j++] = (($1.i + $1.rapr) - 1) % 52; /*15178*/
				$k[$j++] = 0; /*15178*/
				$1.raptobits(); /*15178*/
				$aload($k[--$j]); /*15178*/
			} /*15178*/
			$k[$j++] = 1; /*15180*/
			var _HN = $a(); /*15180*/
			var _HO = $k[--$j]; /*15181*/
			$puti($k[--$j], _HO, _HN); /*15181*/
		} /*15181*/
		var _HX = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.rwid,
			pixy: $1.r,
			height: ($1.r / 72) * $1.rowmult,
			width: $1.rwid / 72,
			opt: $1.options
		}; /*15192*/
		$k[$j++] = _HX; /*15195*/
		if (!$1.dontdraw) { /*15195*/
			$0.renmatrix(); /*15195*/
		} /*15195*/
	};
	$0.datamatrix = function() {
		var $1 = {}; /*15222*/
		$1.options = $k[--$j]; /*15224*/
		$1.barcode = $k[--$j]; /*15225*/
		$1.dontdraw = false; /*15227*/
		$1.columns = 0; /*15228*/
		$1.rows = 0; /*15229*/
		$1.format = "square"; /*15230*/
		$1.version = "unset"; /*15231*/
		$1.parse = false; /*15232*/
		$1.parsefnc = false; /*15233*/
		$1.dmre = false; /*15234*/
		$forall($1.options, function() { /*15245*/
			var _3 = $k[--$j]; /*15245*/
			$1[$k[--$j]] = _3; /*15245*/
		}); /*15245*/
		if ($ne($1.version, "unset")) { /*15251*/
			$search($1.version, "x"); /*15248*/
			$j--; /*15249*/
			$1.rows = $k[--$j]; /*15249*/
			$j--; /*15250*/
			$1.columns = $k[--$j]; /*15250*/
		} /*15250*/
		$1.columns = ~~$z($1.columns); /*15253*/
		$1.rows = ~~$z($1.rows); /*15254*/
		$1.mac05comp = false; /*15278*/
		$1.mac06comp = false; /*15279*/
		if ($1.barcode.length >= 9) { /*15288*/
			var _D = $geti($1.barcode, 0, 7); /*15281*/
			if ((($eq(_D, "[)>03605035")) || ($eq(_D, "[)>03606035"))) && $eq($geti($1.barcode, $1.barcode.length - 2, 2), "036004")) { /*15287*/
				if ($get($1.barcode, 5) == 53) { /*15285*/
					$k[$j++] = "mac05comp"; /*15285*/
				} else { /*15285*/
					$k[$j++] = "mac06comp"; /*15285*/
				} /*15285*/
				$1[$k[--$j]] = true; /*15285*/
				$1.barcode = $geti($1.barcode, 7, $1.barcode.length - 9); /*15286*/
			} /*15286*/
		} /*15286*/
		$1.barlen = $1.barcode.length; /*15290*/
		$1.fnc1 = -1; /*15293*/
		$1.prog = -2; /*15293*/
		$1.m05 = -3; /*15293*/
		$1.m06 = -4; /*15293*/
		var _S = {
			FNC1: $1.fnc1,
			PROG: $1.prog,
			MAC5: $1.m05,
			MAC6: $1.m06
		}; /*15298*/
		$1.fncvals = _S; /*15299*/
		$1.msg = $a($1.barlen); /*15300*/
		$1.i = 0; /*15301*/
		$1.j = 0; /*15301*/
		for (;;) { /*15315*/
			if ($1.i == $1.barlen) { /*15302*/
				break; /*15302*/
			} /*15302*/
			$1.char = $get($1.barcode, $1.i); /*15303*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*15311*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*15309*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*15306*/
					$1.i = $1.i + 4; /*15307*/
				} else { /*15309*/
					$1.i = $1.i + 1; /*15309*/
				} /*15309*/
			} /*15309*/
			$put($1.msg, $1.j, $1.char); /*15312*/
			$1.i = $1.i + 1; /*15313*/
			$1.j = $1.j + 1; /*15314*/
		} /*15314*/
		$1.msg = $geti($1.msg, 0, $1.j); /*15316*/
		if ($1.mac05comp) { /*15319*/
			$k[$j++] = Infinity; /*15319*/
			$k[$j++] = $1.m05; /*15319*/
			$aload($1.msg); /*15319*/
			$1.msg = $a(); /*15319*/
		} /*15319*/
		if ($1.mac06comp) { /*15320*/
			$k[$j++] = Infinity; /*15320*/
			$k[$j++] = $1.m06; /*15320*/
			$aload($1.msg); /*15320*/
			$1.msg = $a(); /*15320*/
		} /*15320*/
		$1.msglen = $1.msg.length; /*15322*/
		$k[$j++] = Infinity; /*15371*/
		$k[$j++] = $a([10, 10, 1, 1, 5, 1]); /*15355*/
		$k[$j++] = $a([12, 12, 1, 1, 7, 1]); /*15355*/
		$k[$j++] = $a([14, 14, 1, 1, 10, 1]); /*15355*/
		$k[$j++] = $a([16, 16, 1, 1, 12, 1]); /*15355*/
		$k[$j++] = $a([18, 18, 1, 1, 14, 1]); /*15355*/
		$k[$j++] = $a([20, 20, 1, 1, 18, 1]); /*15355*/
		$k[$j++] = $a([22, 22, 1, 1, 20, 1]); /*15355*/
		$k[$j++] = $a([24, 24, 1, 1, 24, 1]); /*15355*/
		$k[$j++] = $a([26, 26, 1, 1, 28, 1]); /*15355*/
		$k[$j++] = $a([32, 32, 2, 2, 36, 1]); /*15355*/
		$k[$j++] = $a([36, 36, 2, 2, 42, 1]); /*15355*/
		$k[$j++] = $a([40, 40, 2, 2, 48, 1]); /*15355*/
		$k[$j++] = $a([44, 44, 2, 2, 56, 1]); /*15355*/
		$k[$j++] = $a([48, 48, 2, 2, 68, 1]); /*15355*/
		$k[$j++] = $a([52, 52, 2, 2, 84, 2]); /*15355*/
		$k[$j++] = $a([64, 64, 4, 4, 112, 2]); /*15355*/
		$k[$j++] = $a([72, 72, 4, 4, 144, 4]); /*15355*/
		$k[$j++] = $a([80, 80, 4, 4, 192, 4]); /*15355*/
		$k[$j++] = $a([88, 88, 4, 4, 224, 4]); /*15355*/
		$k[$j++] = $a([96, 96, 4, 4, 272, 4]); /*15355*/
		$k[$j++] = $a([104, 104, 4, 4, 336, 6]); /*15355*/
		$k[$j++] = $a([120, 120, 6, 6, 408, 6]); /*15355*/
		$k[$j++] = $a([132, 132, 6, 6, 496, 8]); /*15355*/
		$k[$j++] = $a([144, 144, 6, 6, 620, 10]); /*15355*/
		$k[$j++] = $a([8, 18, 1, 1, 7, 1]); /*15355*/
		$k[$j++] = $a([8, 32, 1, 2, 11, 1]); /*15355*/
		if ($1.dmre) { /*15355*/
			$k[$j++] = $a([8, 48, 1, 2, 15, 1]); /*15355*/
		} /*15355*/
		if ($1.dmre) { /*15356*/
			$k[$j++] = $a([8, 64, 1, 4, 18, 1]); /*15356*/
		} /*15356*/
		$k[$j++] = $a([12, 26, 1, 1, 14, 1]); /*15359*/
		$k[$j++] = $a([12, 36, 1, 2, 18, 1]); /*15359*/
		if ($1.dmre) { /*15359*/
			$k[$j++] = $a([12, 64, 1, 4, 27, 1]); /*15359*/
		} /*15359*/
		$k[$j++] = $a([16, 36, 1, 2, 24, 1]); /*15362*/
		$k[$j++] = $a([16, 48, 1, 2, 28, 1]); /*15362*/
		if ($1.dmre) { /*15362*/
			$k[$j++] = $a([16, 64, 1, 4, 36, 1]); /*15362*/
		} /*15362*/
		if ($1.dmre) { /*15363*/
			$k[$j++] = $a([24, 32, 1, 2, 28, 1]); /*15363*/
		} /*15363*/
		if ($1.dmre) { /*15364*/
			$k[$j++] = $a([24, 36, 1, 2, 33, 1]); /*15364*/
		} /*15364*/
		if ($1.dmre) { /*15365*/
			$k[$j++] = $a([24, 48, 1, 2, 41, 1]); /*15365*/
		} /*15365*/
		if ($1.dmre) { /*15366*/
			$k[$j++] = $a([24, 64, 1, 4, 46, 1]); /*15366*/
		} /*15366*/
		if ($1.dmre) { /*15367*/
			$k[$j++] = $a([26, 32, 1, 2, 32, 1]); /*15367*/
		} /*15367*/
		if ($1.dmre) { /*15368*/
			$k[$j++] = $a([26, 40, 1, 2, 38, 1]); /*15368*/
		} /*15368*/
		if ($1.dmre) { /*15369*/
			$k[$j++] = $a([26, 48, 1, 2, 42, 1]); /*15369*/
		} /*15369*/
		if ($1.dmre) { /*15370*/
			$k[$j++] = $a([26, 64, 1, 4, 50, 1]); /*15370*/
		} /*15370*/
		$1.metrics = $a(); /*15371*/
		$1.urows = $1.rows; /*15374*/
		$1.ucols = $1.columns; /*15375*/
		$1.fullcws = $a([]); /*15376*/
		var _21 = $1.metrics; /*15377*/
		for (var _22 = 0, _23 = _21.length; _22 < _23; _22++) { /*15394*/
			$1.m = $get(_21, _22); /*15378*/
			$1.rows = $get($1.m, 0); /*15379*/
			$1.cols = $get($1.m, 1); /*15380*/
			$1.regh = $get($1.m, 2); /*15381*/
			$1.regv = $get($1.m, 3); /*15382*/
			$1.rscw = $get($1.m, 4); /*15383*/
			$1.rsbl = $get($1.m, 5); /*15384*/
			$1.mrows = $1.rows - (2 * $1.regh); /*15385*/
			$1.mcols = $1.cols - (2 * $1.regv); /*15386*/
			$1.ncws = (~~(($1.mrows * $1.mcols) / 8)) - $1.rscw; /*15387*/
			$1.okay = true; /*15388*/
			if (($1.urows != 0) && ($1.urows != $1.rows)) { /*15389*/
				$1.okay = false; /*15389*/
			} /*15389*/
			if (($1.ucols != 0) && ($1.ucols != $1.cols)) { /*15390*/
				$1.okay = false; /*15390*/
			} /*15390*/
			if ($eq($1.format, "square") && $ne($1.rows, $1.cols)) { /*15391*/
				$1.okay = false; /*15391*/
			} /*15391*/
			if ($eq($1.format, "rectangle") && $eq($1.rows, $1.cols)) { /*15392*/
				$1.okay = false; /*15392*/
			} /*15392*/
			if ($1.okay) { /*15393*/
				$k[$j++] = Infinity; /*15393*/
				$aload($1.fullcws); /*15393*/
				$k[$j++] = $1.ncws; /*15393*/
				$1.fullcws = $a(); /*15393*/
			} /*15393*/
		} /*15393*/
		$k[$j++] = Infinity; /*15395*/
		for (var _2e = 0, _2f = 1558; _2e < _2f; _2e++) { /*15395*/
			$k[$j++] = 10000; /*15395*/
		} /*15395*/
		$1.numremcws = $a(); /*15395*/
		var _2h = $1.fullcws; /*15396*/
		for (var _2i = 0, _2j = _2h.length; _2i < _2j; _2i++) { /*15396*/
			$put($1.numremcws, $get(_2h, _2i) - 1, 1); /*15396*/
		} /*15396*/
		for (var _2m = 1556; _2m >= 0; _2m -= 1) { /*15402*/
			$1.i = _2m; /*15398*/
			if ($get($1.numremcws, $1.i) != 1) { /*15401*/
				$put($1.numremcws, $1.i, $get($1.numremcws, $1.i + 1) + 1); /*15400*/
			} /*15400*/
		} /*15400*/
		$1.lC = -5; /*15405*/
		$1.lB = -6; /*15405*/
		$1.lX = -7; /*15405*/
		$1.lT = -8; /*15405*/
		$1.lE = -9; /*15405*/
		$1.unl = -10; /*15405*/
		$1.sapp = -11; /*15406*/
		$1.usft = -12; /*15406*/
		$1.sft1 = -13; /*15406*/
		$1.sft2 = -14; /*15406*/
		$1.sft3 = -15; /*15406*/
		$1.eci = -16; /*15406*/
		$1.pad = -17; /*15406*/
		$1.unlcw = 254; /*15407*/
		$k[$j++] = "Avals"; /*15416*/
		$k[$j++] = Infinity; /*15416*/
		for (var _2v = 0; _2v <= 128; _2v += 1) { /*15410*/
			$k[$j++] = _2v; /*15410*/
			$k[$j++] = _2v + 1; /*15410*/
		} /*15410*/
		$k[$j++] = $1.pad; /*15415*/
		$k[$j++] = 129; /*15415*/
		for (var _2x = 0; _2x <= 99; _2x += 1) { /*15415*/
			var _2z = $cvrs($s(2), _2x, 10); /*15413*/
			var _31 = $strcpy($s(2), "00"); /*15413*/
			$puti(_31, 2 - _2z.length, _2z); /*15413*/
			$k[$j++] = _31; /*15414*/
			$k[$j++] = _2x + 130; /*15414*/
		} /*15414*/
		var _3E = $a([$1.lC, $1.lB, $1.fnc1, $1.sapp, $1.prog, $1.usft, $1.m05, $1.m06, $1.lX, $1.lT, $1.lE, $1.eci]); /*15416*/
		$k[$j++] = 229; /*15416*/
		for (var _3F = 0, _3G = _3E.length; _3F < _3G; _3F++) { /*15416*/
			var _3J = $k[--$j] + 1; /*15416*/
			$k[$j++] = $get(_3E, _3F); /*15416*/
			$k[$j++] = _3J; /*15416*/
			$k[$j++] = _3J; /*15416*/
		} /*15416*/
		$j--; /*15416*/
		var _3K = $d(); /*15416*/
		$1[$k[--$j]] = _3K; /*15417*/
		$k[$j++] = "Avals"; /*15419*/
		$k[$j++] = Infinity; /*15419*/
		$forall($1.Avals, function() { /*15419*/
			$k[$j++] = Infinity; /*15419*/
			var _3N = $k[--$j]; /*15419*/
			var _3O = $k[--$j]; /*15419*/
			$k[$j++] = _3N; /*15419*/
			$k[$j++] = _3O; /*15419*/
			var _3P = $a(); /*15419*/
			$k[$j++] = _3P; /*15419*/
		}); /*15419*/
		var _3Q = $d(); /*15419*/
		$1[$k[--$j]] = _3Q; /*15420*/
		$k[$j++] = "CNvals"; /*15428*/
		$k[$j++] = Infinity; /*15428*/
		$k[$j++] = $1.sft1; /*15427*/
		$k[$j++] = 0; /*15427*/
		$k[$j++] = $1.sft2; /*15427*/
		$k[$j++] = 1; /*15427*/
		$k[$j++] = $1.sft3; /*15427*/
		$k[$j++] = 2; /*15427*/
		$k[$j++] = 32; /*15427*/
		$k[$j++] = 3; /*15427*/
		for (var _3V = 48; _3V <= 57; _3V += 1) { /*15427*/
			$k[$j++] = _3V; /*15427*/
			$k[$j++] = _3V - 44; /*15427*/
		} /*15427*/
		for (var _3W = 65; _3W <= 90; _3W += 1) { /*15428*/
			$k[$j++] = _3W; /*15428*/
			$k[$j++] = _3W - 51; /*15428*/
		} /*15428*/
		var _3X = $d(); /*15428*/
		$1[$k[--$j]] = _3X; /*15429*/
		$k[$j++] = "C1vals"; /*15430*/
		$k[$j++] = Infinity; /*15430*/
		for (var _3Z = 0; _3Z <= 31; _3Z += 1) { /*15430*/
			$k[$j++] = _3Z; /*15430*/
			$k[$j++] = _3Z; /*15430*/
		} /*15430*/
		var _3a = $d(); /*15430*/
		$1[$k[--$j]] = _3a; /*15430*/
		$k[$j++] = "C2vals"; /*15436*/
		$k[$j++] = Infinity; /*15436*/
		for (var _3c = 33; _3c <= 47; _3c += 1) { /*15432*/
			$k[$j++] = _3c; /*15432*/
			$k[$j++] = _3c - 33; /*15432*/
		} /*15432*/
		for (var _3d = 58; _3d <= 64; _3d += 1) { /*15433*/
			$k[$j++] = _3d; /*15433*/
			$k[$j++] = _3d - 43; /*15433*/
		} /*15433*/
		for (var _3e = 91; _3e <= 95; _3e += 1) { /*15434*/
			$k[$j++] = _3e; /*15434*/
			$k[$j++] = _3e - 69; /*15434*/
		} /*15434*/
		$k[$j++] = $1.fnc1; /*15436*/
		$k[$j++] = 27; /*15436*/
		$k[$j++] = $1.usft; /*15436*/
		$k[$j++] = 30; /*15436*/
		var _3h = $d(); /*15436*/
		$1[$k[--$j]] = _3h; /*15437*/
		$k[$j++] = "C3vals"; /*15438*/
		$k[$j++] = Infinity; /*15438*/
		for (var _3j = 96; _3j <= 127; _3j += 1) { /*15438*/
			$k[$j++] = _3j; /*15438*/
			$k[$j++] = _3j - 96; /*15438*/
		} /*15438*/
		var _3k = $d(); /*15438*/
		$1[$k[--$j]] = _3k; /*15438*/
		$k[$j++] = "Cvals"; /*15443*/
		$k[$j++] = Infinity; /*15443*/
		$forall($1.CNvals, function() { /*15440*/
			$k[$j++] = Infinity; /*15440*/
			var _3n = $k[--$j]; /*15440*/
			var _3o = $k[--$j]; /*15440*/
			$k[$j++] = _3n; /*15440*/
			$k[$j++] = _3o; /*15440*/
			var _3p = $a(); /*15440*/
			$k[$j++] = _3p; /*15440*/
		}); /*15440*/
		$forall($1.C1vals, function() { /*15441*/
			$k[$j++] = Infinity; /*15441*/
			var _3r = $k[--$j]; /*15441*/
			var _3s = $k[--$j]; /*15441*/
			$k[$j++] = _3r; /*15441*/
			$k[$j++] = $get($1.CNvals, $1.sft1); /*15441*/
			$k[$j++] = _3s; /*15441*/
			var _3w = $a(); /*15441*/
			$k[$j++] = _3w; /*15441*/
		}); /*15441*/
		$forall($1.C2vals, function() { /*15442*/
			$k[$j++] = Infinity; /*15442*/
			var _3y = $k[--$j]; /*15442*/
			var _3z = $k[--$j]; /*15442*/
			$k[$j++] = _3y; /*15442*/
			$k[$j++] = $get($1.CNvals, $1.sft2); /*15442*/
			$k[$j++] = _3z; /*15442*/
			var _43 = $a(); /*15442*/
			$k[$j++] = _43; /*15442*/
		}); /*15442*/
		$forall($1.C3vals, function() { /*15443*/
			$k[$j++] = Infinity; /*15443*/
			var _45 = $k[--$j]; /*15443*/
			var _46 = $k[--$j]; /*15443*/
			$k[$j++] = _45; /*15443*/
			$k[$j++] = $get($1.CNvals, $1.sft3); /*15443*/
			$k[$j++] = _46; /*15443*/
			var _4A = $a(); /*15443*/
			$k[$j++] = _4A; /*15443*/
		}); /*15443*/
		var _4B = $d(); /*15443*/
		$1[$k[--$j]] = _4B; /*15444*/
		$k[$j++] = "TNvals"; /*15452*/
		$k[$j++] = Infinity; /*15452*/
		$k[$j++] = $1.sft1; /*15451*/
		$k[$j++] = 0; /*15451*/
		$k[$j++] = $1.sft2; /*15451*/
		$k[$j++] = 1; /*15451*/
		$k[$j++] = $1.sft3; /*15451*/
		$k[$j++] = 2; /*15451*/
		$k[$j++] = 32; /*15451*/
		$k[$j++] = 3; /*15451*/
		for (var _4G = 48; _4G <= 57; _4G += 1) { /*15451*/
			$k[$j++] = _4G; /*15451*/
			$k[$j++] = _4G - 44; /*15451*/
		} /*15451*/
		for (var _4H = 97; _4H <= 122; _4H += 1) { /*15452*/
			$k[$j++] = _4H; /*15452*/
			$k[$j++] = _4H - 83; /*15452*/
		} /*15452*/
		var _4I = $d(); /*15452*/
		$1[$k[--$j]] = _4I; /*15453*/
		$k[$j++] = "T1vals"; /*15454*/
		$k[$j++] = Infinity; /*15454*/
		for (var _4K = 0; _4K <= 31; _4K += 1) { /*15454*/
			$k[$j++] = _4K; /*15454*/
			$k[$j++] = _4K; /*15454*/
		} /*15454*/
		var _4L = $d(); /*15454*/
		$1[$k[--$j]] = _4L; /*15454*/
		$k[$j++] = "T2vals"; /*15460*/
		$k[$j++] = Infinity; /*15460*/
		for (var _4N = 33; _4N <= 47; _4N += 1) { /*15456*/
			$k[$j++] = _4N; /*15456*/
			$k[$j++] = _4N - 33; /*15456*/
		} /*15456*/
		for (var _4O = 58; _4O <= 64; _4O += 1) { /*15457*/
			$k[$j++] = _4O; /*15457*/
			$k[$j++] = _4O - 43; /*15457*/
		} /*15457*/
		for (var _4P = 91; _4P <= 95; _4P += 1) { /*15458*/
			$k[$j++] = _4P; /*15458*/
			$k[$j++] = _4P - 69; /*15458*/
		} /*15458*/
		$k[$j++] = $1.fnc1; /*15460*/
		$k[$j++] = 27; /*15460*/
		$k[$j++] = $1.usft; /*15460*/
		$k[$j++] = 30; /*15460*/
		var _4S = $d(); /*15460*/
		$1[$k[--$j]] = _4S; /*15461*/
		$k[$j++] = "T3vals"; /*15465*/
		$k[$j++] = Infinity; /*15465*/
		$k[$j++] = 96; /*15464*/
		$k[$j++] = 0; /*15464*/
		for (var _4U = 65; _4U <= 90; _4U += 1) { /*15464*/
			$k[$j++] = _4U; /*15464*/
			$k[$j++] = _4U - 64; /*15464*/
		} /*15464*/
		for (var _4V = 123; _4V <= 127; _4V += 1) { /*15465*/
			$k[$j++] = _4V; /*15465*/
			$k[$j++] = _4V - 96; /*15465*/
		} /*15465*/
		var _4W = $d(); /*15465*/
		$1[$k[--$j]] = _4W; /*15466*/
		$k[$j++] = "Tvals"; /*15471*/
		$k[$j++] = Infinity; /*15471*/
		$forall($1.TNvals, function() { /*15468*/
			$k[$j++] = Infinity; /*15468*/
			var _4Z = $k[--$j]; /*15468*/
			var _4a = $k[--$j]; /*15468*/
			$k[$j++] = _4Z; /*15468*/
			$k[$j++] = _4a; /*15468*/
			var _4b = $a(); /*15468*/
			$k[$j++] = _4b; /*15468*/
		}); /*15468*/
		$forall($1.T1vals, function() { /*15469*/
			$k[$j++] = Infinity; /*15469*/
			var _4d = $k[--$j]; /*15469*/
			var _4e = $k[--$j]; /*15469*/
			$k[$j++] = _4d; /*15469*/
			$k[$j++] = $get($1.TNvals, $1.sft1); /*15469*/
			$k[$j++] = _4e; /*15469*/
			var _4i = $a(); /*15469*/
			$k[$j++] = _4i; /*15469*/
		}); /*15469*/
		$forall($1.T2vals, function() { /*15470*/
			$k[$j++] = Infinity; /*15470*/
			var _4k = $k[--$j]; /*15470*/
			var _4l = $k[--$j]; /*15470*/
			$k[$j++] = _4k; /*15470*/
			$k[$j++] = $get($1.TNvals, $1.sft2); /*15470*/
			$k[$j++] = _4l; /*15470*/
			var _4p = $a(); /*15470*/
			$k[$j++] = _4p; /*15470*/
		}); /*15470*/
		$forall($1.T3vals, function() { /*15471*/
			$k[$j++] = Infinity; /*15471*/
			var _4r = $k[--$j]; /*15471*/
			var _4s = $k[--$j]; /*15471*/
			$k[$j++] = _4r; /*15471*/
			$k[$j++] = $get($1.TNvals, $1.sft3); /*15471*/
			$k[$j++] = _4s; /*15471*/
			var _4w = $a(); /*15471*/
			$k[$j++] = _4w; /*15471*/
		}); /*15471*/
		var _4x = $d(); /*15471*/
		$1[$k[--$j]] = _4x; /*15472*/
		for (var _4z = 128; _4z <= 255; _4z += 1) { /*15480*/
			$1.i = _4z; /*15476*/
			$k[$j++] = $1.Avals; /*15477*/
			$k[$j++] = $1.i; /*15477*/
			$k[$j++] = Infinity; /*15477*/
			$aload($get($1.Avals, $1.usft)); /*15477*/
			$aload($get($1.Avals, $1.i - 128)); /*15477*/
			var _58 = $a(); /*15477*/
			var _59 = $k[--$j]; /*15477*/
			$put($k[--$j], _59, _58); /*15477*/
			$k[$j++] = $1.Cvals; /*15478*/
			$k[$j++] = $1.i; /*15478*/
			$k[$j++] = Infinity; /*15478*/
			$aload($get($1.Cvals, $1.usft)); /*15478*/
			$aload($get($1.Cvals, $1.i - 128)); /*15478*/
			var _5J = $a(); /*15478*/
			var _5K = $k[--$j]; /*15478*/
			$put($k[--$j], _5K, _5J); /*15478*/
			$k[$j++] = $1.Tvals; /*15479*/
			$k[$j++] = $1.i; /*15479*/
			$k[$j++] = Infinity; /*15479*/
			$aload($get($1.Tvals, $1.usft)); /*15479*/
			$aload($get($1.Tvals, $1.i - 128)); /*15479*/
			var _5U = $a(); /*15479*/
			var _5V = $k[--$j]; /*15479*/
			$put($k[--$j], _5V, _5U); /*15479*/
		} /*15479*/
		$k[$j++] = "Xvals"; /*15488*/
		$k[$j++] = Infinity; /*15488*/
		$k[$j++] = 13; /*15487*/
		$k[$j++] = 0; /*15487*/
		$k[$j++] = 42; /*15487*/
		$k[$j++] = 1; /*15487*/
		$k[$j++] = 62; /*15487*/
		$k[$j++] = 2; /*15487*/
		$k[$j++] = 32; /*15487*/
		$k[$j++] = 3; /*15487*/
		for (var _5X = 48; _5X <= 57; _5X += 1) { /*15487*/
			$k[$j++] = _5X; /*15487*/
			$k[$j++] = _5X - 44; /*15487*/
		} /*15487*/
		for (var _5Y = 65; _5Y <= 90; _5Y += 1) { /*15488*/
			$k[$j++] = _5Y; /*15488*/
			$k[$j++] = _5Y - 51; /*15488*/
		} /*15488*/
		var _5Z = $d(); /*15488*/
		$1[$k[--$j]] = _5Z; /*15489*/
		$k[$j++] = "Xvals"; /*15491*/
		$k[$j++] = Infinity; /*15491*/
		$forall($1.Xvals, function() { /*15491*/
			$k[$j++] = Infinity; /*15491*/
			var _5c = $k[--$j]; /*15491*/
			var _5d = $k[--$j]; /*15491*/
			$k[$j++] = _5c; /*15491*/
			$k[$j++] = _5d; /*15491*/
			var _5e = $a(); /*15491*/
			$k[$j++] = _5e; /*15491*/
		}); /*15491*/
		var _5f = $d(); /*15491*/
		$1[$k[--$j]] = _5f; /*15492*/
		$k[$j++] = "Evals"; /*15497*/
		$k[$j++] = Infinity; /*15497*/
		for (var _5h = 64; _5h <= 94; _5h += 1) { /*15495*/
			$k[$j++] = _5h; /*15495*/
			$k[$j++] = _5h - 64; /*15495*/
		} /*15495*/
		$k[$j++] = $1.unl; /*15497*/
		$k[$j++] = 31; /*15497*/
		for (var _5j = 32; _5j <= 63; _5j += 1) { /*15497*/
			$k[$j++] = _5j; /*15497*/
			$k[$j++] = _5j; /*15497*/
		} /*15497*/
		var _5k = $d(); /*15497*/
		$1[$k[--$j]] = _5k; /*15498*/
		$k[$j++] = "Evals"; /*15500*/
		$k[$j++] = Infinity; /*15500*/
		$forall($1.Evals, function() { /*15500*/
			$k[$j++] = Infinity; /*15500*/
			var _5n = $k[--$j]; /*15500*/
			var _5o = $k[--$j]; /*15500*/
			$k[$j++] = _5n; /*15500*/
			$k[$j++] = _5o; /*15500*/
			var _5p = $a(); /*15500*/
			$k[$j++] = _5p; /*15500*/
		}); /*15500*/
		var _5q = $d(); /*15500*/
		$1[$k[--$j]] = _5q; /*15501*/
		$k[$j++] = "Bvals"; /*15504*/
		$k[$j++] = Infinity; /*15504*/
		for (var _5s = 0; _5s <= 255; _5s += 1) { /*15504*/
			$k[$j++] = _5s; /*15504*/
			$k[$j++] = _5s; /*15504*/
		} /*15504*/
		var _5t = $d(); /*15504*/
		$1[$k[--$j]] = _5t; /*15505*/
		$k[$j++] = "Bvals"; /*15507*/
		$k[$j++] = Infinity; /*15507*/
		$forall($1.Bvals, function() { /*15507*/
			$k[$j++] = Infinity; /*15507*/
			var _5w = $k[--$j]; /*15507*/
			var _5x = $k[--$j]; /*15507*/
			$k[$j++] = _5w; /*15507*/
			$k[$j++] = _5x; /*15507*/
			var _5y = $a(); /*15507*/
			$k[$j++] = _5y; /*15507*/
		}); /*15507*/
		var _5z = $d(); /*15507*/
		$1[$k[--$j]] = _5z; /*15508*/
		$1.encvals = $a([$1.Avals, $1.Cvals, $1.Tvals, $1.Xvals, $1.Evals, $1.Bvals]); /*15510*/
		$k[$j++] = Infinity; /*15512*/
		for (var _69 = 0, _6A = $1.msglen; _69 < _6A; _69++) { /*15512*/
			$k[$j++] = 0; /*15512*/
		} /*15512*/
		$k[$j++] = 0; /*15512*/
		$1.numD = $a(); /*15512*/
		$k[$j++] = Infinity; /*15513*/
		for (var _6D = 0, _6E = $1.msglen; _6D < _6E; _6D++) { /*15513*/
			$k[$j++] = 0; /*15513*/
		} /*15513*/
		$k[$j++] = 9999; /*15513*/
		$1.nextXterm = $a(); /*15513*/
		$k[$j++] = Infinity; /*15514*/
		for (var _6H = 0, _6I = $1.msglen; _6H < _6I; _6H++) { /*15514*/
			$k[$j++] = 0; /*15514*/
		} /*15514*/
		$k[$j++] = 9999; /*15514*/
		$1.nextNonX = $a(); /*15514*/
		for (var _6L = $1.msglen - 1; _6L >= 0; _6L -= 1) { /*15531*/
			$1.i = _6L; /*15516*/
			$1.barchar = $get($1.msg, $1.i); /*15517*/
			if (($1.barchar >= 48) && ($1.barchar <= 57)) { /*15520*/
				$put($1.numD, $1.i, $get($1.numD, $1.i + 1) + 1); /*15519*/
			} /*15519*/
			if ((($1.barchar == 13) || ($1.barchar == 42)) || ($1.barchar == 62)) { /*15524*/
				$put($1.nextXterm, $1.i, 0); /*15522*/
			} else { /*15524*/
				$put($1.nextXterm, $1.i, $get($1.nextXterm, $1.i + 1) + 1); /*15524*/
			} /*15524*/
			var _6i = $get($1.Xvals, $1.barchar) !== undefined; /*15526*/
			if (!_6i) { /*15529*/
				$put($1.nextNonX, $1.i, 0); /*15527*/
			} else { /*15529*/
				$put($1.nextNonX, $1.i, $get($1.nextNonX, $1.i + 1) + 1); /*15529*/
			} /*15529*/
		} /*15529*/
		$k[$j++] = Infinity; /*15532*/
		var _6q = $1.nextXterm; /*15532*/
		for (var _6r = 0, _6s = _6q.length; _6r < _6s; _6r++) { /*15532*/
			var _6t = $get(_6q, _6r); /*15532*/
			$k[$j++] = _6t; /*15532*/
			if (_6t > 10000) { /*15532*/
				$j--; /*15532*/
				$k[$j++] = 10000; /*15532*/
			} /*15532*/
		} /*15532*/
		$1.nextXterm = $a(); /*15532*/
		$k[$j++] = Infinity; /*15533*/
		var _6v = $1.nextNonX; /*15533*/
		for (var _6w = 0, _6x = _6v.length; _6w < _6x; _6w++) { /*15533*/
			var _6y = $get(_6v, _6w); /*15533*/
			$k[$j++] = _6y; /*15533*/
			if (_6y > 10000) { /*15533*/
				$j--; /*15533*/
				$k[$j++] = 10000; /*15533*/
			} /*15533*/
		} /*15533*/
		$1.nextNonX = $a(); /*15533*/
		$1.isD = function() {
			$k[$j++] = ($1.char >= 48) && ($1.char <= 57); /*15535*/
		}; /*15535*/
		$1.isC = function() {
			var _74 = $get($1.CNvals, $1.char) !== undefined; /*15536*/
			$k[$j++] = _74; /*15536*/
		}; /*15536*/
		$1.isT = function() {
			var _77 = $get($1.TNvals, $1.char) !== undefined; /*15537*/
			$k[$j++] = _77; /*15537*/
		}; /*15537*/
		$1.isX = function() {
			var _7A = $get($1.Xvals, $1.char) !== undefined; /*15538*/
			$k[$j++] = _7A; /*15538*/
		}; /*15538*/
		$1.isE = function() {
			var _7D = $get($1.Evals, $1.char) !== undefined; /*15539*/
			$k[$j++] = _7D; /*15539*/
		}; /*15539*/
		$1.isEA = function() {
			$k[$j++] = $1.char > 127; /*15540*/
		}; /*15540*/
		$1.isFN = function() {
			$k[$j++] = $1.char < 0; /*15541*/
		}; /*15541*/
		$1.XtermFirst = function() {
			var _7G = $k[--$j]; /*15542*/
			$k[$j++] = $lt($get($1.nextXterm, _7G), $get($1.nextNonX, _7G)); /*15542*/
		}; /*15542*/
		$1.A = 0; /*15544*/
		$1.C = 1; /*15544*/
		$1.T = 2; /*15544*/
		$1.X = 3; /*15544*/
		$1.E = 4; /*15544*/
		$1.B = 5; /*15544*/
		$1.lookup = function() {
			$1.ac = 1; /*15547*/
			$1.cc = 2; /*15547*/
			$1.tc = 2; /*15547*/
			$1.xc = 2; /*15547*/
			$1.ec = 2; /*15547*/
			$1.bc = 2.25; /*15547*/
			if ($1.mode == $1.A) { /*15548*/
				$1.ac = 0; /*15548*/
				$1.cc = 1; /*15548*/
				$1.tc = 1; /*15548*/
				$1.xc = 1; /*15548*/
				$1.ec = 1; /*15548*/
				$1.bc = 1.25; /*15548*/
			} /*15548*/
			if ($1.mode == $1.C) { /*15549*/
				$1.cc = 0; /*15549*/
			} /*15549*/
			if ($1.mode == $1.T) { /*15550*/
				$1.tc = 0; /*15550*/
			} /*15550*/
			if ($1.mode == $1.X) { /*15551*/
				$1.xc = 0; /*15551*/
			} /*15551*/
			if ($1.mode == $1.E) { /*15552*/
				$1.ec = 0; /*15552*/
			} /*15552*/
			if ($1.mode == $1.B) { /*15553*/
				$1.bc = 0; /*15553*/
			} /*15553*/
			for (var _7X = 0, _7Y = 1; _7X < _7Y; _7X++) { /*15586*/
				$1.k = 0; /*15555*/
				for (;;) { /*15585*/
					if (($1.i + $1.k) == $1.msglen) { /*15564*/
						var _7c = $a(["ac", "cc", "tc", "xc", "ec", "bc"]); /*15557*/
						for (var _7d = 0, _7e = _7c.length; _7d < _7e; _7d++) { /*15557*/
							var _7f = $get(_7c, _7d); /*15557*/
							$1[_7f] = Math.ceil($1[_7f]); /*15557*/
						} /*15557*/
						var _7m = $a([$1.cc, $1.tc, $1.xc, $1.ec, $1.bc]); /*15558*/
						$k[$j++] = true; /*15558*/
						for (var _7n = 0, _7o = _7m.length; _7n < _7o; _7n++) { /*15558*/
							var _7r = $k[--$j]; /*15558*/
							$k[$j++] = _7r && ($1.ac <= $get(_7m, _7n)); /*15558*/
						} /*15558*/
						if ($k[--$j]) { /*15558*/
							$k[$j++] = $1.A; /*15558*/
							break; /*15558*/
						} /*15558*/
						var _7z = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.ec]); /*15559*/
						$k[$j++] = true; /*15559*/
						for (var _80 = 0, _81 = _7z.length; _80 < _81; _80++) { /*15559*/
							var _84 = $k[--$j]; /*15559*/
							$k[$j++] = _84 && ($1.bc < $get(_7z, _80)); /*15559*/
						} /*15559*/
						if ($k[--$j]) { /*15559*/
							$k[$j++] = $1.B; /*15559*/
							break; /*15559*/
						} /*15559*/
						var _8C = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.bc]); /*15560*/
						$k[$j++] = true; /*15560*/
						for (var _8D = 0, _8E = _8C.length; _8D < _8E; _8D++) { /*15560*/
							var _8H = $k[--$j]; /*15560*/
							$k[$j++] = _8H && ($1.ec < $get(_8C, _8D)); /*15560*/
						} /*15560*/
						if ($k[--$j]) { /*15560*/
							$k[$j++] = $1.E; /*15560*/
							break; /*15560*/
						} /*15560*/
						var _8P = $a([$1.ac, $1.cc, $1.xc, $1.ec, $1.bc]); /*15561*/
						$k[$j++] = true; /*15561*/
						for (var _8Q = 0, _8R = _8P.length; _8Q < _8R; _8Q++) { /*15561*/
							var _8U = $k[--$j]; /*15561*/
							$k[$j++] = _8U && ($1.tc < $get(_8P, _8Q)); /*15561*/
						} /*15561*/
						if ($k[--$j]) { /*15561*/
							$k[$j++] = $1.T; /*15561*/
							break; /*15561*/
						} /*15561*/
						var _8c = $a([$1.ac, $1.cc, $1.tc, $1.ec, $1.bc]); /*15562*/
						$k[$j++] = true; /*15562*/
						for (var _8d = 0, _8e = _8c.length; _8d < _8e; _8d++) { /*15562*/
							var _8h = $k[--$j]; /*15562*/
							$k[$j++] = _8h && ($1.xc < $get(_8c, _8d)); /*15562*/
						} /*15562*/
						if ($k[--$j]) { /*15562*/
							$k[$j++] = $1.X; /*15562*/
							break; /*15562*/
						} /*15562*/
						$k[$j++] = $1.C; /*15563*/
						break; /*15563*/
					} /*15563*/
					$1.char = $get($1.msg, $1.i + $1.k); /*15565*/
					$k[$j++] = "ac"; /*15566*/
					$k[$j++] = $1.ac; /*15566*/
					$1.isD(); /*15566*/
					if ($k[--$j]) { /*15566*/
						var _8r = $k[--$j]; /*15566*/
						$k[$j++] = _8r + (1 / 2); /*15566*/
					} else { /*15566*/
						$1.isEA(); /*15566*/
						if ($k[--$j]) { /*15566*/
							var _8t = $k[--$j]; /*15566*/
							$k[$j++] = Math.ceil(_8t) + 2; /*15566*/
						} else { /*15566*/
							var _8u = $k[--$j]; /*15566*/
							$k[$j++] = Math.ceil(_8u) + 1; /*15566*/
						} /*15566*/
					} /*15566*/
					var _8v = $k[--$j]; /*15566*/
					$1[$k[--$j]] = _8v; /*15566*/
					$k[$j++] = "cc"; /*15567*/
					$k[$j++] = $1.cc; /*15567*/
					$1.isC(); /*15567*/
					if ($k[--$j]) { /*15567*/
						var _8z = $k[--$j]; /*15567*/
						$k[$j++] = _8z + (2 / 3); /*15567*/
					} else { /*15567*/
						$1.isEA(); /*15567*/
						if ($k[--$j]) { /*15567*/
							var _91 = $k[--$j]; /*15567*/
							$k[$j++] = _91 + (8 / 3); /*15567*/
						} else { /*15567*/
							var _92 = $k[--$j]; /*15567*/
							$k[$j++] = _92 + (4 / 3); /*15567*/
						} /*15567*/
					} /*15567*/
					var _93 = $k[--$j]; /*15567*/
					$1[$k[--$j]] = _93; /*15567*/
					$k[$j++] = "tc"; /*15568*/
					$k[$j++] = $1.tc; /*15568*/
					$1.isT(); /*15568*/
					if ($k[--$j]) { /*15568*/
						var _97 = $k[--$j]; /*15568*/
						$k[$j++] = _97 + (2 / 3); /*15568*/
					} else { /*15568*/
						$1.isEA(); /*15568*/
						if ($k[--$j]) { /*15568*/
							var _99 = $k[--$j]; /*15568*/
							$k[$j++] = _99 + (8 / 3); /*15568*/
						} else { /*15568*/
							var _9A = $k[--$j]; /*15568*/
							$k[$j++] = _9A + (4 / 3); /*15568*/
						} /*15568*/
					} /*15568*/
					var _9B = $k[--$j]; /*15568*/
					$1[$k[--$j]] = _9B; /*15568*/
					$k[$j++] = "xc"; /*15569*/
					$k[$j++] = $1.xc; /*15569*/
					$1.isX(); /*15569*/
					if ($k[--$j]) { /*15569*/
						var _9F = $k[--$j]; /*15569*/
						$k[$j++] = _9F + (2 / 3); /*15569*/
					} else { /*15569*/
						$1.isEA(); /*15569*/
						if ($k[--$j]) { /*15569*/
							var _9H = $k[--$j]; /*15569*/
							$k[$j++] = _9H + (13 / 3); /*15569*/
						} else { /*15569*/
							var _9I = $k[--$j]; /*15569*/
							$k[$j++] = _9I + (10 / 3); /*15569*/
						} /*15569*/
					} /*15569*/
					var _9J = $k[--$j]; /*15569*/
					$1[$k[--$j]] = _9J; /*15569*/
					$k[$j++] = "ec"; /*15570*/
					$k[$j++] = $1.ec; /*15570*/
					$1.isE(); /*15570*/
					if ($k[--$j]) { /*15570*/
						var _9N = $k[--$j]; /*15570*/
						$k[$j++] = _9N + (3 / 4); /*15570*/
					} else { /*15570*/
						$1.isEA(); /*15570*/
						if ($k[--$j]) { /*15570*/
							var _9P = $k[--$j]; /*15570*/
							$k[$j++] = _9P + (17 / 4); /*15570*/
						} else { /*15570*/
							var _9Q = $k[--$j]; /*15570*/
							$k[$j++] = _9Q + (13 / 4); /*15570*/
						} /*15570*/
					} /*15570*/
					var _9R = $k[--$j]; /*15570*/
					$1[$k[--$j]] = _9R; /*15570*/
					$k[$j++] = "bc"; /*15571*/
					$k[$j++] = $1.bc; /*15571*/
					$1.isFN(); /*15571*/
					if ($k[--$j]) { /*15571*/
						var _9V = $k[--$j]; /*15571*/
						$k[$j++] = _9V + 4; /*15571*/
					} else { /*15571*/
						var _9W = $k[--$j]; /*15571*/
						$k[$j++] = _9W + 1; /*15571*/
					} /*15571*/
					var _9X = $k[--$j]; /*15571*/
					$1[$k[--$j]] = _9X; /*15571*/
					if ($1.k >= 4) { /*15583*/
						var _9f = $a([$1.cc, $1.tc, $1.xc, $1.ec, $1.bc]); /*15573*/
						$k[$j++] = true; /*15573*/
						for (var _9g = 0, _9h = _9f.length; _9g < _9h; _9g++) { /*15573*/
							var _9k = $k[--$j]; /*15573*/
							$k[$j++] = _9k && (($1.ac + 1) <= $get(_9f, _9g)); /*15573*/
						} /*15573*/
						if ($k[--$j]) { /*15573*/
							$k[$j++] = $1.A; /*15573*/
							break; /*15573*/
						} /*15573*/
						if (($1.bc + 1) <= $1.ac) { /*15574*/
							$k[$j++] = $1.B; /*15574*/
							break; /*15574*/
						} /*15574*/
						var _9u = $a([$1.cc, $1.tc, $1.xc, $1.ec]); /*15575*/
						$k[$j++] = true; /*15575*/
						for (var _9v = 0, _9w = _9u.length; _9v < _9w; _9v++) { /*15575*/
							var _9z = $k[--$j]; /*15575*/
							$k[$j++] = _9z && (($1.bc + 1) < $get(_9u, _9v)); /*15575*/
						} /*15575*/
						if ($k[--$j]) { /*15575*/
							$k[$j++] = $1.B; /*15575*/
							break; /*15575*/
						} /*15575*/
						var _A7 = $a([$1.ac, $1.cc, $1.tc, $1.xc, $1.bc]); /*15576*/
						$k[$j++] = true; /*15576*/
						for (var _A8 = 0, _A9 = _A7.length; _A8 < _A9; _A8++) { /*15576*/
							var _AC = $k[--$j]; /*15576*/
							$k[$j++] = _AC && (($1.ec + 1) < $get(_A7, _A8)); /*15576*/
						} /*15576*/
						if ($k[--$j]) { /*15576*/
							$k[$j++] = $1.E; /*15576*/
							break; /*15576*/
						} /*15576*/
						var _AK = $a([$1.ac, $1.cc, $1.xc, $1.ec, $1.bc]); /*15577*/
						$k[$j++] = true; /*15577*/
						for (var _AL = 0, _AM = _AK.length; _AL < _AM; _AL++) { /*15577*/
							var _AP = $k[--$j]; /*15577*/
							$k[$j++] = _AP && (($1.tc + 1) < $get(_AK, _AL)); /*15577*/
						} /*15577*/
						if ($k[--$j]) { /*15577*/
							$k[$j++] = $1.T; /*15577*/
							break; /*15577*/
						} /*15577*/
						var _AX = $a([$1.ac, $1.cc, $1.tc, $1.ec, $1.bc]); /*15578*/
						$k[$j++] = true; /*15578*/
						for (var _AY = 0, _AZ = _AX.length; _AY < _AZ; _AY++) { /*15578*/
							var _Ac = $k[--$j]; /*15578*/
							$k[$j++] = _Ac && (($1.xc + 1) < $get(_AX, _AY)); /*15578*/
						} /*15578*/
						if ($k[--$j]) { /*15578*/
							$k[$j++] = $1.X; /*15578*/
							break; /*15578*/
						} /*15578*/
						var _Aj = $a([$1.ac, $1.tc, $1.ec, $1.bc]); /*15579*/
						$k[$j++] = true; /*15579*/
						for (var _Ak = 0, _Al = _Aj.length; _Ak < _Al; _Ak++) { /*15579*/
							var _Ao = $k[--$j]; /*15579*/
							$k[$j++] = _Ao && (($1.cc + 1) < $get(_Aj, _Ak)); /*15579*/
						} /*15579*/
						if ($k[--$j]) { /*15582*/
							if ($1.cc < $1.xc) { /*15580*/
								$k[$j++] = $1.C; /*15580*/
								break; /*15580*/
							} /*15580*/
							if ($1.cc == $1.xc) { /*15581*/
								$k[$j++] = ($1.i + $1.k) + 1; /*15581*/
								$1.XtermFirst(); /*15581*/
								if ($k[--$j]) { /*15581*/
									$k[$j++] = $1.X; /*15581*/
									break; /*15581*/
								} else { /*15581*/
									$k[$j++] = $1.C; /*15581*/
									break; /*15581*/
								} /*15581*/
							} /*15581*/
						} /*15581*/
					} /*15581*/
					$1.k = $1.k + 1; /*15584*/
				} /*15584*/
			} /*15584*/
		}; /*15587*/
		$1.addtocws = function() {
			var _B1 = $k[--$j]; /*15590*/
			$puti($1.cws, $1.j, _B1); /*15590*/
			$1.j = _B1.length + $1.j; /*15591*/
		}; /*15592*/
		$1.encA = function() {
			for (var _B5 = 0, _B6 = 1; _B5 < _B6; _B5++) { /*15610*/
				if ($get($1.numD, $1.i) >= 2) { /*15600*/
					var _BA = $s(2); /*15597*/
					$put(_BA, 0, $get($1.msg, $1.i)); /*15597*/
					$put(_BA, 1, $get($1.msg, $1.i + 1)); /*15597*/
					$k[$j++] = $get($1.Avals, _BA); /*15597*/
					$1.addtocws(); /*15597*/
					$1.i = $1.i + 2; /*15598*/
					break; /*15599*/
				} /*15599*/
				$k[$j++] = "newmode"; /*15601*/
				$1.lookup(); /*15601*/
				var _BK = $k[--$j]; /*15601*/
				$1[$k[--$j]] = _BK; /*15601*/
				if ($1.newmode != $1.mode) { /*15606*/
					$k[$j++] = $get($1.Avals, $get($a([-1, $1.lC, $1.lT, $1.lX, $1.lE, $1.lB]), $1.newmode)); /*15603*/
					$1.addtocws(); /*15603*/
					$1.mode = $1.newmode; /*15604*/
					break; /*15605*/
				} /*15605*/
				$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15607*/
				$1.addtocws(); /*15607*/
				$1.i = $1.i + 1; /*15608*/
				break; /*15609*/
			} /*15609*/
		}; /*15611*/
		$1.CTXvalstocws = function() {
			$1.in = $k[--$j]; /*15614*/
			$k[$j++] = Infinity; /*15615*/
			for (var _Bi = 0, _Bh = $1.in.length - 1; _Bi <= _Bh; _Bi += 3) { /*15619*/
				$k[$j++] = 0; /*15617*/
				$forall($geti($1.in, _Bi, 3), function() { /*15617*/
					var _Bl = $k[--$j]; /*15617*/
					var _Bm = $k[--$j]; /*15617*/
					$k[$j++] = (_Bm + _Bl) * 40; /*15617*/
				}); /*15617*/
				var _Bo = (~~($k[--$j] / 40)) + 1; /*15618*/
				$k[$j++] = ~~(_Bo / 256); /*15618*/
				$k[$j++] = _Bo % 256; /*15618*/
			} /*15618*/
			$astore($a($counttomark())); /*15620*/
			var _Br = $k[--$j]; /*15620*/
			var _Bs = $k[--$j]; /*15620*/
			$k[$j++] = _Br; /*15620*/
		}; /*15621*/
		$1.encCTX = function() {
			$1.p = 0; /*15624*/
			$1.ctxvals = $a(2500); /*15625*/
			for (;;) { /*15693*/
				if ($1.i == $1.msglen) { /*15629*/
					break; /*15629*/
				} /*15629*/
				var _C2 = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)) !== undefined; /*15630*/
				if (!_C2) { /*15630*/
					break; /*15630*/
				} /*15630*/
				if (($1.p % 3) == 0) { /*15688*/
					$1.lookup(); /*15632*/
					if ($ne($k[--$j], $1.mode)) { /*15637*/
						$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15633*/
						$1.CTXvalstocws(); /*15633*/
						$1.addtocws(); /*15633*/
						$k[$j++] = $a([$1.unlcw]); /*15634*/
						$1.addtocws(); /*15634*/
						$1.mode = $1.A; /*15635*/
						break; /*15636*/
					} /*15636*/
					if (($1.msglen - $1.i) <= 3) { /*15687*/
						$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 3)) * 2)); /*15639*/
						$k[$j++] = Infinity; /*15648*/
						$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*15647*/
							var _CN = $k[--$j]; /*15642*/
							var _CR = $get($get($1.encvals, $1.mode), _CN) !== undefined; /*15642*/
							$k[$j++] = _CN; /*15646*/
							if (_CR) { /*15645*/
								$aload($get($get($1.encvals, $1.mode), $k[--$j])); /*15643*/
							} else { /*15645*/
								$j--; /*15645*/
								$k[$j++] = -1; /*15645*/
								$k[$j++] = -1; /*15645*/
								$k[$j++] = -1; /*15645*/
								$k[$j++] = -1; /*15645*/
							} /*15645*/
						}); /*15645*/
						$1.remvals = $a(); /*15648*/
						if (($1.remcws == 2) && ($1.remvals.length == 3)) { /*15658*/
							$k[$j++] = Infinity; /*15653*/
							$aload($geti($1.ctxvals, 0, $1.p)); /*15652*/
							$aload($1.remvals); /*15653*/
							var _Ce = $a(); /*15653*/
							$k[$j++] = _Ce; /*15654*/
							$1.CTXvalstocws(); /*15654*/
							$1.addtocws(); /*15654*/
							$1.mode = $1.A; /*15655*/
							$1.i = $1.msglen; /*15656*/
							break; /*15657*/
						} /*15657*/
						if ((($1.remcws == 2) && ($1.remvals.length == 2)) && ($1.mode != $1.X)) { /*15669*/
							$k[$j++] = Infinity; /*15664*/
							$aload($geti($1.ctxvals, 0, $1.p)); /*15662*/
							$aload($1.remvals); /*15663*/
							$aload($get($get($1.encvals, $1.mode), $1.sft1)); /*15664*/
							var _Cu = $a(); /*15664*/
							$k[$j++] = _Cu; /*15665*/
							$1.CTXvalstocws(); /*15665*/
							$1.addtocws(); /*15665*/
							$1.mode = $1.A; /*15666*/
							$1.i = $1.msglen; /*15667*/
							break; /*15668*/
						} /*15668*/
						if (($1.remcws == 2) && ($1.remvals.length == 1)) { /*15678*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15672*/
							$1.CTXvalstocws(); /*15672*/
							$1.addtocws(); /*15672*/
							$k[$j++] = $a([$1.unlcw]); /*15673*/
							$1.addtocws(); /*15673*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15674*/
							$1.addtocws(); /*15674*/
							$1.mode = $1.A; /*15675*/
							$1.i = $1.msglen; /*15676*/
							break; /*15677*/
						} /*15677*/
						if (($1.remcws == 1) && ($1.remvals.length == 1)) { /*15686*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*15681*/
							$1.CTXvalstocws(); /*15681*/
							$1.addtocws(); /*15681*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15682*/
							$1.addtocws(); /*15682*/
							$1.mode = $1.A; /*15683*/
							$1.i = $1.msglen; /*15684*/
							break; /*15685*/
						} /*15685*/
					} /*15685*/
				} /*15685*/
				var _DT = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)); /*15689*/
				$puti($1.ctxvals, $1.p, _DT); /*15690*/
				$1.p = _DT.length + $1.p; /*15691*/
				$1.i = $1.i + 1; /*15692*/
			} /*15692*/
			if ($1.mode != $1.A) { /*15717*/
				for (;;) { /*15701*/
					if (($1.p % 3) == 0) { /*15698*/
						break; /*15698*/
					} /*15698*/
					$1.i = $1.i - 1; /*15699*/
					$1.p = $1.p - $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)).length; /*15700*/
				} /*15700*/
				$k[$j++] = Infinity; /*15703*/
				$aload($geti($1.ctxvals, 0, $1.p)); /*15703*/
				var _Dn = $a(); /*15703*/
				$k[$j++] = _Dn; /*15704*/
				$1.CTXvalstocws(); /*15704*/
				$1.addtocws(); /*15704*/
				$k[$j++] = $a([$1.unlcw]); /*15705*/
				$1.addtocws(); /*15705*/
				$1.mode = $1.A; /*15706*/
				if ($1.i != $1.msglen) { /*15716*/
					if ($get($1.numD, $1.i) >= 2) { /*15714*/
						var _Dw = $s(2); /*15710*/
						$put(_Dw, 0, $get($1.msg, $1.i)); /*15710*/
						$put(_Dw, 1, $get($1.msg, $1.i + 1)); /*15710*/
						$k[$j++] = $get($1.Avals, _Dw); /*15710*/
						$1.addtocws(); /*15710*/
						$1.i = $1.i + 2; /*15711*/
					} else { /*15714*/
						$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15713*/
						$1.addtocws(); /*15713*/
						$1.i = $1.i + 1; /*15714*/
					} /*15714*/
				} /*15714*/
			} /*15714*/
		}; /*15719*/
		$1.Evalstocws = function() {
			$1.in = $k[--$j]; /*15722*/
			$1.inlen = $1.in.length; /*15723*/
			$1.outlen = ~~(Math.ceil(($1.in.length / 4) * 3)); /*15724*/
			$k[$j++] = Infinity; /*15725*/
			$aload($1.in); /*15725*/
			$k[$j++] = 0; /*15725*/
			$k[$j++] = 0; /*15725*/
			$k[$j++] = 0; /*15725*/
			$1.in = $a(); /*15725*/
			$k[$j++] = Infinity; /*15726*/
			for (var _EJ = 0, _EI = $1.inlen - 1; _EJ <= _EI; _EJ += 4) { /*15732*/
				$k[$j++] = 0; /*15728*/
				$forall($geti($1.in, _EJ, 4), function() { /*15728*/
					var _EM = $k[--$j]; /*15728*/
					var _EN = $k[--$j]; /*15728*/
					$k[$j++] = $or(_EN, _EM) << 6; /*15728*/
				}); /*15728*/
				var _EP = $k[--$j] >>> 6; /*15729*/
				$k[$j++] = (_EP >>> 16) & 255; /*15731*/
				$k[$j++] = (_EP >>> 8) & 255; /*15731*/
				$k[$j++] = _EP & 255; /*15731*/
			} /*15731*/
			$astore($a($counttomark())); /*15733*/
			var _ES = $k[--$j]; /*15733*/
			var _ET = $k[--$j]; /*15733*/
			$k[$j++] = $geti(_ES, 0, $1.outlen); /*15734*/
		}; /*15735*/
		$1.encE = function() {
			$1.p = 0; /*15738*/
			$1.edifactvals = $a(2100); /*15739*/
			for (;;) { /*15781*/
				if ($1.i == $1.msglen) { /*15743*/
					break; /*15743*/
				} /*15743*/
				var _Ed = $get($1.Evals, $get($1.msg, $1.i)) !== undefined; /*15744*/
				if (!_Ed) { /*15744*/
					break; /*15744*/
				} /*15744*/
				if (($1.p % 4) == 0) { /*15776*/
					$1.lookup(); /*15746*/
					if ($k[--$j] != $1.mode) { /*15746*/
						break; /*15746*/
					} /*15746*/
					if (($1.msglen - $1.i) <= 2) { /*15775*/
						$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 4)) * 3)); /*15748*/
						$k[$j++] = Infinity; /*15757*/
						$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*15756*/
							var _Es = $k[--$j]; /*15751*/
							var _Eu = $get($1.Evals, _Es) !== undefined; /*15751*/
							$k[$j++] = _Es; /*15755*/
							if (_Eu) { /*15754*/
								$aload($get($1.Evals, $k[--$j])); /*15752*/
							} else { /*15754*/
								$j--; /*15754*/
								$k[$j++] = -1; /*15754*/
								$k[$j++] = -1; /*15754*/
								$k[$j++] = -1; /*15754*/
								$k[$j++] = -1; /*15754*/
								$k[$j++] = -1; /*15754*/
							} /*15754*/
						}); /*15754*/
						$1.remvals = $a(); /*15757*/
						if (($1.remcws == 2) && ($1.remvals.length == 2)) { /*15766*/
							$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15760*/
							$1.Evalstocws(); /*15760*/
							$1.addtocws(); /*15760*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15761*/
							$1.addtocws(); /*15761*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i + 1)); /*15762*/
							$1.addtocws(); /*15762*/
							$1.mode = $1.A; /*15763*/
							$1.i = $1.msglen; /*15764*/
							break; /*15765*/
						} /*15765*/
						if ((($1.remcws == 2) || ($1.remcws == 1)) && ($1.remvals.length == 1)) { /*15774*/
							$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15769*/
							$1.Evalstocws(); /*15769*/
							$1.addtocws(); /*15769*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15770*/
							$1.addtocws(); /*15770*/
							$1.mode = $1.A; /*15771*/
							$1.i = $1.msglen; /*15772*/
							break; /*15773*/
						} /*15773*/
					} /*15773*/
				} /*15773*/
				var _FX = $get($1.Evals, $get($1.msg, $1.i)); /*15777*/
				$puti($1.edifactvals, $1.p, _FX); /*15778*/
				$1.p = _FX.length + $1.p; /*15779*/
				$1.i = $1.i + 1; /*15780*/
			} /*15780*/
			if ($1.mode != $1.A) { /*15803*/
				$1.remcws = $get($1.numremcws, ($1.j + ((~~($1.p / 4)) * 3)) - 1) - 1; /*15785*/
				if ($1.remcws != 0) { /*15790*/
					var _Fl = $get($1.Evals, $1.unl); /*15787*/
					$puti($1.edifactvals, $1.p, _Fl); /*15788*/
					$1.p = _Fl.length + $1.p; /*15789*/
				} /*15789*/
				$k[$j++] = $geti($1.edifactvals, 0, $1.p); /*15791*/
				$1.Evalstocws(); /*15791*/
				$1.addtocws(); /*15791*/
				$1.mode = $1.A; /*15792*/
				if ($1.i != $1.msglen) { /*15802*/
					if ($get($1.numD, $1.i) >= 2) { /*15800*/
						var _Fy = $s(2); /*15796*/
						$put(_Fy, 0, $get($1.msg, $1.i)); /*15796*/
						$put(_Fy, 1, $get($1.msg, $1.i + 1)); /*15796*/
						$k[$j++] = $get($1.Avals, _Fy); /*15796*/
						$1.addtocws(); /*15796*/
						$1.i = $1.i + 2; /*15797*/
					} else { /*15800*/
						$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*15799*/
						$1.addtocws(); /*15799*/
						$1.i = $1.i + 1; /*15800*/
					} /*15800*/
				} /*15800*/
			} /*15800*/
		}; /*15805*/
		$1.encB = function() {
			$1.p = 0; /*15808*/
			$1.bvals = $a(1558); /*15808*/
			for (;;) { /*15814*/
				if ($1.i == $1.msglen) { /*15809*/
					break; /*15809*/
				} /*15809*/
				$1.lookup(); /*15810*/
				if ($k[--$j] != $1.mode) { /*15810*/
					break; /*15810*/
				} /*15810*/
				$put($1.bvals, $1.p, $get($1.msg, $1.i)); /*15811*/
				$1.p = $1.p + 1; /*15812*/
				$1.i = $1.i + 1; /*15813*/
			} /*15813*/
			$1.remcws = $get($1.numremcws, $1.j + $1.p) - 1; /*15815*/
			$k[$j++] = Infinity; /*15823*/
			if (($1.remcws == 0) && ($1.i == $1.msglen)) { /*15820*/
				$k[$j++] = 0; /*15818*/
			} else { /*15820*/
				if ($1.p < 250) { /*15820*/
					$k[$j++] = $1.p; /*15820*/
				} else { /*15820*/
					$k[$j++] = (~~($1.p / 250)) + 249; /*15820*/
					$k[$j++] = $1.p % 250; /*15820*/
				} /*15820*/
			} /*15820*/
			$aload($geti($1.bvals, 0, $1.p)); /*15822*/
			$1.bvals = $a(); /*15823*/
			for (var _Gh = 0, _Gg = $1.bvals.length - 1; _Gh <= _Gg; _Gh += 1) { /*15829*/
				$1.p = _Gh; /*15825*/
				var _Gn = ((((($1.j + $1.p) + 1) * 149) % 255) + 1) + $get($1.bvals, $1.p); /*15827*/
				$k[$j++] = _Gn; /*15827*/
				if (_Gn >= 256) { /*15827*/
					var _Go = $k[--$j]; /*15827*/
					$k[$j++] = _Go - 256; /*15827*/
				} /*15827*/
				$put($1.bvals, $1.p, $k[--$j]); /*15828*/
			} /*15828*/
			$k[$j++] = $1.bvals; /*15830*/
			$1.addtocws(); /*15830*/
			$1.mode = $1.A; /*15831*/
		}; /*15832*/
		$1.cws = $a(1558); /*15835*/
		$1.mode = $1.A; /*15836*/
		$1.i = 0; /*15836*/
		$1.j = 0; /*15836*/
		for (;;) { /*15839*/
			if ($1.i >= $1.msglen) { /*15837*/
				break; /*15837*/
			} /*15837*/
			$1[$get($a(["encA", "encCTX", "encCTX", "encCTX", "encE", "encB"]), $1.mode)](); /*15838*/
		} /*15838*/
		$1.cws = $geti($1.cws, 0, $1.j); /*15840*/
		$1.datlen = $1.cws.length; /*15843*/
		$1.remcws = $get($1.numremcws, $1.j - 1) - 1; /*15844*/
		if ($1.remcws > 0) { /*15853*/
			$k[$j++] = Infinity; /*15846*/
			$aload($1.cws); /*15846*/
			for (var _HC = 0, _HD = $1.remcws; _HC < _HD; _HC++) { /*15846*/
				$k[$j++] = 129; /*15846*/
			} /*15846*/
			$1.cws = $a(); /*15846*/
			for (var _HJ = $1.datlen + 1, _HI = ($1.datlen + $1.remcws) - 1; _HJ <= _HI; _HJ += 1) { /*15852*/
				$1.i = _HJ; /*15848*/
				var _HL = (((($1.i + 1) * 149) % 253) + 1) + 129; /*15850*/
				$k[$j++] = _HL; /*15850*/
				if (_HL > 254) { /*15850*/
					var _HM = $k[--$j]; /*15850*/
					$k[$j++] = _HM - 254; /*15850*/
				} /*15850*/
				$put($1.cws, $1.i, $k[--$j]); /*15851*/
			} /*15851*/
		} /*15851*/
		$1.i = 0; /*15856*/
		for (;;) { /*15877*/
			$1.m = $get($1.metrics, $1.i); /*15857*/
			$1.rows = $get($1.m, 0); /*15858*/
			$1.cols = $get($1.m, 1); /*15859*/
			$1.regh = $get($1.m, 2); /*15860*/
			$1.regv = $get($1.m, 3); /*15861*/
			$1.rscw = $get($1.m, 4); /*15862*/
			$1.rsbl = $get($1.m, 5); /*15863*/
			$1.mrows = $1.rows - (2 * $1.regh); /*15864*/
			$1.mcols = $1.cols - (2 * $1.regv); /*15865*/
			$1.rrows = ~~($1.mrows / $1.regh); /*15866*/
			$1.rcols = ~~($1.mcols / $1.regv); /*15867*/
			$1.ncws = (~~(($1.mrows * $1.mcols) / 8)) - $1.rscw; /*15868*/
			$1.okay = true; /*15869*/
			if ($1.cws.length != $1.ncws) { /*15870*/
				$1.okay = false; /*15870*/
			} /*15870*/
			if (($1.urows != 0) && ($1.urows != $1.rows)) { /*15871*/
				$1.okay = false; /*15871*/
			} /*15871*/
			if (($1.ucols != 0) && ($1.ucols != $1.cols)) { /*15872*/
				$1.okay = false; /*15872*/
			} /*15872*/
			if ($eq($1.format, "square") && $ne($1.rows, $1.cols)) { /*15873*/
				$1.okay = false; /*15873*/
			} /*15873*/
			if ($eq($1.format, "rectangle") && $eq($1.rows, $1.cols)) { /*15874*/
				$1.okay = false; /*15874*/
			} /*15874*/
			if ($1.okay) { /*15875*/
				break; /*15875*/
			} /*15875*/
			$1.i = $1.i + 1; /*15876*/
		} /*15876*/
		$1.cwbs = $a($1.rsbl); /*15880*/
		$1.ecbs = $a($1.rsbl); /*15881*/
		for (var _IC = 0, _IB = $1.rsbl - 1; _IC <= _IB; _IC += 1) { /*15896*/
			$1.i = _IC; /*15883*/
			if ($1.cws.length != 1558) { /*15887*/
				$1.cwbsize = ~~($1.cws.length / $1.rsbl); /*15885*/
			} else { /*15887*/
				if ($1.i <= 7) { /*15887*/
					$1.cwbsize = 156; /*15887*/
				} else { /*15887*/
					$1.cwbsize = 155; /*15887*/
				} /*15887*/
			} /*15887*/
			$1.cwb = $a($1.cwbsize); /*15889*/
			for (var _IL = 0, _IK = $1.cwbsize - 1; _IL <= _IK; _IL += 1) { /*15893*/
				$1.j = _IL; /*15891*/
				$put($1.cwb, $1.j, $get($1.cws, ($1.j * $1.rsbl) + $1.i)); /*15892*/
			} /*15892*/
			$put($1.cwbs, $1.i, $1.cwb); /*15894*/
			$k[$j++] = $1.ecbs; /*15895*/
			$k[$j++] = $1.i; /*15895*/
			$k[$j++] = Infinity; /*15895*/
			for (var _Ia = 0, _Ib = ~~($1.rscw / $1.rsbl); _Ia < _Ib; _Ia++) { /*15895*/
				$k[$j++] = 0; /*15895*/
			} /*15895*/
			var _Ic = $a(); /*15895*/
			var _Id = $k[--$j]; /*15895*/
			$put($k[--$j], _Id, _Ic); /*15895*/
		} /*15895*/
		$k[$j++] = Infinity; /*15899*/
		$k[$j++] = 1; /*15899*/
		for (var _If = 0, _Ig = 255; _If < _Ig; _If++) { /*15899*/
			var _Ih = $k[--$j]; /*15899*/
			var _Ii = _Ih * 2; /*15899*/
			$k[$j++] = _Ih; /*15899*/
			$k[$j++] = _Ii; /*15899*/
			if (_Ii >= 256) { /*15899*/
				var _Ij = $k[--$j]; /*15899*/
				$k[$j++] = _Ij ^ 301; /*15899*/
			} /*15899*/
		} /*15899*/
		$1.rsalog = $a(); /*15899*/
		$1.rslog = $a(256); /*15900*/
		for (var _Im = 1; _Im <= 255; _Im += 1) { /*15901*/
			$put($1.rslog, $get($1.rsalog, _Im), _Im); /*15901*/
		} /*15901*/
		$1.rsprod = function() {
			var _Iq = $k[--$j]; /*15905*/
			var _Ir = $k[--$j]; /*15905*/
			$k[$j++] = _Ir; /*15909*/
			$k[$j++] = _Iq; /*15909*/
			if ((_Iq != 0) && (_Ir != 0)) { /*15908*/
				var _Iu = $get($1.rslog, $k[--$j]); /*15906*/
				var _Iz = $get($1.rsalog, (_Iu + $get($1.rslog, $k[--$j])) % 255); /*15906*/
				$k[$j++] = _Iz; /*15906*/
			} else { /*15908*/
				$j -= 2; /*15908*/
				$k[$j++] = 0; /*15908*/
			} /*15908*/
		}; /*15910*/
		$k[$j++] = Infinity; /*15913*/
		$k[$j++] = 1; /*15913*/
		for (var _J2 = 0, _J3 = ~~($1.rscw / $1.rsbl); _J2 < _J3; _J2++) { /*15913*/
			$k[$j++] = 0; /*15913*/
		} /*15913*/
		$1.coeffs = $a(); /*15913*/
		for (var _J8 = 1, _J7 = ~~($1.rscw / $1.rsbl); _J8 <= _J7; _J8 += 1) { /*15922*/
			$1.i = _J8; /*15915*/
			$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*15916*/
			for (var _JF = $1.i - 1; _JF >= 1; _JF -= 1) { /*15920*/
				$1.j = _JF; /*15918*/
				$k[$j++] = $1.coeffs; /*15919*/
				$k[$j++] = $1.j; /*15919*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*15919*/
				$k[$j++] = $get($1.coeffs, $1.j); /*15919*/
				$k[$j++] = $get($1.rsalog, $1.i); /*15919*/
				$1.rsprod(); /*15919*/
				var _JR = $k[--$j]; /*15919*/
				var _JS = $k[--$j]; /*15919*/
				var _JT = $k[--$j]; /*15919*/
				$put($k[--$j], _JT, $xo(_JS, _JR)); /*15919*/
			} /*15919*/
			$k[$j++] = $1.coeffs; /*15921*/
			$k[$j++] = 0; /*15921*/
			$k[$j++] = $get($1.coeffs, 0); /*15921*/
			$k[$j++] = $get($1.rsalog, $1.i); /*15921*/
			$1.rsprod(); /*15921*/
			var _Jb = $k[--$j]; /*15921*/
			var _Jc = $k[--$j]; /*15921*/
			$put($k[--$j], _Jc, _Jb); /*15921*/
		} /*15921*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*15923*/
		for (var _Jj = 0, _Ji = $1.cwbs.length - 1; _Jj <= _Ji; _Jj += 1) { /*15939*/
			$1.i = _Jj; /*15927*/
			$1.cwb = $get($1.cwbs, $1.i); /*15928*/
			$1.ecb = $get($1.ecbs, $1.i); /*15929*/
			for (var _Js = 0, _Jr = $1.cwb.length - 1; _Js <= _Jr; _Js += 1) { /*15938*/
				$1.t = $xo($get($1.cwb, _Js), $get($1.ecb, 0)); /*15931*/
				for (var _Jy = $1.ecb.length - 1; _Jy >= 0; _Jy -= 1) { /*15937*/
					$1.j = _Jy; /*15933*/
					$1.p = ($1.ecb.length - $1.j) - 1; /*15934*/
					$k[$j++] = $1.ecb; /*15935*/
					$k[$j++] = $1.p; /*15935*/
					$k[$j++] = $1.t; /*15935*/
					$k[$j++] = $get($1.coeffs, $1.j); /*15935*/
					$1.rsprod(); /*15935*/
					var _K7 = $k[--$j]; /*15935*/
					var _K8 = $k[--$j]; /*15935*/
					$put($k[--$j], _K8, _K7); /*15935*/
					if ($1.j > 0) { /*15936*/
						$put($1.ecb, $1.p, $xo($get($1.ecb, $1.p + 1), $get($1.ecb, $1.p))); /*15936*/
					} /*15936*/
				} /*15936*/
			} /*15936*/
		} /*15936*/
		if ($1.ncws == 1558) { /*15944*/
			$k[$j++] = Infinity; /*15943*/
			$forall($geti($1.ecbs, 8, 2)); /*15943*/
			$forall($geti($1.ecbs, 0, 8)); /*15943*/
			$1.ecbs = $a(); /*15943*/
		} /*15943*/
		$k[$j++] = Infinity; /*15947*/
		var _KP = $1.cws; /*15947*/
		for (var _KQ = 0, _KR = _KP.length; _KQ < _KR; _KQ++) { /*15947*/
			$k[$j++] = $get(_KP, _KQ); /*15947*/
		} /*15947*/
		for (var _KU = 0, _KV = $1.rscw; _KU < _KV; _KU++) { /*15947*/
			$k[$j++] = 0; /*15947*/
		} /*15947*/
		$1.cws = $a(); /*15947*/
		for (var _KZ = 0, _KY = $1.rscw - 1; _KZ <= _KY; _KZ += 1) { /*15951*/
			$1.i = _KZ; /*15949*/
			$put($1.cws, $1.ncws + $1.i, $get($get($1.ecbs, $1.i % $1.rsbl), ~~($1.i / $1.rsbl))); /*15950*/
		} /*15950*/
		$1.module = function() {
			var _Kk = $k[--$j]; /*15956*/
			var _Kl = $k[--$j]; /*15956*/
			var _Km = $k[--$j]; /*15956*/
			var _Kp = $strcpy($s(8), "00000000"); /*15957*/
			var _Kr = $cvrs($s(8), $k[--$j], 2); /*15957*/
			$puti(_Kp, 8 - _Kr.length, _Kr); /*15958*/
			$k[$j++] = _Km; /*15959*/
			$k[$j++] = _Kl; /*15959*/
			$k[$j++] = _Kk; /*15959*/
			$k[$j++] = _Kp; /*15959*/
			for (var _Ks = 7; _Ks >= 0; _Ks -= 1) { /*15959*/
				var _Kt = $k[--$j]; /*15959*/
				$k[$j++] = $get(_Kt, _Ks) - 48; /*15959*/
				$k[$j++] = _Kt; /*15959*/
			} /*15959*/
			$j--; /*15959*/
			var _Kv = $k[--$j]; /*15960*/
			var _Kw = $k[--$j]; /*15960*/
			var _Kx = $k[--$j]; /*15960*/
			var _Ky = $k[--$j]; /*15960*/
			var _Kz = $k[--$j]; /*15960*/
			var _L0 = $k[--$j]; /*15960*/
			var _L1 = $k[--$j]; /*15960*/
			var _L2 = $k[--$j]; /*15960*/
			var _L3 = $k[--$j]; /*15960*/
			var _L4 = $k[--$j]; /*15960*/
			var _L5 = $k[--$j]; /*15960*/
			$k[$j++] = _L2; /*15977*/
			$k[$j++] = _L1; /*15977*/
			$k[$j++] = _L0; /*15977*/
			$k[$j++] = _Kz; /*15977*/
			$k[$j++] = _Ky; /*15977*/
			$k[$j++] = _Kx; /*15977*/
			$k[$j++] = _Kw; /*15977*/
			$k[$j++] = _Kv; /*15977*/
			$k[$j++] = _L5; /*15977*/
			$k[$j++] = _L4; /*15977*/
			$forall(_L3, function() { /*15977*/
				$k[--$j](); /*15963*/
				var _L7 = $k[--$j]; /*15964*/
				var _L8 = $k[--$j]; /*15964*/
				$k[$j++] = _L8; /*15967*/
				$k[$j++] = _L7; /*15967*/
				if (_L8 < 0) { /*15967*/
					var _L9 = $k[--$j]; /*15965*/
					var _LA = $k[--$j]; /*15965*/
					$k[$j++] = _LA + $1.mrows; /*15966*/
					$k[$j++] = _L9 + (4 - (($1.mrows + 4) % 8)); /*15966*/
				} /*15966*/
				var _LD = $k[--$j]; /*15968*/
				$k[$j++] = _LD; /*15971*/
				if (_LD < 0) { /*15971*/
					var _LF = $k[--$j]; /*15969*/
					var _LG = $k[--$j]; /*15969*/
					$k[$j++] = _LG + (4 - (($1.mcols + 4) % 8)); /*15970*/
					$k[$j++] = _LF + $1.mcols; /*15970*/
				} /*15970*/
				var _LI = $k[--$j]; /*15972*/
				var _LJ = $k[--$j]; /*15972*/
				$k[$j++] = _LJ; /*15974*/
				$k[$j++] = _LI; /*15974*/
				if (_LJ >= $1.mrows) { /*15974*/
					var _LL = $k[--$j]; /*15973*/
					var _LM = $k[--$j]; /*15973*/
					$k[$j++] = _LM - $1.mrows; /*15973*/
					$k[$j++] = _LL; /*15973*/
				} /*15973*/
				var _LO = $k[--$j]; /*15975*/
				var _LP = $k[--$j]; /*15975*/
				var _LS = $k[--$j]; /*15976*/
				var _LT = $k[--$j]; /*15976*/
				$put($1.mmat, _LO + (_LP * $1.mcols), $k[--$j]); /*15976*/
				$k[$j++] = _LT; /*15976*/
				$k[$j++] = _LS; /*15976*/
			}); /*15976*/
		}; /*15978*/
		var _Ll = $a([function() {
			var _LV = $k[--$j]; /*15982*/
			var _LW = $k[--$j]; /*15982*/
			$k[$j++] = _LW; /*15982*/
			$k[$j++] = _LV; /*15982*/
			$k[$j++] = _LW - 2; /*15982*/
			$k[$j++] = _LV - 2; /*15982*/
		}, function() {
			var _LX = $k[--$j]; /*15982*/
			var _LY = $k[--$j]; /*15982*/
			$k[$j++] = _LY; /*15982*/
			$k[$j++] = _LX; /*15982*/
			$k[$j++] = _LY - 2; /*15982*/
			$k[$j++] = _LX - 1; /*15982*/
		}, function() {
			var _LZ = $k[--$j]; /*15983*/
			var _La = $k[--$j]; /*15983*/
			$k[$j++] = _La; /*15983*/
			$k[$j++] = _LZ; /*15983*/
			$k[$j++] = _La - 1; /*15983*/
			$k[$j++] = _LZ - 2; /*15983*/
		}, function() {
			var _Lb = $k[--$j]; /*15983*/
			var _Lc = $k[--$j]; /*15983*/
			$k[$j++] = _Lc; /*15983*/
			$k[$j++] = _Lb; /*15983*/
			$k[$j++] = _Lc - 1; /*15983*/
			$k[$j++] = _Lb - 1; /*15983*/
		}, function() {
			var _Ld = $k[--$j]; /*15984*/
			var _Le = $k[--$j]; /*15984*/
			$k[$j++] = _Le; /*15984*/
			$k[$j++] = _Ld; /*15984*/
			$k[$j++] = _Le - 1; /*15984*/
			$k[$j++] = _Ld; /*15984*/
		}, function() {
			var _Lf = $k[--$j]; /*15984*/
			var _Lg = $k[--$j]; /*15984*/
			$k[$j++] = _Lg; /*15984*/
			$k[$j++] = _Lf; /*15984*/
			$k[$j++] = _Lg; /*15984*/
			$k[$j++] = _Lf - 2; /*15984*/
		}, function() {
			var _Lh = $k[--$j]; /*15985*/
			var _Li = $k[--$j]; /*15985*/
			$k[$j++] = _Li; /*15985*/
			$k[$j++] = _Lh; /*15985*/
			$k[$j++] = _Li; /*15985*/
			$k[$j++] = _Lh - 1; /*15985*/
		}, function() {
			var _Lj = $k[--$j]; /*15985*/
			var _Lk = $k[--$j]; /*15985*/
			$k[$j++] = _Lk; /*15985*/
			$k[$j++] = _Lj; /*15985*/
			$k[$j++] = _Lk; /*15985*/
			$k[$j++] = _Lj; /*15985*/
		}]); /*15985*/
		$1.dmn = _Ll; /*15986*/
		var _Lu = $a([function() {
			$k[$j++] = $1.mrows - 1; /*15989*/
			$k[$j++] = 0; /*15989*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15989*/
			$k[$j++] = 1; /*15989*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15990*/
			$k[$j++] = 2; /*15990*/
		}, function() {
			$k[$j++] = 0; /*15990*/
			$k[$j++] = $1.mcols - 2; /*15990*/
		}, function() {
			$k[$j++] = 0; /*15991*/
			$k[$j++] = $1.mcols - 1; /*15991*/
		}, function() {
			$k[$j++] = 1; /*15991*/
			$k[$j++] = $1.mcols - 1; /*15991*/
		}, function() {
			$k[$j++] = 2; /*15992*/
			$k[$j++] = $1.mcols - 1; /*15992*/
		}, function() {
			$k[$j++] = 3; /*15992*/
			$k[$j++] = $1.mcols - 1; /*15992*/
		}]); /*15992*/
		$1.dmc1 = _Lu; /*15993*/
		var _M3 = $a([function() {
			$k[$j++] = $1.mrows - 3; /*15996*/
			$k[$j++] = 0; /*15996*/
		}, function() {
			$k[$j++] = $1.mrows - 2; /*15996*/
			$k[$j++] = 0; /*15996*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*15997*/
			$k[$j++] = 0; /*15997*/
		}, function() {
			$k[$j++] = 0; /*15997*/
			$k[$j++] = $1.mcols - 4; /*15997*/
		}, function() {
			$k[$j++] = 0; /*15998*/
			$k[$j++] = $1.mcols - 3; /*15998*/
		}, function() {
			$k[$j++] = 0; /*15998*/
			$k[$j++] = $1.mcols - 2; /*15998*/
		}, function() {
			$k[$j++] = 0; /*15999*/
			$k[$j++] = $1.mcols - 1; /*15999*/
		}, function() {
			$k[$j++] = 1; /*15999*/
			$k[$j++] = $1.mcols - 1; /*15999*/
		}]); /*15999*/
		$1.dmc2 = _M3; /*16000*/
		var _MC = $a([function() {
			$k[$j++] = $1.mrows - 3; /*16003*/
			$k[$j++] = 0; /*16003*/
		}, function() {
			$k[$j++] = $1.mrows - 2; /*16003*/
			$k[$j++] = 0; /*16003*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*16004*/
			$k[$j++] = 0; /*16004*/
		}, function() {
			$k[$j++] = 0; /*16004*/
			$k[$j++] = $1.mcols - 2; /*16004*/
		}, function() {
			$k[$j++] = 0; /*16005*/
			$k[$j++] = $1.mcols - 1; /*16005*/
		}, function() {
			$k[$j++] = 1; /*16005*/
			$k[$j++] = $1.mcols - 1; /*16005*/
		}, function() {
			$k[$j++] = 2; /*16006*/
			$k[$j++] = $1.mcols - 1; /*16006*/
		}, function() {
			$k[$j++] = 3; /*16006*/
			$k[$j++] = $1.mcols - 1; /*16006*/
		}]); /*16006*/
		$1.dmc3 = _MC; /*16007*/
		var _MM = $a([function() {
			$k[$j++] = $1.mrows - 1; /*16010*/
			$k[$j++] = 0; /*16010*/
		}, function() {
			$k[$j++] = $1.mrows - 1; /*16010*/
			$k[$j++] = $1.mcols - 1; /*16010*/
		}, function() {
			$k[$j++] = 0; /*16011*/
			$k[$j++] = $1.mcols - 3; /*16011*/
		}, function() {
			$k[$j++] = 0; /*16011*/
			$k[$j++] = $1.mcols - 2; /*16011*/
		}, function() {
			$k[$j++] = 0; /*16012*/
			$k[$j++] = $1.mcols - 1; /*16012*/
		}, function() {
			$k[$j++] = 1; /*16012*/
			$k[$j++] = $1.mcols - 3; /*16012*/
		}, function() {
			$k[$j++] = 1; /*16013*/
			$k[$j++] = $1.mcols - 2; /*16013*/
		}, function() {
			$k[$j++] = 1; /*16013*/
			$k[$j++] = $1.mcols - 1; /*16013*/
		}]); /*16013*/
		$1.dmc4 = _MM; /*16014*/
		$k[$j++] = Infinity; /*16016*/
		for (var _MP = 0, _MQ = $1.mrows * $1.mcols; _MP < _MQ; _MP++) { /*16016*/
			$k[$j++] = -1; /*16016*/
		} /*16016*/
		$1.mmat = $a(); /*16016*/
		for (var _MT = $1.cws.length - 1; _MT >= 0; _MT -= 1) { /*16017*/
			$k[$j++] = $get($1.cws, _MT); /*16017*/
		} /*16017*/
		$k[$j++] = 4; /*16057*/
		$k[$j++] = 0; /*16057*/
		for (;;) { /*16057*/
			var _MW = $k[--$j]; /*16020*/
			var _MX = $k[--$j]; /*16020*/
			$k[$j++] = _MX; /*16022*/
			$k[$j++] = _MW; /*16022*/
			if ((_MW == 0) && (_MX == $1.mrows)) { /*16022*/
				$k[$j++] = $1.dmc1; /*16021*/
				$1.module(); /*16021*/
			} /*16021*/
			var _Ma = $k[--$j]; /*16023*/
			var _Mb = $k[--$j]; /*16023*/
			$k[$j++] = _Mb; /*16025*/
			$k[$j++] = _Ma; /*16025*/
			if (((_Ma == 0) && (_Mb == ($1.mrows - 2))) && (($1.mcols % 4) != 0)) { /*16025*/
				$k[$j++] = $1.dmc2; /*16024*/
				$1.module(); /*16024*/
			} /*16024*/
			var _Mf = $k[--$j]; /*16026*/
			var _Mg = $k[--$j]; /*16026*/
			$k[$j++] = _Mg; /*16028*/
			$k[$j++] = _Mf; /*16028*/
			if (((_Mf == 0) && (_Mg == ($1.mrows - 2))) && (($1.mcols % 8) == 4)) { /*16028*/
				$k[$j++] = $1.dmc3; /*16027*/
				$1.module(); /*16027*/
			} /*16027*/
			var _Mk = $k[--$j]; /*16029*/
			var _Ml = $k[--$j]; /*16029*/
			$k[$j++] = _Ml; /*16031*/
			$k[$j++] = _Mk; /*16031*/
			if (((_Mk == 2) && (_Ml == ($1.mrows + 4))) && (($1.mcols % 8) == 0)) { /*16031*/
				$k[$j++] = $1.dmc4; /*16030*/
				$1.module(); /*16030*/
			} /*16030*/
			for (;;) { /*16041*/
				var _Mp = $k[--$j]; /*16034*/
				var _Mq = $k[--$j]; /*16034*/
				$k[$j++] = _Mq; /*16038*/
				$k[$j++] = _Mp; /*16038*/
				if ((_Mp >= 0) && (_Mq < $1.mrows)) { /*16038*/
					var _Ms = $k[--$j]; /*16035*/
					var _Mt = $k[--$j]; /*16035*/
					$k[$j++] = _Mt; /*16037*/
					$k[$j++] = _Ms; /*16037*/
					if ($get($1.mmat, _Ms + (_Mt * $1.mcols)) == -1) { /*16037*/
						$k[$j++] = $1.dmn; /*16036*/
						$1.module(); /*16036*/
					} /*16036*/
				} /*16036*/
				var _My = $k[--$j]; /*16039*/
				var _Mz = $k[--$j]; /*16039*/
				$k[$j++] = _Mz - 2; /*16040*/
				$k[$j++] = _My + 2; /*16040*/
				if (!(((_My + 2) < $1.mcols) && ((_Mz - 2) >= 0))) { /*16040*/
					break; /*16040*/
				} /*16040*/
			} /*16040*/
			var _N1 = $k[--$j]; /*16042*/
			var _N2 = $k[--$j]; /*16042*/
			$k[$j++] = _N2 + 1; /*16052*/
			$k[$j++] = _N1 + 3; /*16052*/
			for (;;) { /*16052*/
				var _N3 = $k[--$j]; /*16045*/
				var _N4 = $k[--$j]; /*16045*/
				$k[$j++] = _N4; /*16049*/
				$k[$j++] = _N3; /*16049*/
				if ((_N3 < $1.mcols) && (_N4 >= 0)) { /*16049*/
					var _N6 = $k[--$j]; /*16046*/
					var _N7 = $k[--$j]; /*16046*/
					$k[$j++] = _N7; /*16048*/
					$k[$j++] = _N6; /*16048*/
					if ($get($1.mmat, _N6 + (_N7 * $1.mcols)) == -1) { /*16048*/
						$k[$j++] = $1.dmn; /*16047*/
						$1.module(); /*16047*/
					} /*16047*/
				} /*16047*/
				var _NC = $k[--$j]; /*16050*/
				var _ND = $k[--$j]; /*16050*/
				$k[$j++] = _ND + 2; /*16051*/
				$k[$j++] = _NC - 2; /*16051*/
				if (!(((_NC - 2) >= 0) && ((_ND + 2) < $1.mrows))) { /*16051*/
					break; /*16051*/
				} /*16051*/
			} /*16051*/
			var _NF = $k[--$j]; /*16053*/
			var _NG = $k[--$j]; /*16053*/
			$k[$j++] = _NG + 3; /*16055*/
			$k[$j++] = _NF + 1; /*16055*/
			if (!(((_NF + 1) < $1.mcols) || ((_NG + 3) < $1.mrows))) { /*16055*/
				$j -= 2; /*16055*/
				break; /*16055*/
			} /*16055*/
		} /*16055*/
		if ($get($1.mmat, ($1.mrows * $1.mcols) - 1) == -1) { /*16063*/
			$puti($1.mmat, ($1.mrows * ($1.mcols - 1)) - 2, $a([1, 0])); /*16061*/
			$puti($1.mmat, ($1.mrows * $1.mcols) - 2, $a([0, 1])); /*16062*/
		} /*16062*/
		$1.pixs = $a($1.rows * $1.cols); /*16066*/
		$1.cwpos = 0; /*16067*/
		for (var _Na = 0, _NZ = $1.rows - 1; _Na <= _NZ; _Na += 1) { /*16083*/
			$1.i = _Na; /*16069*/
			if (($1.i % ($1.rrows + 2)) == 0) { /*16070*/
				$k[$j++] = $1.pixs; /*16070*/
				$k[$j++] = $1.i * $1.cols; /*16070*/
				$k[$j++] = Infinity; /*16070*/
				for (var _Nh = 0, _Ni = ~~($1.cols / 2); _Nh < _Ni; _Nh++) { /*16070*/
					$k[$j++] = 1; /*16070*/
					$k[$j++] = 0; /*16070*/
				} /*16070*/
				var _Nj = $a(); /*16070*/
				var _Nk = $k[--$j]; /*16070*/
				$puti($k[--$j], _Nk, _Nj); /*16070*/
			} /*16070*/
			if (($1.i % ($1.rrows + 2)) == ($1.rrows + 1)) { /*16071*/
				$k[$j++] = $1.pixs; /*16071*/
				$k[$j++] = $1.i * $1.cols; /*16071*/
				$k[$j++] = Infinity; /*16071*/
				for (var _Nt = 0, _Nu = $1.cols; _Nt < _Nu; _Nt++) { /*16071*/
					$k[$j++] = 1; /*16071*/
				} /*16071*/
				var _Nv = $a(); /*16071*/
				var _Nw = $k[--$j]; /*16071*/
				$puti($k[--$j], _Nw, _Nv); /*16071*/
			} /*16071*/
			if ((($1.i % ($1.rrows + 2)) != 0) && (($1.i % ($1.rrows + 2)) != ($1.rrows + 1))) { /*16082*/
				for (var _O5 = 0, _O4 = $1.cols - 1; _O5 <= _O4; _O5 += 1) { /*16081*/
					$1.j = _O5; /*16074*/
					if (($1.j % ($1.rcols + 2)) == 0) { /*16075*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, 1); /*16075*/
					} /*16075*/
					if (($1.j % ($1.rcols + 2)) == ($1.rcols + 1)) { /*16076*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, $1.i % 2); /*16076*/
					} /*16076*/
					if ((($1.j % ($1.rcols + 2)) != 0) && (($1.j % ($1.rcols + 2)) != ($1.rcols + 1))) { /*16080*/
						$put($1.pixs, ($1.i * $1.cols) + $1.j, $get($1.mmat, $1.cwpos)); /*16078*/
						$1.cwpos = $1.cwpos + 1; /*16079*/
					} /*16079*/
				} /*16079*/
			} /*16079*/
		} /*16079*/
		var _Od = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.cols,
			pixy: $1.rows,
			height: ($1.rows * 2) / 72,
			width: ($1.cols * 2) / 72,
			opt: $1.options
		}; /*16093*/
		$k[$j++] = _Od; /*16096*/
		if (!$1.dontdraw) { /*16096*/
			$0.renmatrix(); /*16096*/
		} /*16096*/
	};
	$0.datamatrixrectangular = function() {
		var $1 = {}; /*16124*/
		$1.options = $k[--$j]; /*16126*/
		$1.barcode = $k[--$j]; /*16127*/
		$1.dontdraw = false; /*16129*/
		$forall($1.options, function() { /*16140*/
			var _3 = $k[--$j]; /*16140*/
			$1[$k[--$j]] = _3; /*16140*/
		}); /*16140*/
		$1.options.dontdraw = true; /*16143*/
		$1.options.format = "rectangle"; /*16144*/
		$k[$j++] = "args"; /*16146*/
		$k[$j++] = $1.barcode; /*16146*/
		$k[$j++] = $1.options; /*16146*/
		$0.datamatrix(); /*16146*/
		var _9 = $k[--$j]; /*16146*/
		$1[$k[--$j]] = _9; /*16146*/
		$1.args.opt = $1.options; /*16148*/
		$k[$j++] = $1.args; /*16151*/
		if (!$1.dontdraw) { /*16151*/
			$0.renmatrix(); /*16151*/
		} /*16151*/
	};
	$0.qrcode = function() {
		var $1 = {}; /*16178*/
		$1.options = $k[--$j]; /*16180*/
		$1.barcode = $k[--$j]; /*16181*/
		$1.dontdraw = false; /*16183*/
		$1.format = "full"; /*16184*/
		$1.version = "unset"; /*16185*/
		$1.eclevel = "unset"; /*16186*/
		$1.parse = false; /*16187*/
		$1.parsefnc = false; /*16188*/
		$1.mask = -1; /*16189*/
		$forall($1.options, function() { /*16200*/
			var _3 = $k[--$j]; /*16200*/
			$1[$k[--$j]] = _3; /*16200*/
		}); /*16200*/
		$1.mask = ~~$1.mask; /*16202*/
		$1.barlen = $1.barcode.length; /*16225*/
		$1.fn1 = -1; /*16228*/
		var _8 = {
			FNC1: $1.fn1
		}; /*16230*/
		$1.fncvals = _8; /*16231*/
		$1.msg = $a($1.barlen); /*16232*/
		$1.i = 0; /*16233*/
		$1.j = 0; /*16233*/
		for (;;) { /*16247*/
			if ($1.i == $1.barlen) { /*16234*/
				break; /*16234*/
			} /*16234*/
			$1.char = $get($1.barcode, $1.i); /*16235*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*16243*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*16241*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*16238*/
					$1.i = $1.i + 4; /*16239*/
				} else { /*16241*/
					$1.i = $1.i + 1; /*16241*/
				} /*16241*/
			} /*16241*/
			$put($1.msg, $1.j, $1.char); /*16244*/
			$1.i = $1.i + 1; /*16245*/
			$1.j = $1.j + 1; /*16246*/
		} /*16246*/
		$1.msg = $geti($1.msg, 0, $1.j); /*16248*/
		$1.msglen = $1.msg.length; /*16249*/
		$1.fnc1first = false; /*16252*/
		if ($1.msglen > 0) { /*16259*/
			if ($get($1.msg, 0) == $1.fn1) { /*16258*/
				$1.fnc1first = true; /*16255*/
				$k[$j++] = Infinity; /*16256*/
				$forall($geti($1.msg, 1, $1.msglen - 1), function() { /*16256*/
					var _k = $k[--$j]; /*16256*/
					$k[$j++] = _k; /*16256*/
					if (_k == 37) { /*16256*/
						var _l = $k[--$j]; /*16256*/
						$k[$j++] = _l; /*16256*/
						$k[$j++] = _l; /*16256*/
					} /*16256*/
				}); /*16256*/
				$1.msg = $a(); /*16256*/
				$1.msglen = $1.msg.length; /*16257*/
			} /*16257*/
		} /*16257*/
		if ($eq($1.eclevel, "unset")) { /*16262*/
			$k[$j++] = "eclevel"; /*16262*/
			if ($eq($1.format, "full")) { /*16262*/
				$k[$j++] = "M"; /*16262*/
			} else { /*16262*/
				$k[$j++] = "L"; /*16262*/
			} /*16262*/
			var _q = $k[--$j]; /*16262*/
			$1[$k[--$j]] = _q; /*16262*/
		} /*16262*/
		$1.N = 0; /*16265*/
		$1.A = 1; /*16265*/
		$1.B = 2; /*16265*/
		$1.K = 3; /*16265*/
		$k[$j++] = "Nexcl"; /*16270*/
		$k[$j++] = Infinity; /*16270*/
		$k[$j++] = Infinity; /*16269*/
		for (var _s = 48; _s <= 57; _s += 1) { /*16269*/
			$k[$j++] = _s; /*16269*/
		} /*16269*/
		var _t = $a(); /*16269*/
		for (var _u = 0, _v = _t.length; _u < _v; _u++) { /*16270*/
			$k[$j++] = $get(_t, _u); /*16270*/
			$k[$j++] = -1; /*16270*/
		} /*16270*/
		var _x = $d(); /*16270*/
		$1[$k[--$j]] = _x; /*16271*/
		$k[$j++] = "Aexcl"; /*16278*/
		$k[$j++] = Infinity; /*16278*/
		$k[$j++] = Infinity; /*16277*/
		$k[$j++] = 32; /*16276*/
		$k[$j++] = 36; /*16276*/
		$k[$j++] = 37; /*16276*/
		$k[$j++] = 42; /*16276*/
		$k[$j++] = 43; /*16276*/
		$k[$j++] = 45; /*16276*/
		$k[$j++] = 46; /*16276*/
		$k[$j++] = 47; /*16276*/
		$k[$j++] = 58; /*16276*/
		for (var _z = 65; _z <= 90; _z += 1) { /*16276*/
			$k[$j++] = _z; /*16276*/
		} /*16276*/
		$k[$j++] = $1.fn1; /*16277*/
		var _11 = $a(); /*16277*/
		for (var _12 = 0, _13 = _11.length; _12 < _13; _12++) { /*16278*/
			$k[$j++] = $get(_11, _12); /*16278*/
			$k[$j++] = -1; /*16278*/
		} /*16278*/
		var _15 = $d(); /*16278*/
		$1[$k[--$j]] = _15; /*16279*/
		$k[$j++] = "Bexcl"; /*16288*/
		$k[$j++] = Infinity; /*16288*/
		$k[$j++] = Infinity; /*16287*/
		for (var _17 = 0; _17 <= 31; _17 += 1) { /*16283*/
			$k[$j++] = _17; /*16283*/
		} /*16283*/
		$k[$j++] = 33; /*16285*/
		$k[$j++] = 34; /*16285*/
		$k[$j++] = 35; /*16285*/
		$k[$j++] = 38; /*16285*/
		$k[$j++] = 39; /*16285*/
		$k[$j++] = 40; /*16285*/
		$k[$j++] = 41; /*16285*/
		$k[$j++] = 44; /*16285*/
		for (var _18 = 59; _18 <= 64; _18 += 1) { /*16285*/
			$k[$j++] = _18; /*16285*/
		} /*16285*/
		for (var _19 = 91; _19 <= 127; _19 += 1) { /*16286*/
			$k[$j++] = _19; /*16286*/
		} /*16286*/
		for (var _1A = 160; _1A <= 223; _1A += 1) { /*16287*/
			$k[$j++] = _1A; /*16287*/
		} /*16287*/
		var _1B = $a(); /*16287*/
		for (var _1C = 0, _1D = _1B.length; _1C < _1D; _1C++) { /*16288*/
			$k[$j++] = $get(_1B, _1C); /*16288*/
			$k[$j++] = -1; /*16288*/
		} /*16288*/
		var _1F = $d(); /*16288*/
		$1[$k[--$j]] = _1F; /*16289*/
		$k[$j++] = "Kexcl"; /*16295*/
		$k[$j++] = Infinity; /*16295*/
		$k[$j++] = Infinity; /*16294*/
		for (var _1H = 129; _1H <= 159; _1H += 1) { /*16293*/
			$k[$j++] = _1H; /*16293*/
		} /*16293*/
		for (var _1I = 224; _1I <= 235; _1I += 1) { /*16294*/
			$k[$j++] = _1I; /*16294*/
		} /*16294*/
		var _1J = $a(); /*16294*/
		for (var _1K = 0, _1L = _1J.length; _1K < _1L; _1K++) { /*16295*/
			$k[$j++] = $get(_1J, _1K); /*16295*/
			$k[$j++] = -1; /*16295*/
		} /*16295*/
		var _1N = $d(); /*16295*/
		$1[$k[--$j]] = _1N; /*16296*/
		$1.mids = $a([$a(["0001", "0010", "0100", "1000"]), $a(["0001", "0010", "0100", "1000"]), $a(["0001", "0010", "0100", "1000"]), $a(["", -1, -1, -1]), $a(["0", "1", -1, -1]), $a(["00", "01", "10", "11"]), $a(["000", "001", "010", "011"])]); /*16306*/
		$1.cclens = $a([$a([10, 9, 8, 8]), $a([12, 11, 16, 10]), $a([14, 13, 16, 12]), $a([3, -1, -1, -1]), $a([4, 3, -1, -1]), $a([5, 4, 4, 3]), $a([6, 5, 5, 4])]); /*16316*/
		$1.termlens = $a([4, 4, 4, 3, 5, 7, 9]); /*16318*/
		$1.tobin = function() {
			var _1h = $s($k[--$j]); /*16322*/
			$k[$j++] = _1h; /*16322*/
			for (var _1j = 0, _1i = _1h.length - 1; _1j <= _1i; _1j += 1) { /*16322*/
				var _1k = $k[--$j]; /*16322*/
				$put(_1k, _1j, 48); /*16322*/
				$k[$j++] = _1k; /*16322*/
			} /*16322*/
			var _1l = $k[--$j]; /*16323*/
			var _1o = $cvrs($s(_1l.length), $k[--$j], 2); /*16323*/
			$puti(_1l, _1l.length - _1o.length, _1o); /*16323*/
			$k[$j++] = _1l; /*16323*/
		}; /*16324*/
		$1.charmap = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:"; /*16327*/
		$1.charvals = {}; /*16328*/
		for (var _1p = 0; _1p <= 44; _1p += 1) { /*16329*/
			$put($1.charvals, $get($1.charmap, _1p), _1p); /*16329*/
		} /*16329*/
		$1.encA = function() {
			$1.in = $k[--$j]; /*16332*/
			if ($1.fnc1first) { /*16335*/
				$k[$j++] = Infinity; /*16334*/
				$forall($1.in, function() { /*16334*/
					var _1w = $k[--$j]; /*16334*/
					$k[$j++] = _1w; /*16334*/
					if (_1w == -1) { /*16334*/
						$j--; /*16334*/
						$k[$j++] = 37; /*16334*/
					} /*16334*/
				}); /*16334*/
				$1.in = $a(); /*16334*/
			} /*16334*/
			$1.out = $s((~~(($1.in.length * 11) / 2)) + 1); /*16336*/
			$1.k = 0; /*16337*/
			$1.m = 0; /*16337*/
			for (;;) { /*16348*/
				if ($1.k == $1.in.length) { /*16338*/
					break; /*16338*/
				} /*16338*/
				if ($1.k < ($1.in.length - 1)) { /*16344*/
					$k[$j++] = ($get($1.charvals, $get($1.in, $1.k)) * 45) + $get($1.charvals, $get($1.in, $1.k + 1)); /*16340*/
					$k[$j++] = 11; /*16340*/
					$1.tobin(); /*16340*/
					$1.k = $1.k + 2; /*16341*/
				} else { /*16344*/
					$k[$j++] = $get($1.charvals, $get($1.in, $1.k)); /*16343*/
					$k[$j++] = 6; /*16343*/
					$1.tobin(); /*16343*/
					$1.k = $1.k + 1; /*16344*/
				} /*16344*/
				var _2L = $k[--$j]; /*16346*/
				$puti($1.out, $1.m, _2L); /*16346*/
				$1.m = _2L.length + $1.m; /*16347*/
			} /*16347*/
			$k[$j++] = $geti($1.out, 0, $1.m); /*16349*/
		}; /*16350*/
		$1.encN = function() {
			$1.in = $k[--$j]; /*16353*/
			$1.out = $s((~~(($1.in.length * 10) / 3)) + 1); /*16354*/
			$1.k = 0; /*16355*/
			$1.m = 0; /*16355*/
			for (;;) { /*16371*/
				if ($1.k == $1.in.length) { /*16356*/
					break; /*16356*/
				} /*16356*/
				if ($1.k < ($1.in.length - 2)) { /*16366*/
					$k[$j++] = 0; /*16358*/
					$forall($geti($1.in, $1.k, 3), function() { /*16358*/
						var _2c = $k[--$j]; /*16358*/
						var _2d = $k[--$j]; /*16358*/
						$k[$j++] = _2c + ((_2d * 10) - 48); /*16358*/
					}); /*16358*/
					$k[$j++] = 10; /*16358*/
					$1.tobin(); /*16358*/
					$1.k = $1.k + 3; /*16359*/
				} else { /*16366*/
					if ($1.k == ($1.in.length - 2)) { /*16366*/
						$k[$j++] = 0; /*16362*/
						$forall($geti($1.in, $1.k, 2), function() { /*16362*/
							var _2k = $k[--$j]; /*16362*/
							var _2l = $k[--$j]; /*16362*/
							$k[$j++] = _2k + ((_2l * 10) - 48); /*16362*/
						}); /*16362*/
						$k[$j++] = 7; /*16362*/
						$1.tobin(); /*16362*/
						$1.k = $1.k + 2; /*16363*/
					} else { /*16366*/
						$k[$j++] = 0; /*16365*/
						$forall($geti($1.in, $1.k, 1), function() { /*16365*/
							var _2q = $k[--$j]; /*16365*/
							var _2r = $k[--$j]; /*16365*/
							$k[$j++] = _2q + ((_2r * 10) - 48); /*16365*/
						}); /*16365*/
						$k[$j++] = 4; /*16365*/
						$1.tobin(); /*16365*/
						$1.k = $1.k + 1; /*16366*/
					} /*16366*/
				} /*16366*/
				var _2t = $k[--$j]; /*16369*/
				$puti($1.out, $1.m, _2t); /*16369*/
				$1.m = _2t.length + $1.m; /*16370*/
			} /*16370*/
			$k[$j++] = $geti($1.out, 0, $1.m); /*16372*/
		}; /*16373*/
		$1.encB = function() {
			$1.in = $k[--$j]; /*16376*/
			if ($1.fnc1first) { /*16379*/
				$k[$j++] = Infinity; /*16378*/
				$forall($1.in, function() { /*16378*/
					var _33 = $k[--$j]; /*16378*/
					$k[$j++] = _33; /*16378*/
					if (_33 == -1) { /*16378*/
						$j--; /*16378*/
						$k[$j++] = 29; /*16378*/
					} /*16378*/
				}); /*16378*/
				$1.in = $a(); /*16378*/
			} /*16378*/
			$1.out = $s($1.in.length * 8); /*16380*/
			for (var _39 = 0, _38 = $1.in.length - 1; _39 <= _38; _39 += 1) { /*16385*/
				$1.k = _39; /*16382*/
				$k[$j++] = ~~$z($get($1.in, $1.k)); /*16383*/
				$k[$j++] = 8; /*16383*/
				$1.tobin(); /*16383*/
				$puti($1.out, $1.k * 8, $k[--$j]); /*16384*/
			} /*16384*/
			$k[$j++] = $1.out; /*16386*/
		}; /*16387*/
		$1.encK = function() {
			$1.in = $k[--$j]; /*16390*/
			$1.out = $s((~~($1.in.length / 2)) * 13); /*16391*/
			$1.k = 0; /*16392*/
			$1.m = 0; /*16392*/
			for (;;) { /*16400*/
				if ($1.k == $1.in.length) { /*16393*/
					break; /*16393*/
				} /*16393*/
				var _3S = ($get($1.in, $1.k) * 256) + $get($1.in, $1.k + 1); /*16395*/
				$k[$j++] = _3S; /*16395*/
				if (_3S < 57408) { /*16395*/
					$k[$j++] = 33088; /*16395*/
				} else { /*16395*/
					$k[$j++] = 49472; /*16395*/
				} /*16395*/
				var _3T = $k[--$j]; /*16395*/
				var _3V = $k[--$j] - _3T; /*16396*/
				$k[$j++] = ((_3V >>> 8) * 192) + (_3V & 255); /*16397*/
				$k[$j++] = 13; /*16397*/
				$1.tobin(); /*16397*/
				var _3W = $k[--$j]; /*16397*/
				$puti($1.out, $1.m, _3W); /*16397*/
				$1.m = _3W.length + $1.m; /*16398*/
				$1.k = $1.k + 2; /*16399*/
			} /*16399*/
			$k[$j++] = $1.out; /*16401*/
		}; /*16402*/
		$1.encfuncs = $a(["encN", "encA", "encB", "encK"]); /*16404*/
		$1.addtobits = function() {
			var _3d = $k[--$j]; /*16407*/
			$puti($1.bits, $1.j, _3d); /*16407*/
			$1.j = _3d.length + $1.j; /*16408*/
		}; /*16409*/
		$k[$j++] = Infinity; /*16411*/
		for (var _3i = 0, _3j = $1.msglen; _3i < _3j; _3i++) { /*16411*/
			$k[$j++] = 0; /*16411*/
		} /*16411*/
		$k[$j++] = 0; /*16411*/
		$1.numNs = $a(); /*16411*/
		$k[$j++] = Infinity; /*16412*/
		for (var _3m = 0, _3n = $1.msglen; _3m < _3n; _3m++) { /*16412*/
			$k[$j++] = 0; /*16412*/
		} /*16412*/
		$k[$j++] = 0; /*16412*/
		$1.numAs = $a(); /*16412*/
		$k[$j++] = Infinity; /*16413*/
		for (var _3q = 0, _3r = $1.msglen; _3q < _3r; _3q++) { /*16413*/
			$k[$j++] = 0; /*16413*/
		} /*16413*/
		$k[$j++] = 0; /*16413*/
		$1.numBs = $a(); /*16413*/
		$k[$j++] = Infinity; /*16414*/
		for (var _3u = 0, _3v = $1.msglen; _3u < _3v; _3u++) { /*16414*/
			$k[$j++] = 0; /*16414*/
		} /*16414*/
		$k[$j++] = -1; /*16414*/
		$1.numKs = $a(); /*16414*/
		$k[$j++] = Infinity; /*16415*/
		for (var _3y = 0, _3z = $1.msglen; _3y < _3z; _3y++) { /*16415*/
			$k[$j++] = 0; /*16415*/
		} /*16415*/
		$k[$j++] = 9999; /*16415*/
		$1.nextNs = $a(); /*16415*/
		$k[$j++] = Infinity; /*16416*/
		for (var _42 = 0, _43 = $1.msglen; _42 < _43; _42++) { /*16416*/
			$k[$j++] = 0; /*16416*/
		} /*16416*/
		$k[$j++] = 9999; /*16416*/
		$1.nextBs = $a(); /*16416*/
		$k[$j++] = Infinity; /*16417*/
		for (var _46 = 0, _47 = $1.msglen; _46 < _47; _46++) { /*16417*/
			$k[$j++] = 0; /*16417*/
		} /*16417*/
		$k[$j++] = 9999; /*16417*/
		$1.nextAs = $a(); /*16417*/
		$k[$j++] = Infinity; /*16418*/
		for (var _4A = 0, _4B = $1.msglen; _4A < _4B; _4A++) { /*16418*/
			$k[$j++] = 0; /*16418*/
		} /*16418*/
		$k[$j++] = 9999; /*16418*/
		$1.nextKs = $a(); /*16418*/
		for (var _4E = $1.msglen - 1; _4E >= 0; _4E -= 1) { /*16446*/
			$1.i = _4E; /*16420*/
			$1.barchar = $get($1.msg, $1.i); /*16421*/
			var _4K = $get($1.Kexcl, $1.barchar) !== undefined; /*16422*/
			if (_4K) { /*16426*/
				$put($1.nextKs, $1.i, 0); /*16423*/
				$put($1.numKs, $1.i, $get($1.numKs, $1.i + 1) + 1); /*16424*/
			} else { /*16426*/
				$put($1.nextKs, $1.i, $get($1.nextKs, $1.i + 1) + 1); /*16426*/
			} /*16426*/
			var _4Z = $get($1.Nexcl, $1.barchar) !== undefined; /*16428*/
			if (_4Z) { /*16432*/
				$put($1.nextNs, $1.i, 0); /*16429*/
				$put($1.numNs, $1.i, $get($1.numNs, $1.i + 1) + 1); /*16430*/
			} else { /*16432*/
				$put($1.nextNs, $1.i, $get($1.nextNs, $1.i + 1) + 1); /*16432*/
			} /*16432*/
			var _4o = $get($1.Bexcl, $1.barchar) !== undefined; /*16434*/
			if (_4o) { /*16438*/
				$put($1.nextBs, $1.i, 0); /*16435*/
				$put($1.numBs, $1.i, $get($1.numBs, $1.i + 1) + 1); /*16436*/
			} else { /*16438*/
				$put($1.nextBs, $1.i, $get($1.nextBs, $1.i + 1) + 1); /*16438*/
			} /*16438*/
			var _53 = $get($1.Aexcl, $1.barchar) !== undefined; /*16440*/
			if (_53) { /*16444*/
				$put($1.nextAs, $1.i, 0); /*16441*/
				$put($1.numAs, $1.i, $get($1.numAs, $1.i + 1) + 1); /*16442*/
			} else { /*16444*/
				$put($1.nextAs, $1.i, $get($1.nextAs, $1.i + 1) + 1); /*16444*/
			} /*16444*/
		} /*16444*/
		$k[$j++] = Infinity; /*16447*/
		var _5G = $1.numKs; /*16447*/
		for (var _5H = 0, _5I = _5G.length; _5H < _5I; _5H++) { /*16447*/
			$k[$j++] = ~~(($get(_5G, _5H) + 1) / 2); /*16447*/
		} /*16447*/
		$1.numKs = $a(); /*16447*/
		$1.KbeforeB = function() {
			var _5O = $get($k[--$j], $1.ver); /*16449*/
			$k[$j++] = $ge($1.numK, _5O) && ($get($1.nextBs, ($1.numK * 2) + $1.i) == 0); /*16449*/
		}; /*16449*/
		$1.KbeforeA = function() {
			var _5W = $get($k[--$j], $1.ver); /*16450*/
			$k[$j++] = $ge($1.numK, _5W) && ($get($1.nextAs, ($1.numK * 2) + $1.i) == 0); /*16450*/
		}; /*16450*/
		$1.KbeforeN = function() {
			var _5e = $get($k[--$j], $1.ver); /*16451*/
			$k[$j++] = $ge($1.numK, _5e) && ($get($1.nextNs, ($1.numK * 2) + $1.i) == 0); /*16451*/
		}; /*16451*/
		$1.KbeforeE = function() {
			var _5m = $get($k[--$j], $1.ver); /*16452*/
			$k[$j++] = $ge($1.numK, _5m) && ((($1.numK * 2) + $1.i) == $1.msglen); /*16452*/
		}; /*16452*/
		$1.AbeforeK = function() {
			var _5t = $get($k[--$j], $1.ver); /*16453*/
			$k[$j++] = $ge($1.numA, _5t) && ($get($1.nextKs, $1.numA + $1.i) == 0); /*16453*/
		}; /*16453*/
		$1.AbeforeB = function() {
			var _61 = $get($k[--$j], $1.ver); /*16454*/
			$k[$j++] = $ge($1.numA, _61) && ($get($1.nextBs, $1.numA + $1.i) == 0); /*16454*/
		}; /*16454*/
		$1.AbeforeN = function() {
			var _69 = $get($k[--$j], $1.ver); /*16455*/
			$k[$j++] = $ge($1.numA, _69) && ($get($1.nextNs, $1.numA + $1.i) == 0); /*16455*/
		}; /*16455*/
		$1.AbeforeE = function() {
			var _6H = $get($k[--$j], $1.ver); /*16456*/
			$k[$j++] = $ge($1.numA, _6H) && (($1.numA + $1.i) == $1.msglen); /*16456*/
		}; /*16456*/
		$1.NbeforeK = function() {
			var _6O = $get($k[--$j], $1.ver); /*16457*/
			$k[$j++] = $ge($1.numN, _6O) && ($get($1.nextKs, $1.numN + $1.i) == 0); /*16457*/
		}; /*16457*/
		$1.NbeforeB = function() {
			var _6W = $get($k[--$j], $1.ver); /*16458*/
			$k[$j++] = $ge($1.numN, _6W) && ($get($1.nextBs, $1.numN + $1.i) == 0); /*16458*/
		}; /*16458*/
		$1.NbeforeA = function() {
			var _6e = $get($k[--$j], $1.ver); /*16459*/
			$k[$j++] = $ge($1.numN, _6e) && ($get($1.nextAs, $1.numN + $1.i) == 0); /*16459*/
		}; /*16459*/
		$1.NbeforeE = function() {
			var _6m = $get($k[--$j], $1.ver); /*16460*/
			$k[$j++] = $ge($1.numN, _6m) && (($1.numN + $1.i) == $1.msglen); /*16460*/
		}; /*16460*/
		$1.msgbits = $a([-1, -1, -1, -1, -1, -1, -1]); /*16463*/
		$1.v1to9 = 0; /*16464*/
		$1.v10to26 = 1; /*16464*/
		$1.v27to40 = 2; /*16464*/
		$1.vM1 = 3; /*16464*/
		$1.vM2 = 4; /*16464*/
		$1.vM3 = 5; /*16464*/
		$1.vM4 = 6; /*16464*/
		$1.e = 10000; /*16465*/
		var _6y = $a([$1.v1to9, $1.v10to26, $1.v27to40, $1.vM1, $1.vM2, $1.vM3, $1.vM4]); /*16466*/
		for (var _6z = 0, _70 = _6y.length; _6z < _70; _6z++) { /*16583*/
			$1.ver = $get(_6y, _6z); /*16467*/
			$1.mode = -1; /*16470*/
			$1.seq = $a([]); /*16470*/
			$1.i = 0; /*16470*/
			for (;;) { /*16557*/
				if ($1.i >= $1.msglen) { /*16471*/
					break; /*16471*/
				} /*16471*/
				$1.numK = $get($1.numKs, $1.i); /*16472*/
				$1.numB = $get($1.numBs, $1.i); /*16473*/
				$1.numA = $get($1.numAs, $1.i); /*16474*/
				$1.numN = $get($1.numNs, $1.i); /*16475*/
				if (($1.ver == $1.vM1) && ($1.numA >= 1)) { /*16476*/
					$1.seq = -1; /*16476*/
					break; /*16476*/
				} /*16476*/
				if (($1.ver == $1.vM1) && ($1.numB >= 1)) { /*16477*/
					$1.seq = -1; /*16477*/
					break; /*16477*/
				} /*16477*/
				if (($1.ver == $1.vM1) && ($1.numK >= 1)) { /*16478*/
					$1.seq = -1; /*16478*/
					break; /*16478*/
				} /*16478*/
				if (($1.ver == $1.vM2) && ($1.numB >= 1)) { /*16479*/
					$1.seq = -1; /*16479*/
					break; /*16479*/
				} /*16479*/
				if (($1.ver == $1.vM2) && ($1.numK >= 1)) { /*16480*/
					$1.seq = -1; /*16480*/
					break; /*16480*/
				} /*16480*/
				for (;;) { /*16538*/
					if ($1.mode == -1) { /*16499*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16483*/
						$1.KbeforeA(); /*16483*/
						if ($k[--$j]) { /*16483*/
							$k[$j++] = $1.K; /*16483*/
							break; /*16483*/
						} /*16483*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16484*/
						$1.KbeforeN(); /*16484*/
						if ($k[--$j]) { /*16484*/
							$k[$j++] = $1.K; /*16484*/
							break; /*16484*/
						} /*16484*/
						$k[$j++] = $a([5, 5, 6, $1.e, $1.e, 2, 3]); /*16485*/
						$1.KbeforeB(); /*16485*/
						if ($k[--$j]) { /*16485*/
							$k[$j++] = $1.K; /*16485*/
							break; /*16485*/
						} /*16485*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16486*/
						$1.KbeforeE(); /*16486*/
						if ($k[--$j]) { /*16486*/
							$k[$j++] = $1.K; /*16486*/
							break; /*16486*/
						} /*16486*/
						if ($1.numK >= 1) { /*16487*/
							$k[$j++] = $1.B; /*16487*/
							break; /*16487*/
						} /*16487*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16488*/
						$1.AbeforeB(); /*16488*/
						if ($k[--$j]) { /*16488*/
							$k[$j++] = $1.A; /*16488*/
							break; /*16488*/
						} /*16488*/
						$k[$j++] = $a([1, 1, 1, $1.e, 1, 1, 1]); /*16489*/
						$1.AbeforeE(); /*16489*/
						if ($k[--$j]) { /*16489*/
							$k[$j++] = $1.A; /*16489*/
							break; /*16489*/
						} /*16489*/
						if ($1.numA >= 1) { /*16492*/
							if ($1.ver != $1.vM2) { /*16491*/
								$k[$j++] = $1.B; /*16491*/
							} else { /*16491*/
								$k[$j++] = $1.A; /*16491*/
							} /*16491*/
							break; /*16491*/
						} /*16491*/
						$k[$j++] = $a([4, 4, 5, $1.e, $1.e, 2, 3]); /*16493*/
						$1.NbeforeB(); /*16493*/
						if ($k[--$j]) { /*16493*/
							$k[$j++] = $1.N; /*16493*/
							break; /*16493*/
						} /*16493*/
						$k[$j++] = $a([1, 1, 1, $1.e, $1.e, 1, 1]); /*16494*/
						$1.NbeforeB(); /*16494*/
						if ($k[--$j]) { /*16494*/
							$k[$j++] = $1.B; /*16494*/
							break; /*16494*/
						} /*16494*/
						$k[$j++] = $a([7, 8, 9, $1.e, 3, 4, 5]); /*16495*/
						$1.NbeforeA(); /*16495*/
						if ($k[--$j]) { /*16495*/
							$k[$j++] = $1.N; /*16495*/
							break; /*16495*/
						} /*16495*/
						$k[$j++] = $a([1, 1, 1, $1.e, 1, 1, 1]); /*16496*/
						$1.NbeforeA(); /*16496*/
						if ($k[--$j]) { /*16496*/
							$k[$j++] = $1.A; /*16496*/
							break; /*16496*/
						} /*16496*/
						if ($1.numN >= 1) { /*16497*/
							$k[$j++] = $1.N; /*16497*/
							break; /*16497*/
						} /*16497*/
						$k[$j++] = $1.B; /*16498*/
						break; /*16498*/
					} /*16498*/
					if ($1.mode == $1.B) { /*16514*/
						$k[$j++] = $a([9, 12, 13, $1.e, $1.e, 4, 5]); /*16501*/
						$1.KbeforeB(); /*16501*/
						if ($k[--$j]) { /*16501*/
							$k[$j++] = $1.K; /*16501*/
							break; /*16501*/
						} /*16501*/
						$k[$j++] = $a([9, 10, 12, $1.e, $1.e, 4, 5]); /*16502*/
						$1.KbeforeA(); /*16502*/
						if ($k[--$j]) { /*16502*/
							$k[$j++] = $1.K; /*16502*/
							break; /*16502*/
						} /*16502*/
						$k[$j++] = $a([9, 10, 11, $1.e, $1.e, 5, 6]); /*16503*/
						$1.KbeforeN(); /*16503*/
						if ($k[--$j]) { /*16503*/
							$k[$j++] = $1.K; /*16503*/
							break; /*16503*/
						} /*16503*/
						$k[$j++] = $a([4, 5, 6, $1.e, $1.e, 2, 3]); /*16504*/
						$1.KbeforeE(); /*16504*/
						if ($k[--$j]) { /*16504*/
							$k[$j++] = $1.K; /*16504*/
							break; /*16504*/
						} /*16504*/
						$k[$j++] = $a([11, 12, 14, $1.e, $1.e, 5, 7]); /*16505*/
						$1.AbeforeK(); /*16505*/
						if ($k[--$j]) { /*16505*/
							$k[$j++] = $1.A; /*16505*/
							break; /*16505*/
						} /*16505*/
						$k[$j++] = $a([11, 15, 16, $1.e, $1.e, 6, 7]); /*16506*/
						$1.AbeforeB(); /*16506*/
						if ($k[--$j]) { /*16506*/
							$k[$j++] = $1.A; /*16506*/
							break; /*16506*/
						} /*16506*/
						$k[$j++] = $a([12, 13, 15, $1.e, $1.e, 6, 8]); /*16507*/
						$1.AbeforeN(); /*16507*/
						if ($k[--$j]) { /*16507*/
							$k[$j++] = $1.A; /*16507*/
							break; /*16507*/
						} /*16507*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16508*/
						$1.AbeforeE(); /*16508*/
						if ($k[--$j]) { /*16508*/
							$k[$j++] = $1.A; /*16508*/
							break; /*16508*/
						} /*16508*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16509*/
						$1.NbeforeK(); /*16509*/
						if ($k[--$j]) { /*16509*/
							$k[$j++] = $1.N; /*16509*/
							break; /*16509*/
						} /*16509*/
						$k[$j++] = $a([6, 8, 9, $1.e, $1.e, 3, 4]); /*16510*/
						$1.NbeforeB(); /*16510*/
						if ($k[--$j]) { /*16510*/
							$k[$j++] = $1.N; /*16510*/
							break; /*16510*/
						} /*16510*/
						$k[$j++] = $a([6, 7, 8, $1.e, $1.e, 3, 4]); /*16511*/
						$1.NbeforeA(); /*16511*/
						if ($k[--$j]) { /*16511*/
							$k[$j++] = $1.N; /*16511*/
							break; /*16511*/
						} /*16511*/
						$k[$j++] = $a([3, 4, 5, $1.e, $1.e, 2, 3]); /*16512*/
						$1.NbeforeE(); /*16512*/
						if ($k[--$j]) { /*16512*/
							$k[$j++] = $1.N; /*16512*/
							break; /*16512*/
						} /*16512*/
						$k[$j++] = $1.B; /*16513*/
						break; /*16513*/
					} /*16513*/
					if ($1.mode == $1.A) { /*16523*/
						if ($1.numK >= 1) { /*16516*/
							$k[$j++] = $1.K; /*16516*/
							break; /*16516*/
						} /*16516*/
						if ($1.numB >= 1) { /*16517*/
							$k[$j++] = $1.B; /*16517*/
							break; /*16517*/
						} /*16517*/
						$k[$j++] = $a([13, 15, 17, $1.e, 5, 7, 9]); /*16518*/
						$1.NbeforeA(); /*16518*/
						if ($k[--$j]) { /*16518*/
							$k[$j++] = $1.N; /*16518*/
							break; /*16518*/
						} /*16518*/
						$k[$j++] = $a([13, 17, 18, $1.e, $1.e, 7, 9]); /*16519*/
						$1.NbeforeB(); /*16519*/
						if ($k[--$j]) { /*16519*/
							$k[$j++] = $1.N; /*16519*/
							break; /*16519*/
						} /*16519*/
						$k[$j++] = $a([7, 8, 9, $1.e, 3, 4, 5]); /*16520*/
						$1.NbeforeE(); /*16520*/
						if ($k[--$j]) { /*16520*/
							$k[$j++] = $1.N; /*16520*/
							break; /*16520*/
						} /*16520*/
						if (($1.numA >= 1) || ($1.numN >= 1)) { /*16521*/
							$k[$j++] = $1.A; /*16521*/
							break; /*16521*/
						} /*16521*/
						$k[$j++] = $1.B; /*16522*/
						break; /*16522*/
					} /*16522*/
					if ($1.mode == $1.N) { /*16530*/
						if ($1.numK >= 1) { /*16525*/
							$k[$j++] = $1.K; /*16525*/
							break; /*16525*/
						} /*16525*/
						if ($1.numB >= 1) { /*16526*/
							$k[$j++] = $1.B; /*16526*/
							break; /*16526*/
						} /*16526*/
						if ($1.numA >= 1) { /*16527*/
							$k[$j++] = $1.A; /*16527*/
							break; /*16527*/
						} /*16527*/
						if ($1.numN >= 1) { /*16528*/
							$k[$j++] = $1.N; /*16528*/
							break; /*16528*/
						} /*16528*/
						$k[$j++] = $1.B; /*16529*/
						break; /*16529*/
					} /*16529*/
					if ($1.mode == $1.K) { /*16537*/
						if ($1.numB >= 1) { /*16532*/
							$k[$j++] = $1.B; /*16532*/
							break; /*16532*/
						} /*16532*/
						if ($1.numA >= 1) { /*16533*/
							$k[$j++] = $1.A; /*16533*/
							break; /*16533*/
						} /*16533*/
						if ($1.numN >= 1) { /*16534*/
							$k[$j++] = $1.N; /*16534*/
							break; /*16534*/
						} /*16534*/
						if ($1.numK >= 1) { /*16535*/
							$k[$j++] = $1.K; /*16535*/
							break; /*16535*/
						} /*16535*/
						$k[$j++] = $1.B; /*16536*/
						break; /*16536*/
					} /*16536*/
				} /*16536*/
				var _AC = $k[--$j]; /*16539*/
				$k[$j++] = _AC; /*16539*/
				if ((_AC == $1.K) && $1.fnc1first) { /*16539*/
					$j--; /*16539*/
					$k[$j++] = $1.B; /*16539*/
				} /*16539*/
				var _AG = $k[--$j]; /*16540*/
				$k[$j++] = _AG; /*16555*/
				if (_AG == $1.mode) { /*16554*/
					$j--; /*16541*/
					var _AM = ($1.mode == $1.K) ? 2 : 1; /*16542*/
					$1.dat = $geti($1.msg, $1.i, _AM); /*16542*/
					$k[$j++] = Infinity; /*16546*/
					$aload($1.seq); /*16544*/
					$k[$j++] = Infinity; /*16545*/
					var _AP = $k[--$j]; /*16545*/
					var _AQ = $k[--$j]; /*16545*/
					$k[$j++] = _AP; /*16545*/
					$aload(_AQ); /*16545*/
					$aload($1.dat); /*16545*/
					var _AS = $a(); /*16545*/
					$k[$j++] = _AS; /*16545*/
					$1.seq = $a(); /*16546*/
				} else { /*16554*/
					$1.mode = $k[--$j]; /*16548*/
					if ($1.mode == $1.K) { /*16549*/
						$k[$j++] = $1.K; /*16549*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numK * 2); /*16549*/
					} /*16549*/
					if ($1.mode == $1.B) { /*16550*/
						$k[$j++] = $1.B; /*16550*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numB); /*16550*/
					} /*16550*/
					if ($1.mode == $1.A) { /*16551*/
						$k[$j++] = $1.A; /*16551*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numA); /*16551*/
					} /*16551*/
					if ($1.mode == $1.N) { /*16552*/
						$k[$j++] = $1.N; /*16552*/
						$k[$j++] = $geti($1.msg, $1.i, $1.numN); /*16552*/
					} /*16552*/
					$1.dat = $k[--$j]; /*16553*/
					$1.sw = $k[--$j]; /*16553*/
					$k[$j++] = Infinity; /*16554*/
					$aload($1.seq); /*16554*/
					$k[$j++] = $1.sw; /*16554*/
					$k[$j++] = $1.dat; /*16554*/
					$1.seq = $a(); /*16554*/
				} /*16554*/
				$1.i = $1.i + $1.dat.length; /*16556*/
			} /*16556*/
			for (;;) { /*16582*/
				if ($1.seq == -1) { /*16561*/
					break; /*16561*/
				} /*16561*/
				$1.bits = $s(23648); /*16562*/
				$1.j = 0; /*16563*/
				if ($1.fnc1first) { /*16564*/
					$k[$j++] = "0101"; /*16564*/
					$1.addtobits(); /*16564*/
				} /*16564*/
				$1.abort = false; /*16565*/
				for (var _BA = 0, _B9 = $1.seq.length - 1; _BA <= _B9; _BA += 2) { /*16577*/
					$1.i = _BA; /*16567*/
					$1.mode = $get($1.seq, $1.i); /*16568*/
					$k[$j++] = $get($get($1.mids, $1.ver), $1.mode); /*16569*/
					$1.addtobits(); /*16569*/
					$1.cclen = $get($get($1.cclens, $1.ver), $1.mode); /*16570*/
					$1.chars = $get($1.seq, $1.i + 1); /*16571*/
					if ($1.chars.length >= (~~Math.pow(2, $1.cclen))) { /*16574*/
						$1.abort = true; /*16573*/
						break; /*16573*/
					} /*16573*/
					$k[$j++] = $1.chars.length; /*16575*/
					if ($1.mode == $1.K) { /*16575*/
						var _BW = $k[--$j]; /*16575*/
						$k[$j++] = ~~(_BW / 2); /*16575*/
					} /*16575*/
					$k[$j++] = $1.cclen; /*16575*/
					$1.tobin(); /*16575*/
					$1.addtobits(); /*16575*/
					$k[$j++] = $1.chars; /*16576*/
					$1[$get($1.encfuncs, $1.mode)](); /*16576*/
					$1.addtobits(); /*16576*/
				} /*16576*/
				if ($1.abort) { /*16578*/
					break; /*16578*/
				} /*16578*/
				$1.bits = $geti($1.bits, 0, $1.j); /*16579*/
				$put($1.msgbits, $1.ver, $1.bits); /*16580*/
				break; /*16581*/
			} /*16581*/
		} /*16581*/
		$1.metrics = $a([$a(["micro", "M1", $1.vM1, 11, 98, 99, 36, $a([2, 99, 99, 99]), $a([1, 0, -1, -1, -1, -1, -1, -1])]), $a(["micro", "M2", $1.vM2, 13, 98, 99, 80, $a([5, 6, 99, 99]), $a([1, 0, 1, 0, -1, -1, -1, -1])]), $a(["micro", "M3", $1.vM3, 15, 98, 99, 132, $a([6, 8, 99, 99]), $a([1, 0, 1, 0, -1, -1, -1, -1])]), $a(["micro", "M4", $1.vM4, 17, 98, 99, 192, $a([8, 10, 14, 99]), $a([1, 0, 1, 0, 1, 0, -1, -1])]), $a(["full", "1", $1.v1to9, 21, 98, 99, 208, $a([7, 10, 13, 17]), $a([1, 0, 1, 0, 1, 0, 1, 0])]), $a(["full", "2", $1.v1to9, 25, 18, 99, 359, $a([10, 16, 22, 28]), $a([1, 0, 1, 0, 1, 0, 1, 0])]), $a(["full", "3", $1.v1to9, 29, 22, 99, 567, $a([15, 26, 36, 44]), $a([1, 0, 1, 0, 2, 0, 2, 0])]), $a(["full", "4", $1.v1to9, 33, 26, 99, 807, $a([20, 36, 52, 64]), $a([1, 0, 2, 0, 2, 0, 4, 0])]), $a(["full", "5", $1.v1to9, 37, 30, 99, 1079, $a([26, 48, 72, 88]), $a([1, 0, 2, 0, 2, 2, 2, 2])]), $a(["full", "6", $1.v1to9, 41, 34, 99, 1383, $a([36, 64, 96, 112]), $a([2, 0, 4, 0, 4, 0, 4, 0])]), $a(["full", "7", $1.v1to9, 45, 22, 38, 1568, $a([40, 72, 108, 130]), $a([2, 0, 4, 0, 2, 4, 4, 1])]), $a(["full", "8", $1.v1to9, 49, 24, 42, 1936, $a([48, 88, 132, 156]), $a([2, 0, 2, 2, 4, 2, 4, 2])]), $a(["full", "9", $1.v1to9, 53, 26, 46, 2336, $a([60, 110, 160, 192]), $a([2, 0, 3, 2, 4, 4, 4, 4])]), $a(["full", "10", $1.v10to26, 57, 28, 50, 2768, $a([72, 130, 192, 224]), $a([2, 2, 4, 1, 6, 2, 6, 2])]), $a(["full", "11", $1.v10to26, 61, 30, 54, 3232, $a([80, 150, 224, 264]), $a([4, 0, 1, 4, 4, 4, 3, 8])]), $a(["full", "12", $1.v10to26, 65, 32, 58, 3728, $a([96, 176, 260, 308]), $a([2, 2, 6, 2, 4, 6, 7, 4])]), $a(["full", "13", $1.v10to26, 69, 34, 62, 4256, $a([104, 198, 288, 352]), $a([4, 0, 8, 1, 8, 4, 12, 4])]), $a(["full", "14", $1.v10to26, 73, 26, 46, 4651, $a([120, 216, 320, 384]), $a([3, 1, 4, 5, 11, 5, 11, 5])]), $a(["full", "15", $1.v10to26, 77, 26, 48, 5243, $a([132, 240, 360, 432]), $a([5, 1, 5, 5, 5, 7, 11, 7])]), $a(["full", "16", $1.v10to26, 81, 26, 50, 5867, $a([144, 280, 408, 480]), $a([5, 1, 7, 3, 15, 2, 3, 13])]), $a(["full", "17", $1.v10to26, 85, 30, 54, 6523, $a([168, 308, 448, 532]), $a([1, 5, 10, 1, 1, 15, 2, 17])]), $a(["full", "18", $1.v10to26, 89, 30, 56, 7211, $a([180, 338, 504, 588]), $a([5, 1, 9, 4, 17, 1, 2, 19])]), $a(["full", "19", $1.v10to26, 93, 30, 58, 7931, $a([196, 364, 546, 650]), $a([3, 4, 3, 11, 17, 4, 9, 16])]), $a(["full", "20", $1.v10to26, 97, 34, 62, 8683, $a([224, 416, 600, 700]), $a([3, 5, 3, 13, 15, 5, 15, 10])]), $a(["full", "21", $1.v10to26, 101, 28, 50, 9252, $a([224, 442, 644, 750]), $a([4, 4, 17, 0, 17, 6, 19, 6])]), $a(["full", "22", $1.v10to26, 105, 26, 50, 10068, $a([252, 476, 690, 816]), $a([2, 7, 17, 0, 7, 16, 34, 0])]), $a(["full", "23", $1.v10to26, 109, 30, 54, 10916, $a([270, 504, 750, 900]), $a([4, 5, 4, 14, 11, 14, 16, 14])]), $a(["full", "24", $1.v10to26, 113, 28, 54, 11796, $a([300, 560, 810, 960]), $a([6, 4, 6, 14, 11, 16, 30, 2])]), $a(["full", "25", $1.v10to26, 117, 32, 58, 12708, $a([312, 588, 870, 1050]), $a([8, 4, 8, 13, 7, 22, 22, 13])]), $a(["full", "26", $1.v10to26, 121, 30, 58, 13652, $a([336, 644, 952, 1110]), $a([10, 2, 19, 4, 28, 6, 33, 4])]), $a(["full", "27", $1.v27to40, 125, 34, 62, 14628, $a([360, 700, 1020, 1200]), $a([8, 4, 22, 3, 8, 26, 12, 28])]), $a(["full", "28", $1.v27to40, 129, 26, 50, 15371, $a([390, 728, 1050, 1260]), $a([3, 10, 3, 23, 4, 31, 11, 31])]), $a(["full", "29", $1.v27to40, 133, 30, 54, 16411, $a([420, 784, 1140, 1350]), $a([7, 7, 21, 7, 1, 37, 19, 26])]), $a(["full", "30", $1.v27to40, 137, 26, 52, 17483, $a([450, 812, 1200, 1440]), $a([5, 10, 19, 10, 15, 25, 23, 25])]), $a(["full", "31", $1.v27to40, 141, 30, 56, 18587, $a([480, 868, 1290, 1530]), $a([13, 3, 2, 29, 42, 1, 23, 28])]), $a(["full", "32", $1.v27to40, 145, 34, 60, 19723, $a([510, 924, 1350, 1620]), $a([17, 0, 10, 23, 10, 35, 19, 35])]), $a(["full", "33", $1.v27to40, 149, 30, 58, 20891, $a([540, 980, 1440, 1710]), $a([17, 1, 14, 21, 29, 19, 11, 46])]), $a(["full", "34", $1.v27to40, 153, 34, 62, 22091, $a([570, 1036, 1530, 1800]), $a([13, 6, 14, 23, 44, 7, 59, 1])]), $a(["full", "35", $1.v27to40, 157, 30, 54, 23008, $a([570, 1064, 1590, 1890]), $a([12, 7, 12, 26, 39, 14, 22, 41])]), $a(["full", "36", $1.v27to40, 161, 24, 50, 24272, $a([600, 1120, 1680, 1980]), $a([6, 14, 6, 34, 46, 10, 2, 64])]), $a(["full", "37", $1.v27to40, 165, 28, 54, 25568, $a([630, 1204, 1770, 2100]), $a([17, 4, 29, 14, 49, 10, 24, 46])]), $a(["full", "38", $1.v27to40, 169, 32, 58, 26896, $a([660, 1260, 1860, 2220]), $a([4, 18, 13, 32, 48, 14, 42, 32])]), $a(["full", "39", $1.v27to40, 173, 26, 54, 28256, $a([720, 1316, 1950, 2310]), $a([20, 4, 40, 7, 43, 22, 10, 67])]), $a(["full", "40", $1.v27to40, 177, 30, 58, 29648, $a([750, 1372, 2040, 2430]), $a([19, 6, 18, 31, 34, 34, 20, 61])])]); /*16633*/
		$k[$j++] = "eclval"; /*16634*/
		$search("LMQH", $1.eclevel); /*16634*/
		$j--; /*16634*/
		var _Ec = $k[--$j]; /*16634*/
		var _Ed = $k[--$j]; /*16634*/
		var _Ee = $k[--$j]; /*16634*/
		$1[$k[--$j]] = _Ec.length; /*16634*/
		for (var _Eg = 0; _Eg <= 43; _Eg += 1) { /*16671*/
			$1.i = _Eg; /*16636*/
			$1.m = $get($1.metrics, $1.i); /*16637*/
			$1.frmt = $get($1.m, 0); /*16638*/
			$1.vers = $get($1.m, 1); /*16639*/
			$1.vergrp = $get($1.m, 2); /*16640*/
			$1.size = $get($1.m, 3); /*16641*/
			$1.asp2 = $get($1.m, 4); /*16642*/
			$1.asp3 = $get($1.m, 5); /*16643*/
			$1.nmod = $get($1.m, 6); /*16644*/
			$1.ncws = ~~($1.nmod / 8); /*16645*/
			$1.rbit = $1.nmod % 8; /*16646*/
			$1.lc4b = false; /*16647*/
			if (($1.size == 11) || ($1.size == 15)) { /*16652*/
				$1.ncws = $1.ncws + 1; /*16649*/
				$1.rbit = 0; /*16650*/
				$1.lc4b = true; /*16651*/
			} /*16651*/
			$1.ecws = $get($get($1.m, 7), $1.eclval); /*16653*/
			$1.dcws = $1.ncws - $1.ecws; /*16654*/
			var _FB = $1.lc4b ? 4 : 0; /*16655*/
			$1.dmod = ($1.dcws * 8) - _FB; /*16655*/
			$1.ecb1 = $get($get($1.m, 8), $1.eclval * 2); /*16656*/
			$1.ecb2 = $get($get($1.m, 8), ($1.eclval * 2) + 1); /*16657*/
			$1.okay = true; /*16658*/
			if ($ne($1.format, "any") && $ne($1.format, $1.frmt)) { /*16659*/
				$1.okay = false; /*16659*/
			} /*16659*/
			if ($eq($1.frmt, "micro") && $1.fnc1first) { /*16660*/
				$1.okay = false; /*16660*/
			} /*16660*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*16661*/
				$1.okay = false; /*16661*/
			} /*16661*/
			if (($1.ecb1 == -1) || ($1.ecb2 == -1)) { /*16662*/
				$1.okay = false; /*16662*/
			} /*16662*/
			$1.verbits = $get($1.msgbits, $1.vergrp); /*16663*/
			if ($1.verbits == -1) { /*16667*/
				$1.okay = false; /*16665*/
			} else { /*16667*/
				if ($1.verbits.length > $1.dmod) { /*16667*/
					$1.okay = false; /*16667*/
				} /*16667*/
			} /*16667*/
			$1.term = $geti("000000000", 0, $get($1.termlens, $1.vergrp)); /*16669*/
			if ($1.okay) { /*16670*/
				break; /*16670*/
			} /*16670*/
		} /*16670*/
		if (!$1.okay) { /*16675*/
			$k[$j++] = "bwipp.qrcodeNoValidSymbol"; /*16674*/
			$k[$j++] = "No valid symbol available"; /*16674*/
			$0.raiseerror(); /*16674*/
		} /*16674*/
		$1.format = $1.frmt; /*16677*/
		$1.version = $1.vers; /*16678*/
		$1.msgbits = $1.verbits; /*16679*/
		$1.dcpb = ~~($1.dcws / ($1.ecb1 + $1.ecb2)); /*16680*/
		$1.ecpb = (~~($1.ncws / ($1.ecb1 + $1.ecb2))) - $1.dcpb; /*16681*/
		var _Fq = $1.term; /*16684*/
		var _Fr = $1.dmod; /*16684*/
		var _Fs = $1.msgbits; /*16684*/
		var _Ft = $1.term; /*16684*/
		var _Fu = _Ft.length; /*16684*/
		var _Fv = _Fr - _Fs.length; /*16684*/
		if ((_Fr - _Fs.length) > _Ft.length) { /*16684*/
			var _ = _Fu; /*16684*/
			_Fu = _Fv; /*16684*/
			_Fv = _; /*16684*/
		} /*16684*/
		$1.term = $geti(_Fq, 0, _Fv); /*16684*/
		var _Fz = $s($1.msgbits.length + $1.term.length); /*16685*/
		$puti(_Fz, 0, $1.msgbits); /*16686*/
		$puti(_Fz, $1.msgbits.length, $1.term); /*16687*/
		$1.msgbits = _Fz; /*16688*/
		$1.pad = $s($1.dmod); /*16691*/
		for (var _G7 = 0, _G6 = $1.pad.length - 1; _G7 <= _G6; _G7 += 1) { /*16692*/
			$put($1.pad, _G7, 48); /*16692*/
		} /*16692*/
		$puti($1.pad, 0, $1.msgbits); /*16693*/
		$1.padstrs = $a(["11101100", "00010001"]); /*16694*/
		$1.padnum = 0; /*16695*/
		var _GF = $1.lc4b ? 5 : 1; /*16696*/
		for (var _GH = ~~(Math.ceil($1.msgbits.length / 8) * 8), _GG = $1.dmod - _GF; _GH <= _GG; _GH += 8) { /*16699*/
			$puti($1.pad, _GH, $get($1.padstrs, $1.padnum)); /*16697*/
			$1.padnum = ($1.padnum + 1) % 2; /*16698*/
		} /*16698*/
		$1.cws = $a($1.dcws); /*16702*/
		for (var _GR = 0, _GQ = $1.cws.length - 1; _GR <= _GQ; _GR += 1) { /*16714*/
			$1.c = _GR; /*16704*/
			$1.bpcw = 8; /*16705*/
			if ($1.lc4b && ($1.c == ($1.cws.length - 1))) { /*16706*/
				$1.bpcw = 4; /*16706*/
			} /*16706*/
			$1.cwb = $geti($1.pad, $1.c * 8, $1.bpcw); /*16707*/
			$1.cw = 0; /*16708*/
			for (var _Gb = 0, _Ga = $1.bpcw - 1; _Gb <= _Ga; _Gb += 1) { /*16712*/
				$1.i = _Gb; /*16710*/
				$1.cw = $1.cw + ((~~(Math.pow(2, ($1.bpcw - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*16711*/
			} /*16711*/
			$put($1.cws, $1.c, $1.cw); /*16713*/
		} /*16713*/
		if ($1.lc4b) { /*16717*/
			var _Gm = $1.cws; /*16717*/
			var _Gn = $1.cws; /*16717*/
			$put(_Gm, _Gn.length - 1, $get(_Gm, _Gn.length - 1) << 4); /*16717*/
		} /*16717*/
		$k[$j++] = Infinity; /*16720*/
		$k[$j++] = 1; /*16720*/
		for (var _Gp = 0, _Gq = 255; _Gp < _Gq; _Gp++) { /*16720*/
			var _Gr = $k[--$j]; /*16720*/
			var _Gs = _Gr * 2; /*16720*/
			$k[$j++] = _Gr; /*16720*/
			$k[$j++] = _Gs; /*16720*/
			if (_Gs >= 256) { /*16720*/
				var _Gt = $k[--$j]; /*16720*/
				$k[$j++] = _Gt ^ 285; /*16720*/
			} /*16720*/
		} /*16720*/
		$1.rsalog = $a(); /*16720*/
		$1.rslog = $a(256); /*16721*/
		for (var _Gw = 1; _Gw <= 255; _Gw += 1) { /*16722*/
			$put($1.rslog, $get($1.rsalog, _Gw), _Gw); /*16722*/
		} /*16722*/
		$1.rsprod = function() {
			var _H0 = $k[--$j]; /*16726*/
			var _H1 = $k[--$j]; /*16726*/
			$k[$j++] = _H1; /*16730*/
			$k[$j++] = _H0; /*16730*/
			if ((_H0 != 0) && (_H1 != 0)) { /*16729*/
				var _H4 = $get($1.rslog, $k[--$j]); /*16727*/
				var _H9 = $get($1.rsalog, (_H4 + $get($1.rslog, $k[--$j])) % 255); /*16727*/
				$k[$j++] = _H9; /*16727*/
			} else { /*16729*/
				$j -= 2; /*16729*/
				$k[$j++] = 0; /*16729*/
			} /*16729*/
		}; /*16731*/
		$k[$j++] = Infinity; /*16734*/
		$k[$j++] = 1; /*16734*/
		for (var _HB = 0, _HC = $1.ecpb; _HB < _HC; _HB++) { /*16734*/
			$k[$j++] = 0; /*16734*/
		} /*16734*/
		$1.coeffs = $a(); /*16734*/
		for (var _HG = 0, _HF = $1.ecpb - 1; _HG <= _HF; _HG += 1) { /*16743*/
			$1.i = _HG; /*16736*/
			$put($1.coeffs, $1.i + 1, $get($1.coeffs, $1.i)); /*16737*/
			for (var _HN = $1.i; _HN >= 1; _HN -= 1) { /*16741*/
				$1.j = _HN; /*16739*/
				$k[$j++] = $1.coeffs; /*16740*/
				$k[$j++] = $1.j; /*16740*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*16740*/
				$k[$j++] = $get($1.coeffs, $1.j); /*16740*/
				$k[$j++] = $get($1.rsalog, $1.i); /*16740*/
				$1.rsprod(); /*16740*/
				var _HZ = $k[--$j]; /*16740*/
				var _Ha = $k[--$j]; /*16740*/
				var _Hb = $k[--$j]; /*16740*/
				$put($k[--$j], _Hb, $xo(_Ha, _HZ)); /*16740*/
			} /*16740*/
			$k[$j++] = $1.coeffs; /*16742*/
			$k[$j++] = 0; /*16742*/
			$k[$j++] = $get($1.coeffs, 0); /*16742*/
			$k[$j++] = $get($1.rsalog, $1.i); /*16742*/
			$1.rsprod(); /*16742*/
			var _Hj = $k[--$j]; /*16742*/
			var _Hk = $k[--$j]; /*16742*/
			$put($k[--$j], _Hk, _Hj); /*16742*/
		} /*16742*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*16744*/
		$1.rscodes = function() {
			$1.rscws = $k[--$j]; /*16748*/
			$1.rsnd = $1.rscws.length; /*16749*/
			$k[$j++] = Infinity; /*16750*/
			$forall($1.rscws); /*16750*/
			for (var _Ht = 0, _Hu = $1.ecpb; _Ht < _Hu; _Ht++) { /*16750*/
				$k[$j++] = 0; /*16750*/
			} /*16750*/
			$1.rscws = $a(); /*16750*/
			for (var _Hy = 0, _Hx = $1.rsnd - 1; _Hy <= _Hx; _Hy += 1) { /*16758*/
				$1.m = _Hy; /*16752*/
				$1.k = $get($1.rscws, $1.m); /*16753*/
				for (var _I4 = 0, _I3 = $1.ecpb - 1; _I4 <= _I3; _I4 += 1) { /*16757*/
					$1.j = _I4; /*16755*/
					$k[$j++] = $1.rscws; /*16756*/
					$k[$j++] = ($1.m + $1.j) + 1; /*16756*/
					$k[$j++] = $get($1.coeffs, ($1.ecpb - $1.j) - 1); /*16756*/
					$k[$j++] = $1.k; /*16756*/
					$1.rsprod(); /*16756*/
					var _IH = $k[--$j]; /*16756*/
					var _II = $k[--$j]; /*16756*/
					$put($k[--$j], _II, $xo(_IH, $get($1.rscws, ($1.m + $1.j) + 1))); /*16756*/
				} /*16756*/
			} /*16756*/
			$k[$j++] = $geti($1.rscws, $1.rsnd, $1.ecpb); /*16759*/
		}; /*16760*/
		$1.dcwsb = $a($1.ecb1 + $1.ecb2); /*16763*/
		$1.ecwsb = $a($1.ecb1 + $1.ecb2); /*16764*/
		for (var _IW = 0, _IV = $1.ecb1 - 1; _IW <= _IV; _IW += 1) { /*16769*/
			$1.i = _IW; /*16766*/
			$put($1.dcwsb, $1.i, $geti($1.cws, $1.i * $1.dcpb, $1.dcpb)); /*16767*/
			$k[$j++] = $1.ecwsb; /*16768*/
			$k[$j++] = $1.i; /*16768*/
			$k[$j++] = $get($1.dcwsb, $1.i); /*16768*/
			$1.rscodes(); /*16768*/
			var _Ij = $k[--$j]; /*16768*/
			var _Ik = $k[--$j]; /*16768*/
			$put($k[--$j], _Ik, _Ij); /*16768*/
		} /*16768*/
		for (var _Io = 0, _In = $1.ecb2 - 1; _Io <= _In; _Io += 1) { /*16774*/
			$1.i = _Io; /*16771*/
			$put($1.dcwsb, $1.ecb1 + $1.i, $geti($1.cws, ($1.ecb1 * $1.dcpb) + ($1.i * ($1.dcpb + 1)), $1.dcpb + 1)); /*16772*/
			$k[$j++] = $1.ecwsb; /*16773*/
			$k[$j++] = $1.ecb1 + $1.i; /*16773*/
			$k[$j++] = $get($1.dcwsb, $1.ecb1 + $1.i); /*16773*/
			$1.rscodes(); /*16773*/
			var _J6 = $k[--$j]; /*16773*/
			var _J7 = $k[--$j]; /*16773*/
			$put($k[--$j], _J7, _J6); /*16773*/
		} /*16773*/
		$1.cws = $a($1.ncws); /*16777*/
		$1.cw = 0; /*16778*/
		for (var _JD = 0, _JC = $1.dcpb; _JD <= _JC; _JD += 1) { /*16788*/
			$1.i = _JD; /*16780*/
			for (var _JH = 0, _JG = ($1.ecb1 + $1.ecb2) - 1; _JH <= _JG; _JH += 1) { /*16787*/
				$1.j = _JH; /*16782*/
				if ($1.i < $get($1.dcwsb, $1.j).length) { /*16786*/
					$put($1.cws, $1.cw, $get($get($1.dcwsb, $1.j), $1.i)); /*16784*/
					$1.cw = $1.cw + 1; /*16785*/
				} /*16785*/
			} /*16785*/
		} /*16785*/
		for (var _JW = 0, _JV = $1.ecpb - 1; _JW <= _JV; _JW += 1) { /*16796*/
			$1.i = _JW; /*16790*/
			for (var _Ja = 0, _JZ = ($1.ecb1 + $1.ecb2) - 1; _Ja <= _JZ; _Ja += 1) { /*16795*/
				$1.j = _Ja; /*16792*/
				$put($1.cws, $1.cw, $get($get($1.ecwsb, $1.j), $1.i)); /*16793*/
				$1.cw = $1.cw + 1; /*16794*/
			} /*16794*/
		} /*16794*/
		if ($1.rbit > 0) { /*16804*/
			$1.pad = $a($1.cws.length + 1); /*16800*/
			$puti($1.pad, 0, $1.cws); /*16801*/
			$put($1.pad, $1.pad.length - 1, 0); /*16802*/
			$1.cws = $1.pad; /*16803*/
		} /*16803*/
		if ($1.lc4b) { /*16815*/
			var _Js = $1.cws; /*16808*/
			var _Jt = $1.dcws; /*16808*/
			$put(_Js, _Jt - 1, $get(_Js, _Jt - 1) >>> 4); /*16808*/
			for (var _Jy = $1.dcws - 1, _Jx = $1.ncws - 2; _Jy <= _Jx; _Jy += 1) { /*16813*/
				$1.i = _Jy; /*16810*/
				$put($1.cws, $1.i, ($get($1.cws, $1.i) & 15) << 4); /*16811*/
				$put($1.cws, $1.i, (($get($1.cws, $1.i + 1) >>> 4) & 15) | $get($1.cws, $1.i)); /*16812*/
			} /*16812*/
			$put($1.cws, $1.ncws - 1, ($get($1.cws, $1.ncws - 1) & 15) << 4); /*16814*/
		} /*16814*/
		$k[$j++] = Infinity; /*16818*/
		for (var _KJ = 0, _KK = $1.size * $1.size; _KJ < _KK; _KJ++) { /*16818*/
			$k[$j++] = -1; /*16818*/
		} /*16818*/
		$1.pixs = $a(); /*16818*/
		$1.qmv = function() {
			var _KN = $k[--$j]; /*16819*/
			var _KO = $k[--$j]; /*16819*/
			$k[$j++] = _KO + (_KN * $1.size); /*16819*/
		}; /*16819*/
		$1.fpat = $a([$a([1, 1, 1, 1, 1, 1, 1, 0]), $a([1, 0, 0, 0, 0, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 1, 1, 1, 0, 1, 0]), $a([1, 0, 0, 0, 0, 0, 1, 0]), $a([1, 1, 1, 1, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*16831*/
		for (var _Ka = 0, _KZ = $1.fpat.length - 1; _Ka <= _KZ; _Ka += 1) { /*16843*/
			$1.y = _Ka; /*16833*/
			for (var _Ke = 0, _Kd = $get($1.fpat, 0).length - 1; _Ke <= _Kd; _Ke += 1) { /*16842*/
				$1.x = _Ke; /*16835*/
				$1.fpb = $get($get($1.fpat, $1.y), $1.x); /*16836*/
				$k[$j++] = $1.pixs; /*16837*/
				$k[$j++] = $1.x; /*16837*/
				$k[$j++] = $1.y; /*16837*/
				$1.qmv(); /*16837*/
				var _Ko = $k[--$j]; /*16837*/
				$put($k[--$j], _Ko, $1.fpb); /*16837*/
				if ($eq($1.format, "full")) { /*16841*/
					$k[$j++] = $1.pixs; /*16839*/
					$k[$j++] = ($1.size - $1.x) - 1; /*16839*/
					$k[$j++] = $1.y; /*16839*/
					$1.qmv(); /*16839*/
					var _Kw = $k[--$j]; /*16839*/
					$put($k[--$j], _Kw, $1.fpb); /*16839*/
					$k[$j++] = $1.pixs; /*16840*/
					$k[$j++] = $1.x; /*16840*/
					$k[$j++] = ($1.size - $1.y) - 1; /*16840*/
					$1.qmv(); /*16840*/
					var _L3 = $k[--$j]; /*16840*/
					$put($k[--$j], _L3, $1.fpb); /*16840*/
				} /*16840*/
			} /*16840*/
		} /*16840*/
		$1.algnpat = $a([$a([1, 1, 1, 1, 1]), $a([1, 0, 0, 0, 1]), $a([1, 0, 1, 0, 1]), $a([1, 0, 0, 0, 1]), $a([1, 1, 1, 1, 1])]); /*16852*/
		$1.putalgnpat = function() {
			$1.py = $k[--$j]; /*16854*/
			$1.px = $k[--$j]; /*16855*/
			for (var _LD = 0; _LD <= 4; _LD += 1) { /*16862*/
				$1.pb = _LD; /*16857*/
				for (var _LE = 0; _LE <= 4; _LE += 1) { /*16861*/
					$1.pa = _LE; /*16859*/
					$k[$j++] = $1.pixs; /*16860*/
					$k[$j++] = $1.px + $1.pa; /*16860*/
					$k[$j++] = $1.py + $1.pb; /*16860*/
					$1.qmv(); /*16860*/
					var _LP = $k[--$j]; /*16860*/
					$put($k[--$j], _LP, $get($get($1.algnpat, $1.pb), $1.pa)); /*16860*/
				} /*16860*/
			} /*16860*/
		}; /*16863*/
		for (var _LW = $1.asp2 - 2, _LX = $1.asp3 - $1.asp2, _LV = $1.size - 13; _LX < 0 ? _LW >= _LV : _LW <= _LV; _LW += _LX) { /*16868*/
			$1.i = _LW; /*16865*/
			$k[$j++] = $1.i; /*16866*/
			$k[$j++] = 4; /*16866*/
			$1.putalgnpat(); /*16866*/
			$k[$j++] = 4; /*16867*/
			$k[$j++] = $1.i; /*16867*/
			$1.putalgnpat(); /*16867*/
		} /*16867*/
		for (var _Lf = $1.asp2 - 2, _Lg = $1.asp3 - $1.asp2, _Le = $1.size - 9; _Lg < 0 ? _Lf >= _Le : _Lf <= _Le; _Lf += _Lg) { /*16875*/
			$1.x = _Lf; /*16870*/
			for (var _Lm = $1.asp2 - 2, _Ln = $1.asp3 - $1.asp2, _Ll = $1.size - 9; _Ln < 0 ? _Lm >= _Ll : _Lm <= _Ll; _Lm += _Ln) { /*16874*/
				$1.y = _Lm; /*16872*/
				$k[$j++] = $1.x; /*16873*/
				$k[$j++] = $1.y; /*16873*/
				$1.putalgnpat(); /*16873*/
			} /*16873*/
		} /*16873*/
		if ($eq($1.format, "full")) { /*16888*/
			for (var _Lt = 8, _Ls = $1.size - 9; _Lt <= _Ls; _Lt += 1) { /*16883*/
				$1.i = _Lt; /*16880*/
				$k[$j++] = $1.pixs; /*16881*/
				$k[$j++] = $1.i; /*16881*/
				$k[$j++] = 6; /*16881*/
				$1.qmv(); /*16881*/
				var _Lx = $k[--$j]; /*16881*/
				$put($k[--$j], _Lx, ($1.i + 1) % 2); /*16881*/
				$k[$j++] = $1.pixs; /*16882*/
				$k[$j++] = 6; /*16882*/
				$k[$j++] = $1.i; /*16882*/
				$1.qmv(); /*16882*/
				var _M2 = $k[--$j]; /*16882*/
				$put($k[--$j], _M2, ($1.i + 1) % 2); /*16882*/
			} /*16882*/
		} else { /*16888*/
			for (var _M6 = 8, _M5 = $1.size - 1; _M6 <= _M5; _M6 += 1) { /*16889*/
				$1.i = _M6; /*16886*/
				$k[$j++] = $1.pixs; /*16887*/
				$k[$j++] = $1.i; /*16887*/
				$k[$j++] = 0; /*16887*/
				$1.qmv(); /*16887*/
				var _MA = $k[--$j]; /*16887*/
				$put($k[--$j], _MA, ($1.i + 1) % 2); /*16887*/
				$k[$j++] = $1.pixs; /*16888*/
				$k[$j++] = 0; /*16888*/
				$k[$j++] = $1.i; /*16888*/
				$1.qmv(); /*16888*/
				var _MF = $k[--$j]; /*16888*/
				$put($k[--$j], _MF, ($1.i + 1) % 2); /*16888*/
			} /*16888*/
		} /*16888*/
		if ($eq($1.format, "full")) { /*16906*/
			$1.formatmap = $a([$a([$a([0, 8]), $a([8, $1.size - 1])]), $a([$a([1, 8]), $a([8, $1.size - 2])]), $a([$a([2, 8]), $a([8, $1.size - 3])]), $a([$a([3, 8]), $a([8, $1.size - 4])]), $a([$a([4, 8]), $a([8, $1.size - 5])]), $a([$a([5, 8]), $a([8, $1.size - 6])]), $a([$a([7, 8]), $a([8, $1.size - 7])]), $a([$a([8, 8]), $a([$1.size - 8, 8])]), $a([$a([8, 7]), $a([$1.size - 7, 8])]), $a([$a([8, 5]), $a([$1.size - 6, 8])]), $a([$a([8, 4]), $a([$1.size - 5, 8])]), $a([$a([8, 3]), $a([$1.size - 4, 8])]), $a([$a([8, 2]), $a([$1.size - 3, 8])]), $a([$a([8, 1]), $a([$1.size - 2, 8])]), $a([$a([8, 0]), $a([$1.size - 1, 8])])]); /*16900*/
		} else { /*16906*/
			$1.formatmap = $a([$a([$a([1, 8])]), $a([$a([2, 8])]), $a([$a([3, 8])]), $a([$a([4, 8])]), $a([$a([5, 8])]), $a([$a([6, 8])]), $a([$a([7, 8])]), $a([$a([8, 8])]), $a([$a([8, 7])]), $a([$a([8, 6])]), $a([$a([8, 5])]), $a([$a([8, 4])]), $a([$a([8, 3])]), $a([$a([8, 2])]), $a([$a([8, 1])])]); /*16906*/
		} /*16906*/
		var _Nm = $1.formatmap; /*16908*/
		for (var _Nn = 0, _No = _Nm.length; _Nn < _No; _Nn++) { /*16910*/
			$forall($get(_Nm, _Nn), function() { /*16909*/
				$forall($k[--$j]); /*16909*/
				$1.qmv(); /*16909*/
				$put($1.pixs, $k[--$j], 0); /*16909*/
			}); /*16909*/
		} /*16909*/
		if ($1.size >= 45) { /*16926*/
			$1.versionmap = $a([$a([$a([$1.size - 9, 5]), $a([5, $1.size - 9])]), $a([$a([$1.size - 10, 5]), $a([5, $1.size - 10])]), $a([$a([$1.size - 11, 5]), $a([5, $1.size - 11])]), $a([$a([$1.size - 9, 4]), $a([4, $1.size - 9])]), $a([$a([$1.size - 10, 4]), $a([4, $1.size - 10])]), $a([$a([$1.size - 11, 4]), $a([4, $1.size - 11])]), $a([$a([$1.size - 9, 3]), $a([3, $1.size - 9])]), $a([$a([$1.size - 10, 3]), $a([3, $1.size - 10])]), $a([$a([$1.size - 11, 3]), $a([3, $1.size - 11])]), $a([$a([$1.size - 9, 2]), $a([2, $1.size - 9])]), $a([$a([$1.size - 10, 2]), $a([2, $1.size - 10])]), $a([$a([$1.size - 11, 2]), $a([2, $1.size - 11])]), $a([$a([$1.size - 9, 1]), $a([1, $1.size - 9])]), $a([$a([$1.size - 10, 1]), $a([1, $1.size - 10])]), $a([$a([$1.size - 11, 1]), $a([1, $1.size - 11])]), $a([$a([$1.size - 9, 0]), $a([0, $1.size - 9])]), $a([$a([$1.size - 10, 0]), $a([0, $1.size - 10])]), $a([$a([$1.size - 11, 0]), $a([0, $1.size - 11])])]); /*16924*/
		} else { /*16926*/
			$1.versionmap = $a([]); /*16926*/
		} /*16926*/
		var _PO = $1.versionmap; /*16928*/
		for (var _PP = 0, _PQ = _PO.length; _PP < _PQ; _PP++) { /*16930*/
			$forall($get(_PO, _PP), function() { /*16929*/
				$forall($k[--$j]); /*16929*/
				$1.qmv(); /*16929*/
				$put($1.pixs, $k[--$j], 0); /*16929*/
			}); /*16929*/
		} /*16929*/
		if ($eq($1.format, "full")) { /*16935*/
			$k[$j++] = $1.pixs; /*16934*/
			$k[$j++] = 8; /*16934*/
			$k[$j++] = $1.size - 8; /*16934*/
			$1.qmv(); /*16934*/
			var _PY = $k[--$j]; /*16934*/
			$put($k[--$j], _PY, 0); /*16934*/
		} /*16934*/
		if ($eq($1.format, "full")) { /*16955*/
			var _Ps = $a([function() {
				var _Pb = $k[--$j]; /*16940*/
				var _Pc = $k[--$j]; /*16940*/
				$k[$j++] = (_Pc + _Pb) % 2; /*16940*/
			}, function() {
				var _Pd = $k[--$j]; /*16941*/
				var _Pe = $k[--$j]; /*16941*/
				$k[$j++] = _Pd % 2; /*16941*/
			}, function() {
				$j--; /*16942*/
				var _Pf = $k[--$j]; /*16942*/
				$k[$j++] = _Pf % 3; /*16942*/
			}, function() {
				var _Pg = $k[--$j]; /*16943*/
				var _Ph = $k[--$j]; /*16943*/
				$k[$j++] = (_Ph + _Pg) % 3; /*16943*/
			}, function() {
				var _Pi = $k[--$j]; /*16944*/
				var _Pj = $k[--$j]; /*16944*/
				$k[$j++] = ((~~(_Pi / 2)) + (~~(_Pj / 3))) % 2; /*16944*/
			}, function() {
				var _Pk = $k[--$j]; /*16945*/
				var _Pm = $k[--$j] * _Pk; /*16945*/
				$k[$j++] = (_Pm % 2) + (_Pm % 3); /*16945*/
			}, function() {
				var _Pn = $k[--$j]; /*16946*/
				var _Pp = $k[--$j] * _Pn; /*16946*/
				$k[$j++] = ((_Pp % 2) + (_Pp % 3)) % 2; /*16946*/
			}, function() {
				var _Pq = $k[--$j]; /*16947*/
				var _Pr = $k[--$j]; /*16947*/
				$k[$j++] = (((_Pr * _Pq) % 3) + ((_Pr + _Pq) % 2)) % 2; /*16947*/
			}]); /*16947*/
			$1.maskfuncs = _Ps; /*16948*/
		} else { /*16955*/
			var _Q2 = $a([function() {
				var _Pt = $k[--$j]; /*16951*/
				var _Pu = $k[--$j]; /*16951*/
				$k[$j++] = _Pt % 2; /*16951*/
			}, function() {
				var _Pv = $k[--$j]; /*16952*/
				var _Pw = $k[--$j]; /*16952*/
				$k[$j++] = ((~~(_Pv / 2)) + (~~(_Pw / 3))) % 2; /*16952*/
			}, function() {
				var _Px = $k[--$j]; /*16953*/
				var _Pz = $k[--$j] * _Px; /*16953*/
				$k[$j++] = ((_Pz % 2) + (_Pz % 3)) % 2; /*16953*/
			}, function() {
				var _Q0 = $k[--$j]; /*16954*/
				var _Q1 = $k[--$j]; /*16954*/
				$k[$j++] = (((_Q1 * _Q0) % 3) + ((_Q1 + _Q0) % 2)) % 2; /*16954*/
			}]); /*16954*/
			$1.maskfuncs = _Q2; /*16955*/
		} /*16955*/
		if ($1.mask != -1) { /*16960*/
			$1.maskfuncs = $a([$get($1.maskfuncs, $1.mask - 1)]); /*16958*/
			$1.bestmaskval = $1.mask - 1; /*16959*/
		} /*16959*/
		$1.masks = $a($1.maskfuncs.length); /*16961*/
		for (var _QD = 0, _QC = $1.masks.length - 1; _QD <= _QC; _QD += 1) { /*16975*/
			$1.m = _QD; /*16963*/
			$1.mask = $a($1.size * $1.size); /*16964*/
			for (var _QJ = 0, _QI = $1.size - 1; _QJ <= _QI; _QJ += 1) { /*16973*/
				$1.j = _QJ; /*16966*/
				for (var _QM = 0, _QL = $1.size - 1; _QM <= _QL; _QM += 1) { /*16972*/
					$1.i = _QM; /*16968*/
					$k[$j++] = $1.i; /*16969*/
					$k[$j++] = $1.j; /*16969*/
					$get($1.maskfuncs, $1.m)(); /*16969*/
					var _QS = $k[--$j]; /*16969*/
					$k[$j++] = _QS == 0; /*16970*/
					$k[$j++] = $1.pixs; /*16970*/
					$k[$j++] = $1.i; /*16970*/
					$k[$j++] = $1.j; /*16970*/
					$1.qmv(); /*16970*/
					var _QW = $k[--$j]; /*16970*/
					var _QY = $get($k[--$j], _QW); /*16970*/
					var _Qa = ($k[--$j] && (_QY == -1)) ? 1 : 0; /*16970*/
					$k[$j++] = _Qa; /*16971*/
					$k[$j++] = $1.mask; /*16971*/
					$k[$j++] = $1.i; /*16971*/
					$k[$j++] = $1.j; /*16971*/
					$1.qmv(); /*16971*/
					var _Qe = $k[--$j]; /*16971*/
					var _Qf = $k[--$j]; /*16971*/
					$put(_Qf, _Qe, $k[--$j]); /*16971*/
				} /*16971*/
			} /*16971*/
			$put($1.masks, $1.m, $1.mask); /*16974*/
		} /*16974*/
		$1.posx = $1.size - 1; /*16978*/
		$1.posy = $1.size - 1; /*16979*/
		$1.dir = -1; /*16980*/
		$1.col = 1; /*16981*/
		$1.num = 0; /*16982*/
		for (;;) { /*17005*/
			if ($1.posx < 0) { /*16984*/
				break; /*16984*/
			} /*16984*/
			$k[$j++] = $1.pixs; /*16985*/
			$k[$j++] = $1.posx; /*16985*/
			$k[$j++] = $1.posy; /*16985*/
			$1.qmv(); /*16985*/
			var _Qq = $k[--$j]; /*16985*/
			if ($get($k[--$j], _Qq) == -1) { /*16989*/
				var _Qv = $get($1.cws, ~~($1.num / 8)); /*16986*/
				var _Qx = -(7 - ($1.num % 8)); /*16986*/
				$k[$j++] = ((_Qx < 0 ? _Qv >>> -_Qx : _Qv << _Qx)) & 1; /*16987*/
				$k[$j++] = $1.pixs; /*16987*/
				$k[$j++] = $1.posx; /*16987*/
				$k[$j++] = $1.posy; /*16987*/
				$1.qmv(); /*16987*/
				var _R1 = $k[--$j]; /*16987*/
				var _R2 = $k[--$j]; /*16987*/
				$put(_R2, _R1, $k[--$j]); /*16987*/
				$1.num = $1.num + 1; /*16988*/
			} /*16988*/
			if ($1.col == 1) { /*17002*/
				$1.col = 0; /*16991*/
				$1.posx = $1.posx - 1; /*16992*/
			} else { /*17002*/
				$1.col = 1; /*16994*/
				$1.posx = $1.posx + 1; /*16995*/
				$1.posy = $1.posy + $1.dir; /*16996*/
				if (($1.posy < 0) || ($1.posy >= $1.size)) { /*17003*/
					$1.dir = $1.dir * -1; /*16998*/
					$1.posy = $1.posy + $1.dir; /*16999*/
					$1.posx = $1.posx - 2; /*17000*/
					if ($eq($1.format, "full") && ($1.posx == 6)) { /*17002*/
						$1.posx = $1.posx - 1; /*17002*/
					} /*17002*/
				} /*17002*/
			} /*17002*/
		} /*17002*/
		$1.evalfulln1n3 = function() {
			$1.scrle = $k[--$j]; /*17009*/
			$k[$j++] = "scr1"; /*17011*/
			$k[$j++] = 0; /*17011*/
			$forall($1.scrle, function() { /*17011*/
				var _RM = $k[--$j]; /*17011*/
				$k[$j++] = _RM; /*17011*/
				if (_RM >= 5) { /*17011*/
					var _RN = $k[--$j]; /*17011*/
					var _RP = ($k[--$j] + _RN) - 2; /*17011*/
					$k[$j++] = _RP; /*17011*/
					$k[$j++] = _RP; /*17011*/
				} /*17011*/
				$j--; /*17011*/
			}); /*17011*/
			var _RQ = $k[--$j]; /*17011*/
			$1[$k[--$j]] = _RQ; /*17011*/
			$1.scr3 = 0; /*17013*/
			for (var _RU = 3, _RT = $1.scrle.length - 3; _RU <= _RT; _RU += 2) { /*17028*/
				$1.j = _RU; /*17015*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*17027*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*17017*/
					$forall($geti($1.scrle, $1.j - 2, 5), function() { /*17018*/
						var _Rf = $k[--$j]; /*17018*/
						$k[$j++] = _Rf == $1.fact; /*17018*/
					}); /*17018*/
					var _Rg = $k[--$j]; /*17018*/
					var _Rh = $k[--$j]; /*17018*/
					var _Ri = $k[--$j]; /*17018*/
					var _Rj = $k[--$j]; /*17018*/
					if ($k[--$j] && (_Rj && (_Rh && _Rg))) { /*17026*/
						if (($1.j == 3) || (($1.j + 4) >= $1.scrle.length)) { /*17023*/
							$1.scr3 = $1.scr3 + 40; /*17020*/
						} else { /*17023*/
							if (($get($1.scrle, $1.j - 3) >= 4) || ($get($1.scrle, $1.j + 3) >= 4)) { /*17024*/
								$1.scr3 = $1.scr3 + 40; /*17023*/
							} /*17023*/
						} /*17023*/
					} /*17023*/
				} /*17023*/
			} /*17023*/
			$k[$j++] = $1.scr1; /*17029*/
			$k[$j++] = $1.scr3; /*17029*/
		}; /*17030*/
		$1.evalfull = function() {
			$1.sym = $k[--$j]; /*17034*/
			$1.n1 = 0; /*17036*/
			$1.n2 = 0; /*17036*/
			$1.n3 = 0; /*17036*/
			$1.rle = $a($1.size + 1); /*17037*/
			$1.lastpairs = $a($1.size); /*17038*/
			$1.thispairs = $a($1.size); /*17039*/
			$1.sizeadd1 = $1.size + 1; /*17040*/
			for (var _S8 = 0, _S7 = $1.size - 1; _S8 <= _S7; _S8 += 1) { /*17079*/
				$1.i = _S8; /*17042*/
				$k[$j++] = Infinity; /*17045*/
				var _SA = $1.size; /*17046*/
				$k[$j++] = 0; /*17048*/
				$k[$j++] = 0; /*17048*/
				for (var _SC = $1.i, _SD = _SA, _SB = (_SA * _SA) - 1; _SD < 0 ? _SC >= _SB : _SC <= _SB; _SC += _SD) { /*17048*/
					var _SF = $get($1.sym, _SC); /*17047*/
					var _SG = $k[--$j]; /*17047*/
					$k[$j++] = _SF; /*17047*/
					if ($eq(_SG, _SF)) { /*17047*/
						var _SH = $k[--$j]; /*17047*/
						var _SI = $k[--$j]; /*17047*/
						$k[$j++] = _SI + 1; /*17047*/
						$k[$j++] = _SH; /*17047*/
					} else { /*17047*/
						var _SJ = $k[--$j]; /*17047*/
						$k[$j++] = 1; /*17047*/
						$k[$j++] = _SJ; /*17047*/
					} /*17047*/
				} /*17047*/
				$j--; /*17049*/
				var _SL = $counttomark() + 2; /*17050*/
				$astore($geti($1.rle, 0, _SL - 2)); /*17050*/
				$1.evalfulln1n3(); /*17051*/
				$1.n3 = $k[--$j] + $1.n3; /*17051*/
				$1.n1 = $k[--$j] + $1.n1; /*17051*/
				$j--; /*17052*/
				$1.symrow = $geti($1.sym, $1.i * $1.size, $1.size); /*17055*/
				$k[$j++] = Infinity; /*17056*/
				$k[$j++] = 0; /*17059*/
				$k[$j++] = 0; /*17059*/
				$forall($1.symrow, function() { /*17059*/
					var _SX = $k[--$j]; /*17058*/
					var _SY = $k[--$j]; /*17058*/
					$k[$j++] = _SX; /*17058*/
					if ($eq(_SY, _SX)) { /*17058*/
						var _SZ = $k[--$j]; /*17058*/
						var _Sa = $k[--$j]; /*17058*/
						$k[$j++] = _Sa + 1; /*17058*/
						$k[$j++] = _SZ; /*17058*/
					} else { /*17058*/
						var _Sb = $k[--$j]; /*17058*/
						$k[$j++] = 1; /*17058*/
						$k[$j++] = _Sb; /*17058*/
					} /*17058*/
				}); /*17058*/
				$j--; /*17060*/
				var _Sd = $counttomark() + 2; /*17061*/
				$astore($geti($1.rle, 0, _Sd - 2)); /*17061*/
				$1.evalfulln1n3(); /*17062*/
				$1.n3 = $k[--$j] + $1.n3; /*17062*/
				$1.n1 = $k[--$j] + $1.n1; /*17062*/
				$j--; /*17063*/
				var _Sj = $1.thispairs; /*17066*/
				$1.thispairs = $1.lastpairs; /*17066*/
				$1.lastpairs = _Sj; /*17066*/
				var _Sn = ($get($1.symrow, 0) == 1) ? 0 : 1; /*17067*/
				$k[$j++] = _Sn; /*17068*/
				$forall($1.symrow, function() { /*17068*/
					var _Sp = $k[--$j]; /*17068*/
					var _Sq = $k[--$j]; /*17068*/
					$k[$j++] = _Sq + _Sp; /*17068*/
					$k[$j++] = _Sp; /*17068*/
				}); /*17068*/
				$j--; /*17069*/
				$astore($1.thispairs); /*17070*/
				$j--; /*17070*/
				if ($1.i > 0) { /*17077*/
					$k[$j++] = Infinity; /*17072*/
					$aload($1.lastpairs); /*17073*/
					$aload($1.thispairs); /*17073*/
					$k[$j++] = $1.n2; /*17074*/
					for (var _Sx = 0, _Sy = $1.size; _Sx < _Sy; _Sx++) { /*17074*/
						var _Sz = $k[--$j]; /*17074*/
						var _T0 = $k[--$j]; /*17074*/
						$k[$j++] = _Sz; /*17074*/
						$k[$j++] = _T0; /*17074*/
						var _T2 = $k[$j - 1 - $1.sizeadd1]; /*17074*/
						if ((($k[--$j] + _T2) & 3) == 0) { /*17074*/
							var _T4 = $k[--$j]; /*17074*/
							$k[$j++] = _T4 + 3; /*17074*/
						} /*17074*/
					} /*17074*/
					$1.n2 = $k[--$j]; /*17075*/
					$cleartomark(); /*17076*/
				} /*17076*/
			} /*17076*/
			$k[$j++] = "dark"; /*17082*/
			$k[$j++] = 0; /*17082*/
			$forall($1.sym, function() { /*17082*/
				var _T7 = $k[--$j]; /*17082*/
				var _T8 = $k[--$j]; /*17082*/
				$k[$j++] = _T8 + _T7; /*17082*/
			}); /*17082*/
			var _T9 = $k[--$j]; /*17082*/
			$1[$k[--$j]] = _T9; /*17082*/
			var _TC = $1.size; /*17083*/
			$1.n4 = (~~((Math.abs((($1.dark * 100) / (_TC * _TC)) - 50)) / 5)) * 10; /*17083*/
			$k[$j++] = (($1.n1 + $1.n2) + $1.n3) + $1.n4; /*17085*/
		}; /*17086*/
		$1.evalmicro = function() {
			$1.sym = $k[--$j]; /*17090*/
			$1.dkrhs = 0; /*17091*/
			$1.dkbot = 0; /*17091*/
			for (var _TK = 1, _TJ = $1.size - 1; _TK <= _TJ; _TK += 1) { /*17096*/
				$1.i = _TK; /*17093*/
				$k[$j++] = "dkrhs"; /*17094*/
				$k[$j++] = $1.dkrhs; /*17094*/
				$k[$j++] = $1.sym; /*17094*/
				$k[$j++] = $1.size - 1; /*17094*/
				$k[$j++] = $1.i; /*17094*/
				$1.qmv(); /*17094*/
				var _TP = $k[--$j]; /*17094*/
				var _TR = $get($k[--$j], _TP); /*17094*/
				var _TS = $k[--$j]; /*17094*/
				$1[$k[--$j]] = _TS + _TR; /*17094*/
				$k[$j++] = "dkbot"; /*17095*/
				$k[$j++] = $1.dkbot; /*17095*/
				$k[$j++] = $1.sym; /*17095*/
				$k[$j++] = $1.i; /*17095*/
				$k[$j++] = $1.size - 1; /*17095*/
				$1.qmv(); /*17095*/
				var _TY = $k[--$j]; /*17095*/
				var _Ta = $get($k[--$j], _TY); /*17095*/
				var _Tb = $k[--$j]; /*17095*/
				$1[$k[--$j]] = _Tb + _Ta; /*17095*/
			} /*17095*/
			if ($1.dkrhs <= $1.dkbot) { /*17100*/
				$k[$j++] = -(($1.dkrhs * 16) + $1.dkbot); /*17098*/
			} else { /*17100*/
				$k[$j++] = -(($1.dkbot * 16) + $1.dkrhs); /*17100*/
			} /*17100*/
		}; /*17102*/
		$1.bestscore = 999999999; /*17105*/
		for (var _Tl = 0, _Tk = $1.masks.length - 1; _Tl <= _Tk; _Tl += 1) { /*17127*/
			$1.m = _Tl; /*17107*/
			$1.masksym = $a($1.size * $1.size); /*17108*/
			for (var _Ts = 0, _Tr = ($1.size * $1.size) - 1; _Ts <= _Tr; _Ts += 1) { /*17112*/
				$1.i = _Ts; /*17110*/
				$put($1.masksym, $1.i, $xo($get($1.pixs, $1.i), $get($get($1.masks, $1.m), $1.i))); /*17111*/
			} /*17111*/
			if ($1.masks.length != 1) { /*17125*/
				if ($eq($1.format, "full")) { /*17117*/
					$k[$j++] = $1.masksym; /*17115*/
					$1.evalfull(); /*17115*/
					$1.score = $k[--$j]; /*17115*/
				} else { /*17117*/
					$k[$j++] = $1.masksym; /*17117*/
					$1.evalmicro(); /*17117*/
					$1.score = $k[--$j]; /*17117*/
				} /*17117*/
				if ($1.score < $1.bestscore) { /*17123*/
					$1.bestsym = $1.masksym; /*17120*/
					$1.bestmaskval = $1.m; /*17121*/
					$1.bestscore = $1.score; /*17122*/
				} /*17122*/
			} else { /*17125*/
				$1.bestsym = $1.masksym; /*17125*/
			} /*17125*/
		} /*17125*/
		$1.pixs = $1.bestsym; /*17128*/
		if ($eq($1.format, "full")) { /*17133*/
			$k[$j++] = $1.pixs; /*17132*/
			$k[$j++] = 8; /*17132*/
			$k[$j++] = $1.size - 8; /*17132*/
			$1.qmv(); /*17132*/
			var _UJ = $k[--$j]; /*17132*/
			$put($k[--$j], _UJ, 1); /*17132*/
		} /*17132*/
		if ($eq($1.format, "full")) { /*17153*/
			$1.fmtvals = $a([21522, 20773, 24188, 23371, 17913, 16590, 20375, 19104, 30660, 29427, 32170, 30877, 26159, 25368, 27713, 26998, 5769, 5054, 7399, 6608, 1890, 597, 3340, 2107, 13663, 12392, 16177, 14854, 9396, 8579, 11994, 11245]); /*17142*/
			$k[$j++] = "ecid"; /*17143*/
			$search("MLHQ", $1.eclevel); /*17143*/
			$j--; /*17143*/
			var _UO = $k[--$j]; /*17143*/
			var _UP = $k[--$j]; /*17143*/
			var _UQ = $k[--$j]; /*17143*/
			$1[$k[--$j]] = _UO.length; /*17143*/
			$1.fmtval = $get($1.fmtvals, ($1.ecid << 3) + $1.bestmaskval); /*17144*/
		} else { /*17153*/
			$1.fmtvals = $a([17477, 16754, 20011, 19228, 21934, 20633, 24512, 23287, 26515, 25252, 28157, 26826, 30328, 29519, 31766, 31009, 1758, 1001, 3248, 2439, 5941, 4610, 7515, 6252, 9480, 8255, 12134, 10833, 13539, 12756, 16013, 15290]); /*17151*/
			$1.symid = $get($get($a([$a([0]), $a([1, 2]), $a([3, 4]), $a([5, 6, 7])]), ~~(($1.size - 11) / 2)), $1.eclval); /*17152*/
			$1.fmtval = $get($1.fmtvals, ($1.symid << 2) + $1.bestmaskval); /*17153*/
		} /*17153*/
		for (var _Um = 0, _Ul = $1.formatmap.length - 1; _Um <= _Ul; _Um += 1) { /*17160*/
			$1.i = _Um; /*17156*/
			$forall($get($1.formatmap, $1.i), function() { /*17159*/
				var _Ur = $k[--$j]; /*17158*/
				$k[$j++] = $1.pixs; /*17158*/
				$forall(_Ur); /*17158*/
				$1.qmv(); /*17158*/
				var _Us = $1.fmtval; /*17158*/
				var _Uu = -(14 - $1.i); /*17158*/
				var _Uv = $k[--$j]; /*17158*/
				$put($k[--$j], _Uv, ((_Uu < 0 ? _Us >>> -_Uu : _Us << _Uu)) & 1); /*17158*/
			}); /*17158*/
		} /*17158*/
		if ($1.size >= 45) { /*17178*/
			$1.vervals = $a([31892, 34236, 39577, 42195, 48118, 51042, 55367, 58893, 63784, 68472, 70749, 76311, 79154, 84390, 87683, 92361, 96236, 102084, 102881, 110507, 110734, 117786, 119615, 126325, 127568, 133589, 136957, 141498, 145311, 150283, 152622, 158308, 161089, 167017]); /*17170*/
			$1.verval = $get($1.vervals, (~~(($1.size - 17) / 4)) - 7); /*17171*/
			for (var _V4 = 0, _V3 = $1.versionmap.length - 1; _V4 <= _V3; _V4 += 1) { /*17177*/
				$1.i = _V4; /*17173*/
				$forall($get($1.versionmap, $1.i), function() { /*17176*/
					var _V9 = $k[--$j]; /*17175*/
					$k[$j++] = $1.pixs; /*17175*/
					$forall(_V9); /*17175*/
					$1.qmv(); /*17175*/
					var _VA = $1.verval; /*17175*/
					var _VC = -(17 - $1.i); /*17175*/
					var _VD = $k[--$j]; /*17175*/
					$put($k[--$j], _VD, ((_VC < 0 ? _VA >>> -_VC : _VA << _VC)) & 1); /*17175*/
				}); /*17175*/
			} /*17175*/
		} /*17175*/
		var _VL = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*17188*/
		$k[$j++] = _VL; /*17191*/
		if (!$1.dontdraw) { /*17191*/
			$0.renmatrix(); /*17191*/
		} /*17191*/
	};
	$0.microqrcode = function() {
		var $1 = {}; /*17219*/
		$1.options = $k[--$j]; /*17221*/
		$1.barcode = $k[--$j]; /*17222*/
		$1.dontdraw = false; /*17224*/
		$forall($1.options, function() { /*17235*/
			var _3 = $k[--$j]; /*17235*/
			$1[$k[--$j]] = _3; /*17235*/
		}); /*17235*/
		$1.options.dontdraw = true; /*17238*/
		$1.options.format = "micro"; /*17239*/
		$k[$j++] = "args"; /*17241*/
		$k[$j++] = $1.barcode; /*17241*/
		$k[$j++] = $1.options; /*17241*/
		$0.qrcode(); /*17241*/
		var _9 = $k[--$j]; /*17241*/
		$1[$k[--$j]] = _9; /*17241*/
		$1.args.opt = $1.options; /*17243*/
		$k[$j++] = $1.args; /*17246*/
		if (!$1.dontdraw) { /*17246*/
			$0.renmatrix(); /*17246*/
		} /*17246*/
	};
	$0.maxicode = function() {
		var $1 = {}; /*17273*/
		$1.options = $k[--$j]; /*17275*/
		$1.barcode = $k[--$j]; /*17276*/
		$1.dontdraw = false; /*17278*/
		$1.mode = -1; /*17279*/
		$1.sam = -1; /*17280*/
		$1.parse = false; /*17281*/
		$forall($1.options, function() { /*17292*/
			var _3 = $k[--$j]; /*17292*/
			$1[$k[--$j]] = _3; /*17292*/
		}); /*17292*/
		$1.mode = ~~$1.mode; /*17294*/
		$1.sam = ~~$1.sam; /*17295*/
		$1.msg = $1.barcode; /*17318*/
		$1.msglen = $1.msg.length; /*17319*/
		if (($1.mode == 2) || ($1.mode == 3)) { /*17345*/
			if ($eq($geti($1.msg, 0, 7), "\x5b\x29\x3e\x1e\x30\x31\x1d")) { /*17329*/
				$1.fid = $geti($1.msg, 0, 9); /*17326*/
				$1.msg = $geti($1.msg, 9, $1.msglen - 9); /*17327*/
			} else { /*17329*/
				$1.fid = ""; /*17329*/
			} /*17329*/
			$search($1.msg, "\x1d"); /*17333*/
			$j--; /*17333*/
			$1.pcode = $k[--$j]; /*17333*/
			$j--; /*17334*/
			$search($k[--$j], "\x1d"); /*17334*/
			$j--; /*17334*/
			$1.ccode = $k[--$j]; /*17334*/
			$j--; /*17335*/
			$search($k[--$j], "\x1d"); /*17335*/
			$j--; /*17335*/
			$1.scode = $k[--$j]; /*17335*/
			$j--; /*17336*/
			$1.msg = $k[--$j]; /*17336*/
			var _R = $s($1.msg.length + $1.fid.length); /*17339*/
			$puti(_R, 0, $1.fid); /*17340*/
			$puti(_R, $1.fid.length, $1.msg); /*17341*/
			$1.msg = _R; /*17342*/
			$1.msglen = $1.msg.length; /*17343*/
		} /*17343*/
		$1.eci = -1; /*17348*/
		$1.pad = -2; /*17348*/
		$1.ns = -3; /*17348*/
		$1.la = -4; /*17349*/
		$1.lb = -5; /*17349*/
		$1.sa = -6; /*17350*/
		$1.sb = -7; /*17350*/
		$1.sc = -8; /*17350*/
		$1.sd = -9; /*17350*/
		$1.se = -10; /*17350*/
		$1.sa2 = -11; /*17351*/
		$1.sa3 = -12; /*17351*/
		$1.lkc = -13; /*17352*/
		$1.lkd = -14; /*17352*/
		$1.lke = -15; /*17352*/
		$1.pd2 = -16; /*17353*/
		$1.pd3 = -17; /*17353*/
		$1.charmaps = $a([$a([13, "`", 192, 224, 0]), $a(["A", "a", 193, 225, 1]), $a(["B", "b", 194, 226, 2]), $a(["C", "c", 195, 227, 3]), $a(["D", "d", 196, 228, 4]), $a(["E", "e", 197, 229, 5]), $a(["F", "f", 198, 230, 6]), $a(["G", "g", 199, 231, 7]), $a(["H", "h", 200, 232, 8]), $a(["I", "i", 201, 233, 9]), $a(["J", "j", 202, 234, 10]), $a(["K", "k", 203, 235, 11]), $a(["L", "l", 204, 236, 12]), $a(["M", "m", 205, 237, 13]), $a(["N", "n", 206, 238, 14]), $a(["O", "o", 207, 239, 15]), $a(["P", "p", 208, 240, 16]), $a(["Q", "q", 209, 241, 17]), $a(["R", "r", 210, 242, 18]), $a(["S", "s", 211, 243, 19]), $a(["T", "t", 212, 244, 20]), $a(["U", "u", 213, 245, 21]), $a(["V", "v", 214, 246, 22]), $a(["W", "w", 215, 247, 23]), $a(["X", "x", 216, 248, 24]), $a(["Y", "y", 217, 249, 25]), $a(["Z", "z", 218, 250, 26]), $a([$1.eci, $1.eci, $1.eci, $1.eci, $1.eci]), $a([28, 28, 28, 28, $1.pad]), $a([29, 29, 29, 29, $1.pad]), $a([30, 30, 30, 30, 27]), $a([$1.ns, $1.ns, $1.ns, $1.ns, $1.ns]), $a([" ", "{", 219, 251, 28]), $a([$1.pad, $1.pad, 220, 252, 29]), $a(["\"", "}", 221, 253, 30]), $a(["#", "~", 222, 254, 31]), $a(["$", 127, 223, 255, 159]), $a(["%", ";", 170, 161, 160]), $a(["&", "<", 172, 168, 162]), $a(["'", "=", 177, 171, 163]), $a([40, ">", 178, 175, 164]), $a([41, "?", 179, 176, 165]), $a(["*", "[", 181, 180, 166]), $a(["+", 92, 185, 183, 167]), $a([",", "]", 186, 184, 169]), $a(["-", "^", 188, 187, 173]), $a([".", "_", 189, 191, 174]), $a(["/", " ", 190, 138, 182]), $a(["0", ",", 128, 139, 149]), $a(["1", ".", 129, 140, 150]), $a(["2", "/", 130, 141, 151]), $a(["3", ":", 131, 142, 152]), $a(["4", "@", 132, 143, 153]), $a(["5", "!", 133, 144, 154]), $a(["6", "|", 134, 145, 155]), $a(["7", $1.pd2, 135, 146, 156]), $a(["8", $1.sa2, 136, 147, 157]), $a(["9", $1.sa3, 137, 148, 158]), $a([":", $1.pd3, $1.la, $1.la, $1.la]), $a([$1.sb, $1.sa, " ", " ", " "]), $a([$1.sc, $1.sc, $1.lkc, $1.sc, $1.sc]), $a([$1.sd, $1.sd, $1.sd, $1.lkd, $1.sd]), $a([$1.se, $1.se, $1.se, $1.se, $1.lke]), $a([$1.lb, $1.la, $1.lb, $1.lb, $1.lb])]); /*17422*/
		$1.charvals = $a([{}, {}, {}, {}, {}]); /*17425*/
		for (var _2J = 0, _2I = $1.charmaps.length - 1; _2J <= _2I; _2J += 1) { /*17434*/
			$1.i = _2J; /*17427*/
			$1.encs = $get($1.charmaps, $1.i); /*17428*/
			for (var _2N = 0; _2N <= 4; _2N += 1) { /*17433*/
				$1.j = _2N; /*17430*/
				var _2Q = $get($1.encs, $1.j); /*17431*/
				$k[$j++] = _2Q; /*17431*/
				if ($eq($type(_2Q), "stringtype")) { /*17431*/
					var _2T = $get($k[--$j], 0); /*17431*/
					$k[$j++] = _2T; /*17431*/
				} /*17431*/
				$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*17432*/
			} /*17432*/
		} /*17432*/
		$1.seta = $get($1.charvals, 0); /*17435*/
		$1.setb = $get($1.charvals, 1); /*17436*/
		$1.setc = $get($1.charvals, 2); /*17437*/
		$1.setd = $get($1.charvals, 3); /*17438*/
		$1.sete = $get($1.charvals, 4); /*17439*/
		$k[$j++] = Infinity; /*17442*/
		for (var _2k = 0, _2l = $1.msglen + 1; _2k < _2l; _2k++) { /*17442*/
			$k[$j++] = 0; /*17442*/
		} /*17442*/
		$1.nseq = $a(); /*17442*/
		for (var _2o = $1.msglen - 1; _2o >= 0; _2o -= 1) { /*17450*/
			$1.i = _2o; /*17444*/
			var _2r = $get($1.msg, $1.i); /*17445*/
			if ((_2r >= 48) && (_2r <= 57)) { /*17448*/
				$put($1.nseq, $1.i, $get($1.nseq, $1.i + 1) + 1); /*17446*/
			} else { /*17448*/
				$put($1.nseq, $1.i, 0); /*17448*/
			} /*17448*/
		} /*17448*/
		$1.nseq = $geti($1.nseq, 0, $1.msglen); /*17451*/
		$1.prefixinset = function() {
			$k[$j++] = 0; /*17458*/
			for (;;) { /*17458*/
				var _32 = $k[--$j]; /*17456*/
				var _33 = $k[--$j]; /*17456*/
				$k[$j++] = _33; /*17456*/
				$k[$j++] = _32; /*17456*/
				if (_32 >= _33.length) { /*17456*/
					break; /*17456*/
				} /*17456*/
				var _34 = $k[--$j]; /*17457*/
				var _35 = $k[--$j]; /*17457*/
				var _37 = $k[--$j]; /*17457*/
				var _38 = $get(_37, $get(_35, _34)) !== undefined; /*17457*/
				$k[$j++] = _37; /*17457*/
				$k[$j++] = _35; /*17457*/
				$k[$j++] = _34; /*17457*/
				if (_38) { /*17457*/
					var _39 = $k[--$j]; /*17457*/
					$k[$j++] = _39 + 1; /*17457*/
				} else { /*17457*/
					break; /*17457*/
				} /*17457*/
			} /*17457*/
			var _3A = $k[--$j]; /*17459*/
			var _3B = $k[--$j]; /*17459*/
			var _3C = $k[--$j]; /*17459*/
			$k[$j++] = _3A; /*17459*/
		}; /*17460*/
		$1.enc = function() {
			var _3D = $k[--$j]; /*17463*/
			$put($1.out, $1.j, $get(_3D, $k[--$j])); /*17463*/
			$1.j = $1.j + 1; /*17464*/
		}; /*17465*/
		$1.out = $a(144); /*17467*/
		$1.i = 0; /*17468*/
		$1.j = 0; /*17468*/
		$1.cset = "seta"; /*17468*/
		for (;;) { /*17591*/
			if ($1.i == $1.msglen) { /*17477*/
				if ($ne($1.cset, "seta") && $ne($1.cset, "setb")) { /*17475*/
					$k[$j++] = $1.la; /*17473*/
					$k[$j++] = $1[$1.cset]; /*17473*/
					$1.enc(); /*17473*/
					$1.cset = "seta"; /*17474*/
				} /*17474*/
				break; /*17476*/
			} /*17476*/
			for (;;) { /*17590*/
				if ($get($1.nseq, $1.i) >= 9) { /*17488*/
					$k[$j++] = ~~$z($geti($1.msg, $1.i, 9)); /*17482*/
					for (var _3X = 0, _3Y = 4; _3X < _3Y; _3X++) { /*17482*/
						var _3Z = $k[--$j]; /*17482*/
						$k[$j++] = _3Z & 63; /*17482*/
						$k[$j++] = _3Z >>> 6; /*17482*/
					} /*17482*/
					$k[$j++] = $get($1[$1.cset], $1.ns); /*17483*/
					for (var _3e = 0; _3e <= 10; _3e += 2) { /*17483*/
						var _3f = $k[$j - 1 - _3e]; /*17483*/
						$k[$j++] = _3f; /*17483*/
					} /*17483*/
					$astore($a(6)); /*17483*/
					var _3h = $k[--$j]; /*17483*/
					var _3i = $k[--$j]; /*17483*/
					var _3j = $k[--$j]; /*17483*/
					var _3k = $k[--$j]; /*17483*/
					var _3l = $k[--$j]; /*17483*/
					var _3m = $k[--$j]; /*17483*/
					var _3n = $k[--$j]; /*17483*/
					$k[$j++] = _3h; /*17483*/
					$k[$j++] = _3n; /*17483*/
					$k[$j++] = _3m; /*17483*/
					$k[$j++] = _3l; /*17483*/
					$k[$j++] = _3k; /*17483*/
					$k[$j++] = _3j; /*17483*/
					$k[$j++] = _3i; /*17483*/
					for (var _3o = 0, _3p = 6; _3o < _3p; _3o++) { /*17483*/
						$j--; /*17483*/
					} /*17483*/
					$puti($1.out, $1.j, $k[--$j]); /*17484*/
					$1.i = $1.i + 9; /*17485*/
					$1.j = $1.j + 6; /*17486*/
					break; /*17487*/
				} /*17487*/
				$1.char1 = $get($1.msg, $1.i); /*17491*/
				$k[$j++] = "char2"; /*17492*/
				if (($1.i + 1) < $1.msglen) { /*17492*/
					$k[$j++] = $get($1.msg, $1.i + 1); /*17492*/
				} else { /*17492*/
					$k[$j++] = -99; /*17492*/
				} /*17492*/
				var _43 = $k[--$j]; /*17492*/
				$1[$k[--$j]] = _43; /*17492*/
				$k[$j++] = "char3"; /*17493*/
				if (($1.i + 2) < $1.msglen) { /*17493*/
					$k[$j++] = $get($1.msg, $1.i + 2); /*17493*/
				} else { /*17493*/
					$k[$j++] = -99; /*17493*/
				} /*17493*/
				var _4A = $k[--$j]; /*17493*/
				$1[$k[--$j]] = _4A; /*17493*/
				var _4F = $get($1[$1.cset], $1.char1) !== undefined; /*17496*/
				if (_4F) { /*17500*/
					$k[$j++] = $1.char1; /*17497*/
					$k[$j++] = $1[$1.cset]; /*17497*/
					$1.enc(); /*17497*/
					$1.i = $1.i + 1; /*17498*/
					break; /*17499*/
				} /*17499*/
				var _4N = $get($1.setb, $1.char1) !== undefined; /*17503*/
				if ($eq($1.cset, "seta") && _4N) { /*17513*/
					var _4Q = $get($1.setb, $1.char2) !== undefined; /*17504*/
					if (_4Q) { /*17510*/
						$k[$j++] = $1.lb; /*17505*/
						$k[$j++] = $1.seta; /*17505*/
						$1.enc(); /*17505*/
						$1.cset = "setb"; /*17506*/
					} else { /*17510*/
						$k[$j++] = $1.sb; /*17508*/
						$k[$j++] = $1.seta; /*17508*/
						$1.enc(); /*17508*/
						$k[$j++] = $1.char1; /*17509*/
						$k[$j++] = $1.setb; /*17509*/
						$1.enc(); /*17509*/
						$1.i = $1.i + 1; /*17510*/
					} /*17510*/
					break; /*17512*/
				} /*17512*/
				var _4b = $get($1.seta, $1.char1) !== undefined; /*17516*/
				if ($eq($1.cset, "setb") && _4b) { /*17541*/
					var _4c = $1.seta; /*17517*/
					var _4d = $1.msg; /*17517*/
					var _4e = $1.i; /*17517*/
					var _4f = $1.msglen; /*17517*/
					var _4g = $1.i; /*17517*/
					var _4h = _4f - _4g; /*17517*/
					var _4i = 4; /*17517*/
					if (4 > (_4f - _4g)) { /*17517*/
						var _ = _4h; /*17517*/
						_4h = _4i; /*17517*/
						_4i = _; /*17517*/
					} /*17517*/
					$k[$j++] = "p"; /*17517*/
					$k[$j++] = _4c; /*17517*/
					$k[$j++] = $geti(_4d, _4e, _4i); /*17517*/
					$1.prefixinset(); /*17517*/
					var _4k = $k[--$j]; /*17517*/
					$1[$k[--$j]] = _4k; /*17517*/
					if ($1.p == 1) { /*17522*/
						$k[$j++] = $1.sa; /*17519*/
						$k[$j++] = $1.setb; /*17519*/
						$1.enc(); /*17519*/
						$k[$j++] = $1.char1; /*17520*/
						$k[$j++] = $1.seta; /*17520*/
						$1.enc(); /*17520*/
						$1.i = $1.i + 1; /*17521*/
					} /*17521*/
					if ($1.p == 2) { /*17528*/
						$k[$j++] = $1.sa2; /*17524*/
						$k[$j++] = $1.setb; /*17524*/
						$1.enc(); /*17524*/
						$k[$j++] = $1.char1; /*17525*/
						$k[$j++] = $1.seta; /*17525*/
						$1.enc(); /*17525*/
						$k[$j++] = $1.char2; /*17526*/
						$k[$j++] = $1.seta; /*17526*/
						$1.enc(); /*17526*/
						$1.i = $1.i + 2; /*17527*/
					} /*17527*/
					if ($1.p == 3) { /*17535*/
						$k[$j++] = $1.sa3; /*17530*/
						$k[$j++] = $1.setb; /*17530*/
						$1.enc(); /*17530*/
						$k[$j++] = $1.char1; /*17531*/
						$k[$j++] = $1.seta; /*17531*/
						$1.enc(); /*17531*/
						$k[$j++] = $1.char2; /*17532*/
						$k[$j++] = $1.seta; /*17532*/
						$1.enc(); /*17532*/
						$k[$j++] = $1.char3; /*17533*/
						$k[$j++] = $1.seta; /*17533*/
						$1.enc(); /*17533*/
						$1.i = $1.i + 3; /*17534*/
					} /*17534*/
					if ($1.p >= 4) { /*17539*/
						$k[$j++] = $1.la; /*17537*/
						$k[$j++] = $1.setb; /*17537*/
						$1.enc(); /*17537*/
						$1.cset = "seta"; /*17538*/
					} /*17538*/
					break; /*17540*/
				} /*17540*/
				var _5F = $get($1.seta, $1.char1) !== undefined; /*17544*/
				if (_5F) { /*17548*/
					$k[$j++] = $1.la; /*17545*/
					$k[$j++] = $1[$1.cset]; /*17545*/
					$1.enc(); /*17545*/
					$1.cset = "seta"; /*17546*/
					break; /*17547*/
				} /*17547*/
				var _5L = $get($1.setb, $1.char1) !== undefined; /*17549*/
				if (_5L) { /*17553*/
					$k[$j++] = $1.lb; /*17550*/
					$k[$j++] = $1[$1.cset]; /*17550*/
					$1.enc(); /*17550*/
					$1.cset = "setb"; /*17551*/
					break; /*17552*/
				} /*17552*/
				var _5R = $get($1.setc, $1.char1) !== undefined; /*17556*/
				if (_5R) { /*17556*/
					$1.setx = "setc"; /*17556*/
					$1.sx = $1.sc; /*17556*/
					$1.lkx = $1.lkc; /*17556*/
				} /*17556*/
				var _5W = $get($1.setd, $1.char1) !== undefined; /*17557*/
				if (_5W) { /*17557*/
					$1.setx = "setd"; /*17557*/
					$1.sx = $1.sd; /*17557*/
					$1.lkx = $1.lkd; /*17557*/
				} /*17557*/
				var _5b = $get($1.sete, $1.char1) !== undefined; /*17558*/
				if (_5b) { /*17558*/
					$1.setx = "sete"; /*17558*/
					$1.sx = $1.se; /*17558*/
					$1.lkx = $1.lke; /*17558*/
				} /*17558*/
				var _5f = $1[$1.setx]; /*17561*/
				var _5g = $1.msg; /*17561*/
				var _5h = $1.i; /*17561*/
				var _5i = $1.msglen; /*17561*/
				var _5j = $1.i; /*17561*/
				var _5k = _5i - _5j; /*17561*/
				var _5l = 4; /*17561*/
				if (4 > (_5i - _5j)) { /*17561*/
					var _ = _5k; /*17561*/
					_5k = _5l; /*17561*/
					_5l = _; /*17561*/
				} /*17561*/
				$k[$j++] = "p"; /*17561*/
				$k[$j++] = _5f; /*17561*/
				$k[$j++] = $geti(_5g, _5h, _5l); /*17561*/
				$1.prefixinset(); /*17561*/
				var _5n = $k[--$j]; /*17561*/
				$1[$k[--$j]] = _5n; /*17561*/
				if ($1.p == 1) { /*17566*/
					$k[$j++] = $1.sx; /*17563*/
					$k[$j++] = $1[$1.cset]; /*17563*/
					$1.enc(); /*17563*/
					$k[$j++] = $1.char1; /*17564*/
					$k[$j++] = $1[$1.setx]; /*17564*/
					$1.enc(); /*17564*/
					$1.i = $1.i + 1; /*17565*/
				} /*17565*/
				if ($1.p == 2) { /*17573*/
					$k[$j++] = $1.sx; /*17568*/
					$k[$j++] = $1[$1.cset]; /*17568*/
					$1.enc(); /*17568*/
					$k[$j++] = $1.char1; /*17569*/
					$k[$j++] = $1[$1.setx]; /*17569*/
					$1.enc(); /*17569*/
					$k[$j++] = $1.sx; /*17570*/
					$k[$j++] = $1[$1.cset]; /*17570*/
					$1.enc(); /*17570*/
					$k[$j++] = $1.char2; /*17571*/
					$k[$j++] = $1[$1.setx]; /*17571*/
					$1.enc(); /*17571*/
					$1.i = $1.i + 2; /*17572*/
				} /*17572*/
				if ($1.p == 3) { /*17582*/
					$k[$j++] = $1.sx; /*17575*/
					$k[$j++] = $1[$1.cset]; /*17575*/
					$1.enc(); /*17575*/
					$k[$j++] = $1.char1; /*17576*/
					$k[$j++] = $1[$1.setx]; /*17576*/
					$1.enc(); /*17576*/
					$k[$j++] = $1.sx; /*17577*/
					$k[$j++] = $1[$1.cset]; /*17577*/
					$1.enc(); /*17577*/
					$k[$j++] = $1.char2; /*17578*/
					$k[$j++] = $1[$1.setx]; /*17578*/
					$1.enc(); /*17578*/
					$k[$j++] = $1.sx; /*17579*/
					$k[$j++] = $1[$1.cset]; /*17579*/
					$1.enc(); /*17579*/
					$k[$j++] = $1.char3; /*17580*/
					$k[$j++] = $1[$1.setx]; /*17580*/
					$1.enc(); /*17580*/
					$1.i = $1.i + 3; /*17581*/
				} /*17581*/
				if ($1.p >= 4) { /*17587*/
					$k[$j++] = $1.sx; /*17584*/
					$k[$j++] = $1[$1.cset]; /*17584*/
					$1.enc(); /*17584*/
					$k[$j++] = $1.lkx; /*17585*/
					$k[$j++] = $1[$1.setx]; /*17585*/
					$1.enc(); /*17585*/
					$1.cset = $1.setx; /*17586*/
				} /*17586*/
				break; /*17589*/
			} /*17589*/
		} /*17589*/
		$1.encmsg = $geti($1.out, 0, $1.j); /*17592*/
		$1.padval = $get($1[$1.cset], $1.pad); /*17593*/
		$1.sami = $a([]); /*17596*/
		if ($1.sam != -1) { /*17601*/
			$1.sami = $a(2); /*17598*/
			$put($1.sami, 0, $get($1.seta, $1.pad)); /*17599*/
			$put($1.sami, 1, (((~~($1.sam / 10)) - 1) * 8) + (($1.sam % 10) - 1)); /*17600*/
		} /*17600*/
		$k[$j++] = Infinity; /*17602*/
		$aload($1.sami); /*17602*/
		$aload($1.encmsg); /*17602*/
		$1.encmsg = $a(); /*17602*/
		if (($1.mode == 2) || ($1.mode == 3)) { /*17657*/
			var _70 = $strcpy($s(4), "0000"); /*17608*/
			var _73 = $cvrs($s(4), ~~$1.mode, 2); /*17608*/
			$puti(_70, 4 - _73.length, _73); /*17608*/
			$1.mdb = _70; /*17608*/
			var _75 = $strcpy($s(10), "0000000000"); /*17609*/
			var _78 = $cvrs($s(10), ~~$z($1.ccode), 2); /*17609*/
			$puti(_75, 10 - _78.length, _78); /*17609*/
			$1.ccb = _75; /*17609*/
			var _7A = $strcpy($s(10), "0000000000"); /*17610*/
			var _7D = $cvrs($s(10), ~~$z($1.scode), 2); /*17610*/
			$puti(_7A, 10 - _7D.length, _7D); /*17610*/
			$1.scb = _7A; /*17610*/
			$1.pcb = $strcpy($s(36), "000000000000000000000000000000000000"); /*17611*/
			if ($1.mode == 2) { /*17624*/
				var _7K = $cvrs($s(6), $1.pcode.length, 2); /*17614*/
				$puti($1.pcb, 6 - _7K.length, _7K); /*17614*/
				var _7O = $cvrs($s(30), ~~$z($1.pcode), 2); /*17615*/
				$puti($1.pcb, 36 - _7O.length, _7O); /*17615*/
			} else { /*17624*/
				$k[$j++] = Infinity; /*17621*/
				var _7Q = $strcpy($s(6), "      "); /*17619*/
				$k[$j++] = _7Q; /*17619*/
				$k[$j++] = _7Q; /*17619*/
				$k[$j++] = 0; /*17619*/
				if ($1.pcode.length > 6) { /*17619*/
					$k[$j++] = $geti($1.pcode, 0, 6); /*17619*/
				} else { /*17619*/
					$k[$j++] = $1.pcode; /*17619*/
				} /*17619*/
				var _7V = $k[--$j]; /*17619*/
				var _7W = $k[--$j]; /*17619*/
				$puti($k[--$j], _7W, _7V); /*17619*/
				$forall($k[--$j], function() { /*17620*/
					var _7b = $get($1.seta, $k[--$j]); /*17620*/
					$k[$j++] = _7b; /*17620*/
				}); /*17620*/
				$1.pccw = $a(); /*17621*/
				for (var _7d = 0; _7d <= 5; _7d += 1) { /*17625*/
					$1.i = _7d; /*17623*/
					var _7j = $cvrs($s(6), $get($1.pccw, $1.i), 2); /*17624*/
					$puti($1.pcb, ((6 * $1.i) + 6) - _7j.length, _7j); /*17624*/
				} /*17624*/
			} /*17624*/
			$1.scm = $s(60); /*17629*/
			$puti($1.scm, 2, $1.mdb); /*17630*/
			$puti($1.scm, 38, $geti($1.pcb, 0, 4)); /*17631*/
			$puti($1.scm, 30, $geti($1.pcb, 4, 6)); /*17632*/
			$puti($1.scm, 24, $geti($1.pcb, 10, 6)); /*17633*/
			$puti($1.scm, 18, $geti($1.pcb, 16, 6)); /*17634*/
			$puti($1.scm, 12, $geti($1.pcb, 22, 6)); /*17635*/
			$puti($1.scm, 6, $geti($1.pcb, 28, 6)); /*17636*/
			$puti($1.scm, 0, $geti($1.pcb, 34, 2)); /*17637*/
			$puti($1.scm, 52, $geti($1.ccb, 0, 2)); /*17638*/
			$puti($1.scm, 42, $geti($1.ccb, 2, 6)); /*17639*/
			$puti($1.scm, 36, $geti($1.ccb, 8, 2)); /*17640*/
			$puti($1.scm, 54, $geti($1.scb, 0, 6)); /*17641*/
			$puti($1.scm, 48, $geti($1.scb, 6, 4)); /*17642*/
			$1.pri = $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]); /*17645*/
			for (var _8P = 0; _8P <= 59; _8P += 1) { /*17651*/
				$1.i = _8P; /*17647*/
				$1.ps = ~~($1.i / 6); /*17648*/
				$1.ep = (~~(Math.pow(2, 5 - ($1.i % 6)))) * ($get($1.scm, $1.i) - 48); /*17649*/
				$put($1.pri, $1.ps, $get($1.pri, $1.ps) + $1.ep); /*17650*/
			} /*17650*/
			$k[$j++] = Infinity; /*17654*/
			for (var _8b = 0, _8c = 84; _8b < _8c; _8b++) { /*17654*/
				$k[$j++] = $1.padval; /*17654*/
			} /*17654*/
			$1.sec = $a(); /*17654*/
			$puti($1.sec, 0, $1.encmsg); /*17655*/
		} /*17655*/
		if (((($1.mode == 4) || ($1.mode == 5)) || ($1.mode == 6)) || ($1.mode == -1)) { /*17676*/
			if ($1.mode == -1) { /*17665*/
				var _8n = ($1.encmsg.length <= 77) ? 5 : 4; /*17664*/
				$1.mode = _8n; /*17664*/
			} /*17664*/
			$k[$j++] = Infinity; /*17668*/
			var _8p = ($1.mode == 5) ? 78 : 94; /*17668*/
			for (var _8q = 0, _8r = _8p; _8q < _8r; _8q++) { /*17668*/
				$k[$j++] = $1.padval; /*17668*/
			} /*17668*/
			$1.cws = $a(); /*17668*/
			$put($1.cws, 0, $1.mode); /*17669*/
			$puti($1.cws, 1, $1.encmsg); /*17670*/
			$1.pri = $geti($1.cws, 0, 10); /*17673*/
			$1.sec = $geti($1.cws, 10, $1.cws.length - 10); /*17674*/
		} /*17674*/
		$k[$j++] = Infinity; /*17679*/
		$k[$j++] = 1; /*17679*/
		for (var _93 = 0, _94 = 63; _93 < _94; _93++) { /*17679*/
			var _95 = $k[--$j]; /*17679*/
			var _96 = _95 * 2; /*17679*/
			$k[$j++] = _95; /*17679*/
			$k[$j++] = _96; /*17679*/
			if (_96 >= 64) { /*17679*/
				var _97 = $k[--$j]; /*17679*/
				$k[$j++] = _97 ^ 67; /*17679*/
			} /*17679*/
		} /*17679*/
		$1.rsalog = $a(); /*17679*/
		$1.rslog = $a(64); /*17680*/
		for (var _9A = 1; _9A <= 63; _9A += 1) { /*17681*/
			$put($1.rslog, $get($1.rsalog, _9A), _9A); /*17681*/
		} /*17681*/
		$1.rsprod = function() {
			var _9E = $k[--$j]; /*17685*/
			var _9F = $k[--$j]; /*17685*/
			$k[$j++] = _9F; /*17689*/
			$k[$j++] = _9E; /*17689*/
			if ((_9E != 0) && (_9F != 0)) { /*17688*/
				var _9I = $get($1.rslog, $k[--$j]); /*17686*/
				var _9N = $get($1.rsalog, (_9I + $get($1.rslog, $k[--$j])) % 63); /*17686*/
				$k[$j++] = _9N; /*17686*/
			} else { /*17688*/
				$j -= 2; /*17688*/
				$k[$j++] = 0; /*17688*/
			} /*17688*/
		}; /*17690*/
		$1.rscodes = function() {
			$1.rsnum = $k[--$j]; /*17695*/
			$1.cwb = $k[--$j]; /*17696*/
			$k[$j++] = Infinity; /*17699*/
			$k[$j++] = 1; /*17699*/
			for (var _9R = 0, _9S = $1.rsnum; _9R < _9S; _9R++) { /*17699*/
				$k[$j++] = 0; /*17699*/
			} /*17699*/
			$1.coeffs = $a(); /*17699*/
			for (var _9W = 1, _9V = $1.rsnum; _9W <= _9V; _9W += 1) { /*17708*/
				$1.i = _9W; /*17701*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*17702*/
				for (var _9d = $1.i - 1; _9d >= 1; _9d -= 1) { /*17706*/
					$1.j = _9d; /*17704*/
					$k[$j++] = $1.coeffs; /*17705*/
					$k[$j++] = $1.j; /*17705*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*17705*/
					$k[$j++] = $get($1.coeffs, $1.j); /*17705*/
					$k[$j++] = $get($1.rsalog, $1.i); /*17705*/
					$1.rsprod(); /*17705*/
					var _9p = $k[--$j]; /*17705*/
					var _9q = $k[--$j]; /*17705*/
					var _9r = $k[--$j]; /*17705*/
					$put($k[--$j], _9r, $xo(_9q, _9p)); /*17705*/
				} /*17705*/
				$k[$j++] = $1.coeffs; /*17707*/
				$k[$j++] = 0; /*17707*/
				$k[$j++] = $get($1.coeffs, 0); /*17707*/
				$k[$j++] = $get($1.rsalog, $1.i); /*17707*/
				$1.rsprod(); /*17707*/
				var _9z = $k[--$j]; /*17707*/
				var _A0 = $k[--$j]; /*17707*/
				$put($k[--$j], _A0, _9z); /*17707*/
			} /*17707*/
			$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*17709*/
			$k[$j++] = Infinity; /*17712*/
			for (var _A6 = 0, _A7 = $1.rsnum; _A6 < _A7; _A6++) { /*17712*/
				$k[$j++] = 0; /*17712*/
			} /*17712*/
			$1.ecb = $a(); /*17712*/
			for (var _AB = 0, _AA = $1.cwb.length - 1; _AB <= _AA; _AB += 1) { /*17721*/
				$1.t = $xo($get($1.cwb, _AB), $get($1.ecb, 0)); /*17714*/
				for (var _AH = $1.ecb.length - 1; _AH >= 0; _AH -= 1) { /*17720*/
					$1.i = _AH; /*17716*/
					$1.p = ($1.ecb.length - $1.i) - 1; /*17717*/
					$k[$j++] = $1.ecb; /*17718*/
					$k[$j++] = $1.p; /*17718*/
					$k[$j++] = $1.t; /*17718*/
					$k[$j++] = $get($1.coeffs, $1.i); /*17718*/
					$1.rsprod(); /*17718*/
					var _AQ = $k[--$j]; /*17718*/
					var _AR = $k[--$j]; /*17718*/
					$put($k[--$j], _AR, _AQ); /*17718*/
					if ($1.i > 0) { /*17719*/
						$put($1.ecb, $1.p, $xo($get($1.ecb, $1.p + 1), $get($1.ecb, $1.p))); /*17719*/
					} /*17719*/
				} /*17719*/
			} /*17719*/
			$k[$j++] = $1.ecb; /*17723*/
		}; /*17725*/
		$k[$j++] = Infinity; /*17728*/
		for (var _Af = 0, _Ae = $1.sec.length - 1; _Af <= _Ae; _Af += 2) { /*17728*/
			$k[$j++] = $get($1.sec, _Af); /*17728*/
		} /*17728*/
		$1.seco = $a(); /*17728*/
		$k[$j++] = Infinity; /*17729*/
		for (var _Al = 1, _Ak = $1.sec.length - 1; _Al <= _Ak; _Al += 2) { /*17729*/
			$k[$j++] = $get($1.sec, _Al); /*17729*/
		} /*17729*/
		$1.sece = $a(); /*17729*/
		var _Aq = ($1.sec.length == 84) ? 20 : 28; /*17732*/
		$1.scodes = _Aq; /*17732*/
		$k[$j++] = "secochk"; /*17733*/
		$k[$j++] = $1.seco; /*17733*/
		$k[$j++] = $1.scodes; /*17733*/
		$1.rscodes(); /*17733*/
		var _At = $k[--$j]; /*17733*/
		$1[$k[--$j]] = _At; /*17733*/
		$k[$j++] = "secechk"; /*17734*/
		$k[$j++] = $1.sece; /*17734*/
		$k[$j++] = $1.scodes; /*17734*/
		$1.rscodes(); /*17734*/
		var _Ax = $k[--$j]; /*17734*/
		$1[$k[--$j]] = _Ax; /*17734*/
		$k[$j++] = Infinity; /*17737*/
		for (var _B1 = 0, _B0 = $1.scodes - 1; _B1 <= _B0; _B1 += 1) { /*17737*/
			$k[$j++] = $get($1.secochk, _B1); /*17737*/
			$k[$j++] = $get($1.secechk, _B1); /*17737*/
		} /*17737*/
		$1.secchk = $a(); /*17737*/
		$k[$j++] = Infinity; /*17745*/
		$aload($1.pri); /*17741*/
		$k[$j++] = $1.pri; /*17742*/
		$k[$j++] = 10; /*17742*/
		$1.rscodes(); /*17742*/
		$aload($k[--$j]); /*17742*/
		$aload($1.sec); /*17743*/
		$aload($1.secchk); /*17744*/
		$1.codewords = $a(); /*17745*/
		$k[$j++] = Infinity; /*17748*/
		for (var _BD = 0, _BE = 864; _BD < _BE; _BD++) { /*17748*/
			$k[$j++] = 0; /*17748*/
		} /*17748*/
		$1.mods = $a(); /*17748*/
		for (var _BG = 0; _BG <= 143; _BG += 1) { /*17753*/
			$1.i = _BG; /*17750*/
			$k[$j++] = Infinity; /*17751*/
			var _BL = $cvrs($s(6), $get($1.codewords, $1.i), 2); /*17751*/
			for (var _BM = 0, _BN = _BL.length; _BM < _BN; _BM++) { /*17751*/
				$k[$j++] = $get(_BL, _BM) - 48; /*17751*/
			} /*17751*/
			$1.cw = $a(); /*17751*/
			$puti($1.mods, (6 * $1.i) + (6 - $1.cw.length), $1.cw); /*17752*/
		} /*17752*/
		$1.modmap = $a([469, 529, 286, 316, 347, 346, 673, 672, 703, 702, 647, 676, 283, 282, 313, 312, 370, 610, 618, 379, 378, 409, 408, 439, 705, 704, 559, 589, 588, 619, 458, 518, 640, 701, 675, 674, 285, 284, 315, 314, 310, 340, 531, 289, 288, 319, 349, 348, 456, 486, 517, 516, 471, 470, 369, 368, 399, 398, 429, 428, 549, 548, 579, 578, 609, 608, 649, 648, 679, 678, 709, 708, 639, 638, 669, 668, 699, 698, 279, 278, 309, 308, 339, 338, 381, 380, 411, 410, 441, 440, 561, 560, 591, 590, 621, 620, 547, 546, 577, 576, 607, 606, 367, 366, 397, 396, 427, 426, 291, 290, 321, 320, 351, 350, 651, 650, 681, 680, 711, 710, 1, 0, 31, 30, 61, 60, 3, 2, 33, 32, 63, 62, 5, 4, 35, 34, 65, 64, 7, 6, 37, 36, 67, 66, 9, 8, 39, 38, 69, 68, 11, 10, 41, 40, 71, 70, 13, 12, 43, 42, 73, 72, 15, 14, 45, 44, 75, 74, 17, 16, 47, 46, 77, 76, 19, 18, 49, 48, 79, 78, 21, 20, 51, 50, 81, 80, 23, 22, 53, 52, 83, 82, 25, 24, 55, 54, 85, 84, 27, 26, 57, 56, 87, 86, 117, 116, 147, 146, 177, 176, 115, 114, 145, 144, 175, 174, 113, 112, 143, 142, 173, 172, 111, 110, 141, 140, 171, 170, 109, 108, 139, 138, 169, 168, 107, 106, 137, 136, 167, 166, 105, 104, 135, 134, 165, 164, 103, 102, 133, 132, 163, 162, 101, 100, 131, 130, 161, 160, 99, 98, 129, 128, 159, 158, 97, 96, 127, 126, 157, 156, 95, 94, 125, 124, 155, 154, 93, 92, 123, 122, 153, 152, 91, 90, 121, 120, 151, 150, 181, 180, 211, 210, 241, 240, 183, 182, 213, 212, 243, 242, 185, 184, 215, 214, 245, 244, 187, 186, 217, 216, 247, 246, 189, 188, 219, 218, 249, 248, 191, 190, 221, 220, 251, 250, 193, 192, 223, 222, 253, 252, 195, 194, 225, 224, 255, 254, 197, 196, 227, 226, 257, 256, 199, 198, 229, 228, 259, 258, 201, 200, 231, 230, 261, 260, 203, 202, 233, 232, 263, 262, 205, 204, 235, 234, 265, 264, 207, 206, 237, 236, 267, 266, 297, 296, 327, 326, 357, 356, 295, 294, 325, 324, 355, 354, 293, 292, 323, 322, 353, 352, 277, 276, 307, 306, 337, 336, 275, 274, 305, 304, 335, 334, 273, 272, 303, 302, 333, 332, 271, 270, 301, 300, 331, 330, 361, 360, 391, 390, 421, 420, 363, 362, 393, 392, 423, 422, 365, 364, 395, 394, 425, 424, 383, 382, 413, 412, 443, 442, 385, 384, 415, 414, 445, 444, 387, 386, 417, 416, 447, 446, 477, 476, 507, 506, 537, 536, 475, 474, 505, 504, 535, 534, 473, 472, 503, 502, 533, 532, 455, 454, 485, 484, 515, 514, 453, 452, 483, 482, 513, 512, 451, 450, 481, 480, 511, 510, 541, 540, 571, 570, 601, 600, 543, 542, 573, 572, 603, 602, 545, 544, 575, 574, 605, 604, 563, 562, 593, 592, 623, 622, 565, 564, 595, 594, 625, 624, 567, 566, 597, 596, 627, 626, 657, 656, 687, 686, 717, 716, 655, 654, 685, 684, 715, 714, 653, 652, 683, 682, 713, 712, 637, 636, 667, 666, 697, 696, 635, 634, 665, 664, 695, 694, 633, 632, 663, 662, 693, 692, 631, 630, 661, 660, 691, 690, 721, 720, 751, 750, 781, 780, 723, 722, 753, 752, 783, 782, 725, 724, 755, 754, 785, 784, 727, 726, 757, 756, 787, 786, 729, 728, 759, 758, 789, 788, 731, 730, 761, 760, 791, 790, 733, 732, 763, 762, 793, 792, 735, 734, 765, 764, 795, 794, 737, 736, 767, 766, 797, 796, 739, 738, 769, 768, 799, 798, 741, 740, 771, 770, 801, 800, 743, 742, 773, 772, 803, 802, 745, 744, 775, 774, 805, 804, 747, 746, 777, 776, 807, 806, 837, 836, 867, 866, 897, 896, 835, 834, 865, 864, 895, 894, 833, 832, 863, 862, 893, 892, 831, 830, 861, 860, 891, 890, 829, 828, 859, 858, 889, 888, 827, 826, 857, 856, 887, 886, 825, 824, 855, 854, 885, 884, 823, 822, 853, 852, 883, 882, 821, 820, 851, 850, 881, 880, 819, 818, 849, 848, 879, 878, 817, 816, 847, 846, 877, 876, 815, 814, 845, 844, 875, 874, 813, 812, 843, 842, 873, 872, 811, 810, 841, 840, 871, 870, 901, 900, 931, 930, 961, 960, 903, 902, 933, 932, 963, 962, 905, 904, 935, 934, 965, 964, 907, 906, 937, 936, 967, 966, 909, 908, 939, 938, 969, 968, 911, 910, 941, 940, 971, 970, 913, 912, 943, 942, 973, 972, 915, 914, 945, 944, 975, 974, 917, 916, 947, 946, 977, 976, 919, 918, 949, 948, 979, 978, 921, 920, 951, 950, 981, 980, 923, 922, 953, 952, 983, 982, 925, 924, 955, 954, 985, 984, 927, 926, 957, 956, 987, 986, 58, 89, 88, 118, 149, 148, 178, 209, 208, 238, 269, 268, 298, 329, 328, 358, 389, 388, 418, 449, 448, 478, 509, 508, 538, 569, 568, 598, 629, 628, 658, 689, 688, 718, 749, 748, 778, 809, 808, 838, 869, 868, 898, 929, 928, 958, 989, 988]); /*17801*/
		$1.pixs = $a(864); /*17804*/
		$1.j = 0; /*17805*/
		for (var _BY = 0, _BX = $1.mods.length - 1; _BY <= _BX; _BY += 1) { /*17812*/
			$1.i = _BY; /*17807*/
			if ($get($1.mods, $1.i) == 1) { /*17811*/
				$put($1.pixs, $1.j, $get($1.modmap, $1.i)); /*17809*/
				$1.j = $1.j + 1; /*17810*/
			} /*17810*/
		} /*17810*/
		$k[$j++] = Infinity; /*17813*/
		$forall($geti($1.pixs, 0, $1.j)); /*17813*/
		$k[$j++] = 28; /*17813*/
		$k[$j++] = 29; /*17813*/
		$k[$j++] = 280; /*17813*/
		$k[$j++] = 281; /*17813*/
		$k[$j++] = 311; /*17813*/
		$k[$j++] = 457; /*17813*/
		$k[$j++] = 488; /*17813*/
		$k[$j++] = 500; /*17813*/
		$k[$j++] = 530; /*17813*/
		$k[$j++] = 670; /*17813*/
		$k[$j++] = 700; /*17813*/
		$k[$j++] = 677; /*17813*/
		$k[$j++] = 707; /*17813*/
		$1.pixs = $a(); /*17813*/
		var _Bo = {
			ren: $0.renmaximatrix,
			pixs: $1.pixs,
			opt: $1.options
		}; /*17819*/
		$k[$j++] = _Bo; /*17822*/
		if (!$1.dontdraw) { /*17822*/
			$0.renmaximatrix(); /*17822*/
		} /*17822*/
	};
	$0.azteccode = function() {
		var $1 = {}; /*17849*/
		$1.options = $k[--$j]; /*17851*/
		$1.barcode = $k[--$j]; /*17852*/
		$1.dontdraw = false; /*17854*/
		$1.format = "unset"; /*17855*/
		$1.readerinit = false; /*17856*/
		$1.layers = -1; /*17857*/
		$1.eclevel = 23; /*17858*/
		$1.ecaddchars = 3; /*17859*/
		$1.raw = false; /*17860*/
		$1.parse = false; /*17861*/
		$forall($1.options, function() { /*17872*/
			var _3 = $k[--$j]; /*17872*/
			$1[$k[--$j]] = _3; /*17872*/
		}); /*17872*/
		$1.layers = ~~$1.layers; /*17874*/
		$1.eclevel = +$1.eclevel; /*17875*/
		$1.ecaddchars = ~~$1.ecaddchars; /*17876*/
		$1.msgbits = ""; /*17900*/
		if ($ne($1.format, "rune") && $1.raw) { /*17901*/
			$1.msgbits = $1.barcode; /*17901*/
		} /*17901*/
		if ($ne($1.format, "rune") && (!$1.raw)) { /*18198*/
			$1.U = 0; /*17905*/
			$1.L = 1; /*17905*/
			$1.M = 2; /*17905*/
			$1.P = 3; /*17905*/
			$1.D = 4; /*17905*/
			$1.B = 5; /*17905*/
			$1.lu = -1; /*17908*/
			$1.ll = -2; /*17908*/
			$1.lm = -3; /*17908*/
			$1.lp = -4; /*17909*/
			$1.ld = -5; /*17909*/
			$1.su = -6; /*17909*/
			$1.sp = -7; /*17910*/
			$1.sb = -8; /*17910*/
			$1.fl = -9; /*17910*/
			$1.p2 = -10; /*17911*/
			$1.p3 = -11; /*17911*/
			$1.p4 = -12; /*17911*/
			$1.p5 = -13; /*17911*/
			$1.charmaps = $a([$a([$1.sp, $1.sp, $1.sp, $1.fl, $1.sp]), $a([32, 32, 32, 13, 32]), $a(["A", "a", 1, $1.p2, "0"]), $a(["B", "b", 2, $1.p3, "1"]), $a(["C", "c", 3, $1.p4, "2"]), $a(["D", "d", 4, $1.p5, "3"]), $a(["E", "e", 5, "!", "4"]), $a(["F", "f", 6, "\"", "5"]), $a(["G", "g", 7, "#", "6"]), $a(["H", "h", 8, "$", "7"]), $a(["I", "i", 9, "%", "8"]), $a(["J", "j", 10, "&", "9"]), $a(["K", "k", 11, "'", ","]), $a(["L", "l", 12, 40, "."]), $a(["M", "m", 13, 41, $1.lu]), $a(["N", "n", 27, "*", $1.su]), $a(["O", "o", 28, "+", -99]), $a(["P", "p", 29, ",", -99]), $a(["Q", "q", 30, "-", -99]), $a(["R", "r", 31, ".", -99]), $a(["S", "s", "@", "/", -99]), $a(["T", "t", 92, ":", -99]), $a(["U", "u", "^", ";", -99]), $a(["V", "v", "_", "<", -99]), $a(["W", "w", "`", "=", -99]), $a(["X", "x", "|", ">", -99]), $a(["Y", "y", "~", "?", -99]), $a(["Z", "z", 127, "[", -99]), $a([$1.ll, $1.su, $1.ll, "]", -99]), $a([$1.lm, $1.lm, $1.lu, "{", -99]), $a([$1.ld, $1.ld, $1.lp, "}", -99]), $a([$1.sb, $1.sb, $1.sb, $1.lu, -99])]); /*17948*/
			$1.charvals = $a([{}, {}, {}, {}, {}]); /*17951*/
			for (var _1B = 0, _1A = $1.charmaps.length - 1; _1B <= _1A; _1B += 1) { /*17960*/
				$1.i = _1B; /*17953*/
				$1.encs = $get($1.charmaps, $1.i); /*17954*/
				for (var _1F = 0; _1F <= 4; _1F += 1) { /*17959*/
					$1.j = _1F; /*17956*/
					var _1I = $get($1.encs, $1.j); /*17957*/
					$k[$j++] = _1I; /*17957*/
					if ($eq($type(_1I), "stringtype")) { /*17957*/
						var _1L = $get($k[--$j], 0); /*17957*/
						$k[$j++] = _1L; /*17957*/
					} /*17957*/
					$put($get($1.charvals, $1.j), $k[--$j], $1.i); /*17958*/
				} /*17958*/
			} /*17958*/
			var _1V = {
				"\x0d\x0a": $1.p2,
				". ": $1.p3,
				", ": $1.p4,
				": ": $1.p5
			}; /*17967*/
			$1.pcomp = _1V; /*17968*/
			$1.e = 10000; /*17970*/
			$1.latlen = $a([$a([0, 5, 5, 10, 5, 10]), $a([9, 0, 5, 10, 5, 10]), $a([5, 5, 0, 5, 10, 10]), $a([5, 10, 10, 0, 10, 15]), $a([4, 9, 9, 14, 0, 14]), $a([0, 0, 0, 0, 0, 0])]); /*17980*/
			$1.latseq = $a([$a([$a([]), $a([$1.ll]), $a([$1.lm]), $a([$1.lm, $1.lp]), $a([$1.ld]), $a([$1.sb])]), $a([$a([$1.ld, $1.lu]), $a([]), $a([$1.lm]), $a([$1.lm, $1.lp]), $a([$1.ld]), $a([$1.sb])]), $a([$a([$1.lu]), $a([$1.ll]), $a([]), $a([$1.lp]), $a([$1.lu, $1.ld]), $a([$1.sb])]), $a([$a([$1.lu]), $a([$1.lu, $1.ll]), $a([$1.lu, $1.lm]), $a([]), $a([$1.lu, $1.ld]), $a([$1.lu, $1.sb])]), $a([$a([$1.lu]), $a([$1.lu, $1.ll]), $a([$1.lu, $1.lm]), $a([$1.lu, $1.lm, $1.lp]), $a([]), $a([$1.lu, $1.sb])]), $a([$a([$1.lu]), $a([$1.ll]), $a([$1.lm]), $a([]), $a([]), $a([])])]); /*17990*/
			$1.shftlen = $a([$a([$1.e, $1.e, $1.e, 5, $1.e]), $a([5, $1.e, $1.e, 5, $1.e]), $a([$1.e, $1.e, $1.e, 5, $1.e]), $a([$1.e, $1.e, $1.e, $1.e, $1.e]), $a([4, $1.e, $1.e, 4, $1.e])]); /*17999*/
			$1.charsize = $a([5, 5, 5, 5, 4, 8]); /*18002*/
			$1.curlen = $a([0, $1.e, $1.e, $1.e, $1.e, $1.e]); /*18005*/
			$1.curseq = $a([$a([]), $a([]), $a([]), $a([]), $a([]), $a([])]); /*18006*/
			$1.backto = $1.U; /*18008*/
			$1.lastchar = ""; /*18009*/
			$forall($1.barcode, function() { /*18105*/
				$1.char = $k[--$j]; /*18014*/
				for (;;) { /*18040*/
					$1.imp = false; /*18018*/
					var _3l = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*18019*/
					for (var _3m = 0, _3n = _3l.length; _3m < _3n; _3m++) { /*18038*/
						$1.x = $get(_3l, _3m); /*18020*/
						var _3v = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*18021*/
						for (var _3w = 0, _3x = _3v.length; _3w < _3x; _3w++) { /*18037*/
							$1.y = $get(_3v, _3w); /*18022*/
							if (($1.x != $1.B) || ($1.y == $1.backto)) { /*18036*/
								$1.cost = $get($1.curlen, $1.x) + $get($get($1.latlen, $1.x), $1.y); /*18024*/
								if ($1.cost < $get($1.curlen, $1.y)) { /*18035*/
									$put($1.curlen, $1.y, $1.cost); /*18026*/
									$k[$j++] = $1.curseq; /*18029*/
									$k[$j++] = $1.y; /*18029*/
									$k[$j++] = Infinity; /*18029*/
									$aload($get($1.curseq, $1.x)); /*18028*/
									$aload($get($get($1.latseq, $1.x), $1.y)); /*18029*/
									var _4S = $a(); /*18029*/
									var _4T = $k[--$j]; /*18030*/
									$put($k[--$j], _4T, _4S); /*18030*/
									if ($1.y == $1.B) { /*18033*/
										$k[$j++] = "backto"; /*18032*/
										if (($1.x == $1.P) || ($1.x == $1.D)) { /*18032*/
											$k[$j++] = $1.U; /*18032*/
										} else { /*18032*/
											$k[$j++] = $1.x; /*18032*/
										} /*18032*/
										var _4d = $k[--$j]; /*18032*/
										$1[$k[--$j]] = _4d; /*18032*/
									} /*18032*/
									$1.imp = true; /*18034*/
								} /*18034*/
							} /*18034*/
						} /*18034*/
					} /*18034*/
					if (!$1.imp) { /*18039*/
						break; /*18039*/
					} /*18039*/
				} /*18039*/
				$1.nxtlen = $a([$1.e, $1.e, $1.e, $1.e, $1.e, $1.e]); /*18043*/
				$1.nxtseq = $a(6); /*18044*/
				var _4u = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*18046*/
				for (var _4v = 0, _4w = _4u.length; _4v < _4w; _4v++) { /*18081*/
					$1.x = $get(_4u, _4v); /*18047*/
					for (;;) { /*18079*/
						if ($1.x != $1.B) { /*18052*/
							var _54 = $get($get($1.charvals, $1.x), $1.char) !== undefined; /*18052*/
							if (!_54) { /*18052*/
								break; /*18052*/
							} /*18052*/
						} /*18052*/
						$1.cost = $get($1.curlen, $1.x) + $get($1.charsize, $1.x); /*18055*/
						if ($1.cost < $get($1.nxtlen, $1.x)) { /*18059*/
							$put($1.nxtlen, $1.x, $1.cost); /*18057*/
							$k[$j++] = $1.nxtseq; /*18058*/
							$k[$j++] = $1.x; /*18058*/
							$k[$j++] = Infinity; /*18058*/
							$aload($get($1.curseq, $1.x)); /*18058*/
							$k[$j++] = $1.char; /*18058*/
							var _5O = $a(); /*18058*/
							var _5P = $k[--$j]; /*18058*/
							$put($k[--$j], _5P, _5O); /*18058*/
						} /*18058*/
						if ($1.x == $1.B) { /*18062*/
							break; /*18062*/
						} /*18062*/
						var _5Y = $a([$1.U, $1.L, $1.M, $1.P, $1.D]); /*18063*/
						for (var _5Z = 0, _5a = _5Y.length; _5Z < _5a; _5Z++) { /*18076*/
							$1.y = $get(_5Y, _5Z); /*18064*/
							if ($ne($1.x, $1.y)) { /*18075*/
								$1.cost = ($get($1.curlen, $1.y) + $get($get($1.shftlen, $1.y), $1.x)) + $get($1.charsize, $1.x); /*18066*/
								if ($1.cost < $get($1.nxtlen, $1.y)) { /*18074*/
									$put($1.nxtlen, $1.y, $1.cost); /*18068*/
									$k[$j++] = $1.nxtseq; /*18072*/
									$k[$j++] = $1.y; /*18072*/
									$k[$j++] = Infinity; /*18072*/
									$aload($get($1.curseq, $1.y)); /*18070*/
									if ($1.x == $1.U) { /*18071*/
										$k[$j++] = $1.su; /*18071*/
									} else { /*18071*/
										$k[$j++] = $1.sp; /*18071*/
									} /*18071*/
									$k[$j++] = $1.char; /*18072*/
									var _66 = $a(); /*18072*/
									var _67 = $k[--$j]; /*18073*/
									$put($k[--$j], _67, _66); /*18073*/
								} /*18073*/
							} /*18073*/
						} /*18073*/
						break; /*18078*/
					} /*18078*/
				} /*18078*/
				if ($ne($1.lastchar, "")) { /*18092*/
					var _6A = $s(2); /*18085*/
					$put(_6A, 0, $1.lastchar); /*18085*/
					$put(_6A, 1, $1.char); /*18085*/
					$1.pchars = _6A; /*18085*/
					var _6F = $get($1.pcomp, $1.pchars) !== undefined; /*18086*/
					if (_6F) { /*18091*/
						if ($lt($get($1.curlen, $1.P), $get($1.nxtlen, $1.P))) { /*18090*/
							$put($1.nxtlen, $1.P, $get($1.curlen, $1.P)); /*18088*/
							$k[$j++] = $1.nxtseq; /*18089*/
							$k[$j++] = $1.P; /*18089*/
							$k[$j++] = Infinity; /*18089*/
							$aload($get($1.curseq, $1.P)); /*18089*/
							$j--; /*18089*/
							$k[$j++] = $get($1.pcomp, $1.pchars); /*18089*/
							var _6Z = $a(); /*18089*/
							var _6a = $k[--$j]; /*18089*/
							$put($k[--$j], _6a, _6Z); /*18089*/
						} /*18089*/
					} /*18089*/
				} /*18089*/
				$1.numbytes = 0; /*18095*/
				$forall($get($1.nxtseq, $1.B), function() { /*18098*/
					if ($k[--$j] == $1.sb) { /*18097*/
						$k[$j++] = 0; /*18097*/
					} else { /*18097*/
						$k[$j++] = $1.numbytes + 1; /*18097*/
					} /*18097*/
					$1.numbytes = $k[--$j]; /*18097*/
				}); /*18097*/
				if ($1.numbytes == 32) { /*18099*/
					$put($1.nxtlen, $1.B, $get($1.nxtlen, $1.B) + 11); /*18099*/
				} /*18099*/
				$1.curlen = $1.nxtlen; /*18101*/
				$1.curseq = $1.nxtseq; /*18102*/
				$1.lastchar = $1.char; /*18103*/
			}); /*18103*/
			$1.minseq = $1.e; /*18108*/
			var _6z = $a([$1.U, $1.L, $1.M, $1.P, $1.D, $1.B]); /*18109*/
			for (var _70 = 0, _71 = _6z.length; _70 < _71; _70++) { /*18115*/
				$1.i = $get(_6z, _70); /*18110*/
				if ($get($1.curlen, $1.i) < $1.minseq) { /*18114*/
					$1.minseq = $get($1.curlen, $1.i); /*18112*/
					$1.seq = $get($1.curseq, $1.i); /*18113*/
				} /*18113*/
			} /*18113*/
			$1.tobin = function() {
				var _7E = $s($k[--$j]); /*18119*/
				$k[$j++] = _7E; /*18119*/
				for (var _7G = 0, _7F = _7E.length - 1; _7G <= _7F; _7G += 1) { /*18119*/
					var _7H = $k[--$j]; /*18119*/
					$put(_7H, _7G, 48); /*18119*/
					$k[$j++] = _7H; /*18119*/
				} /*18119*/
				var _7I = $k[--$j]; /*18120*/
				var _7L = $cvrs($s(_7I.length), $k[--$j], 2); /*18120*/
				$puti(_7I, _7I.length - _7L.length, _7L); /*18120*/
				$k[$j++] = _7I; /*18120*/
			}; /*18121*/
			$1.encu = function() {
				var _7Q = $get($get($1.charvals, $1.U), $k[--$j]); /*18122*/
				$k[$j++] = _7Q; /*18122*/
				$k[$j++] = 5; /*18122*/
				$1.tobin(); /*18122*/
			}; /*18122*/
			$1.encl = function() {
				var _7V = $get($get($1.charvals, $1.L), $k[--$j]); /*18123*/
				$k[$j++] = _7V; /*18123*/
				$k[$j++] = 5; /*18123*/
				$1.tobin(); /*18123*/
			}; /*18123*/
			$1.encm = function() {
				var _7a = $get($get($1.charvals, $1.M), $k[--$j]); /*18124*/
				$k[$j++] = _7a; /*18124*/
				$k[$j++] = 5; /*18124*/
				$1.tobin(); /*18124*/
			}; /*18124*/
			$1.encp = function() {
				var _7f = $get($get($1.charvals, $1.P), $k[--$j]); /*18125*/
				$k[$j++] = _7f; /*18125*/
				$k[$j++] = 5; /*18125*/
				$1.tobin(); /*18125*/
			}; /*18125*/
			$1.encd = function() {
				var _7k = $get($get($1.charvals, $1.D), $k[--$j]); /*18126*/
				$k[$j++] = _7k; /*18126*/
				$k[$j++] = 4; /*18126*/
				$1.tobin(); /*18126*/
			}; /*18126*/
			$1.encfuncs = $a(["encu", "encl", "encm", "encp", "encd"]); /*18127*/
			$1.addtomsgbits = function() {
				$1.v = $k[--$j]; /*18129*/
				$puti($1.msgbits, $1.j, $1.v); /*18130*/
				$1.j = $1.j + $1.v.length; /*18131*/
			}; /*18132*/
			$1.state = $1.U; /*18135*/
			$1.msgbits = $s($1.minseq); /*18136*/
			$1.i = 0; /*18137*/
			$1.j = 0; /*18137*/
			for (;;) { /*18196*/
				if ($1.i >= $1.seq.length) { /*18138*/
					break; /*18138*/
				} /*18138*/
				if ($1.state != $1.B) { /*18191*/
					$1.char = $get($1.seq, $1.i); /*18142*/
					$k[$j++] = $1.char; /*18145*/
					$1[$get($1.encfuncs, $1.state)](); /*18145*/
					$1.addtomsgbits(); /*18145*/
					$1.i = $1.i + 1; /*18146*/
					if (($1.char == $1.su) || ($1.char == $1.sp)) { /*18152*/
						$k[$j++] = $get($1.seq, $1.i); /*18150*/
						if ($1.char == $1.su) { /*18150*/
							$1.encu(); /*18150*/
						} else { /*18150*/
							$1.encp(); /*18150*/
						} /*18150*/
						$1.addtomsgbits(); /*18150*/
						$1.i = $1.i + 1; /*18151*/
					} /*18151*/
					if ($1.char == $1.lu) { /*18155*/
						$1.state = $1.U; /*18155*/
					} /*18155*/
					if ($1.char == $1.ll) { /*18156*/
						$1.state = $1.L; /*18156*/
					} /*18156*/
					if ($1.char == $1.lm) { /*18157*/
						$1.state = $1.M; /*18157*/
					} /*18157*/
					if ($1.char == $1.lp) { /*18158*/
						$1.state = $1.P; /*18158*/
					} /*18158*/
					if ($1.char == $1.ld) { /*18159*/
						$1.state = $1.D; /*18159*/
					} /*18159*/
					if ($1.char == $1.sb) { /*18160*/
						$1.state = $1.B; /*18160*/
					} /*18160*/
				} else { /*18191*/
					$1.numbytes = 0; /*18165*/
					for (;;) { /*18169*/
						if (($1.i + $1.numbytes) >= $1.seq.length) { /*18166*/
							break; /*18166*/
						} /*18166*/
						if ($get($1.seq, $1.i + $1.numbytes) < 0) { /*18167*/
							break; /*18167*/
						} /*18167*/
						$1.numbytes = $1.numbytes + 1; /*18168*/
					} /*18168*/
					if ($1.numbytes <= 31) { /*18176*/
						$k[$j++] = $1.numbytes; /*18173*/
						$k[$j++] = 5; /*18173*/
						$1.tobin(); /*18173*/
						$1.addtomsgbits(); /*18173*/
					} else { /*18176*/
						$k[$j++] = 0; /*18175*/
						$k[$j++] = 5; /*18175*/
						$1.tobin(); /*18175*/
						$1.addtomsgbits(); /*18175*/
						$k[$j++] = $1.numbytes - 31; /*18176*/
						$k[$j++] = 11; /*18176*/
						$1.tobin(); /*18176*/
						$1.addtomsgbits(); /*18176*/
					} /*18176*/
					for (var _8m = 0, _8n = $1.numbytes; _8m < _8n; _8m++) { /*18183*/
						$k[$j++] = $get($1.seq, $1.i); /*18181*/
						$k[$j++] = 8; /*18181*/
						$1.tobin(); /*18181*/
						$1.addtomsgbits(); /*18181*/
						$1.i = $1.i + 1; /*18182*/
					} /*18182*/
					if ($1.i < $1.seq.length) { /*18192*/
						$1.char = $get($1.seq, $1.i); /*18187*/
						$1.i = $1.i + 1; /*18188*/
						if ($1.char == $1.lu) { /*18189*/
							$1.state = $1.U; /*18189*/
						} /*18189*/
						if ($1.char == $1.ll) { /*18190*/
							$1.state = $1.L; /*18190*/
						} /*18190*/
						if ($1.char == $1.lm) { /*18191*/
							$1.state = $1.M; /*18191*/
						} /*18191*/
					} /*18191*/
				} /*18191*/
			} /*18191*/
		} /*18191*/
		$1.metrics = $a([$a(["rune", 0, 0, 0, 6]), $a(["compact", 1, 1, 17, 6]), $a(["full", 1, 1, 21, 6]), $a(["compact", 2, 0, 40, 6]), $a(["full", 2, 1, 48, 6]), $a(["compact", 3, 0, 51, 8]), $a(["full", 3, 1, 60, 8]), $a(["compact", 4, 0, 76, 8]), $a(["full", 4, 1, 88, 8]), $a(["full", 5, 1, 120, 8]), $a(["full", 6, 1, 156, 8]), $a(["full", 7, 1, 196, 8]), $a(["full", 8, 1, 240, 8]), $a(["full", 9, 1, 230, 10]), $a(["full", 10, 1, 272, 10]), $a(["full", 11, 1, 316, 10]), $a(["full", 12, 1, 364, 10]), $a(["full", 13, 1, 416, 10]), $a(["full", 14, 1, 470, 10]), $a(["full", 15, 1, 528, 10]), $a(["full", 16, 1, 588, 10]), $a(["full", 17, 1, 652, 10]), $a(["full", 18, 1, 720, 10]), $a(["full", 19, 1, 790, 10]), $a(["full", 20, 1, 864, 10]), $a(["full", 21, 1, 940, 10]), $a(["full", 22, 1, 1020, 10]), $a(["full", 23, 0, 920, 12]), $a(["full", 24, 0, 992, 12]), $a(["full", 25, 0, 1066, 12]), $a(["full", 26, 0, 1144, 12]), $a(["full", 27, 0, 1224, 12]), $a(["full", 28, 0, 1306, 12]), $a(["full", 29, 0, 1392, 12]), $a(["full", 30, 0, 1480, 12]), $a(["full", 31, 0, 1570, 12]), $a(["full", 32, 0, 1664, 12])]); /*18215*/
		$1.i = 0; /*18217*/
		for (;;) { /*18235*/
			$1.m = $get($1.metrics, $1.i); /*18219*/
			$1.frmt = $get($1.m, 0); /*18220*/
			$1.mlyr = $get($1.m, 1); /*18221*/
			$1.icap = $get($1.m, 2); /*18222*/
			$1.ncws = $get($1.m, 3); /*18223*/
			$1.bpcw = $get($1.m, 4); /*18224*/
			$1.numecw = ~~(Math.ceil((($1.ncws * $1.eclevel) / 100) + $1.ecaddchars)); /*18225*/
			if ($1.msgbits.length == 0) { /*18226*/
				$1.numecw = 0; /*18226*/
			} /*18226*/
			$1.numdcw = $1.ncws - $1.numecw; /*18227*/
			$1.okay = true; /*18228*/
			if ($ne($1.format, "unset") && $ne($1.format, $1.frmt)) { /*18229*/
				$1.okay = false; /*18229*/
			} /*18229*/
			if ($1.readerinit && ($1.icap != 1)) { /*18230*/
				$1.okay = false; /*18230*/
			} /*18230*/
			if (($1.layers != -1) && ($1.layers != $1.mlyr)) { /*18231*/
				$1.okay = false; /*18231*/
			} /*18231*/
			if ((~~Math.ceil($1.msgbits.length / $1.bpcw)) > $1.numdcw) { /*18232*/
				$1.okay = false; /*18232*/
			} /*18232*/
			if ($1.okay) { /*18233*/
				break; /*18233*/
			} /*18233*/
			$1.i = $1.i + 1; /*18234*/
		} /*18234*/
		$1.layers = $1.mlyr; /*18236*/
		$1.format = $1.frmt; /*18237*/
		$1.allzero = function() {
			var _AH = $k[--$j]; /*18240*/
			$k[$j++] = $eq(_AH, $geti("000000000000", 0, _AH.length)); /*18240*/
		}; /*18240*/
		$1.allones = function() {
			var _AJ = $k[--$j]; /*18241*/
			$k[$j++] = $eq(_AJ, $geti("111111111111", 0, _AJ.length)); /*18241*/
		}; /*18241*/
		$1.cws = $a($1.ncws); /*18242*/
		$1.m = 0; /*18243*/
		$1.c = 0; /*18243*/
		for (;;) { /*18270*/
			if ($1.msgbits.length <= $1.m) { /*18245*/
				break; /*18245*/
			} /*18245*/
			if (($1.msgbits.length - $1.m) >= $1.bpcw) { /*18259*/
				$1.cwb = $geti($1.msgbits, $1.m, $1.bpcw - 1); /*18247*/
				$1.cwf = $geti($1.msgbits, ($1.m + $1.bpcw) - 1, 1); /*18248*/
				$k[$j++] = $1.cwb; /*18249*/
				$1.allzero(); /*18249*/
				if ($k[--$j]) { /*18249*/
					$1.cwf = "1"; /*18249*/
					$1.m = $1.m - 1; /*18249*/
				} /*18249*/
				$k[$j++] = $1.cwb; /*18250*/
				$1.allones(); /*18250*/
				if ($k[--$j]) { /*18250*/
					$1.cwf = "0"; /*18250*/
					$1.m = $1.m - 1; /*18250*/
				} /*18250*/
				var _Ag = $s(12); /*18252*/
				$puti(_Ag, 0, $1.cwb); /*18252*/
				$puti(_Ag, $1.bpcw - 1, $1.cwf); /*18253*/
				$1.cwb = $geti(_Ag, 0, $1.bpcw); /*18255*/
			} else { /*18259*/
				$1.cwb = $geti($1.msgbits, $1.m, $1.msgbits.length - $1.m); /*18257*/
				var _As = $strcpy($s(12), "111111111111"); /*18258*/
				$puti(_As, 0, $1.cwb); /*18258*/
				$1.cwb = $geti(_As, 0, $1.bpcw); /*18258*/
				$k[$j++] = $1.cwb; /*18259*/
				$1.allones(); /*18259*/
				if ($k[--$j]) { /*18259*/
					$puti($1.cwb, $1.cwb.length - 1, "0"); /*18259*/
				} /*18259*/
			} /*18259*/
			$1.cw = 0; /*18262*/
			for (var _B2 = 0, _B1 = $1.bpcw - 1; _B2 <= _B1; _B2 += 1) { /*18266*/
				$1.i = _B2; /*18264*/
				$1.cw = $1.cw + ((~~(Math.pow(2, ($1.bpcw - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*18265*/
			} /*18265*/
			$put($1.cws, $1.c, $1.cw); /*18267*/
			$1.m = $1.m + $1.bpcw; /*18268*/
			$1.c = $1.c + 1; /*18269*/
		} /*18269*/
		$1.cws = $geti($1.cws, 0, $1.c); /*18271*/
		$1.rscodes = function() {
			$1.rspm = $k[--$j]; /*18276*/
			$1.rsgf = $k[--$j]; /*18277*/
			$1.rsnc = $k[--$j]; /*18278*/
			$1.rscws = $k[--$j]; /*18279*/
			$k[$j++] = Infinity; /*18282*/
			$k[$j++] = 1; /*18282*/
			for (var _BN = 0, _BO = $1.rsgf - 1; _BN < _BO; _BN++) { /*18282*/
				var _BP = $k[--$j]; /*18282*/
				var _BQ = _BP * 2; /*18282*/
				$k[$j++] = _BP; /*18282*/
				$k[$j++] = _BQ; /*18282*/
				if (_BQ >= $1.rsgf) { /*18282*/
					var _BT = $k[--$j]; /*18282*/
					$k[$j++] = $xo(_BT, $1.rspm); /*18282*/
				} /*18282*/
			} /*18282*/
			$1.rsalog = $a(); /*18282*/
			$1.rslog = $a($1.rsgf); /*18283*/
			for (var _BZ = 1, _BY = $1.rsgf - 1; _BZ <= _BY; _BZ += 1) { /*18284*/
				$put($1.rslog, $get($1.rsalog, _BZ), _BZ); /*18284*/
			} /*18284*/
			$1.rsprod = function() {
				var _Bd = $k[--$j]; /*18288*/
				var _Be = $k[--$j]; /*18288*/
				$k[$j++] = _Be; /*18292*/
				$k[$j++] = _Bd; /*18292*/
				if ((_Bd != 0) && (_Be != 0)) { /*18291*/
					var _Bh = $get($1.rslog, $k[--$j]); /*18289*/
					var _Bn = $get($1.rsalog, (_Bh + $get($1.rslog, $k[--$j])) % ($1.rsgf - 1)); /*18289*/
					$k[$j++] = _Bn; /*18289*/
				} else { /*18291*/
					$j -= 2; /*18291*/
					$k[$j++] = 0; /*18291*/
				} /*18291*/
			}; /*18293*/
			$k[$j++] = Infinity; /*18296*/
			$k[$j++] = 1; /*18296*/
			for (var _Bp = 0, _Bq = $1.rsnc; _Bp < _Bq; _Bp++) { /*18296*/
				$k[$j++] = 0; /*18296*/
			} /*18296*/
			$1.coeffs = $a(); /*18296*/
			for (var _Bu = 1, _Bt = $1.rsnc; _Bu <= _Bt; _Bu += 1) { /*18305*/
				$1.i = _Bu; /*18298*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*18299*/
				for (var _C1 = $1.i - 1; _C1 >= 1; _C1 -= 1) { /*18303*/
					$1.j = _C1; /*18301*/
					$k[$j++] = $1.coeffs; /*18302*/
					$k[$j++] = $1.j; /*18302*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*18302*/
					$k[$j++] = $get($1.coeffs, $1.j); /*18302*/
					$k[$j++] = $get($1.rsalog, $1.i); /*18302*/
					$1.rsprod(); /*18302*/
					var _CD = $k[--$j]; /*18302*/
					var _CE = $k[--$j]; /*18302*/
					var _CF = $k[--$j]; /*18302*/
					$put($k[--$j], _CF, $xo(_CE, _CD)); /*18302*/
				} /*18302*/
				$k[$j++] = $1.coeffs; /*18304*/
				$k[$j++] = 0; /*18304*/
				$k[$j++] = $get($1.coeffs, 0); /*18304*/
				$k[$j++] = $get($1.rsalog, $1.i); /*18304*/
				$1.rsprod(); /*18304*/
				var _CN = $k[--$j]; /*18304*/
				var _CO = $k[--$j]; /*18304*/
				$put($k[--$j], _CO, _CN); /*18304*/
			} /*18304*/
			$1.nd = $1.rscws.length; /*18308*/
			$k[$j++] = Infinity; /*18309*/
			$forall($1.rscws); /*18309*/
			for (var _CT = 0, _CU = $1.rsnc; _CT < _CU; _CT++) { /*18309*/
				$k[$j++] = 0; /*18309*/
			} /*18309*/
			$k[$j++] = 0; /*18309*/
			$1.rscws = $a(); /*18309*/
			for (var _CY = 0, _CX = $1.nd - 1; _CY <= _CX; _CY += 1) { /*18316*/
				$1.k = $xo($get($1.rscws, _CY), $get($1.rscws, $1.nd)); /*18311*/
				for (var _Cg = 0, _Cf = $1.rsnc - 1; _Cg <= _Cf; _Cg += 1) { /*18315*/
					$1.j = _Cg; /*18313*/
					$k[$j++] = $1.rscws; /*18314*/
					$k[$j++] = $1.nd + $1.j; /*18314*/
					$k[$j++] = $get($1.rscws, ($1.nd + $1.j) + 1); /*18314*/
					$k[$j++] = $1.k; /*18314*/
					$k[$j++] = $get($1.coeffs, ($1.rsnc - $1.j) - 1); /*18314*/
					$1.rsprod(); /*18314*/
					var _Ct = $k[--$j]; /*18314*/
					var _Cu = $k[--$j]; /*18314*/
					var _Cv = $k[--$j]; /*18314*/
					$put($k[--$j], _Cv, $xo(_Cu, _Ct)); /*18314*/
				} /*18314*/
			} /*18314*/
			$k[$j++] = $geti($1.rscws, 0, $1.rscws.length - 1); /*18319*/
		}; /*18321*/
		if ($eq($1.format, "full")) { /*18334*/
			$1.mode = (($1.layers - 1) << 11) + ($1.cws.length - 1); /*18325*/
			if ($1.readerinit) { /*18326*/
				$1.mode = $1.mode | 1024; /*18326*/
			} /*18326*/
			$1.mode = $a([($1.mode & 61440) >>> 12, ($1.mode & 3840) >>> 8, ($1.mode & 240) >>> 4, $1.mode & 15]); /*18332*/
			$k[$j++] = "mode"; /*18333*/
			$k[$j++] = $1.mode; /*18333*/
			$k[$j++] = 6; /*18333*/
			$k[$j++] = 16; /*18333*/
			$k[$j++] = 19; /*18333*/
			$1.rscodes(); /*18333*/
			var _DB = $k[--$j]; /*18333*/
			$1[$k[--$j]] = _DB; /*18333*/
		} /*18333*/
		if ($eq($1.format, "compact")) { /*18343*/
			$1.mode = (($1.layers - 1) << 6) + ($1.cws.length - 1); /*18336*/
			if ($1.readerinit) { /*18337*/
				$1.mode = $1.mode | 32; /*18337*/
			} /*18337*/
			$1.mode = $a([($1.mode & 240) >>> 4, $1.mode & 15]); /*18341*/
			$k[$j++] = "mode"; /*18342*/
			$k[$j++] = $1.mode; /*18342*/
			$k[$j++] = 5; /*18342*/
			$k[$j++] = 16; /*18342*/
			$k[$j++] = 19; /*18342*/
			$1.rscodes(); /*18342*/
			var _DM = $k[--$j]; /*18342*/
			$1[$k[--$j]] = _DM; /*18342*/
		} /*18342*/
		if ($eq($1.format, "rune")) { /*18352*/
			$1.mode = ~~$z($1.barcode); /*18345*/
			$1.mode = $a([($1.mode & 240) >>> 4, $1.mode & 15]); /*18349*/
			$k[$j++] = "mode"; /*18350*/
			$k[$j++] = $1.mode; /*18350*/
			$k[$j++] = 5; /*18350*/
			$k[$j++] = 16; /*18350*/
			$k[$j++] = 19; /*18350*/
			$1.rscodes(); /*18350*/
			var _DU = $k[--$j]; /*18350*/
			$1[$k[--$j]] = _DU; /*18350*/
			$k[$j++] = Infinity; /*18351*/
			var _DW = $1.mode; /*18351*/
			for (var _DX = 0, _DY = _DW.length; _DX < _DY; _DX++) { /*18351*/
				$k[$j++] = $get(_DW, _DX) ^ 10; /*18351*/
			} /*18351*/
			$1.mode = $a(); /*18351*/
		} /*18351*/
		$1.modebits = $s($1.mode.length * 4); /*18353*/
		for (var _Df = 0, _De = $1.modebits.length - 1; _Df <= _De; _Df += 1) { /*18354*/
			$puti($1.modebits, _Df, "0"); /*18354*/
		} /*18354*/
		for (var _Dj = 0, _Di = $1.mode.length - 1; _Dj <= _Di; _Dj += 1) { /*18358*/
			$1.i = _Dj; /*18356*/
			var _Dp = $cvrs($s(4), $get($1.mode, $1.i), 2); /*18357*/
			$puti($1.modebits, (4 - _Dp.length) + (4 * $1.i), _Dp); /*18357*/
		} /*18357*/
		$1.rsparams = $a([$a([]), $a([]), $a([]), $a([]), $a([]), $a([]), $a([64, 67]), $a([]), $a([256, 301]), $a([]), $a([1024, 1033]), $a([]), $a([4096, 4201])]); /*18370*/
		$k[$j++] = "cws"; /*18371*/
		$k[$j++] = $1.cws; /*18371*/
		$k[$j++] = $1.ncws - $1.cws.length; /*18371*/
		$forall($get($1.rsparams, $1.bpcw)); /*18371*/
		$1.rscodes(); /*18371*/
		var _EB = $k[--$j]; /*18371*/
		$1[$k[--$j]] = _EB; /*18371*/
		if ($eq($1.format, "full")) { /*18375*/
			$1.databits = $s((($1.layers * $1.layers) * 16) + ($1.layers * 112)); /*18373*/
		} else { /*18375*/
			$1.databits = $s((($1.layers * $1.layers) * 16) + ($1.layers * 88)); /*18375*/
		} /*18375*/
		for (var _EO = 0, _EN = $1.databits.length - 1; _EO <= _EN; _EO += 1) { /*18377*/
			$puti($1.databits, _EO, "0"); /*18377*/
		} /*18377*/
		for (var _ES = 0, _ER = $1.ncws - 1; _ES <= _ER; _ES += 1) { /*18383*/
			$1.i = _ES; /*18379*/
			var _EZ = $cvrs($s($1.bpcw), $get($1.cws, $1.i), 2); /*18380*/
			$puti($1.databits, (($1.bpcw - _EZ.length) + ($1.bpcw * $1.i)) + ($1.databits.length - ($1.ncws * $1.bpcw)), _EZ); /*18382*/
		} /*18382*/
		$1.cmv = function() {
			var _Eh = $k[--$j]; /*18386*/
			var _Ei = $k[--$j]; /*18386*/
			$k[$j++] = (_Ei - (_Eh * $1.size)) + $1.mid; /*18386*/
		}; /*18386*/
		$1.lmv = function() {
			$1.lbit = $k[--$j]; /*18390*/
			$1.llyr = $k[--$j]; /*18391*/
			$1.lwid = $1.fw + ($1.llyr * 4); /*18392*/
			$1.ldir = ~~((~~($1.lbit / 2)) / $1.lwid); /*18393*/
			if ($1.ldir == 0) { /*18398*/
				$k[$j++] = ((-(~~(($1.lwid - 1) / 2))) + 1) + ((~~($1.lbit / 2)) % $1.lwid); /*18397*/
				$k[$j++] = ((~~(($1.fw - 1) / 2)) + ($1.llyr * 2)) + ($1.lbit % 2); /*18397*/
				$1.cmv(); /*18397*/
			} /*18397*/
			if ($1.ldir == 1) { /*18403*/
				$k[$j++] = ((~~($1.fw / 2)) + ($1.llyr * 2)) + ($1.lbit % 2); /*18402*/
				$k[$j++] = ((~~(($1.lwid - 1) / 2)) - 1) - ((~~($1.lbit / 2)) % $1.lwid); /*18402*/
				$1.cmv(); /*18402*/
			} /*18402*/
			if ($1.ldir == 2) { /*18408*/
				$k[$j++] = -(((-(~~($1.lwid / 2))) + 1) + ((~~($1.lbit / 2)) % $1.lwid)); /*18407*/
				$k[$j++] = -(((~~($1.fw / 2)) + ($1.llyr * 2)) + ($1.lbit % 2)); /*18407*/
				$1.cmv(); /*18407*/
			} /*18407*/
			if ($1.ldir == 3) { /*18413*/
				$k[$j++] = -(((~~(($1.fw - 1) / 2)) + ($1.llyr * 2)) + ($1.lbit % 2)); /*18412*/
				$k[$j++] = -(((~~($1.lwid / 2)) - 1) - ((~~($1.lbit / 2)) % $1.lwid)); /*18412*/
				$1.cmv(); /*18412*/
			} /*18412*/
		}; /*18414*/
		if ($eq($1.format, "full")) { /*18418*/
			$1.fw = 12; /*18418*/
		} else { /*18418*/
			$1.fw = 9; /*18418*/
		} /*18418*/
		$1.size = ($1.fw + ($1.layers * 4)) + 2; /*18419*/
		$k[$j++] = Infinity; /*18420*/
		for (var _FN = 0, _FO = $1.size * $1.size; _FN < _FO; _FN++) { /*18420*/
			$k[$j++] = -1; /*18420*/
		} /*18420*/
		$1.pixs = $a(); /*18420*/
		$1.mid = ((~~(($1.size - 1) / 2)) * $1.size) + (~~(($1.size - 1) / 2)); /*18421*/
		$1.i = 0; /*18424*/
		for (var _FV = 1, _FU = $1.layers; _FV <= _FU; _FV += 1) { /*18432*/
			$1.layer = _FV; /*18426*/
			for (var _FZ = 0, _FY = (($1.fw + ($1.layer * 4)) * 8) - 1; _FZ <= _FY; _FZ += 1) { /*18431*/
				$1.pos = _FZ; /*18428*/
				$k[$j++] = $1.pixs; /*18429*/
				$k[$j++] = $1.layer; /*18429*/
				$k[$j++] = $1.pos; /*18429*/
				$1.lmv(); /*18429*/
				var _Fh = $k[--$j]; /*18429*/
				$put($k[--$j], _Fh, $get($1.databits, ($1.databits.length - $1.i) - 1) - 48); /*18429*/
				$1.i = $1.i + 1; /*18430*/
			} /*18430*/
		} /*18430*/
		if ($eq($1.format, "full")) { /*18459*/
			$1.fw = 13; /*18436*/
			$1.size = (($1.fw + ($1.layers * 4)) + 2) + ((~~((($1.layers + 10.5) / 7.5) - 1)) * 2); /*18437*/
			$1.mid = ~~(($1.size * $1.size) / 2); /*18438*/
			$k[$j++] = Infinity; /*18439*/
			for (var _Fs = 0, _Ft = $1.size * $1.size; _Fs < _Ft; _Fs++) { /*18439*/
				$k[$j++] = -2; /*18439*/
			} /*18439*/
			$1.npixs = $a(); /*18439*/
			for (var _Fx = 0, _Fw = ~~($1.size / 2); _Fx <= _Fw; _Fx += 16) { /*18449*/
				$1.i = _Fx; /*18441*/
				for (var _G0 = 0, _Fz = $1.size - 1; _G0 <= _Fz; _G0 += 1) { /*18448*/
					$1.j = _G0; /*18443*/
					$k[$j++] = $1.npixs; /*18444*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18444*/
					$k[$j++] = $1.i; /*18444*/
					$1.cmv(); /*18444*/
					var _G9 = $k[--$j]; /*18444*/
					$puti($k[--$j], _G9, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18444*/
					$k[$j++] = $1.npixs; /*18445*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18445*/
					$k[$j++] = -$1.i; /*18445*/
					$1.cmv(); /*18445*/
					var _GJ = $k[--$j]; /*18445*/
					$puti($k[--$j], _GJ, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18445*/
					$k[$j++] = $1.npixs; /*18446*/
					$k[$j++] = $1.i; /*18446*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18446*/
					$1.cmv(); /*18446*/
					var _GT = $k[--$j]; /*18446*/
					$puti($k[--$j], _GT, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18446*/
					$k[$j++] = $1.npixs; /*18447*/
					$k[$j++] = -$1.i; /*18447*/
					$k[$j++] = (-(~~($1.size / 2))) + $1.j; /*18447*/
					$1.cmv(); /*18447*/
					var _Gd = $k[--$j]; /*18447*/
					$puti($k[--$j], _Gd, $a([((((~~($1.size / 2)) + $1.j) + $1.i) + 1) % 2])); /*18447*/
				} /*18447*/
			} /*18447*/
			$1.j = 0; /*18450*/
			for (var _Gh = 0, _Gg = $1.npixs.length - 1; _Gh <= _Gg; _Gh += 1) { /*18457*/
				$1.i = _Gh; /*18452*/
				if ($get($1.npixs, $1.i) == -2) { /*18456*/
					$put($1.npixs, $1.i, $get($1.pixs, $1.j)); /*18454*/
					$1.j = $1.j + 1; /*18455*/
				} /*18455*/
			} /*18455*/
			$1.pixs = $1.npixs; /*18458*/
		} /*18458*/
		$1.fw = ~~($1.fw / 2); /*18462*/
		for (var _Gw = -$1.fw, _Gv = $1.fw; _Gw <= _Gv; _Gw += 1) { /*18471*/
			$1.i = _Gw; /*18464*/
			for (var _H0 = -$1.fw, _Gz = $1.fw; _H0 <= _Gz; _H0 += 1) { /*18470*/
				$1.j = _H0; /*18466*/
				$k[$j++] = $1.pixs; /*18467*/
				$k[$j++] = $1.i; /*18467*/
				$k[$j++] = $1.j; /*18467*/
				$1.cmv(); /*18467*/
				if (Math.abs($1.i) > Math.abs($1.j)) { /*18468*/
					$k[$j++] = Math.abs($1.i); /*18468*/
				} else { /*18468*/
					$k[$j++] = Math.abs($1.j); /*18468*/
				} /*18468*/
				var _H8 = $k[--$j]; /*18468*/
				var _H9 = $k[--$j]; /*18469*/
				$put($k[--$j], _H9, (_H8 + 1) % 2); /*18469*/
			} /*18469*/
		} /*18469*/
		var _Hl = $a([$a([-($1.fw + 1), $1.fw, 1]), $a([-($1.fw + 1), $1.fw + 1, 1]), $a([-$1.fw, $1.fw + 1, 1]), $a([$1.fw + 1, $1.fw + 1, 1]), $a([$1.fw + 1, $1.fw, 1]), $a([$1.fw + 1, -$1.fw, 1]), $a([$1.fw, $1.fw + 1, 0]), $a([$1.fw + 1, -($1.fw + 1), 0]), $a([$1.fw, -($1.fw + 1), 0]), $a([-$1.fw, -($1.fw + 1), 0]), $a([-($1.fw + 1), -($1.fw + 1), 0]), $a([-($1.fw + 1), -$1.fw, 0])]); /*18479*/
		for (var _Hm = 0, _Hn = _Hl.length; _Hm < _Hn; _Hm++) { /*18480*/
			$k[$j++] = $1.pixs; /*18480*/
			$forall($get(_Hl, _Hm)); /*18480*/
			var _Hq = $k[--$j]; /*18480*/
			var _Hr = $k[--$j]; /*18480*/
			var _Hs = $k[--$j]; /*18480*/
			$k[$j++] = _Hq; /*18480*/
			$k[$j++] = _Hs; /*18480*/
			$k[$j++] = _Hr; /*18480*/
			$1.cmv(); /*18480*/
			var _Ht = $k[--$j]; /*18480*/
			var _Hu = $k[--$j]; /*18480*/
			$put($k[--$j], _Ht, _Hu); /*18480*/
		} /*18480*/
		if ($eq($1.format, "full")) { /*18496*/
			$1.modemap = $a([$a([-5, 7]), $a([-4, 7]), $a([-3, 7]), $a([-2, 7]), $a([-1, 7]), $a([1, 7]), $a([2, 7]), $a([3, 7]), $a([4, 7]), $a([5, 7]), $a([7, 5]), $a([7, 4]), $a([7, 3]), $a([7, 2]), $a([7, 1]), $a([7, -1]), $a([7, -2]), $a([7, -3]), $a([7, -4]), $a([7, -5]), $a([5, -7]), $a([4, -7]), $a([3, -7]), $a([2, -7]), $a([1, -7]), $a([-1, -7]), $a([-2, -7]), $a([-3, -7]), $a([-4, -7]), $a([-5, -7]), $a([-7, -5]), $a([-7, -4]), $a([-7, -3]), $a([-7, -2]), $a([-7, -1]), $a([-7, 1]), $a([-7, 2]), $a([-7, 3]), $a([-7, 4]), $a([-7, 5])]); /*18489*/
		} else { /*18496*/
			$1.modemap = $a([$a([-3, 5]), $a([-2, 5]), $a([-1, 5]), $a([0, 5]), $a([1, 5]), $a([2, 5]), $a([3, 5]), $a([5, 3]), $a([5, 2]), $a([5, 1]), $a([5, 0]), $a([5, -1]), $a([5, -2]), $a([5, -3]), $a([3, -5]), $a([2, -5]), $a([1, -5]), $a([0, -5]), $a([-1, -5]), $a([-2, -5]), $a([-3, -5]), $a([-5, -3]), $a([-5, -2]), $a([-5, -1]), $a([-5, 0]), $a([-5, 1]), $a([-5, 2]), $a([-5, 3])]); /*18496*/
		} /*18496*/
		for (var _J7 = 0, _J6 = $1.modemap.length - 1; _J7 <= _J6; _J7 += 1) { /*18501*/
			$1.i = _J7; /*18499*/
			$k[$j++] = $1.pixs; /*18500*/
			$forall($get($1.modemap, $1.i)); /*18500*/
			$1.cmv(); /*18500*/
			var _JF = $k[--$j]; /*18500*/
			$put($k[--$j], _JF, $get($1.modebits, $1.i) - 48); /*18500*/
		} /*18500*/
		var _JN = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*18510*/
		$k[$j++] = _JN; /*18513*/
		if (!$1.dontdraw) { /*18513*/
			$0.renmatrix(); /*18513*/
		} /*18513*/
	};
	$0.azteccodecompact = function() {
		var $1 = {}; /*18541*/
		$1.options = $k[--$j]; /*18543*/
		$1.barcode = $k[--$j]; /*18544*/
		$1.dontdraw = false; /*18546*/
		$forall($1.options, function() { /*18557*/
			var _3 = $k[--$j]; /*18557*/
			$1[$k[--$j]] = _3; /*18557*/
		}); /*18557*/
		$1.options.dontdraw = true; /*18560*/
		$1.options.format = "compact"; /*18561*/
		$k[$j++] = "args"; /*18563*/
		$k[$j++] = $1.barcode; /*18563*/
		$k[$j++] = $1.options; /*18563*/
		$0.azteccode(); /*18563*/
		var _9 = $k[--$j]; /*18563*/
		$1[$k[--$j]] = _9; /*18563*/
		$1.args.opt = $1.options; /*18565*/
		$k[$j++] = $1.args; /*18568*/
		if (!$1.dontdraw) { /*18568*/
			$0.renmatrix(); /*18568*/
		} /*18568*/
	};
	$0.aztecrune = function() {
		var $1 = {}; /*18596*/
		$1.options = $k[--$j]; /*18598*/
		$1.barcode = $k[--$j]; /*18599*/
		$1.dontdraw = false; /*18601*/
		$forall($1.options, function() { /*18612*/
			var _3 = $k[--$j]; /*18612*/
			$1[$k[--$j]] = _3; /*18612*/
		}); /*18612*/
		$1.options.dontdraw = true; /*18615*/
		$1.options.format = "rune"; /*18616*/
		$k[$j++] = "args"; /*18618*/
		$k[$j++] = $1.barcode; /*18618*/
		$k[$j++] = $1.options; /*18618*/
		$0.azteccode(); /*18618*/
		var _9 = $k[--$j]; /*18618*/
		$1[$k[--$j]] = _9; /*18618*/
		$1.args.opt = $1.options; /*18620*/
		$k[$j++] = $1.args; /*18623*/
		if (!$1.dontdraw) { /*18623*/
			$0.renmatrix(); /*18623*/
		} /*18623*/
	};
	$0.codeone = function() {
		var $1 = {}; /*18650*/
		$1.options = $k[--$j]; /*18652*/
		$1.barcode = $k[--$j]; /*18653*/
		$1.dontdraw = false; /*18655*/
		$1.version = "unset"; /*18656*/
		$1.parse = false; /*18657*/
		$1.parsefnc = false; /*18658*/
		$forall($1.options, function() { /*18669*/
			var _3 = $k[--$j]; /*18669*/
			$1[$k[--$j]] = _3; /*18669*/
		}); /*18669*/
		$1.barlen = $1.barcode.length; /*18692*/
		$1.stype = $eq($geti($1.version, 0, 1), "S"); /*18694*/
		if ($1.stype) { /*19284*/
			$1.vals = $a(["1", "1010", "1100100", "1111101000", "10011100010000", "11000011010100000", "11110100001001000000", "100110001001011010000000", "101111101011110000100000000", "111011100110101100101000000000", "1001010100000010111110010000000000", "1011101001000011101101110100000000000", "1110100011010100101001010001000000000000", "10010001100001001110011100101010000000000000", "10110101111001100010000011110100100000000000000", "11100011010111111010100100110001101000000000000000", "100011100001101111001001101111110000010000000000000000", "101100011010001010111100001011101100010100000000000000000"]); /*18716*/
			$1.normalize = function() {
				$1.base = $k[--$j]; /*18719*/
				$1.num = $k[--$j]; /*18720*/
				for (var _D = $1.num.length - 1; _D >= 1; _D -= 1) { /*18725*/
					$1.i = _D; /*18722*/
					var _E = $1.num; /*18723*/
					var _F = $1.i; /*18723*/
					$put(_E, _F - 1, $get(_E, _F - 1) + (~~($get($1.num, $1.i) / $1.base))); /*18723*/
					$put($1.num, $1.i, $get($1.num, $1.i) % $1.base); /*18724*/
				} /*18724*/
				for (;;) { /*18731*/
					if ($lt($get($1.num, 0), $1.base)) { /*18727*/
						break; /*18727*/
					} /*18727*/
					$k[$j++] = Infinity; /*18728*/
					$k[$j++] = 0; /*18728*/
					$forall($1.num); /*18728*/
					$1.num = $a(); /*18728*/
					$put($1.num, 0, $get($1.num, 0) + (~~($get($1.num, 1) / $1.base))); /*18729*/
					$put($1.num, 1, $get($1.num, 1) % $1.base); /*18730*/
				} /*18730*/
				$k[$j++] = Infinity; /*18733*/
				$1.i = true; /*18733*/
				var _g = $1.num; /*18733*/
				for (var _h = 0, _i = _g.length; _h < _i; _h++) { /*18733*/
					var _j = $get(_g, _h); /*18733*/
					$k[$j++] = _j; /*18733*/
					if ((_j == 0) && $1.i) { /*18733*/
						$j--; /*18733*/
					} else { /*18733*/
						$1.i = false; /*18733*/
					} /*18733*/
				} /*18733*/
				$1.num = $a(); /*18733*/
				if ($1.num.length == 0) { /*18734*/
					$1.num = $a([0]); /*18734*/
				} /*18734*/
				$k[$j++] = $1.num; /*18735*/
			}; /*18736*/
			$1.bigadd = function() {
				var _p = $k[--$j]; /*18739*/
				var _q = $k[--$j]; /*18739*/
				$1.offset = Math.abs(_p.length - _q.length); /*18740*/
				if (_p.length < _q.length) { /*18741*/
					var _ = _p; /*18741*/
					_p = _q; /*18741*/
					_q = _; /*18741*/
				} /*18741*/
				$1.a = _p; /*18742*/
				$1.b = _q; /*18742*/
				for (var _t = 0, _s = $1.b.length - 1; _t <= _s; _t += 1) { /*18745*/
					var _u = $1.a; /*18744*/
					var _v = $1.offset; /*18744*/
					$put(_u, _t + _v, $get(_u, _t + _v) + $get($1.b, _t)); /*18744*/
				} /*18744*/
				$k[$j++] = $1.a; /*18746*/
			}; /*18747*/
			$1.v = $a([1]); /*18750*/
			for (var _13 = 0, _12 = $1.barlen - 1; _13 <= _12; _13 += 1) { /*18755*/
				$1.i = _13; /*18752*/
				$k[$j++] = Infinity; /*18753*/
				$forall($get($1.vals, $1.i), function() { /*18753*/
					var _17 = $k[--$j]; /*18753*/
					$k[$j++] = (_17 - 48) * ($get($1.barcode, ($1.barlen - $1.i) - 1) - 48); /*18753*/
				}); /*18753*/
				var _1C = $a(); /*18753*/
				$k[$j++] = _1C; /*18754*/
				$k[$j++] = $1.v; /*18754*/
				$1.bigadd(); /*18754*/
				$1.v = $k[--$j]; /*18754*/
			} /*18754*/
			$k[$j++] = "v"; /*18756*/
			$k[$j++] = $1.v; /*18756*/
			$k[$j++] = 2; /*18756*/
			$1.normalize(); /*18756*/
			var _1G = $k[--$j]; /*18756*/
			$1[$k[--$j]] = _1G; /*18756*/
			$k[$j++] = Infinity; /*18759*/
			for (var _1J = 0, _1K = (5 - ($1.v.length % 5)) % 5; _1J < _1K; _1J++) { /*18759*/
				$k[$j++] = 0; /*18759*/
			} /*18759*/
			$aload($1.v); /*18759*/
			$1.v = $a(); /*18759*/
			$1.cws = $a(~~($1.v.length / 5)); /*18760*/
			for (var _1R = 0, _1Q = $1.cws.length - 1; _1R <= _1Q; _1R += 1) { /*18766*/
				$1.i = _1R; /*18762*/
				$k[$j++] = 0; /*18764*/
				$forall($geti($1.v, $1.i * 5, 5), function() { /*18764*/
					var _1V = $k[--$j]; /*18764*/
					var _1W = $k[--$j]; /*18764*/
					$k[$j++] = (_1W + _1V) * 2; /*18764*/
				}); /*18764*/
				$put($1.cws, $1.i, ~~($k[--$j] / 2)); /*18765*/
			} /*18765*/
			$1.metrics = $a([$a(["S-10", 8, 11, 10, 4, 4, 1, 99, 99, 99]), $a(["S-20", 8, 21, 20, 8, 8, 1, 99, 99, 99]), $a(["S-30", 8, 31, 30, 12, 12, 1, 99, 99, 99])]); /*18774*/
		} else { /*19284*/
			$1.fnc1 = -1; /*18779*/
			$1.fnc3 = -2; /*18779*/
			var _1g = {
				FNC1: $1.fnc1,
				FNC3: $1.fnc3
			}; /*18782*/
			$1.fncvals = _1g; /*18783*/
			$1.msg = $a($1.barlen); /*18784*/
			$1.i = 0; /*18785*/
			$1.j = 0; /*18785*/
			for (;;) { /*18799*/
				if ($1.i == $1.barlen) { /*18786*/
					break; /*18786*/
				} /*18786*/
				$1.char = $get($1.barcode, $1.i); /*18787*/
				if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*18795*/
					if ($get($1.barcode, $1.i + 1) != 94) { /*18793*/
						$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*18790*/
						$1.i = $1.i + 4; /*18791*/
					} else { /*18793*/
						$1.i = $1.i + 1; /*18793*/
					} /*18793*/
				} /*18793*/
				$put($1.msg, $1.j, $1.char); /*18796*/
				$1.i = $1.i + 1; /*18797*/
				$1.j = $1.j + 1; /*18798*/
			} /*18798*/
			$1.msg = $geti($1.msg, 0, $1.j); /*18800*/
			$1.msglen = $1.msg.length; /*18801*/
			$1.metrics = $a([$a(["A", 16, 18, 16, 10, 10, 1, 4, 99, 6]), $a(["B", 22, 22, 20, 19, 16, 1, 4, 99, 8]), $a(["C", 28, 32, 28, 44, 26, 1, 4, 22, 11]), $a(["D", 40, 42, 36, 91, 44, 1, 4, 16, 16]), $a(["E", 52, 54, 48, 182, 70, 1, 4, 22, 22]), $a(["F", 70, 76, 68, 370, 140, 2, 4, 22, 31]), $a(["G", 104, 98, 88, 732, 280, 4, 6, 21, 47]), $a(["H", 148, 134, 120, 1480, 560, 8, 6, 20, 69]), $a(["T-16", 16, 17, 16, 10, 10, 1, 99, 99, 99]), $a(["T-32", 16, 33, 32, 24, 16, 1, 99, 99, 99]), $a(["T-48", 16, 49, 48, 38, 22, 1, 99, 99, 99])]); /*18817*/
			$1.fullcws = $a([]); /*18820*/
			var _2O = $1.metrics; /*18821*/
			for (var _2P = 0, _2Q = _2O.length; _2P < _2Q; _2P++) { /*18832*/
				$1.m = $get(_2O, _2P); /*18822*/
				$1.vers = $get($1.m, 0); /*18823*/
				$1.dcws = $get($1.m, 4); /*18824*/
				$1.okay = true; /*18825*/
				if ($eq($1.version, "unset")) { /*18829*/
					if ($1.vers.length != 1) { /*18827*/
						$1.okay = false; /*18827*/
					} /*18827*/
				} else { /*18829*/
					if ($ne($1.version, $1.vers)) { /*18829*/
						$1.okay = false; /*18829*/
					} /*18829*/
				} /*18829*/
				if ($1.okay) { /*18831*/
					$k[$j++] = Infinity; /*18831*/
					$aload($1.fullcws); /*18831*/
					$k[$j++] = $1.dcws; /*18831*/
					$1.fullcws = $a(); /*18831*/
				} /*18831*/
			} /*18831*/
			$k[$j++] = Infinity; /*18833*/
			for (var _2e = 0, _2f = 1480; _2e < _2f; _2e++) { /*18833*/
				$k[$j++] = 10000; /*18833*/
			} /*18833*/
			$1.numremcws = $a(); /*18833*/
			var _2h = $1.fullcws; /*18834*/
			for (var _2i = 0, _2j = _2h.length; _2i < _2j; _2i++) { /*18834*/
				$put($1.numremcws, $get(_2h, _2i) - 1, 1); /*18834*/
			} /*18834*/
			for (var _2m = 1478; _2m >= 0; _2m -= 1) { /*18840*/
				$1.i = _2m; /*18836*/
				if ($get($1.numremcws, $1.i) != 1) { /*18839*/
					$put($1.numremcws, $1.i, $get($1.numremcws, $1.i + 1) + 1); /*18838*/
				} /*18838*/
			} /*18838*/
			$1.lC = -5; /*18843*/
			$1.lB = -6; /*18843*/
			$1.lX = -7; /*18843*/
			$1.lT = -8; /*18843*/
			$1.lD = -9; /*18843*/
			$1.unl = -10; /*18843*/
			$1.fnc2 = -11; /*18844*/
			$1.fnc4 = -12; /*18844*/
			$1.sft1 = -13; /*18844*/
			$1.sft2 = -14; /*18844*/
			$1.sft3 = -15; /*18844*/
			$1.eci = -16; /*18844*/
			$1.pad = -17; /*18844*/
			$1.fnc1lD = -18; /*18844*/
			$1.unlcw = 255; /*18845*/
			$k[$j++] = "Avals"; /*18856*/
			$k[$j++] = Infinity; /*18856*/
			for (var _2v = 0; _2v <= 128; _2v += 1) { /*18848*/
				$k[$j++] = _2v; /*18848*/
				$k[$j++] = _2v + 1; /*18848*/
			} /*18848*/
			$k[$j++] = $1.pad; /*18853*/
			$k[$j++] = 129; /*18853*/
			for (var _2x = 0; _2x <= 99; _2x += 1) { /*18853*/
				var _2z = $cvrs($s(2), _2x, 10); /*18851*/
				var _31 = $strcpy($s(2), "00"); /*18851*/
				$puti(_31, 2 - _2z.length, _2z); /*18851*/
				$k[$j++] = _31; /*18852*/
				$k[$j++] = _2x + 130; /*18852*/
			} /*18852*/
			var _39 = $a([$1.lC, $1.lB, $1.fnc1, $1.fnc2, $1.fnc3, $1.fnc4, $1.fnc1lD]); /*18854*/
			$k[$j++] = 229; /*18854*/
			for (var _3A = 0, _3B = _39.length; _3A < _3B; _3A++) { /*18854*/
				var _3E = $k[--$j] + 1; /*18854*/
				$k[$j++] = $get(_39, _3A); /*18854*/
				$k[$j++] = _3E; /*18854*/
				$k[$j++] = _3E; /*18854*/
			} /*18854*/
			$j--; /*18854*/
			$k[$j++] = $1.lX; /*18856*/
			$k[$j++] = 238; /*18856*/
			$k[$j++] = $1.lT; /*18856*/
			$k[$j++] = 239; /*18856*/
			var _3H = $d(); /*18856*/
			$1[$k[--$j]] = _3H; /*18858*/
			$k[$j++] = "Avals"; /*18860*/
			$k[$j++] = Infinity; /*18860*/
			$forall($1.Avals, function() { /*18860*/
				$k[$j++] = Infinity; /*18860*/
				var _3K = $k[--$j]; /*18860*/
				var _3L = $k[--$j]; /*18860*/
				$k[$j++] = _3K; /*18860*/
				$k[$j++] = _3L; /*18860*/
				var _3M = $a(); /*18860*/
				$k[$j++] = _3M; /*18860*/
			}); /*18860*/
			var _3N = $d(); /*18860*/
			$1[$k[--$j]] = _3N; /*18861*/
			$k[$j++] = "CNvals"; /*18869*/
			$k[$j++] = Infinity; /*18869*/
			$k[$j++] = $1.sft1; /*18868*/
			$k[$j++] = 0; /*18868*/
			$k[$j++] = $1.sft2; /*18868*/
			$k[$j++] = 1; /*18868*/
			$k[$j++] = $1.sft3; /*18868*/
			$k[$j++] = 2; /*18868*/
			$k[$j++] = 32; /*18868*/
			$k[$j++] = 3; /*18868*/
			for (var _3S = 48; _3S <= 57; _3S += 1) { /*18868*/
				$k[$j++] = _3S; /*18868*/
				$k[$j++] = _3S - 44; /*18868*/
			} /*18868*/
			for (var _3T = 65; _3T <= 90; _3T += 1) { /*18869*/
				$k[$j++] = _3T; /*18869*/
				$k[$j++] = _3T - 51; /*18869*/
			} /*18869*/
			var _3U = $d(); /*18869*/
			$1[$k[--$j]] = _3U; /*18870*/
			$k[$j++] = "C1vals"; /*18871*/
			$k[$j++] = Infinity; /*18871*/
			for (var _3W = 0; _3W <= 31; _3W += 1) { /*18871*/
				$k[$j++] = _3W; /*18871*/
				$k[$j++] = _3W; /*18871*/
			} /*18871*/
			var _3X = $d(); /*18871*/
			$1[$k[--$j]] = _3X; /*18871*/
			$k[$j++] = "C2vals"; /*18880*/
			$k[$j++] = Infinity; /*18880*/
			for (var _3Z = 33; _3Z <= 47; _3Z += 1) { /*18873*/
				$k[$j++] = _3Z; /*18873*/
				$k[$j++] = _3Z - 33; /*18873*/
			} /*18873*/
			for (var _3a = 58; _3a <= 64; _3a += 1) { /*18874*/
				$k[$j++] = _3a; /*18874*/
				$k[$j++] = _3a - 43; /*18874*/
			} /*18874*/
			for (var _3b = 91; _3b <= 95; _3b += 1) { /*18875*/
				$k[$j++] = _3b; /*18875*/
				$k[$j++] = _3b - 69; /*18875*/
			} /*18875*/
			$k[$j++] = $1.fnc1; /*18880*/
			$k[$j++] = 27; /*18880*/
			$k[$j++] = $1.fnc2; /*18880*/
			$k[$j++] = 28; /*18880*/
			$k[$j++] = $1.fnc3; /*18880*/
			$k[$j++] = 29; /*18880*/
			$k[$j++] = $1.fnc4; /*18880*/
			$k[$j++] = 30; /*18880*/
			$k[$j++] = $1.pad; /*18880*/
			$k[$j++] = 31; /*18880*/
			var _3h = $d(); /*18880*/
			$1[$k[--$j]] = _3h; /*18881*/
			$k[$j++] = "C3vals"; /*18882*/
			$k[$j++] = Infinity; /*18882*/
			for (var _3j = 96; _3j <= 127; _3j += 1) { /*18882*/
				$k[$j++] = _3j; /*18882*/
				$k[$j++] = _3j - 96; /*18882*/
			} /*18882*/
			var _3k = $d(); /*18882*/
			$1[$k[--$j]] = _3k; /*18882*/
			$k[$j++] = "Cvals"; /*18887*/
			$k[$j++] = Infinity; /*18887*/
			$forall($1.CNvals, function() { /*18884*/
				$k[$j++] = Infinity; /*18884*/
				var _3n = $k[--$j]; /*18884*/
				var _3o = $k[--$j]; /*18884*/
				$k[$j++] = _3n; /*18884*/
				$k[$j++] = _3o; /*18884*/
				var _3p = $a(); /*18884*/
				$k[$j++] = _3p; /*18884*/
			}); /*18884*/
			$forall($1.C1vals, function() { /*18885*/
				$k[$j++] = Infinity; /*18885*/
				var _3r = $k[--$j]; /*18885*/
				var _3s = $k[--$j]; /*18885*/
				$k[$j++] = _3r; /*18885*/
				$k[$j++] = $get($1.CNvals, $1.sft1); /*18885*/
				$k[$j++] = _3s; /*18885*/
				var _3w = $a(); /*18885*/
				$k[$j++] = _3w; /*18885*/
			}); /*18885*/
			$forall($1.C2vals, function() { /*18886*/
				$k[$j++] = Infinity; /*18886*/
				var _3y = $k[--$j]; /*18886*/
				var _3z = $k[--$j]; /*18886*/
				$k[$j++] = _3y; /*18886*/
				$k[$j++] = $get($1.CNvals, $1.sft2); /*18886*/
				$k[$j++] = _3z; /*18886*/
				var _43 = $a(); /*18886*/
				$k[$j++] = _43; /*18886*/
			}); /*18886*/
			$forall($1.C3vals, function() { /*18887*/
				$k[$j++] = Infinity; /*18887*/
				var _45 = $k[--$j]; /*18887*/
				var _46 = $k[--$j]; /*18887*/
				$k[$j++] = _45; /*18887*/
				$k[$j++] = $get($1.CNvals, $1.sft3); /*18887*/
				$k[$j++] = _46; /*18887*/
				var _4A = $a(); /*18887*/
				$k[$j++] = _4A; /*18887*/
			}); /*18887*/
			var _4B = $d(); /*18887*/
			$1[$k[--$j]] = _4B; /*18888*/
			$k[$j++] = "TNvals"; /*18896*/
			$k[$j++] = Infinity; /*18896*/
			$k[$j++] = $1.sft1; /*18895*/
			$k[$j++] = 0; /*18895*/
			$k[$j++] = $1.sft2; /*18895*/
			$k[$j++] = 1; /*18895*/
			$k[$j++] = $1.sft3; /*18895*/
			$k[$j++] = 2; /*18895*/
			$k[$j++] = 32; /*18895*/
			$k[$j++] = 3; /*18895*/
			for (var _4G = 48; _4G <= 57; _4G += 1) { /*18895*/
				$k[$j++] = _4G; /*18895*/
				$k[$j++] = _4G - 44; /*18895*/
			} /*18895*/
			for (var _4H = 97; _4H <= 122; _4H += 1) { /*18896*/
				$k[$j++] = _4H; /*18896*/
				$k[$j++] = _4H - 83; /*18896*/
			} /*18896*/
			var _4I = $d(); /*18896*/
			$1[$k[--$j]] = _4I; /*18897*/
			$k[$j++] = "T1vals"; /*18898*/
			$k[$j++] = Infinity; /*18898*/
			for (var _4K = 0; _4K <= 31; _4K += 1) { /*18898*/
				$k[$j++] = _4K; /*18898*/
				$k[$j++] = _4K; /*18898*/
			} /*18898*/
			var _4L = $d(); /*18898*/
			$1[$k[--$j]] = _4L; /*18898*/
			$k[$j++] = "T2vals"; /*18907*/
			$k[$j++] = Infinity; /*18907*/
			for (var _4N = 33; _4N <= 47; _4N += 1) { /*18900*/
				$k[$j++] = _4N; /*18900*/
				$k[$j++] = _4N - 33; /*18900*/
			} /*18900*/
			for (var _4O = 58; _4O <= 64; _4O += 1) { /*18901*/
				$k[$j++] = _4O; /*18901*/
				$k[$j++] = _4O - 43; /*18901*/
			} /*18901*/
			for (var _4P = 91; _4P <= 95; _4P += 1) { /*18902*/
				$k[$j++] = _4P; /*18902*/
				$k[$j++] = _4P - 69; /*18902*/
			} /*18902*/
			$k[$j++] = $1.fnc1; /*18907*/
			$k[$j++] = 27; /*18907*/
			$k[$j++] = $1.fnc2; /*18907*/
			$k[$j++] = 28; /*18907*/
			$k[$j++] = $1.fnc3; /*18907*/
			$k[$j++] = 29; /*18907*/
			$k[$j++] = $1.fnc4; /*18907*/
			$k[$j++] = 30; /*18907*/
			$k[$j++] = $1.pad; /*18907*/
			$k[$j++] = 31; /*18907*/
			var _4V = $d(); /*18907*/
			$1[$k[--$j]] = _4V; /*18908*/
			$k[$j++] = "T3vals"; /*18912*/
			$k[$j++] = Infinity; /*18912*/
			$k[$j++] = 96; /*18911*/
			$k[$j++] = 0; /*18911*/
			for (var _4X = 65; _4X <= 90; _4X += 1) { /*18911*/
				$k[$j++] = _4X; /*18911*/
				$k[$j++] = _4X - 64; /*18911*/
			} /*18911*/
			for (var _4Y = 123; _4Y <= 127; _4Y += 1) { /*18912*/
				$k[$j++] = _4Y; /*18912*/
				$k[$j++] = _4Y - 96; /*18912*/
			} /*18912*/
			var _4Z = $d(); /*18912*/
			$1[$k[--$j]] = _4Z; /*18913*/
			$k[$j++] = "Tvals"; /*18918*/
			$k[$j++] = Infinity; /*18918*/
			$forall($1.TNvals, function() { /*18915*/
				$k[$j++] = Infinity; /*18915*/
				var _4c = $k[--$j]; /*18915*/
				var _4d = $k[--$j]; /*18915*/
				$k[$j++] = _4c; /*18915*/
				$k[$j++] = _4d; /*18915*/
				var _4e = $a(); /*18915*/
				$k[$j++] = _4e; /*18915*/
			}); /*18915*/
			$forall($1.T1vals, function() { /*18916*/
				$k[$j++] = Infinity; /*18916*/
				var _4g = $k[--$j]; /*18916*/
				var _4h = $k[--$j]; /*18916*/
				$k[$j++] = _4g; /*18916*/
				$k[$j++] = $get($1.TNvals, $1.sft1); /*18916*/
				$k[$j++] = _4h; /*18916*/
				var _4l = $a(); /*18916*/
				$k[$j++] = _4l; /*18916*/
			}); /*18916*/
			$forall($1.T2vals, function() { /*18917*/
				$k[$j++] = Infinity; /*18917*/
				var _4n = $k[--$j]; /*18917*/
				var _4o = $k[--$j]; /*18917*/
				$k[$j++] = _4n; /*18917*/
				$k[$j++] = $get($1.TNvals, $1.sft2); /*18917*/
				$k[$j++] = _4o; /*18917*/
				var _4s = $a(); /*18917*/
				$k[$j++] = _4s; /*18917*/
			}); /*18917*/
			$forall($1.T3vals, function() { /*18918*/
				$k[$j++] = Infinity; /*18918*/
				var _4u = $k[--$j]; /*18918*/
				var _4v = $k[--$j]; /*18918*/
				$k[$j++] = _4u; /*18918*/
				$k[$j++] = $get($1.TNvals, $1.sft3); /*18918*/
				$k[$j++] = _4v; /*18918*/
				var _4z = $a(); /*18918*/
				$k[$j++] = _4z; /*18918*/
			}); /*18918*/
			var _50 = $d(); /*18918*/
			$1[$k[--$j]] = _50; /*18919*/
			for (var _52 = 128; _52 <= 255; _52 += 1) { /*18927*/
				$1.i = _52; /*18923*/
				$k[$j++] = $1.Avals; /*18924*/
				$k[$j++] = $1.i; /*18924*/
				$k[$j++] = Infinity; /*18924*/
				$aload($get($1.Avals, $1.fnc4)); /*18924*/
				$aload($get($1.Avals, $1.i - 128)); /*18924*/
				var _5B = $a(); /*18924*/
				var _5C = $k[--$j]; /*18924*/
				$put($k[--$j], _5C, _5B); /*18924*/
				$k[$j++] = $1.Cvals; /*18925*/
				$k[$j++] = $1.i; /*18925*/
				$k[$j++] = Infinity; /*18925*/
				$aload($get($1.Cvals, $1.fnc4)); /*18925*/
				$aload($get($1.Cvals, $1.i - 128)); /*18925*/
				var _5M = $a(); /*18925*/
				var _5N = $k[--$j]; /*18925*/
				$put($k[--$j], _5N, _5M); /*18925*/
				$k[$j++] = $1.Tvals; /*18926*/
				$k[$j++] = $1.i; /*18926*/
				$k[$j++] = Infinity; /*18926*/
				$aload($get($1.Tvals, $1.fnc4)); /*18926*/
				$aload($get($1.Tvals, $1.i - 128)); /*18926*/
				var _5X = $a(); /*18926*/
				var _5Y = $k[--$j]; /*18926*/
				$put($k[--$j], _5Y, _5X); /*18926*/
			} /*18926*/
			$k[$j++] = "Xvals"; /*18935*/
			$k[$j++] = Infinity; /*18935*/
			$k[$j++] = 13; /*18934*/
			$k[$j++] = 0; /*18934*/
			$k[$j++] = 42; /*18934*/
			$k[$j++] = 1; /*18934*/
			$k[$j++] = 62; /*18934*/
			$k[$j++] = 2; /*18934*/
			$k[$j++] = 32; /*18934*/
			$k[$j++] = 3; /*18934*/
			for (var _5a = 48; _5a <= 57; _5a += 1) { /*18934*/
				$k[$j++] = _5a; /*18934*/
				$k[$j++] = _5a - 44; /*18934*/
			} /*18934*/
			for (var _5b = 65; _5b <= 90; _5b += 1) { /*18935*/
				$k[$j++] = _5b; /*18935*/
				$k[$j++] = _5b - 51; /*18935*/
			} /*18935*/
			var _5c = $d(); /*18935*/
			$1[$k[--$j]] = _5c; /*18936*/
			$k[$j++] = "Xvals"; /*18938*/
			$k[$j++] = Infinity; /*18938*/
			$forall($1.Xvals, function() { /*18938*/
				$k[$j++] = Infinity; /*18938*/
				var _5f = $k[--$j]; /*18938*/
				var _5g = $k[--$j]; /*18938*/
				$k[$j++] = _5f; /*18938*/
				$k[$j++] = _5g; /*18938*/
				var _5h = $a(); /*18938*/
				$k[$j++] = _5h; /*18938*/
			}); /*18938*/
			var _5i = $d(); /*18938*/
			$1[$k[--$j]] = _5i; /*18939*/
			$k[$j++] = "Bvals"; /*18942*/
			$k[$j++] = Infinity; /*18942*/
			for (var _5k = 0; _5k <= 255; _5k += 1) { /*18942*/
				$k[$j++] = _5k; /*18942*/
				$k[$j++] = _5k; /*18942*/
			} /*18942*/
			var _5l = $d(); /*18942*/
			$1[$k[--$j]] = _5l; /*18943*/
			$k[$j++] = "Bvals"; /*18945*/
			$k[$j++] = Infinity; /*18945*/
			$forall($1.Bvals, function() { /*18945*/
				$k[$j++] = Infinity; /*18945*/
				var _5o = $k[--$j]; /*18945*/
				var _5p = $k[--$j]; /*18945*/
				$k[$j++] = _5o; /*18945*/
				$k[$j++] = _5p; /*18945*/
				var _5q = $a(); /*18945*/
				$k[$j++] = _5q; /*18945*/
			}); /*18945*/
			var _5r = $d(); /*18945*/
			$1[$k[--$j]] = _5r; /*18946*/
			$1.encvals = $a([$1.Avals, $1.Cvals, $1.Tvals, $1.Xvals, -1, $1.Bvals]); /*18948*/
			$k[$j++] = Infinity; /*18950*/
			for (var _60 = 0, _61 = $1.msglen; _60 < _61; _60++) { /*18950*/
				$k[$j++] = 0; /*18950*/
			} /*18950*/
			$k[$j++] = 0; /*18950*/
			$1.numD = $a(); /*18950*/
			$k[$j++] = Infinity; /*18951*/
			for (var _64 = 0, _65 = $1.msglen; _64 < _65; _64++) { /*18951*/
				$k[$j++] = 0; /*18951*/
			} /*18951*/
			$k[$j++] = 9999; /*18951*/
			$1.nextXterm = $a(); /*18951*/
			$k[$j++] = Infinity; /*18952*/
			for (var _68 = 0, _69 = $1.msglen; _68 < _69; _68++) { /*18952*/
				$k[$j++] = 0; /*18952*/
			} /*18952*/
			$k[$j++] = 9999; /*18952*/
			$1.nextNonX = $a(); /*18952*/
			for (var _6C = $1.msglen - 1; _6C >= 0; _6C -= 1) { /*18969*/
				$1.i = _6C; /*18954*/
				$1.barchar = $get($1.msg, $1.i); /*18955*/
				if (($1.barchar >= 48) && ($1.barchar <= 57)) { /*18958*/
					$put($1.numD, $1.i, $get($1.numD, $1.i + 1) + 1); /*18957*/
				} /*18957*/
				if ((($1.barchar == 13) || ($1.barchar == 42)) || ($1.barchar == 62)) { /*18962*/
					$put($1.nextXterm, $1.i, 0); /*18960*/
				} else { /*18962*/
					$put($1.nextXterm, $1.i, $get($1.nextXterm, $1.i + 1) + 1); /*18962*/
				} /*18962*/
				var _6Z = $get($1.Xvals, $1.barchar) !== undefined; /*18964*/
				if (!_6Z) { /*18967*/
					$put($1.nextNonX, $1.i, 0); /*18965*/
				} else { /*18967*/
					$put($1.nextNonX, $1.i, $get($1.nextNonX, $1.i + 1) + 1); /*18967*/
				} /*18967*/
			} /*18967*/
			$k[$j++] = Infinity; /*18970*/
			var _6h = $1.nextXterm; /*18970*/
			for (var _6i = 0, _6j = _6h.length; _6i < _6j; _6i++) { /*18970*/
				var _6k = $get(_6h, _6i); /*18970*/
				$k[$j++] = _6k; /*18970*/
				if (_6k > 10000) { /*18970*/
					$j--; /*18970*/
					$k[$j++] = 10000; /*18970*/
				} /*18970*/
			} /*18970*/
			$1.nextXterm = $a(); /*18970*/
			$k[$j++] = Infinity; /*18971*/
			var _6m = $1.nextNonX; /*18971*/
			for (var _6n = 0, _6o = _6m.length; _6n < _6o; _6n++) { /*18971*/
				var _6p = $get(_6m, _6n); /*18971*/
				$k[$j++] = _6p; /*18971*/
				if (_6p > 10000) { /*18971*/
					$j--; /*18971*/
					$k[$j++] = 10000; /*18971*/
				} /*18971*/
			} /*18971*/
			$1.nextNonX = $a(); /*18971*/
			$1.isD = function() {
				$k[$j++] = ($1.char >= 48) && ($1.char <= 57); /*18973*/
			}; /*18973*/
			$1.isC = function() {
				var _6v = $get($1.CNvals, $1.char) !== undefined; /*18974*/
				$k[$j++] = _6v; /*18974*/
			}; /*18974*/
			$1.isT = function() {
				var _6y = $get($1.TNvals, $1.char) !== undefined; /*18975*/
				$k[$j++] = _6y; /*18975*/
			}; /*18975*/
			$1.isX = function() {
				var _71 = $get($1.Xvals, $1.char) !== undefined; /*18976*/
				$k[$j++] = _71; /*18976*/
			}; /*18976*/
			$1.isEA = function() {
				$k[$j++] = $1.char > 127; /*18977*/
			}; /*18977*/
			$1.isFN = function() {
				$k[$j++] = $1.char < 0; /*18978*/
			}; /*18978*/
			$1.XtermFirst = function() {
				var _74 = $k[--$j]; /*18979*/
				$k[$j++] = $lt($get($1.nextXterm, _74), $get($1.nextNonX, _74)); /*18979*/
			}; /*18979*/
			$1.A = 0; /*18981*/
			$1.C = 1; /*18981*/
			$1.T = 2; /*18981*/
			$1.X = 3; /*18981*/
			$1.D = 4; /*18981*/
			$1.B = 5; /*18981*/
			$1.lookup = function() {
				$1.ac = 1; /*18984*/
				$1.cc = 2; /*18984*/
				$1.tc = 2; /*18984*/
				$1.xc = 2; /*18984*/
				$1.bc = 3; /*18984*/
				if ($1.mode == $1.A) { /*18985*/
					$1.ac = 0; /*18985*/
					$1.cc = 1; /*18985*/
					$1.tc = 1; /*18985*/
					$1.xc = 1; /*18985*/
					$1.bc = 2; /*18985*/
				} /*18985*/
				if ($1.mode == $1.C) { /*18986*/
					$1.cc = 0; /*18986*/
				} /*18986*/
				if ($1.mode == $1.T) { /*18987*/
					$1.tc = 0; /*18987*/
				} /*18987*/
				if ($1.mode == $1.X) { /*18988*/
					$1.xc = 0; /*18988*/
				} /*18988*/
				if ($1.mode == $1.B) { /*18989*/
					$1.bc = 0; /*18989*/
				} /*18989*/
				for (var _7J = 0, _7K = 1; _7J < _7K; _7J++) { /*19017*/
					$1.k = 0; /*18991*/
					for (;;) { /*19016*/
						if (($1.i + $1.k) == $1.msglen) { /*18998*/
							var _7S = $a([$1.ac, $1.cc, $1.tc, $1.xc]); /*18993*/
							$k[$j++] = true; /*18993*/
							for (var _7T = 0, _7U = _7S.length; _7T < _7U; _7T++) { /*18993*/
								var _7X = $k[--$j]; /*18993*/
								$k[$j++] = _7X && ($1.bc <= Math.ceil($get(_7S, _7T))); /*18993*/
							} /*18993*/
							if ($k[--$j]) { /*18993*/
								$k[$j++] = $1.B; /*18993*/
								break; /*18993*/
							} /*18993*/
							var _7e = $a([$1.cc, $1.tc, $1.xc, $1.bc]); /*18994*/
							$k[$j++] = true; /*18994*/
							for (var _7f = 0, _7g = _7e.length; _7f < _7g; _7f++) { /*18994*/
								var _7j = $k[--$j]; /*18994*/
								$k[$j++] = _7j && ($1.ac <= Math.ceil($get(_7e, _7f))); /*18994*/
							} /*18994*/
							if ($k[--$j]) { /*18994*/
								$k[$j++] = $1.A; /*18994*/
								break; /*18994*/
							} /*18994*/
							var _7o = $a([$1.tc, $1.xc]); /*18995*/
							$k[$j++] = true; /*18995*/
							for (var _7p = 0, _7q = _7o.length; _7p < _7q; _7p++) { /*18995*/
								var _7t = $k[--$j]; /*18995*/
								$k[$j++] = _7t && (Math.ceil($1.cc) <= Math.ceil($get(_7o, _7p))); /*18995*/
							} /*18995*/
							if ($k[--$j]) { /*18995*/
								$k[$j++] = $1.C; /*18995*/
								break; /*18995*/
							} /*18995*/
							var _7x = $a([$1.xc]); /*18996*/
							$k[$j++] = true; /*18996*/
							for (var _7y = 0, _7z = _7x.length; _7y < _7z; _7y++) { /*18996*/
								var _82 = $k[--$j]; /*18996*/
								$k[$j++] = _82 && (Math.ceil($1.tc) <= Math.ceil($get(_7x, _7y))); /*18996*/
							} /*18996*/
							if ($k[--$j]) { /*18996*/
								$k[$j++] = $1.T; /*18996*/
								break; /*18996*/
							} /*18996*/
							$k[$j++] = $1.X; /*18997*/
							break; /*18997*/
						} /*18997*/
						$1.char = $get($1.msg, $1.i + $1.k); /*18999*/
						$k[$j++] = "ac"; /*19000*/
						$k[$j++] = $1.ac; /*19000*/
						$1.isD(); /*19000*/
						if ($k[--$j]) { /*19000*/
							var _8C = $k[--$j]; /*19000*/
							$k[$j++] = _8C + (1 / 2); /*19000*/
						} else { /*19000*/
							$1.isEA(); /*19000*/
							if ($k[--$j]) { /*19000*/
								var _8E = $k[--$j]; /*19000*/
								$k[$j++] = Math.ceil(_8E) + 2; /*19000*/
							} else { /*19000*/
								var _8F = $k[--$j]; /*19000*/
								$k[$j++] = Math.ceil(_8F) + 1; /*19000*/
							} /*19000*/
						} /*19000*/
						var _8G = $k[--$j]; /*19000*/
						$1[$k[--$j]] = _8G; /*19000*/
						$k[$j++] = "cc"; /*19001*/
						$k[$j++] = $1.cc; /*19001*/
						$1.isC(); /*19001*/
						if ($k[--$j]) { /*19001*/
							var _8K = $k[--$j]; /*19001*/
							$k[$j++] = _8K + (2 / 3); /*19001*/
						} else { /*19001*/
							$1.isEA(); /*19001*/
							if ($k[--$j]) { /*19001*/
								var _8M = $k[--$j]; /*19001*/
								$k[$j++] = _8M + (8 / 3); /*19001*/
							} else { /*19001*/
								var _8N = $k[--$j]; /*19001*/
								$k[$j++] = _8N + (4 / 3); /*19001*/
							} /*19001*/
						} /*19001*/
						var _8O = $k[--$j]; /*19001*/
						$1[$k[--$j]] = _8O; /*19001*/
						$k[$j++] = "tc"; /*19002*/
						$k[$j++] = $1.tc; /*19002*/
						$1.isT(); /*19002*/
						if ($k[--$j]) { /*19002*/
							var _8S = $k[--$j]; /*19002*/
							$k[$j++] = _8S + (2 / 3); /*19002*/
						} else { /*19002*/
							$1.isEA(); /*19002*/
							if ($k[--$j]) { /*19002*/
								var _8U = $k[--$j]; /*19002*/
								$k[$j++] = _8U + (8 / 3); /*19002*/
							} else { /*19002*/
								var _8V = $k[--$j]; /*19002*/
								$k[$j++] = _8V + (4 / 3); /*19002*/
							} /*19002*/
						} /*19002*/
						var _8W = $k[--$j]; /*19002*/
						$1[$k[--$j]] = _8W; /*19002*/
						$k[$j++] = "xc"; /*19003*/
						$k[$j++] = $1.xc; /*19003*/
						$1.isX(); /*19003*/
						if ($k[--$j]) { /*19003*/
							var _8a = $k[--$j]; /*19003*/
							$k[$j++] = _8a + (2 / 3); /*19003*/
						} else { /*19003*/
							$1.isEA(); /*19003*/
							if ($k[--$j]) { /*19003*/
								var _8c = $k[--$j]; /*19003*/
								$k[$j++] = _8c + (13 / 3); /*19003*/
							} else { /*19003*/
								var _8d = $k[--$j]; /*19003*/
								$k[$j++] = _8d + (10 / 3); /*19003*/
							} /*19003*/
						} /*19003*/
						var _8e = $k[--$j]; /*19003*/
						$1[$k[--$j]] = _8e; /*19003*/
						$k[$j++] = "bc"; /*19004*/
						$k[$j++] = $1.bc; /*19004*/
						$1.isFN(); /*19004*/
						if ($k[--$j]) { /*19004*/
							var _8i = $k[--$j]; /*19004*/
							$k[$j++] = _8i + 3; /*19004*/
						} else { /*19004*/
							var _8j = $k[--$j]; /*19004*/
							$k[$j++] = _8j + 1; /*19004*/
						} /*19004*/
						var _8k = $k[--$j]; /*19004*/
						$1[$k[--$j]] = _8k; /*19004*/
						if ($1.k >= 3) { /*19014*/
							var _8r = $a([$1.ac, $1.cc, $1.tc, $1.xc]); /*19006*/
							$k[$j++] = true; /*19006*/
							for (var _8s = 0, _8t = _8r.length; _8s < _8t; _8s++) { /*19006*/
								var _8w = $k[--$j]; /*19006*/
								$k[$j++] = _8w && (($1.bc + 1) <= Math.ceil($get(_8r, _8s))); /*19006*/
							} /*19006*/
							if ($k[--$j]) { /*19006*/
								$k[$j++] = $1.B; /*19006*/
								break; /*19006*/
							} /*19006*/
							var _93 = $a([$1.cc, $1.tc, $1.xc, $1.bc]); /*19007*/
							$k[$j++] = true; /*19007*/
							for (var _94 = 0, _95 = _93.length; _94 < _95; _94++) { /*19007*/
								var _98 = $k[--$j]; /*19007*/
								$k[$j++] = _98 && (($1.ac + 1) <= Math.ceil($get(_93, _94))); /*19007*/
							} /*19007*/
							if ($k[--$j]) { /*19007*/
								$k[$j++] = $1.A; /*19007*/
								break; /*19007*/
							} /*19007*/
							var _9F = $a([$1.ac, $1.cc, $1.xc, $1.bc]); /*19008*/
							$k[$j++] = true; /*19008*/
							for (var _9G = 0, _9H = _9F.length; _9G < _9H; _9G++) { /*19008*/
								var _9K = $k[--$j]; /*19008*/
								$k[$j++] = _9K && (($1.tc + 1) <= Math.ceil($get(_9F, _9G))); /*19008*/
							} /*19008*/
							if ($k[--$j]) { /*19008*/
								$k[$j++] = $1.T; /*19008*/
								break; /*19008*/
							} /*19008*/
							var _9P = $a([$1.ac, $1.tc]); /*19009*/
							$k[$j++] = true; /*19009*/
							for (var _9Q = 0, _9R = _9P.length; _9Q < _9R; _9Q++) { /*19009*/
								var _9U = $k[--$j]; /*19009*/
								$k[$j++] = _9U && (($1.cc + 1) <= Math.ceil($get(_9P, _9Q))); /*19009*/
							} /*19009*/
							if ($k[--$j]) { /*19012*/
								if (Math.ceil($1.cc) < Math.ceil($1.xc)) { /*19010*/
									$k[$j++] = $1.C; /*19010*/
									break; /*19010*/
								} /*19010*/
								if ($1.cc == $1.xc) { /*19011*/
									$k[$j++] = ($1.i + $1.k) + 1; /*19011*/
									$1.XtermFirst(); /*19011*/
									if ($k[--$j]) { /*19011*/
										$k[$j++] = $1.X; /*19011*/
										break; /*19011*/
									} else { /*19011*/
										$k[$j++] = $1.C; /*19011*/
										break; /*19011*/
									} /*19011*/
								} /*19011*/
							} /*19011*/
							var _9k = $a([$1.ac, $1.cc, $1.tc, $1.bc]); /*19013*/
							$k[$j++] = true; /*19013*/
							for (var _9l = 0, _9m = _9k.length; _9l < _9m; _9l++) { /*19013*/
								var _9p = $k[--$j]; /*19013*/
								$k[$j++] = _9p && (($1.xc + 1) < $get(_9k, _9l)); /*19013*/
							} /*19013*/
							if ($k[--$j]) { /*19013*/
								$k[$j++] = $1.X; /*19013*/
								break; /*19013*/
							} /*19013*/
						} /*19013*/
						$1.k = $1.k + 1; /*19015*/
					} /*19015*/
				} /*19015*/
			}; /*19018*/
			$1.addtocws = function() {
				var _9t = $k[--$j]; /*19021*/
				$puti($1.cws, $1.j, _9t); /*19021*/
				$1.j = _9t.length + $1.j; /*19022*/
			}; /*19023*/
			$1.tobin = function() {
				var _9y = $s($k[--$j]); /*19026*/
				$k[$j++] = _9y; /*19026*/
				for (var _A0 = 0, _9z = _9y.length - 1; _A0 <= _9z; _A0 += 1) { /*19026*/
					var _A1 = $k[--$j]; /*19026*/
					$put(_A1, _A0, 48); /*19026*/
					$k[$j++] = _A1; /*19026*/
				} /*19026*/
				var _A2 = $k[--$j]; /*19027*/
				var _A5 = $cvrs($s(_A2.length), $k[--$j], 2); /*19027*/
				$puti(_A2, _A2.length - _A5.length, _A5); /*19027*/
				$k[$j++] = _A2; /*19028*/
				$k[$j++] = Infinity; /*19028*/
				var _A6 = $k[--$j]; /*19028*/
				var _A7 = $k[--$j]; /*19028*/
				$k[$j++] = _A6; /*19028*/
				$forall(_A7, function() { /*19028*/
					var _A8 = $k[--$j]; /*19028*/
					$k[$j++] = _A8 - 48; /*19028*/
				}); /*19028*/
				var _A9 = $a(); /*19028*/
				$k[$j++] = _A9; /*19028*/
			}; /*19029*/
			$1.encA = function() {
				for (var _AA = 0, _AB = 1; _AA < _AB; _AA++) { /*19073*/
					if ($get($1.numD, $1.i) >= 21) { /*19037*/
						$1.Dbits = $a([1, 1, 1, 1]); /*19034*/
						$1.mode = $1.D; /*19035*/
						break; /*19036*/
					} /*19036*/
					var _AJ = $get($1.numD, $1.i); /*19038*/
					if ((_AJ >= 13) && ((_AJ + $1.i) == $1.msglen)) { /*19042*/
						$1.Dbits = $a([1, 1, 1, 1]); /*19039*/
						$1.mode = $1.D; /*19040*/
						break; /*19041*/
					} /*19041*/
					if ($get($1.numD, $1.i) >= 2) { /*19047*/
						var _AR = $s(2); /*19044*/
						$put(_AR, 0, $get($1.msg, $1.i)); /*19044*/
						$put(_AR, 1, $get($1.msg, $1.i + 1)); /*19044*/
						$k[$j++] = $get($1.Avals, _AR); /*19044*/
						$1.addtocws(); /*19044*/
						$1.i = $1.i + 2; /*19045*/
						break; /*19046*/
					} /*19046*/
					if ($get($1.msg, $1.i) == $1.fnc1) { /*19063*/
						if ($get($1.numD, $1.i + 1) >= 15) { /*19055*/
							$k[$j++] = $get($1.Avals, $1.fnc1lD); /*19050*/
							$1.addtocws(); /*19050*/
							$1.i = $1.i + 1; /*19051*/
							$1.Dbits = $a([]); /*19052*/
							$1.mode = $1.D; /*19053*/
							break; /*19054*/
						} /*19054*/
						var _Aq = $get($1.numD, $1.i + 1); /*19056*/
						if ((_Aq >= 7) && (((_Aq + $1.i) + 1) == $1.msglen)) { /*19062*/
							$k[$j++] = $get($1.Avals, $1.fnc1lD); /*19057*/
							$1.addtocws(); /*19057*/
							$1.i = $1.i + 1; /*19058*/
							$1.Dbits = $a([]); /*19059*/
							$1.mode = $1.D; /*19060*/
							break; /*19061*/
						} /*19061*/
					} /*19061*/
					$k[$j++] = "newmode"; /*19064*/
					$1.lookup(); /*19064*/
					var _Az = $k[--$j]; /*19064*/
					$1[$k[--$j]] = _Az; /*19064*/
					if ($1.newmode != $1.mode) { /*19069*/
						$k[$j++] = $get($1.Avals, $get($a([-1, $1.lC, $1.lT, $1.lX, $1.lD, $1.lB]), $1.newmode)); /*19066*/
						$1.addtocws(); /*19066*/
						$1.mode = $1.newmode; /*19067*/
						break; /*19068*/
					} /*19068*/
					$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*19070*/
					$1.addtocws(); /*19070*/
					$1.i = $1.i + 1; /*19071*/
					break; /*19072*/
				} /*19072*/
			}; /*19074*/
			$1.CTXvalstocws = function() {
				$1.in = $k[--$j]; /*19077*/
				$k[$j++] = Infinity; /*19078*/
				for (var _BN = 0, _BM = $1.in.length - 1; _BN <= _BM; _BN += 3) { /*19082*/
					$k[$j++] = 0; /*19080*/
					$forall($geti($1.in, _BN, 3), function() { /*19080*/
						var _BQ = $k[--$j]; /*19080*/
						var _BR = $k[--$j]; /*19080*/
						$k[$j++] = (_BR + _BQ) * 40; /*19080*/
					}); /*19080*/
					var _BT = (~~($k[--$j] / 40)) + 1; /*19081*/
					$k[$j++] = ~~(_BT / 256); /*19081*/
					$k[$j++] = _BT % 256; /*19081*/
				} /*19081*/
				$astore($a($counttomark())); /*19083*/
				var _BW = $k[--$j]; /*19083*/
				var _BX = $k[--$j]; /*19083*/
				$k[$j++] = _BW; /*19083*/
			}; /*19084*/
			$1.encCTX = function() {
				$1.p = 0; /*19087*/
				$1.ctxvals = $a(2220); /*19088*/
				for (;;) { /*19166*/
					if ($1.i == $1.msglen) { /*19092*/
						break; /*19092*/
					} /*19092*/
					var _Bh = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)) !== undefined; /*19093*/
					if (!_Bh) { /*19093*/
						break; /*19093*/
					} /*19093*/
					if (($1.p % 3) == 0) { /*19161*/
						if ($get($1.numD, $1.i) >= 12) { /*19099*/
							$k[$j++] = $a([$1.unlcw]); /*19096*/
							$1.addtocws(); /*19096*/
							$1.mode = $1.A; /*19097*/
							break; /*19098*/
						} /*19098*/
						var _Br = $get($1.numD, $1.i); /*19100*/
						if ((_Br >= 8) && ((_Br + $1.i) == $1.msglen)) { /*19104*/
							$k[$j++] = $a([$1.unlcw]); /*19101*/
							$1.addtocws(); /*19101*/
							$1.mode = $1.A; /*19102*/
							break; /*19103*/
						} /*19103*/
						$1.lookup(); /*19105*/
						if ($k[--$j] != $1.mode) { /*19110*/
							$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*19106*/
							$1.CTXvalstocws(); /*19106*/
							$1.addtocws(); /*19106*/
							$k[$j++] = $a([$1.unlcw]); /*19107*/
							$1.addtocws(); /*19107*/
							$1.mode = $1.A; /*19108*/
							break; /*19109*/
						} /*19109*/
						if (($1.msglen - $1.i) <= 3) { /*19160*/
							$1.remcws = $get($1.numremcws, $1.j + ((~~($1.p / 3)) * 2)); /*19112*/
							$k[$j++] = Infinity; /*19121*/
							$forall($geti($1.msg, $1.i, $1.msglen - $1.i), function() { /*19120*/
								var _CG = $k[--$j]; /*19115*/
								var _CK = $get($get($1.encvals, $1.mode), _CG) !== undefined; /*19115*/
								$k[$j++] = _CG; /*19119*/
								if (_CK) { /*19118*/
									$aload($get($get($1.encvals, $1.mode), $k[--$j])); /*19116*/
								} else { /*19118*/
									$j--; /*19118*/
									$k[$j++] = -1; /*19118*/
									$k[$j++] = -1; /*19118*/
									$k[$j++] = -1; /*19118*/
									$k[$j++] = -1; /*19118*/
								} /*19118*/
							}); /*19118*/
							$1.remvals = $a(); /*19121*/
							if (($1.remcws == 2) && ($1.remvals.length == 3)) { /*19131*/
								$k[$j++] = Infinity; /*19126*/
								$aload($geti($1.ctxvals, 0, $1.p)); /*19125*/
								$aload($1.remvals); /*19126*/
								var _CX = $a(); /*19126*/
								$k[$j++] = _CX; /*19127*/
								$1.CTXvalstocws(); /*19127*/
								$1.addtocws(); /*19127*/
								$1.mode = $1.A; /*19128*/
								$1.i = $1.msglen; /*19129*/
								break; /*19130*/
							} /*19130*/
							if ((($1.remcws == 2) && ($1.remvals.length == 2)) && ($1.mode != $1.X)) { /*19142*/
								$k[$j++] = Infinity; /*19137*/
								$aload($geti($1.ctxvals, 0, $1.p)); /*19135*/
								$aload($1.remvals); /*19136*/
								$aload($get($get($1.encvals, $1.mode), $1.sft1)); /*19137*/
								var _Cn = $a(); /*19137*/
								$k[$j++] = _Cn; /*19138*/
								$1.CTXvalstocws(); /*19138*/
								$1.addtocws(); /*19138*/
								$1.mode = $1.A; /*19139*/
								$1.i = $1.msglen; /*19140*/
								break; /*19141*/
							} /*19141*/
							if (($1.remcws == 2) && ($1.remvals.length == 1)) { /*19151*/
								$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*19145*/
								$1.CTXvalstocws(); /*19145*/
								$1.addtocws(); /*19145*/
								$k[$j++] = $a([$1.unlcw]); /*19146*/
								$1.addtocws(); /*19146*/
								$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*19147*/
								$1.addtocws(); /*19147*/
								$1.mode = $1.A; /*19148*/
								$1.i = $1.msglen; /*19149*/
								break; /*19150*/
							} /*19150*/
							if (($1.remcws == 1) && ($1.remvals.length == 1)) { /*19159*/
								$k[$j++] = $geti($1.ctxvals, 0, $1.p); /*19154*/
								$1.CTXvalstocws(); /*19154*/
								$1.addtocws(); /*19154*/
								$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*19155*/
								$1.addtocws(); /*19155*/
								$1.mode = $1.A; /*19156*/
								$1.i = $1.msglen; /*19157*/
								break; /*19158*/
							} /*19158*/
						} /*19158*/
					} /*19158*/
					var _DM = $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)); /*19162*/
					$puti($1.ctxvals, $1.p, _DM); /*19163*/
					$1.p = _DM.length + $1.p; /*19164*/
					$1.i = $1.i + 1; /*19165*/
				} /*19165*/
				if ($1.mode != $1.A) { /*19190*/
					for (;;) { /*19174*/
						if (($1.p % 3) == 0) { /*19171*/
							break; /*19171*/
						} /*19171*/
						$1.i = $1.i - 1; /*19172*/
						$1.p = $1.p - $get($get($1.encvals, $1.mode), $get($1.msg, $1.i)).length; /*19173*/
					} /*19173*/
					$k[$j++] = Infinity; /*19176*/
					$aload($geti($1.ctxvals, 0, $1.p)); /*19176*/
					var _Dg = $a(); /*19176*/
					$k[$j++] = _Dg; /*19177*/
					$1.CTXvalstocws(); /*19177*/
					$1.addtocws(); /*19177*/
					$k[$j++] = $a([$1.unlcw]); /*19178*/
					$1.addtocws(); /*19178*/
					$1.mode = $1.A; /*19179*/
					if ($1.i != $1.msglen) { /*19189*/
						if ($get($1.numD, $1.i) >= 2) { /*19187*/
							var _Dp = $s(2); /*19183*/
							$put(_Dp, 0, $get($1.msg, $1.i)); /*19183*/
							$put(_Dp, 1, $get($1.msg, $1.i + 1)); /*19183*/
							$k[$j++] = $get($1.Avals, _Dp); /*19183*/
							$1.addtocws(); /*19183*/
							$1.i = $1.i + 2; /*19184*/
						} else { /*19187*/
							$k[$j++] = $get($1.Avals, $get($1.msg, $1.i)); /*19186*/
							$1.addtocws(); /*19186*/
							$1.i = $1.i + 1; /*19187*/
						} /*19187*/
					} /*19187*/
				} /*19187*/
			}; /*19192*/
			$1.encD = function() {
				for (;;) { /*19245*/
					if ($get($1.numD, $1.i) < 3) { /*19235*/
						$1.Drem = (8 - ($1.Dbits.length % 8)) % 8; /*19200*/
						$1.remcws = $get($1.numremcws, $1.j + (~~($1.Dbits.length / 8))); /*19201*/
						if ((($get($1.numremcws, ($1.j + (~~($1.Dbits.length / 8))) - 1) - 1) == 0) && ($1.i == $1.msglen)) { /*19205*/
							break; /*19205*/
						} /*19205*/
						if (((($1.i == ($1.msglen - 1)) && ($get($1.numD, $1.i) == 1)) && ($1.remcws == 1)) && ($1.Drem == 0)) { /*19209*/
							break; /*19209*/
						} /*19209*/
						if (!(((($1.i == ($1.msglen - 1)) && ($get($1.numD, $1.i) == 1)) && ($1.remcws == 1)) && (($1.Drem == 4) || ($1.Drem == 6)))) { /*19216*/
							$k[$j++] = Infinity; /*19214*/
							$aload($1.Dbits); /*19214*/
							$k[$j++] = 1; /*19214*/
							$k[$j++] = 1; /*19214*/
							$k[$j++] = 1; /*19214*/
							$k[$j++] = 1; /*19214*/
							$k[$j++] = 1; /*19214*/
							$k[$j++] = 1; /*19214*/
							$1.Dbits = $a(); /*19214*/
							$1.Drem = (8 - ($1.Dbits.length % 8)) % 8; /*19215*/
						} /*19215*/
						if (($1.Drem == 4) || ($1.Drem == 6)) { /*19227*/
							if ($get($1.numD, $1.i) >= 1) { /*19224*/
								$k[$j++] = Infinity; /*19221*/
								$aload($1.Dbits); /*19221*/
								$k[$j++] = ($get($1.msg, $1.i) - 48) + 1; /*19221*/
								$k[$j++] = 4; /*19221*/
								$1.tobin(); /*19221*/
								$aload($k[--$j]); /*19221*/
								$1.Dbits = $a(); /*19221*/
								$1.i = $1.i + 1; /*19222*/
							} else { /*19224*/
								$k[$j++] = Infinity; /*19224*/
								$aload($1.Dbits); /*19224*/
								$k[$j++] = 1; /*19224*/
								$k[$j++] = 1; /*19224*/
								$k[$j++] = 1; /*19224*/
								$k[$j++] = 1; /*19224*/
								$1.Dbits = $a(); /*19224*/
							} /*19224*/
							$1.Drem = $1.Drem - 4; /*19226*/
						} /*19226*/
						if ($1.Drem == 2) { /*19231*/
							$k[$j++] = Infinity; /*19229*/
							$aload($1.Dbits); /*19229*/
							$k[$j++] = 0; /*19229*/
							$k[$j++] = 1; /*19229*/
							$1.Dbits = $a(); /*19229*/
							$1.Drem = 0; /*19230*/
						} /*19230*/
						break; /*19233*/
					} /*19233*/
					$k[$j++] = Infinity; /*19242*/
					$aload($1.Dbits); /*19239*/
					$k[$j++] = 0; /*19240*/
					$forall($geti($1.msg, $1.i, 3), function() { /*19240*/
						var _Ex = $k[--$j]; /*19240*/
						var _Ey = $k[--$j]; /*19240*/
						$k[$j++] = (_Ey + (_Ex - 48)) * 10; /*19240*/
					}); /*19240*/
					var _Ez = $k[--$j]; /*19240*/
					$k[$j++] = (~~(_Ez / 10)) + 1; /*19241*/
					$k[$j++] = 10; /*19241*/
					$1.tobin(); /*19241*/
					$aload($k[--$j]); /*19241*/
					$1.Dbits = $a(); /*19242*/
					$1.i = $1.i + 3; /*19243*/
				} /*19243*/
				$k[$j++] = Infinity; /*19247*/
				for (var _F5 = 0, _F4 = $1.Dbits.length - 1; _F5 <= _F4; _F5 += 8) { /*19250*/
					$k[$j++] = 0; /*19249*/
					$forall($geti($1.Dbits, _F5, 8), function() { /*19249*/
						var _F8 = $k[--$j]; /*19249*/
						var _F9 = $k[--$j]; /*19249*/
						$k[$j++] = (_F9 + _F8) * 2; /*19249*/
					}); /*19249*/
					var _FA = $k[--$j]; /*19249*/
					$k[$j++] = ~~(_FA / 2); /*19249*/
				} /*19249*/
				$astore($a($counttomark())); /*19251*/
				var _FD = $k[--$j]; /*19251*/
				var _FE = $k[--$j]; /*19251*/
				$k[$j++] = _FD; /*19251*/
				$1.addtocws(); /*19251*/
				$1.mode = $1.A; /*19252*/
			}; /*19254*/
			$1.encB = function() {
				$1.p = 0; /*19257*/
				$1.bvals = $a(1480); /*19257*/
				for (;;) { /*19264*/
					if ($1.i == $1.msglen) { /*19258*/
						break; /*19258*/
					} /*19258*/
					if ($get($1.msg, $1.i) < 0) { /*19259*/
						break; /*19259*/
					} /*19259*/
					$1.lookup(); /*19260*/
					if ($k[--$j] != $1.mode) { /*19260*/
						break; /*19260*/
					} /*19260*/
					$put($1.bvals, $1.p, $get($1.msg, $1.i)); /*19261*/
					$1.p = $1.p + 1; /*19262*/
					$1.i = $1.i + 1; /*19263*/
				} /*19263*/
				$1.remcws = $get($1.numremcws, $1.j + $1.p) - 1; /*19265*/
				$k[$j++] = Infinity; /*19273*/
				if (($1.remcws == 0) && ($1.i == $1.msglen)) { /*19270*/
					$k[$j++] = 0; /*19268*/
				} else { /*19270*/
					if ($1.p < 250) { /*19270*/
						$k[$j++] = $1.p; /*19270*/
					} else { /*19270*/
						$k[$j++] = (~~($1.p / 250)) + 249; /*19270*/
						$k[$j++] = $1.p % 250; /*19270*/
					} /*19270*/
				} /*19270*/
				$aload($geti($1.bvals, 0, $1.p)); /*19272*/
				$1.bvals = $a(); /*19273*/
				$k[$j++] = $1.bvals; /*19274*/
				$1.addtocws(); /*19274*/
				$1.mode = $1.A; /*19275*/
			}; /*19276*/
			$1.cws = $a(1480); /*19279*/
			$1.mode = $1.A; /*19280*/
			$1.i = 0; /*19280*/
			$1.j = 0; /*19280*/
			for (;;) { /*19283*/
				if ($1.i >= $1.msglen) { /*19281*/
					break; /*19281*/
				} /*19281*/
				$1[$get($a(["encA", "encCTX", "encCTX", "encCTX", "encD", "encB"]), $1.mode)](); /*19282*/
			} /*19282*/
			$1.cws = $geti($1.cws, 0, $1.j); /*19284*/
		} /*19284*/
		$1.i = 0; /*19289*/
		for (;;) { /*19309*/
			$1.m = $get($1.metrics, $1.i); /*19291*/
			$1.vers = $get($1.m, 0); /*19292*/
			$1.rows = $get($1.m, 1); /*19293*/
			$1.cols = $get($1.m, 2); /*19294*/
			$1.dcol = $get($1.m, 3); /*19295*/
			$1.dcws = $get($1.m, 4); /*19296*/
			$1.rscw = $get($1.m, 5); /*19297*/
			$1.rsbl = $get($1.m, 6); /*19298*/
			$1.riso = $get($1.m, 7); /*19299*/
			$1.risi = $get($1.m, 8); /*19300*/
			$1.risl = $get($1.m, 9); /*19301*/
			$1.dcpb = ~~($1.dcws / $1.rsbl); /*19302*/
			$1.ecpb = ~~($1.rscw / $1.rsbl); /*19303*/
			$1.okay = true; /*19304*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*19305*/
				$1.okay = false; /*19305*/
			} /*19305*/
			if ($1.cws.length > $1.dcws) { /*19306*/
				$1.okay = false; /*19306*/
			} /*19306*/
			if ($1.okay) { /*19307*/
				break; /*19307*/
			} /*19307*/
			$1.i = $1.i + 1; /*19308*/
		} /*19308*/
		if (!$1.stype) { /*19315*/
			$k[$j++] = Infinity; /*19313*/
			$aload($1.cws); /*19313*/
			for (var _GZ = 0, _Ga = $1.dcws - $1.cws.length; _GZ < _Ga; _GZ++) { /*19313*/
				$k[$j++] = 129; /*19313*/
			} /*19313*/
			$1.cws = $a(); /*19313*/
		} else { /*19315*/
			$k[$j++] = Infinity; /*19315*/
			for (var _Ge = 0, _Gf = $1.dcws - $1.cws.length; _Ge < _Gf; _Ge++) { /*19315*/
				$k[$j++] = 0; /*19315*/
			} /*19315*/
			$aload($1.cws); /*19315*/
			$1.cws = $a(); /*19315*/
		} /*19315*/
		$1.cwbs = $a($1.rsbl); /*19319*/
		$1.ecbs = $a($1.rsbl); /*19320*/
		for (var _Go = 0, _Gn = $1.rsbl - 1; _Go <= _Gn; _Go += 1) { /*19329*/
			$1.i = _Go; /*19322*/
			$1.cwb = $a($1.dcpb); /*19323*/
			for (var _Gt = 0, _Gs = $1.dcpb - 1; _Gt <= _Gs; _Gt += 1) { /*19327*/
				$1.j = _Gt; /*19325*/
				$put($1.cwb, $1.j, $get($1.cws, ($1.j * $1.rsbl) + $1.i)); /*19326*/
			} /*19326*/
			$put($1.cwbs, $1.i, $1.cwb); /*19328*/
		} /*19328*/
		var _H5 = $1.stype ? 32 : 256; /*19332*/
		$1.gf = _H5; /*19332*/
		$1["gf-1"] = $1.gf - 1; /*19333*/
		var _H8 = $1.stype ? 37 : 301; /*19334*/
		$1.pm = _H8; /*19334*/
		$k[$j++] = Infinity; /*19335*/
		$k[$j++] = 1; /*19335*/
		for (var _HA = 0, _HB = $1["gf-1"]; _HA < _HB; _HA++) { /*19335*/
			var _HC = $k[--$j]; /*19335*/
			var _HD = _HC * 2; /*19335*/
			$k[$j++] = _HC; /*19335*/
			$k[$j++] = _HD; /*19335*/
			if (_HD >= $1.gf) { /*19335*/
				var _HG = $k[--$j]; /*19335*/
				$k[$j++] = _HG ^ $1.pm; /*19335*/
			} /*19335*/
		} /*19335*/
		$1.rsalog = $a(); /*19335*/
		$1.rslog = $a($1.gf); /*19336*/
		for (var _HM = 1, _HL = $1["gf-1"]; _HM <= _HL; _HM += 1) { /*19337*/
			$put($1.rslog, $get($1.rsalog, _HM), _HM); /*19337*/
		} /*19337*/
		$1.rsprod = function() {
			var _HQ = $k[--$j]; /*19339*/
			var _HR = $k[--$j]; /*19339*/
			$k[$j++] = _HR; /*19343*/
			$k[$j++] = _HQ; /*19343*/
			if ((_HQ != 0) && (_HR != 0)) { /*19342*/
				var _HU = $get($1.rslog, $k[--$j]); /*19340*/
				var _Ha = $get($1.rsalog, (_HU + $get($1.rslog, $k[--$j])) % $1["gf-1"]); /*19340*/
				$k[$j++] = _Ha; /*19340*/
			} else { /*19342*/
				$j -= 2; /*19342*/
				$k[$j++] = 0; /*19342*/
			} /*19342*/
		}; /*19344*/
		$k[$j++] = Infinity; /*19347*/
		$k[$j++] = 1; /*19347*/
		for (var _Hc = 0, _Hd = $1.ecpb; _Hc < _Hd; _Hc++) { /*19347*/
			$k[$j++] = 0; /*19347*/
		} /*19347*/
		$1.coeffs = $a(); /*19347*/
		for (var _Hh = 0, _Hg = $1.ecpb - 1; _Hh <= _Hg; _Hh += 1) { /*19356*/
			$1.i = _Hh; /*19349*/
			$put($1.coeffs, $1.i + 1, $get($1.coeffs, $1.i)); /*19350*/
			for (var _Ho = $1.i; _Ho >= 1; _Ho -= 1) { /*19354*/
				$1.j = _Ho; /*19352*/
				$k[$j++] = $1.coeffs; /*19353*/
				$k[$j++] = $1.j; /*19353*/
				$k[$j++] = $get($1.coeffs, $1.j - 1); /*19353*/
				$k[$j++] = $get($1.coeffs, $1.j); /*19353*/
				$k[$j++] = $get($1.rsalog, $1.i); /*19353*/
				$1.rsprod(); /*19353*/
				var _I0 = $k[--$j]; /*19353*/
				var _I1 = $k[--$j]; /*19353*/
				var _I2 = $k[--$j]; /*19353*/
				$put($k[--$j], _I2, $xo(_I1, _I0)); /*19353*/
			} /*19353*/
			$k[$j++] = $1.coeffs; /*19355*/
			$k[$j++] = 0; /*19355*/
			$k[$j++] = $get($1.coeffs, 0); /*19355*/
			$k[$j++] = $get($1.rsalog, $1.i); /*19355*/
			$1.rsprod(); /*19355*/
			var _IA = $k[--$j]; /*19355*/
			var _IB = $k[--$j]; /*19355*/
			$put($k[--$j], _IB, _IA); /*19355*/
		} /*19355*/
		$1.coeffs = $geti($1.coeffs, 0, $1.coeffs.length - 1); /*19357*/
		for (var _II = 0, _IH = $1.cwbs.length - 1; _II <= _IH; _II += 1) { /*19372*/
			$1.i = _II; /*19361*/
			$k[$j++] = Infinity; /*19362*/
			$aload($get($1.cwbs, $1.i)); /*19362*/
			for (var _IN = 0, _IO = $1.ecpb; _IN < _IO; _IN++) { /*19362*/
				$k[$j++] = 0; /*19362*/
			} /*19362*/
			$1.rscws = $a(); /*19362*/
			for (var _IS = 0, _IR = $1.dcpb - 1; _IS <= _IR; _IS += 1) { /*19370*/
				$1.m = _IS; /*19364*/
				$1.k = $get($1.rscws, $1.m); /*19365*/
				for (var _IY = 0, _IX = $1.ecpb - 1; _IY <= _IX; _IY += 1) { /*19369*/
					$1.j = _IY; /*19367*/
					$k[$j++] = $1.rscws; /*19368*/
					$k[$j++] = ($1.m + $1.j) + 1; /*19368*/
					$k[$j++] = $get($1.coeffs, ($1.ecpb - $1.j) - 1); /*19368*/
					$k[$j++] = $1.k; /*19368*/
					$1.rsprod(); /*19368*/
					var _Il = $k[--$j]; /*19368*/
					var _Im = $k[--$j]; /*19368*/
					$put($k[--$j], _Im, $xo(_Il, $get($1.rscws, ($1.m + $1.j) + 1))); /*19368*/
				} /*19368*/
			} /*19368*/
			$put($1.ecbs, $1.i, $geti($1.rscws, $1.dcpb, $1.ecpb)); /*19371*/
		} /*19371*/
		$k[$j++] = Infinity; /*19375*/
		$aload($1.cws); /*19375*/
		for (var _Iw = 0, _Ix = $1.rscw; _Iw < _Ix; _Iw++) { /*19375*/
			$k[$j++] = 0; /*19375*/
		} /*19375*/
		$1.cws = $a(); /*19375*/
		for (var _J1 = 0, _J0 = $1.rscw - 1; _J1 <= _J0; _J1 += 1) { /*19379*/
			$1.i = _J1; /*19377*/
			$put($1.cws, $1.dcws + $1.i, $get($get($1.ecbs, $1.i % $1.rsbl), ~~($1.i / $1.rsbl))); /*19378*/
		} /*19378*/
		var _JF = $1.stype ? 5 : 8; /*19382*/
		$1.mmat = $a(($1.dcws + $1.rscw) * _JF); /*19382*/
		$1.r = 0; /*19383*/
		$1.c = 0; /*19383*/
		var _JI = $1.stype ? 2 : 1; /*19384*/
		for (var _JL = 0, _JM = _JI, _JK = $1.cws.length - 1; _JM < 0 ? _JL >= _JK : _JL <= _JK; _JL += _JM) { /*19405*/
			$1.i = _JL; /*19385*/
			if (!$1.stype) { /*19399*/
				var _JP = $strcpy($s(8), "00000000"); /*19387*/
				var _JU = $cvrs($s(8), $get($1.cws, $1.i), 2); /*19387*/
				$puti(_JP, 8 - _JU.length, _JU); /*19388*/
				$k[$j++] = _JP; /*19388*/
				$k[$j++] = Infinity; /*19388*/
				var _JV = $k[--$j]; /*19388*/
				var _JW = $k[--$j]; /*19388*/
				$k[$j++] = _JV; /*19388*/
				$forall(_JW, function() { /*19388*/
					var _JX = $k[--$j]; /*19388*/
					$k[$j++] = _JX - 48; /*19388*/
				}); /*19388*/
				var _JY = $a(); /*19388*/
				$1.top = $geti(_JY, 0, 4); /*19389*/
				$1.bot = $geti(_JY, 4, 4); /*19390*/
			} else { /*19399*/
				var _Jc = $strcpy($s(5), "00000"); /*19392*/
				var _Jh = $cvrs($s(5), $get($1.cws, $1.i), 2); /*19392*/
				$puti(_Jc, 5 - _Jh.length, _Jh); /*19393*/
				$k[$j++] = _Jc; /*19393*/
				$k[$j++] = Infinity; /*19393*/
				var _Ji = $k[--$j]; /*19393*/
				var _Jj = $k[--$j]; /*19393*/
				$k[$j++] = _Ji; /*19393*/
				$forall(_Jj, function() { /*19393*/
					var _Jk = $k[--$j]; /*19393*/
					$k[$j++] = _Jk - 48; /*19393*/
				}); /*19393*/
				$1.c1 = $a(); /*19394*/
				var _Jn = $strcpy($s(5), "00000"); /*19395*/
				var _Js = $cvrs($s(5), $get($1.cws, $1.i + 1), 2); /*19395*/
				$puti(_Jn, 5 - _Js.length, _Js); /*19396*/
				$k[$j++] = _Jn; /*19396*/
				$k[$j++] = Infinity; /*19396*/
				var _Jt = $k[--$j]; /*19396*/
				var _Ju = $k[--$j]; /*19396*/
				$k[$j++] = _Jt; /*19396*/
				$forall(_Ju, function() { /*19396*/
					var _Jv = $k[--$j]; /*19396*/
					$k[$j++] = _Jv - 48; /*19396*/
				}); /*19396*/
				$1.c2 = $a(); /*19397*/
				$k[$j++] = Infinity; /*19398*/
				$aload($geti($1.c1, 0, 3)); /*19398*/
				$aload($geti($1.c2, 0, 2)); /*19398*/
				$1.top = $a(); /*19398*/
				$k[$j++] = Infinity; /*19399*/
				$aload($geti($1.c1, 3, 2)); /*19399*/
				$aload($geti($1.c2, 2, 3)); /*19399*/
				$1.bot = $a(); /*19399*/
			} /*19399*/
			$puti($1.mmat, ($1.r * $1.dcol) + $1.c, $1.top); /*19401*/
			$puti($1.mmat, (($1.r + 1) * $1.dcol) + $1.c, $1.bot); /*19402*/
			$1.c = $1.c + $1.top.length; /*19403*/
			if ($1.c == $1.dcol) { /*19404*/
				$1.c = 0; /*19404*/
				$1.r = $1.r + 2; /*19404*/
			} /*19404*/
		} /*19404*/
		$1.mmv = function() {
			var _KN = $k[--$j]; /*19408*/
			var _KO = $k[--$j]; /*19408*/
			$k[$j++] = _KO + (_KN * $1.cols); /*19408*/
		}; /*19408*/
		$k[$j++] = Infinity; /*19409*/
		for (var _KR = 0, _KS = $1.rows * $1.cols; _KR < _KS; _KR++) { /*19409*/
			$k[$j++] = -1; /*19409*/
		} /*19409*/
		$1.pixs = $a(); /*19409*/
		var _Ky = $a([function() {
			for (var _KV = 0, _KW = $1.cols; _KV < _KW; _KV++) { /*19413*/
				$k[$j++] = 0; /*19413*/
			} /*19413*/
		}, function() {
			for (var _KY = 0, _KZ = $1.cols; _KY < _KZ; _KY++) { /*19414*/
				$k[$j++] = 1; /*19414*/
			} /*19414*/
		}, function() {
			$k[$j++] = 0; /*19415*/
			for (var _Kb = 0, _Kc = $1.cols - 2; _Kb < _Kc; _Kb++) { /*19415*/
				$k[$j++] = 1; /*19415*/
			} /*19415*/
			$k[$j++] = 0; /*19415*/
		}, function() {
			$k[$j++] = 0; /*19416*/
			$k[$j++] = 1; /*19416*/
			for (var _Ke = 0, _Kf = $1.cols - 4; _Ke < _Kf; _Ke++) { /*19416*/
				$k[$j++] = 0; /*19416*/
			} /*19416*/
			$k[$j++] = 1; /*19416*/
			$k[$j++] = 0; /*19416*/
		}, function() {
			for (var _Kh = 0, _Ki = ~~(($1.cols - 1) / 2); _Kh < _Ki; _Kh++) { /*19417*/
				$k[$j++] = -1; /*19417*/
			} /*19417*/
			$k[$j++] = 1; /*19417*/
			for (var _Kk = 0, _Kl = ~~(($1.cols - 1) / 2); _Kk < _Kl; _Kk++) { /*19417*/
				$k[$j++] = -1; /*19417*/
			} /*19417*/
		}, function() {
			for (var _Kn = 0, _Ko = ~~(($1.cols - 1) / 2); _Kn < _Ko; _Kn++) { /*19418*/
				$k[$j++] = -1; /*19418*/
			} /*19418*/
			$k[$j++] = 0; /*19418*/
			for (var _Kq = 0, _Kr = ~~(($1.cols - 1) / 2); _Kq < _Kr; _Kq++) { /*19418*/
				$k[$j++] = -1; /*19418*/
			} /*19418*/
		}, function() {
			$k[$j++] = 1; /*19419*/
			for (var _Kt = 0, _Ku = $1.cols - 2; _Kt < _Ku; _Kt++) { /*19419*/
				$k[$j++] = 0; /*19419*/
			} /*19419*/
			$k[$j++] = 1; /*19419*/
		}, function() {
			$k[$j++] = 1; /*19420*/
			$k[$j++] = 0; /*19420*/
			for (var _Kw = 0, _Kx = $1.cols - 4; _Kw < _Kx; _Kw++) { /*19420*/
				$k[$j++] = 1; /*19420*/
			} /*19420*/
			$k[$j++] = 0; /*19420*/
			$k[$j++] = 1; /*19420*/
		}]); /*19420*/
		$1.artifact = _Ky; /*19421*/
		var _Kz = {
			A: "121343",
			B: "12134343",
			C: "12121343",
			D: "1213434343",
			E: "1212134343",
			F: "1212121343",
			G: "121213434343",
			H: "121212134343",
			S: "56661278",
			T: "5666666666127878"
		}; /*19432*/
		$1.cpat = $get(_Kz, $geti($1.vers, 0, 1)); /*19433*/
		$k[$j++] = $1.pixs; /*19434*/
		$k[$j++] = 0; /*19434*/
		$k[$j++] = ~~(($1.rows - $1.cpat.length) / 2); /*19434*/
		$1.mmv(); /*19434*/
		$k[$j++] = Infinity; /*19435*/
		$forall($1.cpat, function() { /*19435*/
			$get($1.artifact, $k[--$j] - 49)(); /*19435*/
		}); /*19435*/
		var _LA = $a(); /*19435*/
		var _LB = $k[--$j]; /*19435*/
		$puti($k[--$j], _LB, _LA); /*19435*/
		for (var _LF = 0, _LE = $1.risl - 1; _LF <= _LE; _LF += 1) { /*19450*/
			$1.i = _LF; /*19439*/
			for (var _LK = $1.riso, _LL = $1.risi, _LJ = $1.cols - 1; _LL < 0 ? _LK >= _LJ : _LK <= _LJ; _LK += _LL) { /*19449*/
				$1.j = _LK; /*19441*/
				var _LN = (($1.i % 12) == 0) ? 1 : 0; /*19442*/
				var _LO = $a([1, _LN]); /*19442*/
				$k[$j++] = _LO; /*19443*/
				$k[$j++] = _LO; /*19443*/
				$k[$j++] = $1.pixs; /*19443*/
				$k[$j++] = $1.j; /*19443*/
				$k[$j++] = $1.i; /*19443*/
				$1.mmv(); /*19443*/
				var _LS = $k[--$j]; /*19444*/
				var _LT = $k[--$j]; /*19444*/
				$puti(_LT, _LS, $k[--$j]); /*19444*/
				if ($1.i != ($1.risl - 1)) { /*19448*/
					$k[$j++] = $1.pixs; /*19446*/
					$k[$j++] = ($1.cols - $1.j) - 2; /*19446*/
					$k[$j++] = ($1.rows - $1.i) - 1; /*19446*/
					$1.mmv(); /*19446*/
					var _Lc = $k[--$j]; /*19447*/
					var _Ld = $k[--$j]; /*19447*/
					$puti(_Ld, _Lc, $k[--$j]); /*19447*/
				} else { /*19448*/
					$j--; /*19448*/
				} /*19448*/
			} /*19448*/
		} /*19448*/
		var _MI = {
			A: $a([$a([12, 5])]),
			B: $a([$a([16, 7])]),
			C: $a([$a([26, 12])]),
			D: $a([]),
			E: $a([$a([26, 23])]),
			F: $a([$a([26, 32]), $a([70, 32]), $a([26, 34]), $a([70, 34])]),
			G: $a([$a([27, 48]), $a([69, 48])]),
			H: $a([$a([26, 70]), $a([66, 70]), $a([106, 70]), $a([26, 72]), $a([66, 72]), $a([106, 72])]),
			"S-10": $a([]),
			"S-20": $a([$a([10, 4])]),
			"S-30": $a([$a([15, 4]), $a([15, 6])]),
			"T-16": $a([$a([8, 10])]),
			"T-32": $a([$a([16, 10]), $a([16, 12])]),
			"T-48": $a([$a([24, 10]), $a([24, 12]), $a([24, 14])])
		}; /*19467*/
		$forall($get(_MI, $1.vers), function() { /*19468*/
			var _MM = $k[--$j]; /*19468*/
			$k[$j++] = $1.pixs; /*19468*/
			$aload(_MM); /*19468*/
			$1.mmv(); /*19468*/
			var _MN = $k[--$j]; /*19468*/
			$put($k[--$j], _MN, 1); /*19468*/
		}); /*19468*/
		$1.j = 0; /*19471*/
		for (var _MR = 0, _MQ = $1.pixs.length - 1; _MR <= _MQ; _MR += 1) { /*19478*/
			$1.i = _MR; /*19473*/
			if ($get($1.pixs, $1.i) == -1) { /*19477*/
				$put($1.pixs, $1.i, $get($1.mmat, $1.j)); /*19475*/
				$1.j = $1.j + 1; /*19476*/
			} /*19476*/
		} /*19476*/
		var _Mh = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.cols,
			pixy: $1.rows,
			height: ($1.rows / 72) * 2,
			width: ($1.cols / 72) * 2,
			opt: $1.options
		}; /*19488*/
		$k[$j++] = _Mh; /*19491*/
		if (!$1.dontdraw) { /*19491*/
			$0.renmatrix(); /*19491*/
		} /*19491*/
	};
	$0.hanxin = function() {
		var $1 = {}; /*19518*/
		$1.options = $k[--$j]; /*19520*/
		$1.barcode = $k[--$j]; /*19521*/
		$1.dontdraw = false; /*19523*/
		$1.version = "unset"; /*19524*/
		$1.eclevel = "unset"; /*19525*/
		$1.parse = false; /*19526*/
		$1.parsefnc = false; /*19527*/
		$1.mask = -1; /*19528*/
		$forall($1.options, function() { /*19539*/
			var _3 = $k[--$j]; /*19539*/
			$1[$k[--$j]] = _3; /*19539*/
		}); /*19539*/
		$1.mask = ~~$1.mask; /*19541*/
		$1.barlen = $1.barcode.length; /*19564*/
		var _7 = {

		}; /*19569*/
		$1.fncvals = _7; /*19569*/
		$1.msg = $a($1.barlen); /*19570*/
		$1.i = 0; /*19571*/
		$1.j = 0; /*19571*/
		for (;;) { /*19585*/
			if ($1.i == $1.barlen) { /*19572*/
				break; /*19572*/
			} /*19572*/
			$1.char = $get($1.barcode, $1.i); /*19573*/
			if (($1.parsefnc && ($1.char == 94)) && ($1.i < ($1.barlen - 4))) { /*19581*/
				if ($get($1.barcode, $1.i + 1) != 94) { /*19579*/
					$1.char = $get($1.fncvals, $geti($1.barcode, $1.i + 1, 4)); /*19576*/
					$1.i = $1.i + 4; /*19577*/
				} else { /*19579*/
					$1.i = $1.i + 1; /*19579*/
				} /*19579*/
			} /*19579*/
			$put($1.msg, $1.j, $1.char); /*19582*/
			$1.i = $1.i + 1; /*19583*/
			$1.j = $1.j + 1; /*19584*/
		} /*19584*/
		$1.msg = $geti($1.msg, 0, $1.j); /*19586*/
		$1.msglen = $1.msg.length; /*19587*/
		if ($eq($1.eclevel, "unset")) { /*19590*/
			$1.eclevel = "L2"; /*19590*/
		} /*19590*/
		$1.tobin = function() {
			var _e = $s($k[--$j]); /*19593*/
			$k[$j++] = _e; /*19593*/
			for (var _g = 0, _f = _e.length - 1; _g <= _f; _g += 1) { /*19593*/
				var _h = $k[--$j]; /*19593*/
				$put(_h, _g, 48); /*19593*/
				$k[$j++] = _h; /*19593*/
			} /*19593*/
			var _i = $k[--$j]; /*19594*/
			var _l = $cvrs($s(_i.length), $k[--$j], 2); /*19594*/
			$puti(_i, _i.length - _l.length, _l); /*19595*/
			$k[$j++] = _i; /*19595*/
		}; /*19596*/
		$1.bits = $s((4 + 13) + ($1.msglen * 8)); /*19599*/
		$puti($1.bits, 0, "0011"); /*19600*/
		$k[$j++] = $1.bits; /*19601*/
		$k[$j++] = 4; /*19601*/
		$k[$j++] = $1.msglen; /*19601*/
		$k[$j++] = 13; /*19601*/
		$1.tobin(); /*19601*/
		var _r = $k[--$j]; /*19601*/
		var _s = $k[--$j]; /*19601*/
		$puti($k[--$j], _s, _r); /*19601*/
		for (var _w = 0, _v = $1.msglen - 1; _w <= _v; _w += 1) { /*19605*/
			$1.i = _w; /*19603*/
			$k[$j++] = $1.bits; /*19604*/
			$k[$j++] = 17 + ($1.i * 8); /*19604*/
			$k[$j++] = $get($1.msg, $1.i); /*19604*/
			$k[$j++] = 8; /*19604*/
			$1.tobin(); /*19604*/
			var _12 = $k[--$j]; /*19604*/
			var _13 = $k[--$j]; /*19604*/
			$puti($k[--$j], _13, _12); /*19604*/
		} /*19604*/
		$1.metrics = $a([$a(["1", 23, -1, 0, 205, $a([1, 21, 4]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 17, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 13, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 9, 16]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["2", 25, -1, 0, 301, $a([1, 31, 6]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 25, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 19, 18]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 15, 22]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["3", 27, -1, 0, 405, $a([1, 42, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 34, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 26, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["4", 29, 14, 1, 439, $a([1, 46, 8]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 38, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 30, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 22, 32]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["5", 31, 16, 1, 555, $a([1, 57, 12]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 49, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 37, 32]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 14, 20]), $a([1, 13, 22]), $a([0, -1, -1])]), $a(["6", 33, 16, 1, 675, $a([1, 70, 14]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 58, 26]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 24, 20]), $a([1, 22, 18]), $a([0, -1, -1]), $a([1, 16, 24]), $a([1, 18, 26]), $a([0, -1, -1])]), $a(["7", 35, 17, 1, 805, $a([1, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 26, 22]), $a([1, 28, 24]), $a([0, -1, -1]), $a([2, 14, 20]), $a([1, 12, 20]), $a([0, -1, -1])]), $a(["8", 37, 18, 1, 943, $a([1, 99, 18]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 40, 18]), $a([1, 41, 18]), $a([0, -1, -1]), $a([1, 31, 26]), $a([1, 32, 28]), $a([0, -1, -1]), $a([2, 16, 24]), $a([1, 15, 22]), $a([0, -1, -1])]), $a(["9", 39, 19, 1, 1089, $a([1, 114, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([2, 48, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([2, 24, 20]), $a([1, 26, 22]), $a([0, -1, -1]), $a([2, 18, 28]), $a([1, 18, 26]), $a([0, -1, -1])]), $a(["10", 41, 20, 1, 1243, $a([1, 131, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 52, 22]), $a([1, 57, 24]), $a([0, -1, -1]), $a([2, 27, 24]), $a([1, 29, 24]), $a([0, -1, -1]), $a([2, 21, 32]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["11", 43, 14, 2, 1289, $a([1, 135, 26]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 56, 24]), $a([1, 57, 24]), $a([0, -1, -1]), $a([2, 28, 24]), $a([1, 31, 26]), $a([0, -1, -1]), $a([2, 22, 32]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["12", 45, 15, 2, 1455, $a([1, 153, 28]), $a([0, -1, -1]), $a([0, -1, -1]), $a([1, 62, 26]), $a([1, 65, 28]), $a([0, -1, -1]), $a([2, 32, 28]), $a([1, 33, 28]), $a([0, -1, -1]), $a([3, 17, 26]), $a([1, 22, 30]), $a([0, -1, -1])]), $a(["13", 47, 16, 2, 1629, $a([1, 86, 16]), $a([1, 85, 16]), $a([0, -1, -1]), $a([1, 71, 30]), $a([1, 72, 30]), $a([0, -1, -1]), $a([2, 37, 32]), $a([1, 35, 30]), $a([0, -1, -1]), $a([3, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["14", 49, 16, 2, 1805, $a([1, 94, 18]), $a([1, 95, 18]), $a([0, -1, -1]), $a([2, 51, 22]), $a([1, 55, 24]), $a([0, -1, -1]), $a([3, 30, 26]), $a([1, 31, 26]), $a([0, -1, -1]), $a([4, 18, 28]), $a([1, 17, 24]), $a([0, -1, -1])]), $a(["15", 51, 17, 2, 1995, $a([1, 104, 20]), $a([1, 105, 20]), $a([0, -1, -1]), $a([2, 57, 24]), $a([1, 61, 26]), $a([0, -1, -1]), $a([3, 33, 28]), $a([1, 36, 30]), $a([0, -1, -1]), $a([4, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["16", 53, 17, 2, 2187, $a([1, 115, 22]), $a([1, 114, 22]), $a([0, -1, -1]), $a([2, 65, 28]), $a([1, 61, 26]), $a([0, -1, -1]), $a([3, 38, 32]), $a([1, 33, 30]), $a([0, -1, -1]), $a([5, 19, 28]), $a([1, 14, 24]), $a([0, -1, -1])]), $a(["17", 55, 18, 2, 2393, $a([1, 126, 24]), $a([1, 125, 24]), $a([0, -1, -1]), $a([2, 70, 30]), $a([1, 69, 30]), $a([0, -1, -1]), $a([4, 33, 28]), $a([1, 29, 26]), $a([0, -1, -1]), $a([5, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["18", 57, 19, 2, 2607, $a([1, 136, 26]), $a([1, 137, 26]), $a([0, -1, -1]), $a([3, 56, 24]), $a([1, 59, 26]), $a([0, -1, -1]), $a([5, 35, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([6, 18, 28]), $a([1, 21, 28]), $a([0, -1, -1])]), $a(["19", 59, 20, 2, 2829, $a([1, 148, 28]), $a([1, 149, 28]), $a([0, -1, -1]), $a([3, 61, 26]), $a([1, 64, 28]), $a([0, -1, -1]), $a([7, 24, 20]), $a([1, 23, 22]), $a([0, -1, -1]), $a([6, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["20", 61, 20, 2, 3053, $a([3, 107, 20]), $a([0, -1, -1]), $a([0, -1, -1]), $a([3, 65, 28]), $a([1, 72, 30]), $a([0, -1, -1]), $a([7, 26, 22]), $a([1, 23, 22]), $a([0, -1, -1]), $a([7, 19, 28]), $a([1, 20, 32]), $a([0, -1, -1])]), $a(["21", 63, 21, 2, 3291, $a([3, 115, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([4, 56, 24]), $a([1, 63, 28]), $a([0, -1, -1]), $a([7, 28, 24]), $a([1, 25, 22]), $a([0, -1, -1]), $a([8, 18, 28]), $a([1, 21, 22]), $a([0, -1, -1])]), $a(["22", 65, 16, 3, 3383, $a([2, 116, 22]), $a([1, 122, 24]), $a([0, -1, -1]), $a([4, 56, 24]), $a([1, 72, 30]), $a([0, -1, -1]), $a([7, 28, 24]), $a([1, 32, 26]), $a([0, -1, -1]), $a([8, 18, 28]), $a([1, 24, 30]), $a([0, -1, -1])]), $a(["23", 67, 17, 3, 3631, $a([3, 127, 24]), $a([0, -1, -1]), $a([0, -1, -1]), $a([5, 51, 22]), $a([1, 62, 26]), $a([0, -1, -1]), $a([7, 30, 26]), $a([1, 35, 26]), $a([0, -1, -1]), $a([8, 20, 30]), $a([1, 21, 32]), $a([0, -1, -1])]), $a(["24", 69, 17, 3, 3887, $a([2, 135, 26]), $a([1, 137, 26]), $a([0, -1, -1]), $a([5, 56, 24]), $a([1, 59, 26]), $a([0, -1, -1]), $a([7, 33, 28]), $a([1, 30, 28]), $a([0, -1, -1]), $a([11, 16, 24]), $a([1, 19, 26]), $a([0, -1, -1])]), $a(["25", 71, 18, 3, 4151, $a([3, 105, 20]), $a([1, 121, 22]), $a([0, -1, -1]), $a([5, 61, 26]), $a([1, 57, 26]), $a([0, -1, -1]), $a([9, 28, 24]), $a([1, 28, 22]), $a([0, -1, -1]), $a([10, 19, 28]), $a([1, 18, 30]), $a([0, -1, -1])]), $a(["26", 73, 18, 3, 4423, $a([2, 157, 30]), $a([1, 150, 28]), $a([0, -1, -1]), $a([5, 65, 28]), $a([1, 61, 26]), $a([0, -1, -1]), $a([8, 33, 28]), $a([1, 34, 30]), $a([0, -1, -1]), $a([10, 19, 28]), $a([2, 15, 26]), $a([0, -1, -1])]), $a(["27", 75, 19, 3, 4703, $a([3, 126, 24]), $a([1, 115, 22]), $a([0, -1, -1]), $a([7, 51, 22]), $a([1, 54, 22]), $a([0, -1, -1]), $a([8, 35, 30]), $a([1, 37, 30]), $a([0, -1, -1]), $a([15, 15, 22]), $a([1, 10, 22]), $a([0, -1, -1])]), $a(["28", 77, 19, 3, 4991, $a([4, 105, 20]), $a([1, 103, 20]), $a([0, -1, -1]), $a([7, 56, 24]), $a([1, 45, 18]), $a([0, -1, -1]), $a([10, 31, 26]), $a([1, 27, 26]), $a([0, -1, -1]), $a([10, 17, 26]), $a([3, 20, 28]), $a([1, 21, 28])]), $a(["29", 79, 20, 3, 5287, $a([3, 139, 26]), $a([1, 137, 28]), $a([0, -1, -1]), $a([6, 66, 28]), $a([1, 66, 30]), $a([0, -1, -1]), $a([9, 36, 30]), $a([1, 34, 32]), $a([0, -1, -1]), $a([13, 19, 28]), $a([1, 17, 32]), $a([0, -1, -1])]), $a(["30", 81, 20, 3, 5591, $a([6, 84, 16]), $a([1, 82, 16]), $a([0, -1, -1]), $a([6, 70, 30]), $a([1, 68, 30]), $a([0, -1, -1]), $a([7, 35, 30]), $a([3, 33, 28]), $a([1, 32, 28]), $a([13, 20, 30]), $a([1, 20, 28]), $a([0, -1, -1])]), $a(["31", 83, 21, 3, 5903, $a([5, 105, 20]), $a([1, 94, 18]), $a([0, -1, -1]), $a([6, 74, 32]), $a([1, 71, 30]), $a([0, -1, -1]), $a([11, 33, 28]), $a([1, 34, 32]), $a([0, -1, -1]), $a([13, 19, 28]), $a([3, 16, 26]), $a([0, -1, -1])]), $a(["32", 85, 17, 4, 6033, $a([4, 127, 24]), $a([1, 126, 24]), $a([0, -1, -1]), $a([7, 66, 28]), $a([1, 66, 30]), $a([0, -1, -1]), $a([12, 30, 24]), $a([1, 24, 28]), $a([1, 24, 30]), $a([15, 19, 28]), $a([1, 17, 32]), $a([0, -1, -1])]), $a(["33", 87, 17, 4, 6353, $a([7, 84, 16]), $a([1, 78, 16]), $a([0, -1, -1]), $a([7, 70, 30]), $a([1, 66, 28]), $a([0, -1, -1]), $a([12, 33, 28]), $a([1, 32, 30]), $a([0, -1, -1]), $a([14, 21, 32]), $a([1, 24, 28]), $a([0, -1, -1])]), $a(["34", 89, 18, 4, 6689, $a([5, 117, 22]), $a([1, 117, 24]), $a([0, -1, -1]), $a([8, 66, 28]), $a([1, 58, 26]), $a([0, -1, -1]), $a([11, 38, 32]), $a([1, 34, 32]), $a([0, -1, -1]), $a([15, 20, 30]), $a([2, 17, 26]), $a([0, -1, -1])]), $a(["35", 91, 18, 4, 7025, $a([4, 148, 28]), $a([1, 146, 28]), $a([0, -1, -1]), $a([8, 68, 30]), $a([1, 70, 24]), $a([0, -1, -1]), $a([10, 36, 32]), $a([3, 38, 28]), $a([0, -1, -1]), $a([16, 19, 28]), $a([3, 16, 26]), $a([0, -1, -1])]), $a(["36", 93, 19, 4, 7377, $a([4, 126, 24]), $a([2, 135, 26]), $a([0, -1, -1]), $a([8, 70, 28]), $a([2, 43, 26]), $a([0, -1, -1]), $a([13, 32, 28]), $a([2, 41, 30]), $a([0, -1, -1]), $a([17, 19, 28]), $a([3, 15, 26]), $a([0, -1, -1])]), $a(["37", 95, 19, 4, 7729, $a([5, 136, 26]), $a([1, 132, 24]), $a([0, -1, -1]), $a([5, 67, 30]), $a([4, 68, 28]), $a([1, 69, 28]), $a([14, 35, 30]), $a([1, 32, 24]), $a([0, -1, -1]), $a([18, 18, 26]), $a([3, 16, 28]), $a([1, 14, 28])]), $a(["38", 97, 19, 4, 8089, $a([3, 142, 26]), $a([3, 141, 28]), $a([0, -1, -1]), $a([8, 70, 30]), $a([1, 73, 32]), $a([1, 74, 32]), $a([12, 34, 30]), $a([3, 34, 26]), $a([1, 35, 28]), $a([18, 21, 32]), $a([1, 27, 30]), $a([0, -1, -1])]), $a(["39", 99, 20, 4, 8465, $a([5, 116, 22]), $a([2, 103, 20]), $a([1, 102, 20]), $a([9, 74, 32]), $a([1, 74, 30]), $a([0, -1, -1]), $a([14, 34, 28]), $a([2, 32, 32]), $a([1, 32, 30]), $a([19, 21, 32]), $a([1, 25, 26]), $a([0, -1, -1])]), $a(["40", 101, 20, 4, 8841, $a([7, 116, 22]), $a([1, 117, 22]), $a([0, -1, -1]), $a([11, 65, 28]), $a([1, 58, 24]), $a([0, -1, -1]), $a([15, 38, 32]), $a([1, 27, 28]), $a([0, -1, -1]), $a([20, 20, 30]), $a([1, 20, 32]), $a([1, 21, 32])]), $a(["41", 103, 17, 5, 9009, $a([6, 136, 26]), $a([1, 130, 24]), $a([0, -1, -1]), $a([11, 66, 28]), $a([1, 62, 30]), $a([0, -1, -1]), $a([14, 34, 28]), $a([3, 34, 32]), $a([1, 30, 30]), $a([18, 20, 30]), $a([3, 20, 28]), $a([2, 15, 26])]), $a(["42", 105, 17, 5, 9401, $a([5, 105, 20]), $a([2, 115, 22]), $a([2, 116, 22]), $a([10, 75, 32]), $a([1, 73, 32]), $a([0, -1, -1]), $a([16, 38, 32]), $a([1, 27, 28]), $a([0, -1, -1]), $a([22, 19, 28]), $a([2, 16, 30]), $a([1, 19, 30])]), $a(["43", 107, 18, 5, 9799, $a([6, 147, 28]), $a([1, 146, 28]), $a([0, -1, -1]), $a([11, 66, 28]), $a([2, 65, 30]), $a([0, -1, -1]), $a([18, 33, 28]), $a([2, 33, 30]), $a([0, -1, -1]), $a([22, 21, 32]), $a([1, 28, 30]), $a([0, -1, -1])]), $a(["44", 109, 18, 5, 10207, $a([6, 116, 22]), $a([3, 125, 24]), $a([0, -1, -1]), $a([11, 75, 32]), $a([1, 68, 30]), $a([0, -1, -1]), $a([13, 35, 28]), $a([6, 34, 32]), $a([1, 30, 30]), $a([23, 21, 32]), $a([1, 26, 30]), $a([0, -1, -1])]), $a(["45", 111, 18, 5, 10623, $a([7, 105, 20]), $a([4, 95, 18]), $a([0, -1, -1]), $a([12, 67, 28]), $a([1, 63, 30]), $a([1, 62, 32]), $a([21, 31, 26]), $a([2, 33, 32]), $a([0, -1, -1]), $a([23, 21, 32]), $a([2, 24, 30]), $a([0, -1, -1])]), $a(["46", 113, 19, 5, 11045, $a([10, 116, 22]), $a([0, -1, -1]), $a([0, -1, -1]), $a([12, 74, 32]), $a([1, 78, 30]), $a([0, -1, -1]), $a([18, 37, 32]), $a([1, 39, 30]), $a([1, 41, 28]), $a([25, 21, 32]), $a([1, 27, 28]), $a([0, -1, -1])]), $a(["47", 115, 19, 5, 11477, $a([5, 126, 24]), $a([4, 115, 22]), $a([1, 114, 22]), $a([12, 67, 28]), $a([2, 66, 32]), $a([1, 68, 30]), $a([21, 35, 30]), $a([1, 39, 30]), $a([0, -1, -1]), $a([26, 21, 32]), $a([1, 28, 28]), $a([0, -1, -1])]), $a(["48", 117, 19, 5, 11917, $a([9, 126, 24]), $a([1, 117, 22]), $a([0, -1, -1]), $a([13, 75, 32]), $a([1, 68, 30]), $a([0, -1, -1]), $a([20, 35, 30]), $a([3, 35, 28]), $a([0, -1, -1]), $a([27, 21, 32]), $a([1, 28, 30]), $a([0, -1, -1])]), $a(["49", 119, 17, 6, 12111, $a([9, 126, 24]), $a([1, 137, 26]), $a([0, -1, -1]), $a([13, 71, 30]), $a([2, 68, 32]), $a([0, -1, -1]), $a([20, 37, 32]), $a([1, 39, 28]), $a([1, 38, 28]), $a([24, 20, 32]), $a([5, 25, 28]), $a([0, -1, -1])]), $a(["50", 121, 17, 6, 12559, $a([8, 147, 28]), $a([1, 141, 28]), $a([0, -1, -1]), $a([10, 73, 32]), $a([4, 74, 30]), $a([1, 73, 30]), $a([16, 36, 32]), $a([6, 39, 30]), $a([1, 37, 30]), $a([27, 21, 32]), $a([3, 20, 26]), $a([0, -1, -1])]), $a(["51", 123, 18, 6, 13025, $a([9, 137, 26]), $a([1, 135, 26]), $a([0, -1, -1]), $a([12, 70, 30]), $a([4, 75, 32]), $a([0, -1, -1]), $a([24, 35, 30]), $a([1, 40, 28]), $a([0, -1, -1]), $a([23, 20, 32]), $a([8, 24, 30]), $a([0, -1, -1])]), $a(["52", 125, 18, 6, 13489, $a([14, 95, 18]), $a([1, 86, 18]), $a([0, -1, -1]), $a([13, 73, 32]), $a([3, 77, 30]), $a([0, -1, -1]), $a([24, 35, 30]), $a([2, 35, 28]), $a([0, -1, -1]), $a([26, 21, 32]), $a([5, 21, 30]), $a([1, 23, 30])]), $a(["53", 127, 18, 6, 13961, $a([9, 147, 28]), $a([1, 142, 28]), $a([0, -1, -1]), $a([10, 73, 30]), $a([6, 70, 32]), $a([1, 71, 32]), $a([25, 35, 30]), $a([2, 34, 26]), $a([0, -1, -1]), $a([29, 21, 32]), $a([4, 22, 30]), $a([0, -1, -1])]), $a(["54", 129, 18, 6, 14441, $a([11, 126, 24]), $a([1, 131, 24]), $a([0, -1, -1]), $a([16, 74, 32]), $a([1, 79, 30]), $a([0, -1, -1]), $a([25, 38, 32]), $a([1, 25, 30]), $a([0, -1, -1]), $a([33, 21, 32]), $a([1, 28, 28]), $a([0, -1, -1])]), $a(["55", 131, 19, 6, 14939, $a([14, 105, 20]), $a([1, 99, 18]), $a([0, -1, -1]), $a([19, 65, 28]), $a([1, 72, 28]), $a([0, -1, -1]), $a([24, 37, 32]), $a([2, 40, 30]), $a([1, 41, 30]), $a([31, 21, 32]), $a([4, 24, 32]), $a([0, -1, -1])]), $a(["56", 133, 19, 6, 15435, $a([10, 147, 28]), $a([1, 151, 28]), $a([0, -1, -1]), $a([15, 71, 30]), $a([3, 71, 32]), $a([1, 73, 32]), $a([24, 37, 32]), $a([3, 38, 30]), $a([1, 39, 30]), $a([36, 19, 30]), $a([3, 29, 26]), $a([0, -1, -1])]), $a(["57", 135, 19, 6, 15939, $a([15, 105, 20]), $a([1, 99, 18]), $a([0, -1, -1]), $a([19, 70, 30]), $a([1, 64, 28]), $a([0, -1, -1]), $a([27, 38, 32]), $a([2, 25, 26]), $a([0, -1, -1]), $a([38, 20, 30]), $a([2, 18, 28]), $a([0, -1, -1])]), $a(["58", 137, 17, 7, 16171, $a([14, 105, 20]), $a([1, 113, 22]), $a([1, 114, 22]), $a([17, 67, 30]), $a([3, 92, 32]), $a([0, -1, -1]), $a([30, 35, 30]), $a([1, 41, 30]), $a([0, -1, -1]), $a([36, 21, 32]), $a([1, 26, 30]), $a([1, 27, 30])]), $a(["59", 139, 17, 7, 16691, $a([11, 146, 28]), $a([1, 146, 26]), $a([0, -1, -1]), $a([20, 70, 30]), $a([1, 60, 26]), $a([0, -1, -1]), $a([29, 38, 32]), $a([1, 24, 32]), $a([0, -1, -1]), $a([40, 20, 30]), $a([2, 17, 26]), $a([0, -1, -1])]), $a(["60", 141, 18, 7, 17215, $a([3, 137, 26]), $a([1, 136, 26]), $a([10, 126, 24]), $a([22, 65, 28]), $a([1, 75, 30]), $a([0, -1, -1]), $a([30, 37, 32]), $a([1, 51, 30]), $a([0, -1, -1]), $a([42, 20, 30]), $a([1, 21, 30]), $a([0, -1, -1])]), $a(["61", 143, 18, 7, 17751, $a([12, 126, 24]), $a([2, 118, 22]), $a([1, 116, 22]), $a([19, 74, 32]), $a([1, 74, 30]), $a([1, 72, 28]), $a([30, 38, 32]), $a([2, 29, 30]), $a([0, -1, -1]), $a([39, 20, 32]), $a([2, 37, 26]), $a([1, 38, 26])]), $a(["62", 145, 18, 7, 18295, $a([12, 126, 24]), $a([3, 136, 26]), $a([0, -1, -1]), $a([21, 70, 30]), $a([2, 65, 28]), $a([0, -1, -1]), $a([34, 35, 30]), $a([1, 44, 32]), $a([0, -1, -1]), $a([42, 20, 30]), $a([2, 19, 28]), $a([2, 18, 28])]), $a(["63", 147, 18, 7, 18847, $a([12, 126, 24]), $a([3, 117, 22]), $a([1, 116, 22]), $a([25, 61, 26]), $a([2, 62, 28]), $a([0, -1, -1]), $a([34, 35, 30]), $a([1, 40, 32]), $a([1, 41, 32]), $a([45, 20, 30]), $a([1, 20, 32]), $a([1, 21, 32])]), $a(["64", 149, 19, 7, 19403, $a([15, 105, 20]), $a([2, 115, 22]), $a([2, 116, 22]), $a([25, 65, 28]), $a([1, 72, 28]), $a([0, -1, -1]), $a([18, 35, 30]), $a([17, 37, 32]), $a([1, 50, 32]), $a([42, 20, 30]), $a([6, 19, 28]), $a([1, 15, 28])]), $a(["65", 151, 19, 7, 19971, $a([19, 105, 20]), $a([1, 101, 20]), $a([0, -1, -1]), $a([33, 51, 22]), $a([1, 65, 22]), $a([0, -1, -1]), $a([40, 33, 28]), $a([1, 28, 28]), $a([0, -1, -1]), $a([49, 20, 30]), $a([1, 18, 28]), $a([0, -1, -1])]), $a(["66", 153, 17, 8, 20229, $a([18, 105, 20]), $a([2, 117, 22]), $a([0, -1, -1]), $a([26, 65, 28]), $a([1, 80, 30]), $a([0, -1, -1]), $a([35, 35, 30]), $a([3, 35, 28]), $a([1, 36, 28]), $a([52, 18, 28]), $a([2, 38, 30]), $a([0, -1, -1])]), $a(["67", 155, 17, 8, 20805, $a([26, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([26, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([45, 31, 26]), $a([1, 9, 26]), $a([0, -1, -1]), $a([52, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["68", 157, 17, 8, 21389, $a([16, 126, 24]), $a([1, 114, 22]), $a([1, 115, 22]), $a([23, 70, 30]), $a([3, 65, 28]), $a([1, 66, 28]), $a([40, 35, 30]), $a([1, 43, 30]), $a([0, -1, -1]), $a([46, 20, 30]), $a([7, 19, 28]), $a([1, 16, 28])]), $a(["69", 159, 18, 8, 21993, $a([19, 116, 22]), $a([1, 105, 22]), $a([0, -1, -1]), $a([20, 70, 30]), $a([7, 66, 28]), $a([1, 63, 28]), $a([40, 35, 30]), $a([1, 42, 32]), $a([1, 43, 32]), $a([54, 20, 30]), $a([1, 19, 30]), $a([0, -1, -1])]), $a(["70", 161, 18, 8, 22593, $a([17, 126, 24]), $a([2, 115, 22]), $a([0, -1, -1]), $a([24, 70, 30]), $a([4, 74, 32]), $a([0, -1, -1]), $a([48, 31, 26]), $a([2, 18, 26]), $a([0, -1, -1]), $a([54, 19, 28]), $a([6, 15, 26]), $a([1, 14, 26])]), $a(["71", 163, 18, 8, 23201, $a([29, 84, 16]), $a([0, -1, -1]), $a([0, -1, -1]), $a([29, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([6, 34, 30]), $a([3, 36, 30]), $a([38, 33, 28]), $a([58, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["72", 165, 18, 8, 23817, $a([16, 147, 28]), $a([1, 149, 28]), $a([0, -1, -1]), $a([31, 66, 28]), $a([1, 37, 26]), $a([0, -1, -1]), $a([48, 33, 28]), $a([1, 23, 26]), $a([0, -1, -1]), $a([53, 20, 30]), $a([6, 19, 28]), $a([1, 17, 28])]), $a(["73", 167, 19, 8, 24453, $a([20, 115, 22]), $a([2, 134, 24]), $a([0, -1, -1]), $a([29, 66, 28]), $a([2, 56, 26]), $a([2, 57, 26]), $a([45, 36, 30]), $a([2, 15, 28]), $a([0, -1, -1]), $a([59, 20, 30]), $a([2, 21, 32]), $a([0, -1, -1])]), $a(["74", 169, 19, 8, 25085, $a([17, 147, 28]), $a([1, 134, 26]), $a([0, -1, -1]), $a([26, 70, 30]), $a([5, 75, 32]), $a([0, -1, -1]), $a([47, 35, 30]), $a([1, 48, 32]), $a([0, -1, -1]), $a([64, 18, 28]), $a([2, 33, 30]), $a([1, 35, 30])]), $a(["75", 171, 17, 9, 25373, $a([22, 115, 22]), $a([1, 133, 24]), $a([0, -1, -1]), $a([33, 65, 28]), $a([1, 74, 28]), $a([0, -1, -1]), $a([43, 36, 30]), $a([5, 27, 28]), $a([1, 30, 28]), $a([57, 20, 30]), $a([5, 21, 32]), $a([1, 24, 32])]), $a(["76", 173, 17, 9, 26021, $a([18, 136, 26]), $a([2, 142, 26]), $a([0, -1, -1]), $a([33, 66, 28]), $a([2, 49, 26]), $a([0, -1, -1]), $a([48, 35, 30]), $a([2, 38, 28]), $a([0, -1, -1]), $a([64, 20, 30]), $a([1, 20, 32]), $a([0, -1, -1])]), $a(["77", 175, 17, 9, 26677, $a([19, 126, 24]), $a([2, 135, 26]), $a([1, 136, 26]), $a([32, 66, 28]), $a([2, 55, 26]), $a([2, 56, 26]), $a([49, 36, 30]), $a([2, 18, 32]), $a([0, -1, -1]), $a([65, 18, 28]), $a([5, 27, 30]), $a([1, 29, 30])]), $a(["78", 177, 18, 9, 27335, $a([20, 137, 26]), $a([1, 130, 26]), $a([0, -1, -1]), $a([30, 75, 32]), $a([2, 71, 32]), $a([0, -1, -1]), $a([46, 35, 30]), $a([6, 39, 32]), $a([0, -1, -1]), $a([3, 12, 30]), $a([70, 19, 28]), $a([0, -1, -1])]), $a(["79", 179, 18, 9, 28007, $a([20, 147, 28]), $a([0, -1, -1]), $a([0, -1, -1]), $a([35, 70, 30]), $a([0, -1, -1]), $a([0, -1, -1]), $a([49, 35, 30]), $a([5, 35, 28]), $a([0, -1, -1]), $a([70, 20, 30]), $a([0, -1, -1]), $a([0, -1, -1])]), $a(["80", 181, 18, 9, 28687, $a([21, 136, 26]), $a([1, 155, 28]), $a([0, -1, -1]), $a([34, 70, 30]), $a([1, 64, 28]), $a([1, 65, 28]), $a([54, 35, 30]), $a([1, 45, 30]), $a([0, -1, -1]), $a([68, 20, 30]), $a([3, 18, 28]), $a([1, 19, 28])]), $a(["81", 183, 18, 9, 29375, $a([19, 126, 24]), $a([5, 115, 22]), $a([1, 114, 22]), $a([33, 70, 30]), $a([3, 65, 28]), $a([1, 64, 28]), $a([52, 35, 30]), $a([3, 41, 32]), $a([1, 40, 32]), $a([67, 20, 30]), $a([5, 21, 32]), $a([1, 24, 32])]), $a(["82", 185, 18, 9, 30071, $a([2, 150, 28]), $a([21, 136, 26]), $a([0, -1, -1]), $a([32, 70, 30]), $a([6, 65, 28]), $a([0, -1, -1]), $a([52, 38, 32]), $a([2, 27, 32]), $a([0, -1, -1]), $a([73, 20, 30]), $a([2, 22, 32]), $a([0, -1, -1])]), $a(["83", 187, 17, 10, 30387, $a([21, 126, 24]), $a([4, 136, 26]), $a([0, -1, -1]), $a([30, 74, 32]), $a([6, 73, 30]), $a([0, -1, -1]), $a([54, 35, 30]), $a([4, 40, 32]), $a([0, -1, -1]), $a([75, 20, 30]), $a([1, 20, 28]), $a([0, -1, -1])]), $a(["84", 189, 17, 10, 31091, $a([30, 105, 20]), $a([1, 114, 22]), $a([0, -1, -1]), $a([3, 45, 22]), $a([55, 47, 20]), $a([0, -1, -1]), $a([2, 26, 26]), $a([62, 33, 28]), $a([0, -1, -1]), $a([79, 18, 28]), $a([4, 33, 30]), $a([0, -1, -1])])]); /*19946*/
		$1.eclval = $get($1.eclevel, 1) - 49; /*19948*/
		for (var _Ik = 0; _Ik <= 83; _Ik += 1) { /*19968*/
			$1.i = _Ik; /*19950*/
			$1.m = $get($1.metrics, $1.i); /*19951*/
			$1.vers = $get($1.m, 0); /*19952*/
			$1.size = $get($1.m, 1); /*19953*/
			$1.alnk = $get($1.m, 2); /*19954*/
			$1.alnn = $get($1.m, 3); /*19955*/
			$1.alnr = $1.size - ($1.alnk * $1.alnn); /*19956*/
			$1.nmod = $get($1.m, 4); /*19957*/
			$1.ncws = ~~($1.nmod / 8); /*19958*/
			$1.rbit = $1.nmod % 8; /*19959*/
			$1.ecbs = $geti($1.m, 5 + ($1.eclval * 3), 3); /*19960*/
			$k[$j++] = "ecws"; /*19961*/
			$k[$j++] = 0; /*19961*/
			$forall($1.ecbs, function() { /*19961*/
				var _J7 = $k[--$j]; /*19961*/
				var _JA = $k[--$j]; /*19961*/
				$k[$j++] = _JA + ($get(_J7, 0) * $get(_J7, 2)); /*19961*/
			}); /*19961*/
			var _JB = $k[--$j]; /*19961*/
			$1[$k[--$j]] = _JB; /*19961*/
			$1.dcws = $1.ncws - $1.ecws; /*19962*/
			$1.dmod = $1.dcws * 8; /*19963*/
			$1.okay = true; /*19964*/
			if ($ne($1.version, "unset") && $ne($1.version, $1.vers)) { /*19965*/
				$1.okay = false; /*19965*/
			} /*19965*/
			if ($1.bits.length > $1.dmod) { /*19966*/
				$1.okay = false; /*19966*/
			} /*19966*/
			if ($1.okay) { /*19967*/
				break; /*19967*/
			} /*19967*/
		} /*19967*/
		if (!$1.okay) { /*19972*/
			$k[$j++] = "bwipp.hanxinNoValidSymbol"; /*19971*/
			$k[$j++] = "No valid symbol available"; /*19971*/
			$0.raiseerror(); /*19971*/
		} /*19971*/
		$1.version = $1.vers; /*19974*/
		$1.msgbits = $1.bits; /*19975*/
		$1.e1nb = $get($get($1.ecbs, 0), 0); /*19976*/
		$1.e2nb = $get($get($1.ecbs, 1), 0); /*19976*/
		$1.e3nb = $get($get($1.ecbs, 2), 0); /*19976*/
		$1.e1dcws = $get($get($1.ecbs, 0), 1); /*19977*/
		$1.e2dcws = $get($get($1.ecbs, 1), 1); /*19977*/
		$1.e3dcws = $get($get($1.ecbs, 2), 1); /*19977*/
		$1.e1ecws = $get($get($1.ecbs, 0), 2); /*19978*/
		$1.e2ecws = $get($get($1.ecbs, 1), 2); /*19978*/
		$1.e3ecws = $get($get($1.ecbs, 2), 2); /*19978*/
		$1.pad = $s($1.dmod); /*19981*/
		for (var _Ju = 0, _Jt = $1.pad.length - 1; _Ju <= _Jt; _Ju += 1) { /*19982*/
			$put($1.pad, _Ju, 48); /*19982*/
		} /*19982*/
		$puti($1.pad, 0, $1.msgbits); /*19983*/
		$1.cws = $a($1.dcws); /*19986*/
		for (var _K2 = 0, _K1 = $1.cws.length - 1; _K2 <= _K1; _K2 += 1) { /*19996*/
			$1.c = _K2; /*19988*/
			$1.cwb = $geti($1.pad, $1.c * 8, 8); /*19989*/
			$1.cw = 0; /*19990*/
			for (var _K6 = 0; _K6 <= 7; _K6 += 1) { /*19994*/
				$1.i = _K6; /*19992*/
				$1.cw = $1.cw + ((~~(Math.pow(2, (8 - $1.i) - 1))) * ($get($1.cwb, $1.i) - 48)); /*19993*/
			} /*19993*/
			$put($1.cws, $1.c, $1.cw); /*19995*/
		} /*19995*/
		$1.rscodes = function() {
			$1.rspm = $k[--$j]; /*20000*/
			$1.rsgf = $k[--$j]; /*20001*/
			$1.rsnc = $k[--$j]; /*20002*/
			$1.rscws = $k[--$j]; /*20003*/
			$k[$j++] = Infinity; /*20006*/
			$k[$j++] = 1; /*20006*/
			for (var _KK = 0, _KL = $1.rsgf - 1; _KK < _KL; _KK++) { /*20006*/
				var _KM = $k[--$j]; /*20006*/
				var _KN = _KM * 2; /*20006*/
				$k[$j++] = _KM; /*20006*/
				$k[$j++] = _KN; /*20006*/
				if (_KN >= $1.rsgf) { /*20006*/
					var _KQ = $k[--$j]; /*20006*/
					$k[$j++] = $xo(_KQ, $1.rspm); /*20006*/
				} /*20006*/
			} /*20006*/
			$1.rsalog = $a(); /*20006*/
			$1.rslog = $a($1.rsgf); /*20007*/
			for (var _KW = 1, _KV = $1.rsgf - 1; _KW <= _KV; _KW += 1) { /*20008*/
				$put($1.rslog, $get($1.rsalog, _KW), _KW); /*20008*/
			} /*20008*/
			$1.rsprod = function() {
				var _Ka = $k[--$j]; /*20012*/
				var _Kb = $k[--$j]; /*20012*/
				$k[$j++] = _Kb; /*20016*/
				$k[$j++] = _Ka; /*20016*/
				if ((_Ka != 0) && (_Kb != 0)) { /*20015*/
					var _Ke = $get($1.rslog, $k[--$j]); /*20013*/
					var _Kk = $get($1.rsalog, (_Ke + $get($1.rslog, $k[--$j])) % ($1.rsgf - 1)); /*20013*/
					$k[$j++] = _Kk; /*20013*/
				} else { /*20015*/
					$j -= 2; /*20015*/
					$k[$j++] = 0; /*20015*/
				} /*20015*/
			}; /*20017*/
			$k[$j++] = Infinity; /*20020*/
			$k[$j++] = 1; /*20020*/
			for (var _Km = 0, _Kn = $1.rsnc; _Km < _Kn; _Km++) { /*20020*/
				$k[$j++] = 0; /*20020*/
			} /*20020*/
			$1.coeffs = $a(); /*20020*/
			for (var _Kr = 1, _Kq = $1.rsnc; _Kr <= _Kq; _Kr += 1) { /*20029*/
				$1.i = _Kr; /*20022*/
				$put($1.coeffs, $1.i, $get($1.coeffs, $1.i - 1)); /*20023*/
				for (var _Ky = $1.i - 1; _Ky >= 1; _Ky -= 1) { /*20027*/
					$1.j = _Ky; /*20025*/
					$k[$j++] = $1.coeffs; /*20026*/
					$k[$j++] = $1.j; /*20026*/
					$k[$j++] = $get($1.coeffs, $1.j - 1); /*20026*/
					$k[$j++] = $get($1.coeffs, $1.j); /*20026*/
					$k[$j++] = $get($1.rsalog, $1.i); /*20026*/
					$1.rsprod(); /*20026*/
					var _LA = $k[--$j]; /*20026*/
					var _LB = $k[--$j]; /*20026*/
					var _LC = $k[--$j]; /*20026*/
					$put($k[--$j], _LC, $xo(_LB, _LA)); /*20026*/
				} /*20026*/
				$k[$j++] = $1.coeffs; /*20028*/
				$k[$j++] = 0; /*20028*/
				$k[$j++] = $get($1.coeffs, 0); /*20028*/
				$k[$j++] = $get($1.rsalog, $1.i); /*20028*/
				$1.rsprod(); /*20028*/
				var _LK = $k[--$j]; /*20028*/
				var _LL = $k[--$j]; /*20028*/
				$put($k[--$j], _LL, _LK); /*20028*/
			} /*20028*/
			$1.nd = $1.rscws.length; /*20032*/
			$k[$j++] = Infinity; /*20033*/
			$forall($1.rscws); /*20033*/
			for (var _LQ = 0, _LR = $1.rsnc; _LQ < _LR; _LQ++) { /*20033*/
				$k[$j++] = 0; /*20033*/
			} /*20033*/
			$k[$j++] = 0; /*20033*/
			$1.rscws = $a(); /*20033*/
			for (var _LV = 0, _LU = $1.nd - 1; _LV <= _LU; _LV += 1) { /*20040*/
				$1.k = $xo($get($1.rscws, _LV), $get($1.rscws, $1.nd)); /*20035*/
				for (var _Ld = 0, _Lc = $1.rsnc - 1; _Ld <= _Lc; _Ld += 1) { /*20039*/
					$1.j = _Ld; /*20037*/
					$k[$j++] = $1.rscws; /*20038*/
					$k[$j++] = $1.nd + $1.j; /*20038*/
					$k[$j++] = $get($1.rscws, ($1.nd + $1.j) + 1); /*20038*/
					$k[$j++] = $1.k; /*20038*/
					$k[$j++] = $get($1.coeffs, ($1.rsnc - $1.j) - 1); /*20038*/
					$1.rsprod(); /*20038*/
					var _Lq = $k[--$j]; /*20038*/
					var _Lr = $k[--$j]; /*20038*/
					var _Ls = $k[--$j]; /*20038*/
					$put($k[--$j], _Ls, $xo(_Lr, _Lq)); /*20038*/
				} /*20038*/
			} /*20038*/
			$k[$j++] = $geti($1.rscws, 0, $1.rscws.length - 1); /*20043*/
		}; /*20045*/
		$1.dcwsb = $a(($1.e1nb + $1.e2nb) + $1.e3nb); /*20048*/
		$1.ecwsb = $a($1.dcwsb.length); /*20049*/
		$1.in = 0; /*20050*/
		$1.out = 0; /*20050*/
		for (var _M4 = 0, _M5 = $1.e1nb; _M4 < _M5; _M4++) { /*20056*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e1dcws); /*20052*/
			$k[$j++] = $1.e1ecws; /*20052*/
			$k[$j++] = 256; /*20052*/
			$k[$j++] = 355; /*20052*/
			$1.rscodes(); /*20052*/
			var _MB = $k[--$j]; /*20053*/
			$put($1.dcwsb, $1.out, $geti(_MB, 0, $1.e1dcws)); /*20053*/
			$put($1.ecwsb, $1.out, $geti(_MB, $1.e1dcws, $1.e1ecws)); /*20054*/
			$1.in = $1.in + $1.e1dcws; /*20055*/
			$1.out = $1.out + 1; /*20055*/
		} /*20055*/
		for (var _MP = 0, _MQ = $1.e2nb; _MP < _MQ; _MP++) { /*20062*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e2dcws); /*20058*/
			$k[$j++] = $1.e2ecws; /*20058*/
			$k[$j++] = 256; /*20058*/
			$k[$j++] = 355; /*20058*/
			$1.rscodes(); /*20058*/
			var _MW = $k[--$j]; /*20059*/
			$put($1.dcwsb, $1.out, $geti(_MW, 0, $1.e2dcws)); /*20059*/
			$put($1.ecwsb, $1.out, $geti(_MW, $1.e2dcws, $1.e2ecws)); /*20060*/
			$1.in = $1.in + $1.e2dcws; /*20061*/
			$1.out = $1.out + 1; /*20061*/
		} /*20061*/
		for (var _Mk = 0, _Ml = $1.e3nb; _Mk < _Ml; _Mk++) { /*20068*/
			$k[$j++] = $geti($1.cws, $1.in, $1.e3dcws); /*20064*/
			$k[$j++] = $1.e3ecws; /*20064*/
			$k[$j++] = 256; /*20064*/
			$k[$j++] = 355; /*20064*/
			$1.rscodes(); /*20064*/
			var _Mr = $k[--$j]; /*20065*/
			$put($1.dcwsb, $1.out, $geti(_Mr, 0, $1.e3dcws)); /*20065*/
			$put($1.ecwsb, $1.out, $geti(_Mr, $1.e3dcws, $1.e3ecws)); /*20066*/
			$1.in = $1.in + $1.e3dcws; /*20067*/
			$1.out = $1.out + 1; /*20067*/
		} /*20067*/
		$1.cws = $a($1.ncws); /*20071*/
		$1.cw = 0; /*20072*/
		for (var _N8 = 0, _N7 = $1.dcwsb.length - 1; _N8 <= _N7; _N8 += 1) { /*20077*/
			$1.i = _N8; /*20074*/
			var _NB = $get($1.dcwsb, $1.i); /*20075*/
			$puti($1.cws, $1.cw, _NB); /*20075*/
			$1.cw = _NB.length + $1.cw; /*20075*/
			var _NH = $get($1.ecwsb, $1.i); /*20076*/
			$puti($1.cws, $1.cw, _NH); /*20076*/
			$1.cw = _NH.length + $1.cw; /*20076*/
		} /*20076*/
		$k[$j++] = Infinity; /*20084*/
		var _NL = $1.ncws; /*20081*/
		var _NM = 12; /*20081*/
		var _NN = _NL - 1; /*20081*/
		if ((_NL - 1) > 12) { /*20081*/
			var _ = _NM; /*20081*/
			_NM = _NN; /*20081*/
			_NN = _; /*20081*/
		} /*20081*/
		for (var _NP = 0, _NO = _NN; _NP <= _NO; _NP += 1) { /*20083*/
			for (var _NS = _NP, _NR = $1.ncws - 1; _NS <= _NR; _NS += 13) { /*20082*/
				$k[$j++] = _NS; /*20082*/
				if (_NS < $1.ncws) { /*20082*/
					var _NW = $get($1.cws, $k[--$j]); /*20082*/
					$k[$j++] = _NW; /*20082*/
				} else { /*20082*/
					$j--; /*20082*/
				} /*20082*/
			} /*20082*/
		} /*20082*/
		$1.cws = $a(); /*20084*/
		if ($1.rbit > 0) { /*20092*/
			$1.pad = $a($1.cws.length + 1); /*20088*/
			$puti($1.pad, 0, $1.cws); /*20089*/
			$put($1.pad, $1.pad.length - 1, 0); /*20090*/
			$1.cws = $1.pad; /*20091*/
		} /*20091*/
		$k[$j++] = Infinity; /*20095*/
		for (var _Ni = 0, _Nj = $1.size * $1.size; _Ni < _Nj; _Ni++) { /*20095*/
			$k[$j++] = -1; /*20095*/
		} /*20095*/
		$1.pixs = $a(); /*20095*/
		$1.qmv = function() {
			var _Nm = $k[--$j]; /*20096*/
			var _Nn = $k[--$j]; /*20096*/
			$k[$j++] = _Nn + (_Nm * $1.size); /*20096*/
		}; /*20096*/
		if ($1.alnn != 0) { /*20155*/
			$1.trmv = function() {
				var _Nq = $k[--$j]; /*20100*/
				var _Ns = $k[--$j]; /*20100*/
				$k[$j++] = (((_Nq * $1.size) + $1.size) - 1) - _Ns; /*20100*/
			}; /*20100*/
			$1.aplot = function() {
				var _Nt = $k[--$j]; /*20102*/
				var _Nu = $k[--$j]; /*20102*/
				var _Nv = $k[--$j]; /*20102*/
				$k[$j++] = _Nt; /*20102*/
				$k[$j++] = _Nv; /*20102*/
				$k[$j++] = _Nu; /*20102*/
				$k[$j++] = _Nt; /*20102*/
				$k[$j++] = _Nu; /*20102*/
				$k[$j++] = _Nv; /*20102*/
				$1.trmv(); /*20102*/
				var _Nx = $k[--$j]; /*20102*/
				$put($1.pixs, _Nx, $k[--$j]); /*20102*/
				$1.trmv(); /*20103*/
				var _O0 = $k[--$j]; /*20103*/
				$put($1.pixs, _O0, $k[--$j]); /*20103*/
			}; /*20104*/
			$1.i = 0; /*20105*/
			$1.stag = 0; /*20105*/
			for (;;) { /*20127*/
				if ($1.i >= $1.size) { /*20106*/
					break; /*20106*/
				} /*20106*/
				for (var _O6 = 0, _O5 = $1.size - 1; _O6 <= _O5; _O6 += 1) { /*20120*/
					$1.j = _O6; /*20108*/
					if (($1.j + $1.alnr) < $1.size) { /*20114*/
						$k[$j++] = (((((~~($1.j / $1.alnk)) + $1.stag) % 2) == 0) && (!(($1.i == 0) && ($1.j < $1.alnk)))) || (($1.j % $1.alnk) == 0); /*20112*/
					} else { /*20114*/
						$k[$j++] = (($1.alnn + $1.stag) % 2) == 0; /*20114*/
					} /*20114*/
					if ($k[--$j]) { /*20119*/
						$k[$j++] = $1.j; /*20117*/
						$k[$j++] = $1.i; /*20117*/
						$k[$j++] = 1; /*20117*/
						$1.aplot(); /*20117*/
						var _ON = $1.j; /*20118*/
						var _OO = $1.i; /*20118*/
						$k[$j++] = _ON + 1; /*20118*/
						$k[$j++] = _OO + 1; /*20118*/
						if (((_OO + 1) < $1.size) && ((_ON + 1) < $1.size)) { /*20118*/
							$k[$j++] = 0; /*20118*/
							$1.aplot(); /*20118*/
						} else { /*20118*/
							$j -= 2; /*20118*/
						} /*20118*/
					} /*20118*/
				} /*20118*/
				if (($1.i + $1.alnr) == $1.size) { /*20124*/
					$1.i = ($1.i + $1.alnr) - 1; /*20122*/
				} else { /*20124*/
					$1.i = $1.i + $1.alnk; /*20124*/
				} /*20124*/
				$1.stag = 1 - $1.stag; /*20126*/
			} /*20126*/
			for (var _Od = $1.alnk, _Oe = $1.alnk, _Oc = $1.size - 2; _Oe < 0 ? _Od >= _Oc : _Od <= _Oc; _Od += _Oe) { /*20154*/
				$1.i = _Od; /*20129*/
				if (((~~($1.i / $1.alnk)) % 2) != 0) { /*20141*/
					$k[$j++] = $1.pixs; /*20131*/
					$k[$j++] = 0; /*20131*/
					$k[$j++] = $1.i - 1; /*20131*/
					$1.trmv(); /*20131*/
					var _Oj = $k[--$j]; /*20131*/
					$put($k[--$j], _Oj, 0); /*20131*/
					$k[$j++] = $1.pixs; /*20132*/
					$k[$j++] = 0; /*20132*/
					$k[$j++] = $1.i + 1; /*20132*/
					$1.trmv(); /*20132*/
					var _On = $k[--$j]; /*20132*/
					$put($k[--$j], _On, 0); /*20132*/
					$k[$j++] = $1.pixs; /*20133*/
					$k[$j++] = 1; /*20133*/
					$k[$j++] = $1.i - 1; /*20133*/
					$1.trmv(); /*20133*/
					var _Or = $k[--$j]; /*20133*/
					$put($k[--$j], _Or, 0); /*20133*/
					$k[$j++] = $1.pixs; /*20134*/
					$k[$j++] = 1; /*20134*/
					$k[$j++] = $1.i; /*20134*/
					$1.trmv(); /*20134*/
					var _Ov = $k[--$j]; /*20134*/
					$put($k[--$j], _Ov, 0); /*20134*/
					$k[$j++] = $1.pixs; /*20135*/
					$k[$j++] = 1; /*20135*/
					$k[$j++] = $1.i + 1; /*20135*/
					$1.trmv(); /*20135*/
					var _Oz = $k[--$j]; /*20135*/
					$put($k[--$j], _Oz, 0); /*20135*/
					$k[$j++] = $1.pixs; /*20136*/
					$k[$j++] = $1.i - 1; /*20136*/
					$k[$j++] = 0; /*20136*/
					$1.trmv(); /*20136*/
					var _P3 = $k[--$j]; /*20136*/
					$put($k[--$j], _P3, 0); /*20136*/
					$k[$j++] = $1.pixs; /*20137*/
					$k[$j++] = $1.i + 1; /*20137*/
					$k[$j++] = 0; /*20137*/
					$1.trmv(); /*20137*/
					var _P7 = $k[--$j]; /*20137*/
					$put($k[--$j], _P7, 0); /*20137*/
					$k[$j++] = $1.pixs; /*20138*/
					$k[$j++] = $1.i - 1; /*20138*/
					$k[$j++] = 1; /*20138*/
					$1.trmv(); /*20138*/
					var _PB = $k[--$j]; /*20138*/
					$put($k[--$j], _PB, 0); /*20138*/
					$k[$j++] = $1.pixs; /*20139*/
					$k[$j++] = $1.i; /*20139*/
					$k[$j++] = 1; /*20139*/
					$1.trmv(); /*20139*/
					var _PF = $k[--$j]; /*20139*/
					$put($k[--$j], _PF, 0); /*20139*/
					$k[$j++] = $1.pixs; /*20140*/
					$k[$j++] = $1.i + 1; /*20140*/
					$k[$j++] = 1; /*20140*/
					$1.trmv(); /*20140*/
					var _PJ = $k[--$j]; /*20140*/
					$put($k[--$j], _PJ, 0); /*20140*/
				} /*20140*/
				$k[$j++] = $1.pixs; /*20142*/
				$k[$j++] = $1.size - 1; /*20142*/
				$k[$j++] = $1.i - 1; /*20142*/
				$1.trmv(); /*20142*/
				var _PO = $k[--$j]; /*20142*/
				if ($get($k[--$j], _PO) != 1) { /*20153*/
					$k[$j++] = $1.pixs; /*20143*/
					$k[$j++] = $1.size - 1; /*20143*/
					$k[$j++] = $1.i - 1; /*20143*/
					$1.trmv(); /*20143*/
					var _PU = $k[--$j]; /*20143*/
					$put($k[--$j], _PU, 0); /*20143*/
					$k[$j++] = $1.pixs; /*20144*/
					$k[$j++] = $1.size - 2; /*20144*/
					$k[$j++] = $1.i - 1; /*20144*/
					$1.trmv(); /*20144*/
					var _PZ = $k[--$j]; /*20144*/
					$put($k[--$j], _PZ, 0); /*20144*/
					$k[$j++] = $1.pixs; /*20145*/
					$k[$j++] = $1.size - 2; /*20145*/
					$k[$j++] = $1.i; /*20145*/
					$1.trmv(); /*20145*/
					var _Pe = $k[--$j]; /*20145*/
					$put($k[--$j], _Pe, 0); /*20145*/
					$k[$j++] = $1.pixs; /*20146*/
					$k[$j++] = $1.size - 2; /*20146*/
					$k[$j++] = $1.i + 1; /*20146*/
					$1.trmv(); /*20146*/
					var _Pj = $k[--$j]; /*20146*/
					$put($k[--$j], _Pj, 0); /*20146*/
					$k[$j++] = $1.pixs; /*20147*/
					$k[$j++] = $1.size - 1; /*20147*/
					$k[$j++] = $1.i + 1; /*20147*/
					$1.trmv(); /*20147*/
					var _Po = $k[--$j]; /*20147*/
					$put($k[--$j], _Po, 0); /*20147*/
					$k[$j++] = $1.pixs; /*20148*/
					$k[$j++] = $1.i - 1; /*20148*/
					$k[$j++] = $1.size - 1; /*20148*/
					$1.trmv(); /*20148*/
					var _Pt = $k[--$j]; /*20148*/
					$put($k[--$j], _Pt, 0); /*20148*/
					$k[$j++] = $1.pixs; /*20149*/
					$k[$j++] = $1.i - 1; /*20149*/
					$k[$j++] = $1.size - 2; /*20149*/
					$1.trmv(); /*20149*/
					var _Py = $k[--$j]; /*20149*/
					$put($k[--$j], _Py, 0); /*20149*/
					$k[$j++] = $1.pixs; /*20150*/
					$k[$j++] = $1.i; /*20150*/
					$k[$j++] = $1.size - 2; /*20150*/
					$1.trmv(); /*20150*/
					var _Q3 = $k[--$j]; /*20150*/
					$put($k[--$j], _Q3, 0); /*20150*/
					$k[$j++] = $1.pixs; /*20151*/
					$k[$j++] = $1.i + 1; /*20151*/
					$k[$j++] = $1.size - 2; /*20151*/
					$1.trmv(); /*20151*/
					var _Q8 = $k[--$j]; /*20151*/
					$put($k[--$j], _Q8, 0); /*20151*/
					$k[$j++] = $1.pixs; /*20152*/
					$k[$j++] = $1.i + 1; /*20152*/
					$k[$j++] = $1.size - 1; /*20152*/
					$1.trmv(); /*20152*/
					var _QD = $k[--$j]; /*20152*/
					$put($k[--$j], _QD, 0); /*20152*/
				} /*20152*/
			} /*20152*/
		} /*20152*/
		$1.fpat = $a([$a([1, 1, 1, 1, 1, 1, 1, 0]), $a([1, 0, 0, 0, 0, 0, 0, 0]), $a([1, 0, 1, 1, 1, 1, 1, 0]), $a([1, 0, 1, 0, 0, 0, 0, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([1, 0, 1, 0, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*20167*/
		$1.fpat2 = $a([$a([1, 1, 1, 0, 1, 0, 1, 0]), $a([1, 1, 1, 0, 1, 0, 1, 0]), $a([1, 1, 1, 0, 1, 0, 1, 0]), $a([0, 0, 0, 0, 1, 0, 1, 0]), $a([1, 1, 1, 1, 1, 0, 1, 0]), $a([0, 0, 0, 0, 0, 0, 1, 0]), $a([1, 1, 1, 1, 1, 1, 1, 0]), $a([0, 0, 0, 0, 0, 0, 0, 0])]); /*20177*/
		for (var _QZ = 0, _QY = $1.fpat.length - 1; _QZ <= _QY; _QZ += 1) { /*20189*/
			$1.y = _QZ; /*20179*/
			for (var _Qd = 0, _Qc = $get($1.fpat, 0).length - 1; _Qd <= _Qc; _Qd += 1) { /*20188*/
				$1.x = _Qd; /*20181*/
				$1.fpb = $get($get($1.fpat, $1.y), $1.x); /*20182*/
				$1.fpb2 = $get($get($1.fpat2, $1.y), $1.x); /*20183*/
				$k[$j++] = $1.pixs; /*20184*/
				$k[$j++] = $1.x; /*20184*/
				$k[$j++] = $1.y; /*20184*/
				$1.qmv(); /*20184*/
				var _Qs = $k[--$j]; /*20184*/
				$put($k[--$j], _Qs, $1.fpb); /*20184*/
				$k[$j++] = $1.pixs; /*20185*/
				$k[$j++] = ($1.size - $1.x) - 1; /*20185*/
				$k[$j++] = $1.y; /*20185*/
				$1.qmv(); /*20185*/
				var _Qz = $k[--$j]; /*20185*/
				$put($k[--$j], _Qz, $1.fpb); /*20185*/
				$k[$j++] = $1.pixs; /*20186*/
				$k[$j++] = ($1.size - $1.x) - 1; /*20186*/
				$k[$j++] = ($1.size - $1.y) - 1; /*20186*/
				$1.qmv(); /*20186*/
				var _R7 = $k[--$j]; /*20186*/
				$put($k[--$j], _R7, $1.fpb); /*20186*/
				$k[$j++] = $1.pixs; /*20187*/
				$k[$j++] = $1.x; /*20187*/
				$k[$j++] = ($1.size - $1.y) - 1; /*20187*/
				$1.qmv(); /*20187*/
				var _RE = $k[--$j]; /*20187*/
				$put($k[--$j], _RE, $1.fpb2); /*20187*/
			} /*20187*/
		} /*20187*/
		$1.functionmap = $a([$a([$a([0, 8]), $a([$1.size - 1, $1.size - 9])]), $a([$a([1, 8]), $a([$1.size - 2, $1.size - 9])]), $a([$a([2, 8]), $a([$1.size - 3, $1.size - 9])]), $a([$a([3, 8]), $a([$1.size - 4, $1.size - 9])]), $a([$a([4, 8]), $a([$1.size - 5, $1.size - 9])]), $a([$a([5, 8]), $a([$1.size - 6, $1.size - 9])]), $a([$a([6, 8]), $a([$1.size - 7, $1.size - 9])]), $a([$a([7, 8]), $a([$1.size - 8, $1.size - 9])]), $a([$a([8, 8]), $a([$1.size - 9, $1.size - 9])]), $a([$a([8, 7]), $a([$1.size - 9, $1.size - 8])]), $a([$a([8, 6]), $a([$1.size - 9, $1.size - 7])]), $a([$a([8, 5]), $a([$1.size - 9, $1.size - 6])]), $a([$a([8, 4]), $a([$1.size - 9, $1.size - 5])]), $a([$a([8, 3]), $a([$1.size - 9, $1.size - 4])]), $a([$a([8, 2]), $a([$1.size - 9, $1.size - 3])]), $a([$a([8, 1]), $a([$1.size - 9, $1.size - 2])]), $a([$a([8, 0]), $a([$1.size - 9, $1.size - 1])]), $a([$a([$1.size - 9, 0]), $a([8, $1.size - 1])]), $a([$a([$1.size - 9, 1]), $a([8, $1.size - 2])]), $a([$a([$1.size - 9, 2]), $a([8, $1.size - 3])]), $a([$a([$1.size - 9, 3]), $a([8, $1.size - 4])]), $a([$a([$1.size - 9, 4]), $a([8, $1.size - 5])]), $a([$a([$1.size - 9, 5]), $a([8, $1.size - 6])]), $a([$a([$1.size - 9, 6]), $a([8, $1.size - 7])]), $a([$a([$1.size - 9, 7]), $a([8, $1.size - 8])]), $a([$a([$1.size - 9, 8]), $a([8, $1.size - 9])]), $a([$a([$1.size - 8, 8]), $a([7, $1.size - 9])]), $a([$a([$1.size - 7, 8]), $a([6, $1.size - 9])]), $a([$a([$1.size - 6, 8]), $a([5, $1.size - 9])]), $a([$a([$1.size - 5, 8]), $a([4, $1.size - 9])]), $a([$a([$1.size - 4, 8]), $a([3, $1.size - 9])]), $a([$a([$1.size - 3, 8]), $a([2, $1.size - 9])]), $a([$a([$1.size - 2, 8]), $a([1, $1.size - 9])]), $a([$a([$1.size - 1, 8]), $a([0, $1.size - 9])])]); /*20211*/
		var _U1 = $1.functionmap; /*20212*/
		for (var _U2 = 0, _U3 = _U1.length; _U2 < _U3; _U2++) { /*20214*/
			$forall($get(_U1, _U2), function() { /*20213*/
				$forall($k[--$j]); /*20213*/
				$1.qmv(); /*20213*/
				$put($1.pixs, $k[--$j], 0); /*20213*/
			}); /*20213*/
		} /*20213*/
		var _UE = $a([function() {
			$j -= 2; /*20217*/
			$k[$j++] = 1; /*20217*/
		}, function() {
			var _U8 = $k[--$j]; /*20218*/
			var _U9 = $k[--$j]; /*20218*/
			$k[$j++] = (_U9 + _U8) % 2; /*20218*/
		}, function() {
			var _UA = $k[--$j]; /*20219*/
			var _UB = $k[--$j]; /*20219*/
			$k[$j++] = (((_UA + _UB) % 3) + (_UB % 3)) % 2; /*20219*/
		}, function() {
			var _UC = $k[--$j]; /*20220*/
			var _UD = $k[--$j]; /*20220*/
			$k[$j++] = ((_UD % _UC) + ((_UC % _UD) + ((_UC % 3) + (_UD % 3)))) % 2; /*20221*/
		}]); /*20221*/
		$1.maskfuncs = _UE; /*20222*/
		if ($1.mask != -1) { /*20226*/
			$1.maskfuncs = $a([$get($1.maskfuncs, $1.mask - 1)]); /*20224*/
			$1.bestmaskval = $1.mask - 1; /*20225*/
		} /*20225*/
		$1.masks = $a($1.maskfuncs.length); /*20227*/
		for (var _UP = 0, _UO = $1.masks.length - 1; _UP <= _UO; _UP += 1) { /*20241*/
			$1.m = _UP; /*20229*/
			$1.mask = $a($1.size * $1.size); /*20230*/
			for (var _UV = 0, _UU = $1.size - 1; _UV <= _UU; _UV += 1) { /*20239*/
				$1.j = _UV; /*20232*/
				for (var _UY = 0, _UX = $1.size - 1; _UY <= _UX; _UY += 1) { /*20238*/
					$1.i = _UY; /*20234*/
					$k[$j++] = $1.i + 1; /*20235*/
					$k[$j++] = $1.j + 1; /*20235*/
					$get($1.maskfuncs, $1.m)(); /*20235*/
					var _Ue = $k[--$j]; /*20235*/
					$k[$j++] = _Ue == 0; /*20236*/
					$k[$j++] = $1.pixs; /*20236*/
					$k[$j++] = $1.i; /*20236*/
					$k[$j++] = $1.j; /*20236*/
					$1.qmv(); /*20236*/
					var _Ui = $k[--$j]; /*20236*/
					var _Uk = $get($k[--$j], _Ui); /*20236*/
					var _Um = ($k[--$j] && (_Uk == -1)) ? 1 : 0; /*20236*/
					$k[$j++] = _Um; /*20237*/
					$k[$j++] = $1.mask; /*20237*/
					$k[$j++] = $1.i; /*20237*/
					$k[$j++] = $1.j; /*20237*/
					$1.qmv(); /*20237*/
					var _Uq = $k[--$j]; /*20237*/
					var _Ur = $k[--$j]; /*20237*/
					$put(_Ur, _Uq, $k[--$j]); /*20237*/
				} /*20237*/
			} /*20237*/
			$put($1.masks, $1.m, $1.mask); /*20240*/
		} /*20240*/
		$1.posx = 0; /*20244*/
		$1.posy = 0; /*20245*/
		$1.num = 0; /*20246*/
		for (;;) { /*20256*/
			if ($1.posy == $1.size) { /*20248*/
				break; /*20248*/
			} /*20248*/
			$k[$j++] = $1.pixs; /*20249*/
			$k[$j++] = $1.posx; /*20249*/
			$k[$j++] = $1.posy; /*20249*/
			$1.qmv(); /*20249*/
			var _V1 = $k[--$j]; /*20249*/
			if ($get($k[--$j], _V1) == -1) { /*20253*/
				var _V6 = $get($1.cws, ~~($1.num / 8)); /*20250*/
				var _V8 = -(7 - ($1.num % 8)); /*20250*/
				$k[$j++] = ((_V8 < 0 ? _V6 >>> -_V8 : _V6 << _V8)) & 1; /*20251*/
				$k[$j++] = $1.pixs; /*20251*/
				$k[$j++] = $1.posx; /*20251*/
				$k[$j++] = $1.posy; /*20251*/
				$1.qmv(); /*20251*/
				var _VC = $k[--$j]; /*20251*/
				var _VD = $k[--$j]; /*20251*/
				$put(_VD, _VC, $k[--$j]); /*20251*/
				$1.num = $1.num + 1; /*20252*/
			} /*20252*/
			$1.posx = $1.posx + 1; /*20254*/
			if ($1.posx == $1.size) { /*20255*/
				$1.posx = 0; /*20255*/
				$1.posy = $1.posy + 1; /*20255*/
			} /*20255*/
		} /*20255*/
		$1.evalfulln1n3 = function() {
			$1.scrle = $k[--$j]; /*20260*/
			$k[$j++] = "scr1"; /*20262*/
			$k[$j++] = 0; /*20262*/
			$forall($1.scrle, function() { /*20262*/
				var _VM = $k[--$j]; /*20262*/
				$k[$j++] = _VM; /*20262*/
				if (_VM >= 3) { /*20262*/
					var _VN = $k[--$j]; /*20262*/
					var _VP = $k[--$j] + (_VN * 4); /*20262*/
					$k[$j++] = _VP; /*20262*/
					$k[$j++] = _VP; /*20262*/
				} /*20262*/
				$j--; /*20262*/
			}); /*20262*/
			var _VQ = $k[--$j]; /*20262*/
			$1[$k[--$j]] = _VQ; /*20262*/
			$1.scr3 = 0; /*20263*/
			for (var _VU = 5, _VT = $1.scrle.length - 1; _VU <= _VT; _VU += 2) { /*20279*/
				$1.j = _VU; /*20266*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*20278*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*20268*/
					$forall($geti($1.scrle, $1.j - 4, 4), function() { /*20269*/
						var _Vf = $k[--$j]; /*20269*/
						$k[$j++] = _Vf == $1.fact; /*20269*/
					}); /*20269*/
					var _Vg = $k[--$j]; /*20269*/
					var _Vh = $k[--$j]; /*20269*/
					var _Vi = $k[--$j]; /*20269*/
					if ($k[--$j] && (_Vi && (_Vh && _Vg))) { /*20277*/
						if (($1.j == 5) || (($1.j + 2) >= $1.scrle.length)) { /*20274*/
							$1.scr3 = $1.scr3 + 50; /*20271*/
						} else { /*20274*/
							if (($get($1.scrle, $1.j - 5) >= 3) || ($get($1.scrle, $1.j + 1) >= 3)) { /*20275*/
								$1.scr3 = $1.scr3 + 50; /*20274*/
							} /*20274*/
						} /*20274*/
					} /*20274*/
				} /*20274*/
			} /*20274*/
			for (var _Vx = 1, _Vw = $1.scrle.length - 5; _Vx <= _Vw; _Vx += 2) { /*20295*/
				$1.j = _Vx; /*20282*/
				if (($get($1.scrle, $1.j) % 3) == 0) { /*20294*/
					$1.fact = ~~($get($1.scrle, $1.j) / 3); /*20284*/
					$forall($geti($1.scrle, $1.j + 1, 4), function() { /*20285*/
						var _W8 = $k[--$j]; /*20285*/
						$k[$j++] = _W8 == $1.fact; /*20285*/
					}); /*20285*/
					var _W9 = $k[--$j]; /*20285*/
					var _WA = $k[--$j]; /*20285*/
					var _WB = $k[--$j]; /*20285*/
					if ($k[--$j] && (_WB && (_WA && _W9))) { /*20293*/
						if (($1.j == 1) || (($1.j + 6) >= $1.scrle.length)) { /*20290*/
							$1.scr3 = $1.scr3 + 50; /*20287*/
						} else { /*20290*/
							if (($get($1.scrle, $1.j - 1) >= 3) || ($get($1.scrle, $1.j + 5) >= 3)) { /*20291*/
								$1.scr3 = $1.scr3 + 50; /*20290*/
							} /*20290*/
						} /*20290*/
					} /*20290*/
				} /*20290*/
			} /*20290*/
			$k[$j++] = $1.scr1; /*20296*/
			$k[$j++] = $1.scr3; /*20296*/
		}; /*20297*/
		$1.evalfull = function() {
			$1.sym = $k[--$j]; /*20301*/
			$1.n1 = 0; /*20303*/
			$1.n3 = 0; /*20303*/
			$1.rle = $a($1.size + 1); /*20304*/
			$1.lastpairs = $a($1.size); /*20305*/
			$1.thispairs = $a($1.size); /*20306*/
			$1.sizeadd1 = $1.size + 1; /*20307*/
			for (var _Wa = 0, _WZ = $1.size - 1; _Wa <= _WZ; _Wa += 1) { /*20332*/
				$1.i = _Wa; /*20309*/
				$k[$j++] = Infinity; /*20312*/
				var _Wc = $1.size; /*20313*/
				$k[$j++] = 0; /*20315*/
				$k[$j++] = 0; /*20315*/
				for (var _We = $1.i, _Wf = _Wc, _Wd = (_Wc * _Wc) - 1; _Wf < 0 ? _We >= _Wd : _We <= _Wd; _We += _Wf) { /*20315*/
					var _Wh = $get($1.sym, _We); /*20314*/
					var _Wi = $k[--$j]; /*20314*/
					$k[$j++] = _Wh; /*20314*/
					if ($eq(_Wi, _Wh)) { /*20314*/
						var _Wj = $k[--$j]; /*20314*/
						var _Wk = $k[--$j]; /*20314*/
						$k[$j++] = _Wk + 1; /*20314*/
						$k[$j++] = _Wj; /*20314*/
					} else { /*20314*/
						var _Wl = $k[--$j]; /*20314*/
						$k[$j++] = 1; /*20314*/
						$k[$j++] = _Wl; /*20314*/
					} /*20314*/
				} /*20314*/
				$j--; /*20316*/
				var _Wn = $counttomark() + 2; /*20317*/
				$astore($geti($1.rle, 0, _Wn - 2)); /*20317*/
				$1.evalfulln1n3(); /*20318*/
				$1.n3 = $k[--$j] + $1.n3; /*20318*/
				$1.n1 = $k[--$j] + $1.n1; /*20318*/
				$j--; /*20319*/
				$1.symrow = $geti($1.sym, $1.i * $1.size, $1.size); /*20322*/
				$k[$j++] = Infinity; /*20323*/
				$k[$j++] = 0; /*20326*/
				$k[$j++] = 0; /*20326*/
				$forall($1.symrow, function() { /*20326*/
					var _Wz = $k[--$j]; /*20325*/
					var _X0 = $k[--$j]; /*20325*/
					$k[$j++] = _Wz; /*20325*/
					if ($eq(_X0, _Wz)) { /*20325*/
						var _X1 = $k[--$j]; /*20325*/
						var _X2 = $k[--$j]; /*20325*/
						$k[$j++] = _X2 + 1; /*20325*/
						$k[$j++] = _X1; /*20325*/
					} else { /*20325*/
						var _X3 = $k[--$j]; /*20325*/
						$k[$j++] = 1; /*20325*/
						$k[$j++] = _X3; /*20325*/
					} /*20325*/
				}); /*20325*/
				$j--; /*20327*/
				var _X5 = $counttomark() + 2; /*20328*/
				$astore($geti($1.rle, 0, _X5 - 2)); /*20328*/
				$1.evalfulln1n3(); /*20329*/
				$1.n3 = $k[--$j] + $1.n3; /*20329*/
				$1.n1 = $k[--$j] + $1.n1; /*20329*/
				$j--; /*20330*/
			} /*20330*/
			$k[$j++] = $1.n1 + $1.n3; /*20334*/
		}; /*20335*/
		$1.bestscore = 999999999; /*20338*/
		for (var _XF = 0, _XE = $1.masks.length - 1; _XF <= _XE; _XF += 1) { /*20356*/
			$1.m = _XF; /*20340*/
			$1.masksym = $a($1.size * $1.size); /*20341*/
			for (var _XM = 0, _XL = ($1.size * $1.size) - 1; _XM <= _XL; _XM += 1) { /*20345*/
				$1.i = _XM; /*20343*/
				$put($1.masksym, $1.i, $xo($get($1.pixs, $1.i), $get($get($1.masks, $1.m), $1.i))); /*20344*/
			} /*20344*/
			if ($1.masks.length != 1) { /*20354*/
				$k[$j++] = $1.masksym; /*20347*/
				$1.evalfull(); /*20347*/
				$1.score = $k[--$j]; /*20347*/
				if ($1.score < $1.bestscore) { /*20352*/
					$1.bestsym = $1.masksym; /*20349*/
					$1.bestmaskval = $1.m; /*20350*/
					$1.bestscore = $1.score; /*20351*/
				} /*20351*/
			} else { /*20354*/
				$1.bestsym = $1.masksym; /*20354*/
			} /*20354*/
		} /*20354*/
		$1.pixs = $1.bestsym; /*20357*/
		$1.funval = (((((~~(($1.size - 21) / 2)) + 20) * 4) + $1.eclval) * 4) + $1.bestmaskval; /*20360*/
		$k[$j++] = $a([($1.funval & 3840) >>> 8, ($1.funval & 240) >>> 4, $1.funval & 15]); /*20364*/
		$k[$j++] = 4; /*20364*/
		$k[$j++] = 16; /*20364*/
		$k[$j++] = 19; /*20364*/
		$1.rscodes(); /*20364*/
		$1.funvals = $k[--$j]; /*20364*/
		$k[$j++] = Infinity; /*20370*/
		$forall($1.funvals, function() { /*20368*/
			$k[$j++] = 4; /*20367*/
			$1.tobin(); /*20367*/
			$forall($k[--$j], function() { /*20367*/
				var _Xr = $k[--$j]; /*20367*/
				$k[$j++] = _Xr - 48; /*20367*/
			}); /*20367*/
		}); /*20367*/
		$k[$j++] = 0; /*20369*/
		$k[$j++] = 1; /*20369*/
		$k[$j++] = 0; /*20369*/
		$k[$j++] = 1; /*20369*/
		$k[$j++] = 0; /*20369*/
		$k[$j++] = 1; /*20369*/
		$1.funbits = $a(); /*20370*/
		for (var _Xv = 0, _Xu = $1.functionmap.length - 1; _Xv <= _Xu; _Xv += 1) { /*20376*/
			$1.i = _Xv; /*20372*/
			$forall($get($1.functionmap, $1.i), function() { /*20375*/
				var _Y0 = $k[--$j]; /*20374*/
				$k[$j++] = $1.pixs; /*20374*/
				$aload(_Y0); /*20374*/
				$1.qmv(); /*20374*/
				var _Y4 = $k[--$j]; /*20374*/
				$put($k[--$j], _Y4, $get($1.funbits, $1.i)); /*20374*/
			}); /*20374*/
		} /*20374*/
		var _YC = {
			ren: $0.renmatrix,
			pixs: $1.pixs,
			pixx: $1.size,
			pixy: $1.size,
			height: ($1.size * 2) / 72,
			width: ($1.size * 2) / 72,
			opt: $1.options
		}; /*20386*/
		$k[$j++] = _YC; /*20389*/
		if (!$1.dontdraw) { /*20389*/
			$0.renmatrix(); /*20389*/
		} /*20389*/
	};
	$0["gs1-cc"] = function() {
		var $1 = {}; /*20418*/
		$1.options = $k[--$j]; /*20420*/
		$1.barcode = $k[--$j]; /*20421*/
		$1.dontdraw = false; /*20423*/
		$1.ccversion = "a"; /*20424*/
		$1.cccolumns = -1; /*20425*/
		$1.lintype = ""; /*20426*/
		$1.linwidth = -1; /*20427*/
		$forall($1.options, function() { /*20438*/
			var _3 = $k[--$j]; /*20438*/
			$1[$k[--$j]] = _3; /*20438*/
		}); /*20438*/
		$1.cccolumns = ~~$1.cccolumns; /*20440*/
		$1.linwidth = ~~$1.linwidth; /*20441*/
		if ($1.cccolumns == -1) { /*20460*/
			$k[$j++] = Infinity; /*20458*/
			$k[$j++] = "ean13"; /*20451*/
			$k[$j++] = 4; /*20451*/
			$k[$j++] = "upca"; /*20451*/
			$k[$j++] = 4; /*20451*/
			$k[$j++] = "ean8"; /*20451*/
			$k[$j++] = 3; /*20451*/
			$k[$j++] = "upce"; /*20451*/
			$k[$j++] = 2; /*20451*/
			$k[$j++] = "gs1-128"; /*20451*/
			if ($ne($1.ccversion, "c")) { /*20451*/
				$k[$j++] = 4; /*20451*/
			} else { /*20451*/
				$k[$j++] = ~~(($1.linwidth - 52) / 17); /*20451*/
			} /*20451*/
			$k[$j++] = "databaromni"; /*20458*/
			$k[$j++] = 4; /*20458*/
			$k[$j++] = "databarstacked"; /*20458*/
			$k[$j++] = 2; /*20458*/
			$k[$j++] = "databarstackedomni"; /*20458*/
			$k[$j++] = 2; /*20458*/
			$k[$j++] = "databartruncated"; /*20458*/
			$k[$j++] = 4; /*20458*/
			$k[$j++] = "databarlimited"; /*20458*/
			$k[$j++] = 3; /*20458*/
			$k[$j++] = "databarexpanded"; /*20458*/
			$k[$j++] = 4; /*20458*/
			$k[$j++] = "databarexpandedstacked"; /*20458*/
			$k[$j++] = 4; /*20458*/
			$1.cccolumns = $get($d(), $1.lintype); /*20459*/
		} /*20459*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*20464*/
			$1.out = $s($1.in.length); /*20465*/
			$1.j = 0; /*20466*/
			$k[$j++] = $1.in; /*20480*/
			for (;;) { /*20480*/
				$search($k[--$j], "^"); /*20469*/
				if ($k[--$j]) { /*20478*/
					var _J = $k[--$j]; /*20470*/
					$puti($1.out, $1.j, _J); /*20470*/
					$1.j = (_J.length + $1.j) + 1; /*20471*/
					$j--; /*20472*/
					var _N = $k[--$j]; /*20473*/
					$put($1.out, $1.j - 1, ~~$z($geti(_N, 0, 3))); /*20473*/
					$k[$j++] = $geti(_N, 3, _N.length - 3); /*20474*/
				} else { /*20478*/
					var _S = $k[--$j]; /*20476*/
					$puti($1.out, $1.j, _S); /*20476*/
					$1.j = _S.length + $1.j; /*20477*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*20478*/
					break; /*20478*/
				} /*20478*/
			} /*20478*/
		}; /*20481*/
		$1.ais = $a([]); /*20484*/
		$1.vals = $a([]); /*20485*/
		var _b = $1.barcode; /*20486*/
		$k[$j++] = $geti(_b, 1, _b.length - 1); /*20499*/
		for (;;) { /*20499*/
			var _d = $k[--$j]; /*20488*/
			$k[$j++] = _d; /*20488*/
			if ($eq(_d, "")) { /*20488*/
				break; /*20488*/
			} /*20488*/
			$search($k[--$j], ")"); /*20489*/
			$j--; /*20489*/
			var _f = $k[--$j]; /*20490*/
			var _g = $k[--$j]; /*20490*/
			var _h = $k[--$j]; /*20491*/
			$k[$j++] = _f; /*20491*/
			$search(_h, "("); /*20491*/
			if ($k[--$j]) { /*20494*/
				var _j = $k[--$j]; /*20492*/
				var _k = $k[--$j]; /*20492*/
				var _l = $k[--$j]; /*20492*/
				var _m = $k[--$j]; /*20492*/
				$k[$j++] = _l; /*20492*/
				$k[$j++] = _m; /*20492*/
				$k[$j++] = _j; /*20492*/
			} else { /*20494*/
				var _n = $k[--$j]; /*20494*/
				var _o = $k[--$j]; /*20494*/
				$k[$j++] = ""; /*20494*/
				$k[$j++] = _o; /*20494*/
				$k[$j++] = _n; /*20494*/
			} /*20494*/
			$k[$j++] = Infinity; /*20496*/
			$aload($1.ais); /*20496*/
			var _r = $k[$j - 1 - ($counttomark() + 2)]; /*20496*/
			$k[$j++] = _r; /*20496*/
			$1.ais = $a(); /*20496*/
			$k[$j++] = Infinity; /*20497*/
			$aload($1.vals); /*20497*/
			var _v = $k[$j - 1 - ($counttomark() + 1)]; /*20497*/
			$k[$j++] = _v; /*20497*/
			$1.expand(); /*20497*/
			$1.vals = $a(); /*20497*/
			$j -= 2; /*20498*/
		} /*20498*/
		$j--; /*20500*/
		$1.isupper = function() {
			var _x = $k[--$j]; /*20503*/
			$k[$j++] = (_x >= 65) && (_x <= 90); /*20503*/
		}; /*20503*/
		$1.isnum0 = function() {
			var _y = $k[--$j]; /*20504*/
			$k[$j++] = (_y >= 48) && (_y <= 57); /*20504*/
		}; /*20504*/
		$1.isnum1 = function() {
			var _z = $k[--$j]; /*20505*/
			$k[$j++] = (_z >= 49) && (_z <= 57); /*20505*/
		}; /*20505*/
		for (;;) { /*20551*/
			if ($1.ais.length >= 1) { /*20513*/
				if (($eq($get($1.ais, 0), "10") || $eq($get($1.ais, 0), "11")) || $eq($get($1.ais, 0), "17")) { /*20512*/
					$k[$j++] = -1; /*20511*/
					$k[$j++] = "10"; /*20511*/
					break; /*20511*/
				} /*20511*/
			} /*20511*/
			if ($1.ais.length >= 1) { /*20546*/
				if ($eq($get($1.ais, 0), "90")) { /*20545*/
					$1.v = $get($1.vals, 0); /*20518*/
					if ($1.v.length >= 1) { /*20523*/
						$k[$j++] = $get($1.v, 0); /*20520*/
						$1.isupper(); /*20520*/
						if ($k[--$j]) { /*20522*/
							$k[$j++] = 0; /*20521*/
							$k[$j++] = "11"; /*20521*/
							break; /*20521*/
						} /*20521*/
					} /*20521*/
					if ($1.v.length >= 2) { /*20529*/
						$k[$j++] = $get($1.v, 0); /*20525*/
						$1.isnum1(); /*20525*/
						$k[$j++] = $get($1.v, 1); /*20526*/
						$1.isupper(); /*20526*/
						var _1L = $k[--$j]; /*20526*/
						if (($k[--$j] && _1L)) { /*20528*/
							$k[$j++] = 1; /*20527*/
							$k[$j++] = "11"; /*20527*/
							break; /*20527*/
						} /*20527*/
					} /*20527*/
					if ($1.v.length >= 3) { /*20536*/
						$k[$j++] = $get($1.v, 0); /*20531*/
						$1.isnum1(); /*20531*/
						$k[$j++] = $get($1.v, 1); /*20532*/
						$1.isnum0(); /*20532*/
						var _1S = $k[--$j]; /*20532*/
						var _1T = $k[--$j]; /*20532*/
						$k[$j++] = $an(_1T, _1S); /*20533*/
						$k[$j++] = $get($1.v, 2); /*20533*/
						$1.isupper(); /*20533*/
						var _1W = $k[--$j]; /*20533*/
						if (($k[--$j] && _1W)) { /*20535*/
							$k[$j++] = 2; /*20534*/
							$k[$j++] = "11"; /*20534*/
							break; /*20534*/
						} /*20534*/
					} /*20534*/
					if ($1.v.length >= 4) { /*20544*/
						$k[$j++] = $get($1.v, 0); /*20538*/
						$1.isnum1(); /*20538*/
						$k[$j++] = $get($1.v, 1); /*20539*/
						$1.isnum0(); /*20539*/
						var _1d = $k[--$j]; /*20539*/
						var _1e = $k[--$j]; /*20539*/
						$k[$j++] = $an(_1e, _1d); /*20540*/
						$k[$j++] = $get($1.v, 2); /*20540*/
						$1.isnum0(); /*20540*/
						var _1h = $k[--$j]; /*20540*/
						var _1i = $k[--$j]; /*20540*/
						$k[$j++] = $an(_1i, _1h); /*20541*/
						$k[$j++] = $get($1.v, 3); /*20541*/
						$1.isupper(); /*20541*/
						var _1l = $k[--$j]; /*20541*/
						if (($k[--$j] && _1l)) { /*20543*/
							$k[$j++] = 3; /*20542*/
							$k[$j++] = "11"; /*20542*/
							break; /*20542*/
						} /*20542*/
					} /*20542*/
				} /*20542*/
			} /*20542*/
			$k[$j++] = -1; /*20549*/
			$k[$j++] = "0"; /*20549*/
			break; /*20549*/
		} /*20549*/
		$1.method = $k[--$j]; /*20552*/
		$1.npre = $k[--$j]; /*20553*/
		$1.fnc1 = -1; /*20555*/
		$1.lnumeric = -2; /*20555*/
		$1.lalphanumeric = -3; /*20555*/
		$1.liso646 = -4; /*20555*/
		$1.tobin = function() {
			var _1q = $s($k[--$j]); /*20558*/
			$k[$j++] = _1q; /*20558*/
			for (var _1s = 0, _1r = _1q.length - 1; _1s <= _1r; _1s += 1) { /*20558*/
				var _1t = $k[--$j]; /*20558*/
				$put(_1t, _1s, 48); /*20558*/
				$k[$j++] = _1t; /*20558*/
			} /*20558*/
			var _1u = $k[--$j]; /*20559*/
			var _1x = $cvrs($s(_1u.length), $k[--$j], 2); /*20559*/
			$puti(_1u, _1u.length - _1x.length, _1x); /*20559*/
			$k[$j++] = _1u; /*20559*/
		}; /*20560*/
		$k[$j++] = "alpha"; /*20565*/
		$k[$j++] = Infinity; /*20565*/
		for (var _1y = 65; _1y <= 90; _1y += 1) { /*20563*/
			$k[$j++] = _1y; /*20563*/
			$k[$j++] = _1y - 65; /*20563*/
			$k[$j++] = 5; /*20563*/
			$1.tobin(); /*20563*/
		} /*20563*/
		for (var _1z = 48; _1z <= 57; _1z += 1) { /*20564*/
			$k[$j++] = _1z; /*20564*/
			$k[$j++] = _1z + 4; /*20564*/
			$k[$j++] = 6; /*20564*/
			$1.tobin(); /*20564*/
		} /*20564*/
		$k[$j++] = $1.fnc1; /*20565*/
		$k[$j++] = "11111"; /*20565*/
		var _21 = $d(); /*20565*/
		$1[$k[--$j]] = _21; /*20566*/
		$k[$j++] = "numeric"; /*20578*/
		$k[$j++] = Infinity; /*20578*/
		for (var _23 = 0; _23 <= 119; _23 += 1) { /*20577*/
			var _25 = $strcpy($s(2), "00"); /*20570*/
			var _27 = $cvrs($s(2), _23, 11); /*20570*/
			$puti(_25, 2 - _27.length, _27); /*20571*/
			$k[$j++] = _23; /*20572*/
			$k[$j++] = _25; /*20572*/
			if ($get(_25, 0) == 65) { /*20572*/
				var _29 = $k[--$j]; /*20572*/
				$put(_29, 0, 94); /*20572*/
				$k[$j++] = _29; /*20572*/
			} /*20572*/
			var _2A = $k[--$j]; /*20573*/
			$k[$j++] = _2A; /*20573*/
			if ($get(_2A, 1) == 65) { /*20573*/
				var _2C = $k[--$j]; /*20573*/
				$put(_2C, 1, 94); /*20573*/
				$k[$j++] = _2C; /*20573*/
			} /*20573*/
			var _2D = $k[--$j]; /*20574*/
			var _2G = $strcpy($s(7), "0000000"); /*20575*/
			var _2I = $cvrs($s(7), $k[--$j] + 8, 2); /*20575*/
			$puti(_2G, 7 - _2I.length, _2I); /*20576*/
			$k[$j++] = _2D; /*20576*/
			$k[$j++] = _2G; /*20576*/
		} /*20576*/
		$k[$j++] = $1.lalphanumeric; /*20578*/
		$k[$j++] = "0000"; /*20578*/
		var _2K = $d(); /*20578*/
		$1[$k[--$j]] = _2K; /*20579*/
		$k[$j++] = "alphanumeric"; /*20588*/
		$k[$j++] = Infinity; /*20588*/
		for (var _2M = 48; _2M <= 57; _2M += 1) { /*20582*/
			$k[$j++] = _2M; /*20582*/
			$k[$j++] = _2M - 43; /*20582*/
			$k[$j++] = 5; /*20582*/
			$1.tobin(); /*20582*/
		} /*20582*/
		$k[$j++] = $1.fnc1; /*20584*/
		$k[$j++] = "01111"; /*20584*/
		for (var _2O = 65; _2O <= 90; _2O += 1) { /*20584*/
			$k[$j++] = _2O; /*20584*/
			$k[$j++] = _2O - 33; /*20584*/
			$k[$j++] = 6; /*20584*/
			$1.tobin(); /*20584*/
		} /*20584*/
		$k[$j++] = 42; /*20586*/
		$k[$j++] = "111010"; /*20586*/
		for (var _2P = 44; _2P <= 47; _2P += 1) { /*20586*/
			$k[$j++] = _2P; /*20586*/
			$k[$j++] = _2P + 15; /*20586*/
			$k[$j++] = 6; /*20586*/
			$1.tobin(); /*20586*/
		} /*20586*/
		$k[$j++] = $1.lnumeric; /*20588*/
		$k[$j++] = "000"; /*20588*/
		$k[$j++] = $1.liso646; /*20588*/
		$k[$j++] = "00100"; /*20588*/
		var _2S = $d(); /*20588*/
		$1[$k[--$j]] = _2S; /*20589*/
		$k[$j++] = "iso646"; /*20603*/
		$k[$j++] = Infinity; /*20603*/
		for (var _2U = 48; _2U <= 57; _2U += 1) { /*20592*/
			$k[$j++] = _2U; /*20592*/
			$k[$j++] = _2U - 43; /*20592*/
			$k[$j++] = 5; /*20592*/
			$1.tobin(); /*20592*/
		} /*20592*/
		$k[$j++] = $1.fnc1; /*20594*/
		$k[$j++] = "01111"; /*20594*/
		for (var _2W = 65; _2W <= 90; _2W += 1) { /*20594*/
			$k[$j++] = _2W; /*20594*/
			$k[$j++] = _2W - 1; /*20594*/
			$k[$j++] = 7; /*20594*/
			$1.tobin(); /*20594*/
		} /*20594*/
		for (var _2X = 97; _2X <= 122; _2X += 1) { /*20595*/
			$k[$j++] = _2X; /*20595*/
			$k[$j++] = _2X - 7; /*20595*/
			$k[$j++] = 7; /*20595*/
			$1.tobin(); /*20595*/
		} /*20595*/
		$k[$j++] = 33; /*20598*/
		$k[$j++] = "11101000"; /*20598*/
		$k[$j++] = 34; /*20598*/
		$k[$j++] = "11101001"; /*20598*/
		for (var _2Y = 37; _2Y <= 47; _2Y += 1) { /*20598*/
			$k[$j++] = _2Y; /*20598*/
			$k[$j++] = _2Y + 197; /*20598*/
			$k[$j++] = 8; /*20598*/
			$1.tobin(); /*20598*/
		} /*20598*/
		for (var _2Z = 58; _2Z <= 63; _2Z += 1) { /*20599*/
			$k[$j++] = _2Z; /*20599*/
			$k[$j++] = _2Z + 187; /*20599*/
			$k[$j++] = 8; /*20599*/
			$1.tobin(); /*20599*/
		} /*20599*/
		$k[$j++] = 95; /*20603*/
		$k[$j++] = "11111011"; /*20603*/
		$k[$j++] = 32; /*20603*/
		$k[$j++] = "11111100"; /*20603*/
		$k[$j++] = $1.lnumeric; /*20603*/
		$k[$j++] = "000"; /*20603*/
		$k[$j++] = $1.lalphanumeric; /*20603*/
		$k[$j++] = "00100"; /*20603*/
		var _2c = $d(); /*20603*/
		$1[$k[--$j]] = _2c; /*20604*/
		if ($eq($1.method, "10")) { /*20637*/
			if ($eq($get($1.ais, 0), "11") || $eq($get($1.ais, 0), "17")) { /*20621*/
				var _2k = $get($1.vals, 0); /*20608*/
				var _2p = $strcpy($s(16), "0000000000000000"); /*20612*/
				var _2r = $cvrs($s(16), ((~~$z($geti(_2k, 0, 2))) * 384) + ((((~~$z($geti(_2k, 2, 2))) - 1) * 32) + (~~$z($geti(_2k, 4, 2)))), 2); /*20612*/
				$puti(_2p, 16 - _2r.length, _2r); /*20613*/
				$k[$j++] = _2p; /*20616*/
				$k[$j++] = Infinity; /*20616*/
				var _2s = $k[--$j]; /*20615*/
				var _2t = $k[--$j]; /*20615*/
				$k[$j++] = _2s; /*20615*/
				$k[$j++] = 1; /*20615*/
				$k[$j++] = 0; /*20615*/
				$forall(_2t, function() { /*20615*/
					var _2u = $k[--$j]; /*20615*/
					$k[$j++] = _2u - 48; /*20615*/
				}); /*20615*/
				var _2x = $eq($get($1.ais, 0), "11") ? 0 : 1; /*20616*/
				$k[$j++] = _2x; /*20616*/
				$1.cdf = $a(); /*20617*/
				$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20618*/
				$1.vals = $geti($1.vals, 1, $1.vals.length - 1); /*20619*/
			} else { /*20621*/
				$1.cdf = $a([1, 0, 1, 1]); /*20621*/
			} /*20621*/
			if ($1.ais.length != 0) { /*20634*/
				if ($eq($get($1.ais, 0), "10")) { /*20630*/
					$k[$j++] = Infinity; /*20625*/
					$forall($get($1.vals, 0)); /*20625*/
					$1.gpf = $a(); /*20625*/
					if ($1.ais.length > 1) { /*20626*/
						$k[$j++] = Infinity; /*20626*/
						$aload($1.gpf); /*20626*/
						$k[$j++] = $1.fnc1; /*20626*/
						$1.gpf = $a(); /*20626*/
					} /*20626*/
					$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20627*/
					$1.vals = $geti($1.vals, 1, $1.vals.length - 1); /*20628*/
				} else { /*20630*/
					$1.gpf = $a([$1.fnc1]); /*20630*/
				} /*20630*/
			} else { /*20634*/
				$k[$j++] = Infinity; /*20633*/
				$aload($1.cdf); /*20633*/
				$k[$j++] = 0; /*20633*/
				$k[$j++] = 0; /*20633*/
				$k[$j++] = 0; /*20633*/
				$k[$j++] = 0; /*20633*/
				$k[$j++] = 0; /*20633*/
				$k[$j++] = 1; /*20633*/
				$k[$j++] = 1; /*20633*/
				$k[$j++] = 1; /*20633*/
				$k[$j++] = 1; /*20633*/
				$1.cdf = $a(); /*20633*/
				$1.gpf = $a([]); /*20634*/
			} /*20634*/
			$1.mode = "numeric"; /*20636*/
		} /*20636*/
		if ($eq($1.method, "11")) { /*20730*/
			$1.cdf = $a([1, 1]); /*20640*/
			$1.ai90 = $get($1.vals, 0); /*20641*/
			if (($1.npre + 1) != $1.ai90.length) { /*20645*/
				$k[$j++] = $geti($1.ai90, $1.npre + 1, ($1.ai90.length - $1.npre) - 1); /*20643*/
			} else { /*20645*/
				$k[$j++] = ""; /*20645*/
			} /*20645*/
			$1.ai90rem = $k[--$j]; /*20647*/
			$k[$j++] = "nalpha"; /*20648*/
			$k[$j++] = 0; /*20648*/
			$forall($1.ai90rem, function() { /*20648*/
				var _3e = $k[--$j]; /*20648*/
				if ((_3e >= 65) && (_3e <= 90)) { /*20648*/
					var _3f = $k[--$j]; /*20648*/
					$k[$j++] = _3f + 1; /*20648*/
				} /*20648*/
			}); /*20648*/
			var _3g = $k[--$j]; /*20648*/
			$1[$k[--$j]] = _3g; /*20648*/
			$k[$j++] = "nnums"; /*20649*/
			$k[$j++] = 0; /*20649*/
			$forall($1.ai90rem, function() { /*20649*/
				var _3j = $k[--$j]; /*20649*/
				if ((_3j >= 48) && (_3j <= 57)) { /*20649*/
					var _3k = $k[--$j]; /*20649*/
					$k[$j++] = _3k + 1; /*20649*/
				} /*20649*/
			}); /*20649*/
			var _3l = $k[--$j]; /*20649*/
			$1[$k[--$j]] = _3l; /*20649*/
			$k[$j++] = "mode"; /*20650*/
			if ($gt($1.nalpha, $1.nnums)) { /*20650*/
				$k[$j++] = "alpha"; /*20650*/
			} else { /*20650*/
				$k[$j++] = "numeric"; /*20650*/
			} /*20650*/
			var _3p = $k[--$j]; /*20650*/
			$1[$k[--$j]] = _3p; /*20650*/
			if (($1.nalpha + $1.nnums) != $1.ai90rem.length) { /*20651*/
				$1.mode = "alphanumeric"; /*20651*/
			} /*20651*/
			$k[$j++] = Infinity; /*20657*/
			$aload($1.cdf); /*20653*/
			if ($eq($1.mode, "alphanumeric")) { /*20654*/
				$k[$j++] = 0; /*20654*/
			} /*20654*/
			if ($eq($1.mode, "numeric")) { /*20655*/
				$k[$j++] = 1; /*20655*/
				$k[$j++] = 0; /*20655*/
			} /*20655*/
			if ($eq($1.mode, "alpha")) { /*20656*/
				$k[$j++] = 1; /*20656*/
				$k[$j++] = 1; /*20656*/
			} /*20656*/
			$1.cdf = $a(); /*20657*/
			$k[$j++] = "ais1"; /*20658*/
			if ($1.ais.length > 1) { /*20658*/
				$k[$j++] = $get($1.ais, 1); /*20658*/
			} else { /*20658*/
				$k[$j++] = -1; /*20658*/
			} /*20658*/
			var _42 = $k[--$j]; /*20658*/
			$1[$k[--$j]] = _42; /*20658*/
			$k[$j++] = "vals1"; /*20659*/
			if ($1.vals.length > 1) { /*20659*/
				$k[$j++] = $get($1.vals, 1); /*20659*/
			} else { /*20659*/
				$k[$j++] = -1; /*20659*/
			} /*20659*/
			var _47 = $k[--$j]; /*20659*/
			$1[$k[--$j]] = _47; /*20659*/
			if ($eq($1.ais1, "21") || $eq($1.ais1, "8004")) { /*20663*/
				$k[$j++] = Infinity; /*20661*/
				$aload($1.cdf); /*20661*/
				if ($eq($1.ais1, "21")) { /*20661*/
					$k[$j++] = 1; /*20661*/
					$k[$j++] = 0; /*20661*/
				} else { /*20661*/
					$k[$j++] = 1; /*20661*/
					$k[$j++] = 1; /*20661*/
				} /*20661*/
				$1.cdf = $a(); /*20661*/
			} else { /*20663*/
				$k[$j++] = Infinity; /*20663*/
				$aload($1.cdf); /*20663*/
				$k[$j++] = 0; /*20663*/
				$1.cdf = $a(); /*20663*/
			} /*20663*/
			$k[$j++] = "nval"; /*20665*/
			if ($1.npre != 0) { /*20665*/
				$k[$j++] = ~~$z($geti($1.ai90, 0, $1.npre)); /*20665*/
			} else { /*20665*/
				$k[$j++] = 0; /*20665*/
			} /*20665*/
			var _4K = $k[--$j]; /*20665*/
			$1[$k[--$j]] = _4K; /*20665*/
			$search("BDHIJKLNPQRSTVXZ", $geti($1.ai90, $1.npre, 1)); /*20666*/
			if ($k[--$j]) { /*20670*/
				var _4Q = $k[--$j]; /*20667*/
				var _4R = $k[--$j]; /*20667*/
				var _4S = $k[--$j]; /*20667*/
				$1.aval = _4Q.length; /*20668*/
			} else { /*20670*/
				$j--; /*20670*/
				$1.aval = -1; /*20670*/
			} /*20670*/
			if (($1.nval < 31) && ($1.aval != -1)) { /*20696*/
				var _4W = $strcpy($s(5), "00000"); /*20673*/
				var _4Z = $cvrs($s(5), $1.nval, 2); /*20673*/
				$puti(_4W, 5 - _4Z.length, _4Z); /*20674*/
				$k[$j++] = _4W; /*20675*/
				$k[$j++] = Infinity; /*20675*/
				var _4a = $k[--$j]; /*20675*/
				var _4b = $k[--$j]; /*20675*/
				$k[$j++] = _4a; /*20675*/
				$forall(_4b, function() { /*20675*/
					var _4c = $k[--$j]; /*20675*/
					$k[$j++] = _4c - 48; /*20675*/
				}); /*20675*/
				$1.nbits = $a(); /*20675*/
				var _4f = $strcpy($s(4), "0000"); /*20676*/
				var _4i = $cvrs($s(4), $1.aval, 2); /*20676*/
				$puti(_4f, 4 - _4i.length, _4i); /*20677*/
				$k[$j++] = _4f; /*20678*/
				$k[$j++] = Infinity; /*20678*/
				var _4j = $k[--$j]; /*20678*/
				var _4k = $k[--$j]; /*20678*/
				$k[$j++] = _4j; /*20678*/
				$forall(_4k, function() { /*20678*/
					var _4l = $k[--$j]; /*20678*/
					$k[$j++] = _4l - 48; /*20678*/
				}); /*20678*/
				$1.abits = $a(); /*20678*/
				$k[$j++] = Infinity; /*20683*/
				$aload($1.cdf); /*20680*/
				$aload($1.nbits); /*20681*/
				$aload($1.abits); /*20682*/
				$1.cdf = $a(); /*20683*/
			} else { /*20696*/
				var _4s = $strcpy($s(10), "0000000000"); /*20685*/
				var _4v = $cvrs($s(10), $1.nval, 2); /*20685*/
				$puti(_4s, 10 - _4v.length, _4v); /*20686*/
				$k[$j++] = _4s; /*20687*/
				$k[$j++] = Infinity; /*20687*/
				var _4w = $k[--$j]; /*20687*/
				var _4x = $k[--$j]; /*20687*/
				$k[$j++] = _4w; /*20687*/
				$forall(_4x, function() { /*20687*/
					var _4y = $k[--$j]; /*20687*/
					$k[$j++] = _4y - 48; /*20687*/
				}); /*20687*/
				$1.nbits = $a(); /*20687*/
				var _51 = $strcpy($s(5), "00000"); /*20688*/
				var _56 = $cvrs($s(5), $get($1.ai90, $1.npre) - 65, 2); /*20688*/
				$puti(_51, 5 - _56.length, _56); /*20689*/
				$k[$j++] = _51; /*20690*/
				$k[$j++] = Infinity; /*20690*/
				var _57 = $k[--$j]; /*20690*/
				var _58 = $k[--$j]; /*20690*/
				$k[$j++] = _57; /*20690*/
				$forall(_58, function() { /*20690*/
					var _59 = $k[--$j]; /*20690*/
					$k[$j++] = _59 - 48; /*20690*/
				}); /*20690*/
				$1.abits = $a(); /*20690*/
				$k[$j++] = Infinity; /*20696*/
				$aload($1.cdf); /*20692*/
				$k[$j++] = 1; /*20694*/
				$k[$j++] = 1; /*20694*/
				$k[$j++] = 1; /*20694*/
				$k[$j++] = 1; /*20694*/
				$k[$j++] = 1; /*20694*/
				$aload($1.nbits); /*20694*/
				$aload($1.abits); /*20695*/
				$1.cdf = $a(); /*20696*/
			} /*20696*/
			if ($eq($1.mode, "numeric")) { /*20715*/
				$k[$j++] = Infinity; /*20699*/
				$forall($1.ai90rem); /*20699*/
				if ($1.ais.length > 1) { /*20699*/
					$k[$j++] = $1.fnc1; /*20699*/
				} /*20699*/
				$1.gpf = $a(); /*20699*/
			} else { /*20715*/
				$k[$j++] = "encs"; /*20701*/
				if ($eq($1.mode, "alpha")) { /*20701*/
					$k[$j++] = $1.alpha; /*20701*/
				} else { /*20701*/
					$k[$j++] = $1.alphanumeric; /*20701*/
				} /*20701*/
				var _5N = $k[--$j]; /*20701*/
				$1[$k[--$j]] = _5N; /*20701*/
				$k[$j++] = Infinity; /*20702*/
				$forall($1.ai90rem); /*20702*/
				if ($1.ais.length > 1) { /*20702*/
					$k[$j++] = $1.fnc1; /*20702*/
				} /*20702*/
				$1.in = $a(); /*20702*/
				$1.out = $a($1.in.length * 6); /*20703*/
				$1.j = 0; /*20704*/
				for (var _5X = 0, _5W = $1.in.length - 1; _5X <= _5W; _5X += 1) { /*20709*/
					var _5b = $get($1.encs, $get($1.in, _5X)); /*20706*/
					$k[$j++] = _5b; /*20707*/
					$k[$j++] = _5b; /*20707*/
					$k[$j++] = Infinity; /*20707*/
					var _5c = $k[--$j]; /*20707*/
					var _5d = $k[--$j]; /*20707*/
					$k[$j++] = _5c; /*20707*/
					$forall(_5d, function() { /*20707*/
						var _5e = $k[--$j]; /*20707*/
						$k[$j++] = _5e - 48; /*20707*/
					}); /*20707*/
					$puti($1.out, $1.j, $a()); /*20707*/
					$1.j = $k[--$j].length + $1.j; /*20708*/
				} /*20708*/
				$k[$j++] = Infinity; /*20713*/
				$aload($1.cdf); /*20711*/
				$aload($geti($1.out, 0, $1.j)); /*20712*/
				$1.cdf = $a(); /*20713*/
				$1.gpf = $a([]); /*20714*/
				if (($1.ais.length > 1) || $ne($1.mode, "alpha")) { /*20715*/
					$1.mode = "numeric"; /*20715*/
				} /*20715*/
			} /*20715*/
			$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20717*/
			$1.vals = $geti($1.vals, 1, $1.vals.length - 1); /*20718*/
			if ($1.ais.length != 0) { /*20729*/
				if ($eq($1.ais1, "21") || $eq($1.ais1, "8004")) { /*20728*/
					$k[$j++] = Infinity; /*20724*/
					$aload($1.gpf); /*20722*/
					$forall($1.vals1); /*20723*/
					$1.gpf = $a(); /*20724*/
					$1.ais = $geti($1.ais, 1, $1.ais.length - 1); /*20725*/
					$1.vals = $geti($1.vals, 1, $1.vals.length - 1); /*20726*/
					if ($1.ais.length != 0) { /*20727*/
						$k[$j++] = Infinity; /*20727*/
						$aload($1.gpf); /*20727*/
						$k[$j++] = $1.fnc1; /*20727*/
						$1.gpf = $a(); /*20727*/
					} /*20727*/
				} /*20727*/
			} /*20727*/
		} /*20727*/
		if ($eq($1.method, "0")) { /*20736*/
			$1.cdf = $a([0]); /*20733*/
			$1.gpf = $a([]); /*20734*/
			$1.mode = "numeric"; /*20735*/
		} /*20735*/
		$1.aifixed = {}; /*20741*/
		$k[$j++] = Infinity; /*20743*/
		for (var _6H = 0; _6H <= 4; _6H += 1) { /*20743*/
			$k[$j++] = _6H; /*20743*/
		} /*20743*/
		var _6I = $a(); /*20743*/
		for (var _6J = 0, _6K = _6I.length; _6J < _6K; _6J++) { /*20746*/
			var _6N = $strcpy($s(2), "00"); /*20745*/
			$put(_6N, 1, $get(_6I, _6J) + 48); /*20745*/
			$put($1.aifixed, _6N, _6N); /*20745*/
		} /*20745*/
		$k[$j++] = Infinity; /*20751*/
		for (var _6P = 11; _6P <= 20; _6P += 1) { /*20748*/
			$k[$j++] = _6P; /*20748*/
		} /*20748*/
		$k[$j++] = 23; /*20750*/
		for (var _6Q = 31; _6Q <= 36; _6Q += 1) { /*20750*/
			$k[$j++] = _6Q; /*20750*/
		} /*20750*/
		$k[$j++] = 41; /*20751*/
		var _6R = $a(); /*20751*/
		for (var _6S = 0, _6T = _6R.length; _6S < _6T; _6S++) { /*20754*/
			var _6W = $cvrs($s(2), $get(_6R, _6S), 10); /*20753*/
			$put($1.aifixed, _6W, _6W); /*20753*/
		} /*20753*/
		for (var _6a = 0, _6Z = $1.ais.length - 1; _6a <= _6Z; _6a += 1) { /*20772*/
			$1.i = _6a; /*20758*/
			$1.ai = $get($1.ais, $1.i); /*20759*/
			$1.val = $get($1.vals, $1.i); /*20760*/
			var _6k = $a(($1.gpf.length + $1.ai.length) + $1.val.length); /*20761*/
			$puti(_6k, 0, $1.gpf); /*20762*/
			$k[$j++] = _6k; /*20763*/
			$k[$j++] = _6k; /*20763*/
			$k[$j++] = $1.gpf.length; /*20763*/
			$k[$j++] = $1.ai; /*20763*/
			$k[$j++] = Infinity; /*20763*/
			var _6o = $k[--$j]; /*20763*/
			var _6p = $k[--$j]; /*20763*/
			$k[$j++] = _6o; /*20763*/
			$forall(_6p); /*20763*/
			var _6q = $a(); /*20763*/
			var _6r = $k[--$j]; /*20763*/
			$puti($k[--$j], _6r, _6q); /*20763*/
			var _6t = $k[--$j]; /*20764*/
			$k[$j++] = _6t; /*20764*/
			$k[$j++] = _6t; /*20764*/
			$k[$j++] = $1.gpf.length + $1.ai.length; /*20764*/
			$k[$j++] = $1.val; /*20764*/
			$k[$j++] = Infinity; /*20764*/
			var _6x = $k[--$j]; /*20764*/
			var _6y = $k[--$j]; /*20764*/
			$k[$j++] = _6x; /*20764*/
			$forall(_6y); /*20764*/
			var _6z = $a(); /*20764*/
			var _70 = $k[--$j]; /*20764*/
			$puti($k[--$j], _70, _6z); /*20764*/
			$1.gpf = $k[--$j]; /*20765*/
			var _78 = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*20766*/
			if (($1.i != ($1.ais.length - 1)) && (!_78)) { /*20771*/
				var _7A = $a($1.gpf.length + 1); /*20767*/
				$puti(_7A, 0, $1.gpf); /*20768*/
				$put(_7A, $1.gpf.length, $1.fnc1); /*20769*/
				$1.gpf = _7A; /*20770*/
			} /*20770*/
		} /*20770*/
		$1.rembits = function() {
			$1.used = $k[--$j]; /*20776*/
			if ($ne($1.ccversion, "c")) { /*20805*/
				var _7O = {
					a: $a([$a([167, 138, 118, 108, 88, 78, 59]), $a([167, 138, 118, 98, 78]), $a([197, 167, 138, 108, 78])]),
					b: $a([$a([336, 296, 256, 208, 160, 104, 56]), $a([768, 648, 536, 416, 304, 208, 152, 112, 72, 32]), $a([1184, 1016, 840, 672, 496, 352, 264, 208, 152, 96, 56])])
				}; /*20787*/
				$1.bitcaps = $get($get(_7O, $1.ccversion), $1.cccolumns - 2); /*20789*/
				$k[$j++] = -1; /*20790*/
				$forall($1.bitcaps, function() { /*20790*/
					var _7U = $k[--$j]; /*20790*/
					$k[$j++] = _7U; /*20790*/
					if ($ge(_7U, $1.used)) { /*20790*/
						var _7W = $k[--$j]; /*20790*/
						var _7X = $k[--$j]; /*20790*/
						$k[$j++] = _7W; /*20790*/
						$k[$j++] = _7X; /*20790*/
					} /*20790*/
					$j--; /*20790*/
				}); /*20790*/
				var _7Y = $k[--$j]; /*20791*/
				$k[$j++] = _7Y; /*20791*/
				if (_7Y != -1) { /*20791*/
					var _7a = $k[--$j]; /*20791*/
					$k[$j++] = _7a - $1.used; /*20791*/
				} /*20791*/
			} else { /*20805*/
				var _7b = {
					c: -1
				}; /*20793*/
				var _7d = $get(_7b, $1.ccversion); /*20793*/
				var _7f = ~~Math.ceil($1.used / 8); /*20794*/
				$1.m = ((~~(_7f / 6)) * 5) + (_7f % 6); /*20794*/
				if ($1.m <= 40) { /*20795*/
					$k[$j++] = 8; /*20795*/
				} /*20795*/
				if (($1.m >= 41) && ($1.m <= 160)) { /*20796*/
					$k[$j++] = 16; /*20796*/
				} /*20796*/
				if (($1.m >= 161) && ($1.m <= 320)) { /*20797*/
					$k[$j++] = 32; /*20797*/
				} /*20797*/
				if ($1.m >= 321) { /*20798*/
					$k[$j++] = 64; /*20798*/
				} /*20798*/
				$1.eccws = $k[--$j]; /*20799*/
				$1.m = ($1.m + $1.eccws) + 3; /*20800*/
				$1.c = ~~(($1.linwidth - 52) / 17); /*20801*/
				if ((~~($1.m / $1.c)) > 90) { /*20802*/
					$1.c = $1.c + 1; /*20802*/
				} /*20802*/
				$1.r = ~~Math.ceil($1.m / $1.c); /*20803*/
				var _7y = (($1.c * $1.r) - $1.eccws) - 3; /*20804*/
				$1.tgt = (((~~(_7y / 5)) * 6) + (_7y % 5)) * 8; /*20804*/
				if ($1.used <= 8296) { /*20805*/
					$k[$j++] = $1.tgt - $1.used; /*20805*/
				} else { /*20805*/
					$k[$j++] = -1; /*20805*/
				} /*20805*/
			} /*20805*/
			var _82 = $k[--$j]; /*20807*/
			$k[$j++] = _82; /*20820*/
			if (_82 == -1) { /*20820*/
				$j--; /*20808*/
				if ($eq($1.ccversion, "a")) { /*20816*/
					$1.ccversion = "b"; /*20810*/
				} else { /*20816*/
					if ($eq($1.ccversion, "b") && $eq($1.lintype, "gs1-128")) { /*20816*/
						$1.ccversion = "c"; /*20813*/
						$1.cccolumns = ~~(($1.linwidth - 52) / 17); /*20814*/
					} else { /*20816*/
						$1.ccversion = -1; /*20816*/
					} /*20816*/
				} /*20816*/
				$k[$j++] = $1.used; /*20819*/
				$1.rembits(); /*20819*/
			} /*20819*/
		}; /*20821*/
		$1.encode = function() {
			var _88 = $k[--$j]; /*20824*/
			$k[$j++] = _88; /*20824*/
			if ($ne(_88, "raw")) { /*20824*/
				var _89 = $k[--$j]; /*20824*/
				var _8B = $get(_89, $k[--$j]); /*20824*/
				$k[$j++] = _8B; /*20824*/
			} else { /*20824*/
				$j--; /*20824*/
			} /*20824*/
			$k[$j++] = Infinity; /*20825*/
			var _8C = $k[--$j]; /*20825*/
			var _8D = $k[--$j]; /*20825*/
			$k[$j++] = _8C; /*20825*/
			$forall(_8D, function() { /*20825*/
				var _8E = $k[--$j]; /*20825*/
				$k[$j++] = _8E - 48; /*20825*/
			}); /*20825*/
			var _8F = $a(); /*20825*/
			$puti($1.gpfenc, $1.j, _8F); /*20827*/
			$1.j = _8F.length + $1.j; /*20828*/
		}; /*20829*/
		$k[$j++] = Infinity; /*20832*/
		for (var _8K = 0, _8L = $1.gpf.length; _8K < _8L; _8K++) { /*20832*/
			$k[$j++] = 0; /*20832*/
		} /*20832*/
		$k[$j++] = 0; /*20832*/
		$k[$j++] = -1; /*20832*/
		$1.numericruns = $a(); /*20832*/
		$k[$j++] = Infinity; /*20833*/
		for (var _8O = 0, _8P = $1.gpf.length; _8O < _8P; _8O++) { /*20833*/
			$k[$j++] = 0; /*20833*/
		} /*20833*/
		$k[$j++] = 0; /*20833*/
		$1.alphanumericruns = $a(); /*20833*/
		$k[$j++] = Infinity; /*20834*/
		for (var _8S = 0, _8T = $1.gpf.length; _8S < _8T; _8S++) { /*20834*/
			$k[$j++] = 0; /*20834*/
		} /*20834*/
		$k[$j++] = 9999; /*20834*/
		$1.nextiso646only = $a(); /*20834*/
		for (var _8W = $1.gpf.length - 1; _8W >= 0; _8W -= 1) { /*20856*/
			$1.i = _8W; /*20836*/
			var _8b = $strcpy($s(2), "00"); /*20838*/
			var _8e = $get($1.gpf, $1.i); /*20839*/
			$k[$j++] = $get($1.gpf, $1.i); /*20839*/
			$k[$j++] = _8b; /*20839*/
			$k[$j++] = _8b; /*20839*/
			$k[$j++] = 0; /*20839*/
			$k[$j++] = _8e; /*20839*/
			if (_8e == $1.fnc1) { /*20839*/
				$j--; /*20839*/
				$k[$j++] = 94; /*20839*/
			} /*20839*/
			var _8g = $k[--$j]; /*20839*/
			var _8h = $k[--$j]; /*20839*/
			$put($k[--$j], _8h, _8g); /*20839*/
			if ($1.i < ($1.gpf.length - 1)) { /*20840*/
				var _8l = $k[--$j]; /*20840*/
				var _8o = $get($1.gpf, $1.i + 1); /*20840*/
				$k[$j++] = _8l; /*20840*/
				$k[$j++] = _8l; /*20840*/
				$k[$j++] = 1; /*20840*/
				$k[$j++] = _8o; /*20840*/
				if (_8o == $1.fnc1) { /*20840*/
					$j--; /*20840*/
					$k[$j++] = 94; /*20840*/
				} /*20840*/
				var _8q = $k[--$j]; /*20840*/
				var _8r = $k[--$j]; /*20840*/
				$put($k[--$j], _8r, _8q); /*20840*/
			} /*20840*/
			var _8v = $get($1.numeric, $k[--$j]) !== undefined; /*20841*/
			if (_8v) { /*20844*/
				$put($1.numericruns, $1.i, $get($1.numericruns, $1.i + 2) + 2); /*20842*/
			} else { /*20844*/
				$put($1.numericruns, $1.i, 0); /*20844*/
			} /*20844*/
			var _93 = $k[--$j]; /*20846*/
			var _95 = $get($1.alphanumeric, _93) !== undefined; /*20846*/
			$k[$j++] = _93; /*20850*/
			if (_95) { /*20849*/
				$put($1.alphanumericruns, $1.i, $get($1.alphanumericruns, $1.i + 1) + 1); /*20847*/
			} else { /*20849*/
				$put($1.alphanumericruns, $1.i, 0); /*20849*/
			} /*20849*/
			var _9D = $k[--$j]; /*20851*/
			var _9F = $get($1.iso646, _9D) !== undefined; /*20851*/
			var _9H = $get($1.alphanumeric, _9D) !== undefined; /*20851*/
			if (_9F && (!_9H)) { /*20854*/
				$put($1.nextiso646only, $1.i, 0); /*20852*/
			} else { /*20854*/
				$put($1.nextiso646only, $1.i, $get($1.nextiso646only, $1.i + 1) + 1); /*20854*/
			} /*20854*/
		} /*20854*/
		$1.gpfenc = $a(8296); /*20859*/
		$1.i = 0; /*20860*/
		$1.j = 0; /*20860*/
		for (;;) { /*20950*/
			if ($1.i == $1.gpf.length) { /*20862*/
				break; /*20862*/
			} /*20862*/
			for (;;) { /*20949*/
				if ($eq($1.mode, "numeric")) { /*20898*/
					if ($1.i <= ($1.gpf.length - 2)) { /*20895*/
						var _9V = $s(2); /*20867*/
						var _9Y = $get($1.gpf, $1.i); /*20868*/
						$k[$j++] = _9V; /*20868*/
						$k[$j++] = _9V; /*20868*/
						$k[$j++] = 0; /*20868*/
						$k[$j++] = _9Y; /*20868*/
						if (_9Y == $1.fnc1) { /*20868*/
							$j--; /*20868*/
							$k[$j++] = 94; /*20868*/
						} /*20868*/
						var _9a = $k[--$j]; /*20868*/
						var _9b = $k[--$j]; /*20868*/
						$put($k[--$j], _9b, _9a); /*20868*/
						var _9d = $k[--$j]; /*20869*/
						var _9g = $get($1.gpf, $1.i + 1); /*20869*/
						$k[$j++] = _9d; /*20869*/
						$k[$j++] = _9d; /*20869*/
						$k[$j++] = 1; /*20869*/
						$k[$j++] = _9g; /*20869*/
						if (_9g == $1.fnc1) { /*20869*/
							$j--; /*20869*/
							$k[$j++] = 94; /*20869*/
						} /*20869*/
						var _9i = $k[--$j]; /*20869*/
						var _9j = $k[--$j]; /*20869*/
						$put($k[--$j], _9j, _9i); /*20869*/
						var _9l = $k[--$j]; /*20870*/
						var _9n = $get($1.numeric, _9l) !== undefined; /*20870*/
						$k[$j++] = _9l; /*20874*/
						if (_9n) { /*20874*/
							$k[$j++] = $1.numeric; /*20871*/
							$1.encode(); /*20871*/
							$1.i = $1.i + 2; /*20872*/
							break; /*20873*/
						} /*20873*/
						$j--; /*20875*/
						$k[$j++] = $1.lalphanumeric; /*20876*/
						$k[$j++] = $1.numeric; /*20876*/
						$1.encode(); /*20876*/
						$1.mode = "alphanumeric"; /*20877*/
						break; /*20878*/
					} else { /*20895*/
						var _9u = $get($1.gpf, $1.i); /*20880*/
						if ((_9u < 48) || (_9u > 57)) { /*20884*/
							$k[$j++] = $1.lalphanumeric; /*20881*/
							$k[$j++] = $1.numeric; /*20881*/
							$1.encode(); /*20881*/
							$1.mode = "alphanumeric"; /*20882*/
							break; /*20883*/
						} /*20883*/
						$k[$j++] = "rem"; /*20885*/
						$k[$j++] = $1.cdf.length + $1.j; /*20885*/
						$1.rembits(); /*20885*/
						var _9z = $k[--$j]; /*20885*/
						$1[$k[--$j]] = _9z; /*20885*/
						if (($1.rem >= 4) && ($1.rem <= 6)) { /*20895*/
							var _A6 = $geti($strcpy($s(6), "000000"), 0, $1.rem); /*20887*/
							var _AB = $cvrs($s(4), $get($1.gpf, $1.i) - 47, 2); /*20888*/
							$puti(_A6, 4 - _AB.length, _AB); /*20889*/
							$k[$j++] = _A6; /*20889*/
							$k[$j++] = "raw"; /*20889*/
							$1.encode(); /*20889*/
							$1.i = $1.i + 1; /*20890*/
							break; /*20891*/
						} else { /*20895*/
							var _AD = $s(2); /*20893*/
							$put(_AD, 0, $get($1.gpf, $1.i)); /*20893*/
							$put(_AD, 1, 94); /*20893*/
							$k[$j++] = _AD; /*20893*/
							$k[$j++] = $1.numeric; /*20893*/
							$1.encode(); /*20893*/
							$1.i = $1.i + 1; /*20894*/
							break; /*20895*/
						} /*20895*/
					} /*20895*/
				} /*20895*/
				if ($eq($1.mode, "alphanumeric")) { /*20925*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*20906*/
						$k[$j++] = $1.fnc1; /*20902*/
						$k[$j++] = $1.alphanumeric; /*20902*/
						$1.encode(); /*20902*/
						$1.mode = "numeric"; /*20903*/
						$1.i = $1.i + 1; /*20904*/
						break; /*20905*/
					} /*20905*/
					var _AT = $get($1.gpf, $1.i); /*20907*/
					var _AV = $get($1.iso646, _AT) !== undefined; /*20907*/
					var _AX = $get($1.alphanumeric, _AT) !== undefined; /*20907*/
					if (_AV && (!_AX)) { /*20911*/
						$k[$j++] = $1.liso646; /*20908*/
						$k[$j++] = $1.alphanumeric; /*20908*/
						$1.encode(); /*20908*/
						$1.mode = "iso646"; /*20909*/
						break; /*20910*/
					} /*20910*/
					if ($get($1.numericruns, $1.i) >= 6) { /*20916*/
						$k[$j++] = $1.lnumeric; /*20913*/
						$k[$j++] = $1.alphanumeric; /*20913*/
						$1.encode(); /*20913*/
						$1.mode = "numeric"; /*20914*/
						break; /*20915*/
					} /*20915*/
					var _Ah = $get($1.numericruns, $1.i); /*20917*/
					if ((_Ah >= 4) && ((_Ah + $1.i) == $1.gpf.length)) { /*20921*/
						$k[$j++] = $1.lnumeric; /*20918*/
						$k[$j++] = $1.alphanumeric; /*20918*/
						$1.encode(); /*20918*/
						$1.mode = "numeric"; /*20919*/
						break; /*20920*/
					} /*20920*/
					$k[$j++] = $get($1.gpf, $1.i); /*20922*/
					$k[$j++] = $1.alphanumeric; /*20922*/
					$1.encode(); /*20922*/
					$1.i = $1.i + 1; /*20923*/
					break; /*20924*/
				} /*20924*/
				if ($eq($1.mode, "iso646")) { /*20947*/
					if ($get($1.gpf, $1.i) == $1.fnc1) { /*20933*/
						$k[$j++] = $1.fnc1; /*20929*/
						$k[$j++] = $1.iso646; /*20929*/
						$1.encode(); /*20929*/
						$1.mode = "numeric"; /*20930*/
						$1.i = $1.i + 1; /*20931*/
						break; /*20932*/
					} /*20932*/
					if (($get($1.numericruns, $1.i) >= 4) && ($get($1.nextiso646only, $1.i) >= 10)) { /*20938*/
						$k[$j++] = $1.lnumeric; /*20935*/
						$k[$j++] = $1.iso646; /*20935*/
						$1.encode(); /*20935*/
						$1.mode = "numeric"; /*20936*/
						break; /*20937*/
					} /*20937*/
					if (($get($1.alphanumericruns, $1.i) >= 5) && ($get($1.nextiso646only, $1.i) >= 10)) { /*20943*/
						$k[$j++] = $1.lalphanumeric; /*20940*/
						$k[$j++] = $1.iso646; /*20940*/
						$1.encode(); /*20940*/
						$1.mode = "alphanumeric"; /*20941*/
						break; /*20942*/
					} /*20942*/
					$k[$j++] = $get($1.gpf, $1.i); /*20944*/
					$k[$j++] = $1.iso646; /*20944*/
					$1.encode(); /*20944*/
					$1.i = $1.i + 1; /*20945*/
					break; /*20946*/
				} /*20946*/
			} /*20946*/
		} /*20946*/
		$1.gpf = $geti($1.gpfenc, 0, $1.j); /*20951*/
		$k[$j++] = "pad"; /*20954*/
		$k[$j++] = $1.cdf.length + $1.gpf.length; /*20954*/
		$1.rembits(); /*20954*/
		var _BQ = $a($k[--$j]); /*20954*/
		$1[$k[--$j]] = _BQ; /*20954*/
		if ($1.pad.length > 0) { /*20966*/
			for (var _BV = 0, _BU = $1.pad.length - 1; _BV <= _BU; _BV += 5) { /*20959*/
				$1.i = _BV; /*20957*/
				var _BW = $1.pad; /*20958*/
				var _BX = $1.i; /*20958*/
				var _BY = $a([0, 0, 1, 0, 0]); /*20958*/
				var _BZ = $1.pad; /*20958*/
				var _Ba = $1.i; /*20958*/
				var _Bb = 5; /*20958*/
				var _Bc = _BZ.length - _Ba; /*20958*/
				if ((_BZ.length - _Ba) > 5) { /*20958*/
					var _ = _Bb; /*20958*/
					_Bb = _Bc; /*20958*/
					_Bc = _; /*20958*/
				} /*20958*/
				$puti(_BW, _BX, $geti(_BY, 0, _Bc)); /*20958*/
			} /*20958*/
			if ($eq($1.mode, "numeric")) { /*20962*/
				$k[$j++] = "pad"; /*20961*/
				$k[$j++] = Infinity; /*20961*/
				$k[$j++] = 0; /*20961*/
				$k[$j++] = 0; /*20961*/
				$k[$j++] = 0; /*20961*/
				$k[$j++] = 0; /*20961*/
				$aload($1.pad); /*20961*/
				var _Bi = $geti($a(), 0, $1.pad.length); /*20961*/
				$1[$k[--$j]] = _Bi; /*20961*/
			} /*20961*/
			if ($eq($1.mode, "alpha")) { /*20965*/
				$k[$j++] = "pad"; /*20964*/
				$k[$j++] = Infinity; /*20964*/
				$k[$j++] = 1; /*20964*/
				$k[$j++] = 1; /*20964*/
				$k[$j++] = 1; /*20964*/
				$k[$j++] = 1; /*20964*/
				$k[$j++] = 1; /*20964*/
				$aload($1.pad); /*20964*/
				var _Bo = $geti($a(), 0, $1.pad.length); /*20964*/
				$1[$k[--$j]] = _Bo; /*20964*/
			} /*20964*/
		} /*20964*/
		$k[$j++] = Infinity; /*20973*/
		$aload($1.cdf); /*20970*/
		$aload($1.gpf); /*20971*/
		$aload($1.pad); /*20972*/
		$1.bits = $a(); /*20973*/
		if ($1.ccversion == "a") { /*21028*/
			$k[$j++] = Infinity; /*20979*/
			$k[$j++] = $a([0, 0, 0, 0, 0, 0, 1]); /*20978*/
			for (var _Bw = 0, _Bx = 68; _Bw < _Bx; _Bw++) { /*20978*/
				$k[$j++] = $a(7); /*20978*/
			} /*20978*/
			$1.pwr928 = $a(); /*20979*/
			for (var _C0 = 1; _C0 <= 68; _C0 += 1) { /*20989*/
				$1.j = _C0; /*20981*/
				$1.v = 0; /*20982*/
				for (var _C1 = 6; _C1 >= 1; _C1 -= 1) { /*20987*/
					$1.i = _C1; /*20984*/
					$1.v = ($get($get($1.pwr928, $1.j - 1), $1.i) * 2) + (~~($1.v / 928)); /*20985*/
					$put($get($1.pwr928, $1.j), $1.i, $1.v % 928); /*20986*/
				} /*20986*/
				$put($get($1.pwr928, $1.j), 0, ($get($get($1.pwr928, $1.j - 1), 0) * 2) + (~~($1.v / 928))); /*20988*/
			} /*20988*/
			$k[$j++] = Infinity; /*20990*/
			for (var _CL = 0, _CM = 28; _CL < _CM; _CL++) { /*20990*/
				$k[$j++] = 0; /*20990*/
			} /*20990*/
			$1.cws = $a(); /*20990*/
			$1.b = 0; /*20991*/
			$1.c = 0; /*20991*/
			for (;;) { /*21015*/
				if ($1.b == $1.bits.length) { /*20993*/
					break; /*20993*/
				} /*20993*/
				var _CQ = $1.bits; /*20994*/
				var _CR = $1.b; /*20994*/
				var _CS = $1.bits; /*20994*/
				var _CT = $1.b; /*20994*/
				var _CU = _CS.length - _CT; /*20994*/
				var _CV = 69; /*20994*/
				if (69 > (_CS.length - _CT)) { /*20994*/
					var _ = _CU; /*20994*/
					_CU = _CV; /*20994*/
					_CV = _; /*20994*/
				} /*20994*/
				$1.bs = $geti(_CQ, _CR, _CV); /*20994*/
				$1.bsl = $1.bs.length; /*20995*/
				$1.cs = $geti($1.cws, $1.c, (~~($1.bsl / 10)) + 1); /*20996*/
				$1.csl = $1.cs.length; /*20997*/
				for (var _Cf = 0, _Ce = $1.bsl - 1; _Cf <= _Ce; _Cf += 1) { /*21007*/
					$1.i = _Cf; /*20999*/
					for (var _Ci = 0, _Ch = $1.csl - 1; _Ci <= _Ch; _Ci += 1) { /*21006*/
						$1.j = _Ci; /*21001*/
						var _Cj = $1.cs; /*21002*/
						var _Ck = $1.j; /*21002*/
						$put(_Cj, _Ck, $get(_Cj, _Ck) + ($get($get($1.pwr928, $1.i), ($1.j + 7) - $1.csl) * $get($1.bs, ($1.bsl - $1.i) - 1))); /*21005*/
					} /*21005*/
				} /*21005*/
				for (var _Cx = $1.csl - 1; _Cx >= 1; _Cx -= 1) { /*21012*/
					$1.i = _Cx; /*21009*/
					var _Cy = $1.cs; /*21010*/
					var _Cz = $1.i; /*21010*/
					$put(_Cy, _Cz - 1, $get(_Cy, _Cz - 1) + (~~($get($1.cs, $1.i) / 928))); /*21010*/
					var _D4 = $1.cs; /*21011*/
					var _D5 = $1.i; /*21011*/
					$put(_D4, _D5, $get(_D4, _D5) % 928); /*21011*/
				} /*21011*/
				$1.b = $1.b + $1.bsl; /*21013*/
				$1.c = $1.c + $1.csl; /*21014*/
			} /*21014*/
			$1.cws = $geti($1.cws, 0, $1.c); /*21016*/
			$1.barcode = $s($1.cws.length * 4); /*21017*/
			for (var _DI = 0, _DH = $1.cws.length - 1; _DI <= _DH; _DI += 1) { /*21023*/
				$1.i = _DI; /*21019*/
				var _DK = $strcpy($s(4), "^   "); /*21020*/
				var _DP = $cvrs($s(4), $get($1.cws, $1.i), 10); /*21020*/
				$puti(_DK, 4 - _DP.length, _DP); /*21021*/
				$puti($1.barcode, $1.i * 4, _DK); /*21022*/
			} /*21022*/
			$1.options.dontdraw = true; /*21024*/
			$1.options.cca = true; /*21025*/
			$1.options.columns = $1.cccolumns; /*21026*/
			$k[$j++] = "args"; /*21027*/
			$k[$j++] = $1.barcode; /*21027*/
			$k[$j++] = $1.options; /*21027*/
			$0.micropdf417(); /*21027*/
			var _DY = $k[--$j]; /*21027*/
			$1[$k[--$j]] = _DY; /*21027*/
		} /*21027*/
		if ($1.ccversion == "b") { /*21041*/
			$1.barcode = $s(~~($1.bits.length / 8)); /*21031*/
			for (var _Df = 0, _De = $1.barcode.length - 1; _Df <= _De; _Df += 1) { /*21036*/
				$1.i = _Df; /*21033*/
				$k[$j++] = 0; /*21034*/
				$forall($geti($1.bits, $1.i * 8, 8), function() { /*21034*/
					var _Dj = $k[--$j]; /*21034*/
					var _Dk = $k[--$j]; /*21034*/
					$k[$j++] = (_Dk + _Dj) * 2; /*21034*/
				}); /*21034*/
				$put($1.barcode, $1.i, ~~($k[--$j] / 2)); /*21035*/
			} /*21035*/
			$1.options.dontdraw = true; /*21037*/
			$1.options.ccb = true; /*21038*/
			$1.options.columns = $1.cccolumns; /*21039*/
			$k[$j++] = "args"; /*21040*/
			$k[$j++] = $1.barcode; /*21040*/
			$k[$j++] = $1.options; /*21040*/
			$0.micropdf417(); /*21040*/
			var _Du = $k[--$j]; /*21040*/
			$1[$k[--$j]] = _Du; /*21040*/
		} /*21040*/
		if ($1.ccversion == "c") { /*21054*/
			$1.barcode = $s(~~($1.bits.length / 8)); /*21044*/
			for (var _E1 = 0, _E0 = $1.barcode.length - 1; _E1 <= _E0; _E1 += 1) { /*21049*/
				$1.i = _E1; /*21046*/
				$k[$j++] = 0; /*21047*/
				$forall($geti($1.bits, $1.i * 8, 8), function() { /*21047*/
					var _E5 = $k[--$j]; /*21047*/
					var _E6 = $k[--$j]; /*21047*/
					$k[$j++] = (_E6 + _E5) * 2; /*21047*/
				}); /*21047*/
				$put($1.barcode, $1.i, ~~($k[--$j] / 2)); /*21048*/
			} /*21048*/
			$1.options.dontdraw = true; /*21050*/
			$1.options.ccc = true; /*21051*/
			$1.options.columns = $1.cccolumns; /*21052*/
			$k[$j++] = "args"; /*21053*/
			$k[$j++] = $1.barcode; /*21053*/
			$k[$j++] = $1.options; /*21053*/
			$0.pdf417(); /*21053*/
			var _EG = $k[--$j]; /*21053*/
			$1[$k[--$j]] = _EG; /*21053*/
		} /*21053*/
		$k[$j++] = $1.args; /*21057*/
		if (!$1.dontdraw) { /*21057*/
			$0.renmatrix(); /*21057*/
		} /*21057*/
	};
	$0.ean13composite = function() {
		var $1 = {}; /*21087*/
		$1.options = $k[--$j]; /*21089*/
		$1.barcode = $k[--$j]; /*21090*/
		$1.dontdraw = false; /*21092*/
		$forall($1.options, function() { /*21103*/
			var _3 = $k[--$j]; /*21103*/
			$1[$k[--$j]] = _3; /*21103*/
		}); /*21103*/
		$search($1.barcode, "|"); /*21106*/
		if ($k[--$j]) { /*21111*/
			$1.linear = $k[--$j]; /*21107*/
			$j--; /*21108*/
			$1.comp = $k[--$j]; /*21109*/
		} else { /*21111*/
			$j--; /*21111*/
		} /*21111*/
		$$.save(); /*21114*/
		$1.options.lintype = "ean13"; /*21116*/
		$1.options.inkspread = "0"; /*21117*/
		$1.options.dontdraw = true; /*21118*/
		$k[$j++] = $1.linear; /*21121*/
		$k[$j++] = $1.options; /*21121*/
		$0.ean13(); /*21121*/
		$0.renlinear(); /*21121*/
		$$.rmoveto(-1, 72); /*21124*/
		$k[$j++] = Infinity; /*21135*/
		$k[$j++] = "ren"; /*21131*/
		$k[$j++] = $0.renmatrix; /*21131*/
		$k[$j++] = "pixs"; /*21131*/
		$k[$j++] = Infinity; /*21131*/
		$k[$j++] = 0; /*21127*/
		$k[$j++] = 1; /*21127*/
		for (var _E = 0, _F = 93; _E < _F; _E++) { /*21127*/
			$k[$j++] = 0; /*21127*/
		} /*21127*/
		$k[$j++] = 1; /*21128*/
		$k[$j++] = 0; /*21128*/
		$k[$j++] = 1; /*21128*/
		$k[$j++] = 0; /*21128*/
		for (var _G = 0, _H = 93; _G < _H; _G++) { /*21128*/
			$k[$j++] = 0; /*21128*/
		} /*21128*/
		$k[$j++] = 0; /*21129*/
		$k[$j++] = 1; /*21129*/
		$k[$j++] = 0; /*21129*/
		$k[$j++] = 1; /*21129*/
		for (var _I = 0, _J = 93; _I < _J; _I++) { /*21129*/
			$k[$j++] = 0; /*21129*/
		} /*21129*/
		$k[$j++] = 1; /*21129*/
		$k[$j++] = 0; /*21129*/
		var _K = $a(); /*21131*/
		$k[$j++] = _K; /*21135*/
		$k[$j++] = "pixx"; /*21135*/
		$k[$j++] = 97; /*21135*/
		$k[$j++] = "pixy"; /*21135*/
		$k[$j++] = 3; /*21135*/
		$k[$j++] = "height"; /*21135*/
		$k[$j++] = 6 / 72; /*21135*/
		$k[$j++] = "width"; /*21135*/
		$k[$j++] = 97 / 72; /*21135*/
		$k[$j++] = "opt"; /*21135*/
		$k[$j++] = $1.options; /*21135*/
		var _M = $d(); /*21135*/
		$k[$j++] = _M; /*21136*/
		$0.renmatrix(); /*21136*/
		$$.rmoveto(-2, 6); /*21139*/
		$k[$j++] = $1.comp; /*21139*/
		$k[$j++] = $1.options; /*21139*/
		$0["gs1-cc"](); /*21139*/
		$0.renmatrix(); /*21139*/
		$$.restore(); /*21141*/
	};
	$0.ean8composite = function() {
		var $1 = {}; /*21171*/
		$1.options = $k[--$j]; /*21173*/
		$1.barcode = $k[--$j]; /*21174*/
		$1.dontdraw = false; /*21176*/
		$forall($1.options, function() { /*21187*/
			var _3 = $k[--$j]; /*21187*/
			$1[$k[--$j]] = _3; /*21187*/
		}); /*21187*/
		$search($1.barcode, "|"); /*21190*/
		if ($k[--$j]) { /*21195*/
			$1.linear = $k[--$j]; /*21191*/
			$j--; /*21192*/
			$1.comp = $k[--$j]; /*21193*/
		} else { /*21195*/
			$j--; /*21195*/
		} /*21195*/
		$$.save(); /*21198*/
		$1.options.lintype = "ean8"; /*21201*/
		$1.options.inkspread = "0"; /*21202*/
		$1.options.dontdraw = true; /*21203*/
		$k[$j++] = $1.linear; /*21206*/
		$k[$j++] = $1.options; /*21206*/
		$0.ean8(); /*21206*/
		$0.renlinear(); /*21206*/
		$$.rmoveto(-1, 72); /*21209*/
		$k[$j++] = Infinity; /*21220*/
		$k[$j++] = "ren"; /*21216*/
		$k[$j++] = $0.renmatrix; /*21216*/
		$k[$j++] = "pixs"; /*21216*/
		$k[$j++] = Infinity; /*21216*/
		$k[$j++] = 0; /*21212*/
		$k[$j++] = 1; /*21212*/
		for (var _E = 0, _F = 65; _E < _F; _E++) { /*21212*/
			$k[$j++] = 0; /*21212*/
		} /*21212*/
		$k[$j++] = 1; /*21213*/
		$k[$j++] = 0; /*21213*/
		$k[$j++] = 1; /*21213*/
		$k[$j++] = 0; /*21213*/
		for (var _G = 0, _H = 65; _G < _H; _G++) { /*21213*/
			$k[$j++] = 0; /*21213*/
		} /*21213*/
		$k[$j++] = 0; /*21214*/
		$k[$j++] = 1; /*21214*/
		$k[$j++] = 0; /*21214*/
		$k[$j++] = 1; /*21214*/
		for (var _I = 0, _J = 65; _I < _J; _I++) { /*21214*/
			$k[$j++] = 0; /*21214*/
		} /*21214*/
		$k[$j++] = 1; /*21214*/
		$k[$j++] = 0; /*21214*/
		var _K = $a(); /*21216*/
		$k[$j++] = _K; /*21220*/
		$k[$j++] = "pixx"; /*21220*/
		$k[$j++] = 69; /*21220*/
		$k[$j++] = "pixy"; /*21220*/
		$k[$j++] = 3; /*21220*/
		$k[$j++] = "height"; /*21220*/
		$k[$j++] = 6 / 72; /*21220*/
		$k[$j++] = "width"; /*21220*/
		$k[$j++] = 69 / 72; /*21220*/
		$k[$j++] = "opt"; /*21220*/
		$k[$j++] = $1.options; /*21220*/
		var _M = $d(); /*21220*/
		$k[$j++] = _M; /*21221*/
		$0.renmatrix(); /*21221*/
		$k[$j++] = $1.comp; /*21224*/
		$k[$j++] = $1.options; /*21224*/
		$0["gs1-cc"](); /*21224*/
		var _P = $k[--$j]; /*21225*/
		$$.rmoveto(69 - _P.pixx, 6); /*21225*/
		$k[$j++] = _P; /*21226*/
		$0.renmatrix(); /*21226*/
		$$.restore(); /*21228*/
	};
	$0.upcacomposite = function() {
		var $1 = {}; /*21258*/
		$1.options = $k[--$j]; /*21260*/
		$1.barcode = $k[--$j]; /*21261*/
		$1.dontdraw = false; /*21263*/
		$forall($1.options, function() { /*21274*/
			var _3 = $k[--$j]; /*21274*/
			$1[$k[--$j]] = _3; /*21274*/
		}); /*21274*/
		$search($1.barcode, "|"); /*21277*/
		if ($k[--$j]) { /*21282*/
			$1.linear = $k[--$j]; /*21278*/
			$j--; /*21279*/
			$1.comp = $k[--$j]; /*21280*/
		} else { /*21282*/
			$j--; /*21282*/
		} /*21282*/
		$$.save(); /*21285*/
		$1.options.lintype = "ean13"; /*21287*/
		$1.options.inkspread = "0"; /*21288*/
		$1.options.dontdraw = true; /*21289*/
		$k[$j++] = $1.linear; /*21292*/
		$k[$j++] = $1.options; /*21292*/
		$0.upca(); /*21292*/
		$0.renlinear(); /*21292*/
		$$.rmoveto(-1, 72); /*21295*/
		$k[$j++] = Infinity; /*21306*/
		$k[$j++] = "ren"; /*21302*/
		$k[$j++] = $0.renmatrix; /*21302*/
		$k[$j++] = "pixs"; /*21302*/
		$k[$j++] = Infinity; /*21302*/
		$k[$j++] = 0; /*21298*/
		$k[$j++] = 1; /*21298*/
		for (var _E = 0, _F = 93; _E < _F; _E++) { /*21298*/
			$k[$j++] = 0; /*21298*/
		} /*21298*/
		$k[$j++] = 1; /*21299*/
		$k[$j++] = 0; /*21299*/
		$k[$j++] = 1; /*21299*/
		$k[$j++] = 0; /*21299*/
		for (var _G = 0, _H = 93; _G < _H; _G++) { /*21299*/
			$k[$j++] = 0; /*21299*/
		} /*21299*/
		$k[$j++] = 0; /*21300*/
		$k[$j++] = 1; /*21300*/
		$k[$j++] = 0; /*21300*/
		$k[$j++] = 1; /*21300*/
		for (var _I = 0, _J = 93; _I < _J; _I++) { /*21300*/
			$k[$j++] = 0; /*21300*/
		} /*21300*/
		$k[$j++] = 1; /*21300*/
		$k[$j++] = 0; /*21300*/
		var _K = $a(); /*21302*/
		$k[$j++] = _K; /*21306*/
		$k[$j++] = "pixx"; /*21306*/
		$k[$j++] = 97; /*21306*/
		$k[$j++] = "pixy"; /*21306*/
		$k[$j++] = 3; /*21306*/
		$k[$j++] = "height"; /*21306*/
		$k[$j++] = 6 / 72; /*21306*/
		$k[$j++] = "width"; /*21306*/
		$k[$j++] = 97 / 72; /*21306*/
		$k[$j++] = "opt"; /*21306*/
		$k[$j++] = $1.options; /*21306*/
		var _M = $d(); /*21306*/
		$k[$j++] = _M; /*21307*/
		$0.renmatrix(); /*21307*/
		$$.rmoveto(-2, 6); /*21310*/
		$k[$j++] = $1.comp; /*21310*/
		$k[$j++] = $1.options; /*21310*/
		$0["gs1-cc"](); /*21310*/
		$0.renmatrix(); /*21310*/
		$$.restore(); /*21312*/
	};
	$0.upcecomposite = function() {
		var $1 = {}; /*21342*/
		$1.options = $k[--$j]; /*21344*/
		$1.barcode = $k[--$j]; /*21345*/
		$1.dontdraw = false; /*21347*/
		$forall($1.options, function() { /*21358*/
			var _3 = $k[--$j]; /*21358*/
			$1[$k[--$j]] = _3; /*21358*/
		}); /*21358*/
		$search($1.barcode, "|"); /*21361*/
		if ($k[--$j]) { /*21366*/
			$1.linear = $k[--$j]; /*21362*/
			$j--; /*21363*/
			$1.comp = $k[--$j]; /*21364*/
		} else { /*21366*/
			$j--; /*21366*/
		} /*21366*/
		$k[$j++] = "sep"; /*21381*/
		$k[$j++] = Infinity; /*21381*/
		$k[$j++] = "ren"; /*21377*/
		$k[$j++] = $0.renmatrix; /*21377*/
		$k[$j++] = "pixs"; /*21377*/
		$k[$j++] = Infinity; /*21377*/
		$k[$j++] = 0; /*21373*/
		$k[$j++] = 1; /*21373*/
		for (var _9 = 0, _A = 49; _9 < _A; _9++) { /*21373*/
			$k[$j++] = 0; /*21373*/
		} /*21373*/
		$k[$j++] = 1; /*21374*/
		$k[$j++] = 0; /*21374*/
		$k[$j++] = 1; /*21374*/
		$k[$j++] = 0; /*21374*/
		for (var _B = 0, _C = 49; _B < _C; _B++) { /*21374*/
			$k[$j++] = 0; /*21374*/
		} /*21374*/
		$k[$j++] = 0; /*21375*/
		$k[$j++] = 1; /*21375*/
		$k[$j++] = 0; /*21375*/
		$k[$j++] = 1; /*21375*/
		for (var _D = 0, _E = 49; _D < _E; _D++) { /*21375*/
			$k[$j++] = 0; /*21375*/
		} /*21375*/
		$k[$j++] = 1; /*21375*/
		$k[$j++] = 0; /*21375*/
		var _F = $a(); /*21377*/
		$k[$j++] = _F; /*21381*/
		$k[$j++] = "pixx"; /*21381*/
		$k[$j++] = 53; /*21381*/
		$k[$j++] = "pixy"; /*21381*/
		$k[$j++] = 3; /*21381*/
		$k[$j++] = "height"; /*21381*/
		$k[$j++] = 6 / 72; /*21381*/
		$k[$j++] = "width"; /*21381*/
		$k[$j++] = 53 / 72; /*21381*/
		$k[$j++] = "opt"; /*21381*/
		$k[$j++] = $1.options; /*21381*/
		var _H = $d(); /*21381*/
		$1[$k[--$j]] = _H; /*21382*/
		$$.save(); /*21384*/
		$1.options.lintype = "upce"; /*21386*/
		$1.options.inkspread = "0"; /*21387*/
		$1.options.dontdraw = true; /*21388*/
		$k[$j++] = $1.linear; /*21391*/
		$k[$j++] = $1.options; /*21391*/
		$0.upce(); /*21391*/
		$0.renlinear(); /*21391*/
		$$.rmoveto(-1, 72); /*21394*/
		$k[$j++] = Infinity; /*21405*/
		$k[$j++] = "ren"; /*21401*/
		$k[$j++] = $0.renmatrix; /*21401*/
		$k[$j++] = "pixs"; /*21401*/
		$k[$j++] = Infinity; /*21401*/
		$k[$j++] = 0; /*21397*/
		$k[$j++] = 1; /*21397*/
		for (var _O = 0, _P = 49; _O < _P; _O++) { /*21397*/
			$k[$j++] = 0; /*21397*/
		} /*21397*/
		$k[$j++] = 1; /*21398*/
		$k[$j++] = 0; /*21398*/
		$k[$j++] = 1; /*21398*/
		$k[$j++] = 0; /*21398*/
		for (var _Q = 0, _R = 49; _Q < _R; _Q++) { /*21398*/
			$k[$j++] = 0; /*21398*/
		} /*21398*/
		$k[$j++] = 0; /*21399*/
		$k[$j++] = 1; /*21399*/
		$k[$j++] = 0; /*21399*/
		$k[$j++] = 1; /*21399*/
		for (var _S = 0, _T = 49; _S < _T; _S++) { /*21399*/
			$k[$j++] = 0; /*21399*/
		} /*21399*/
		$k[$j++] = 1; /*21399*/
		$k[$j++] = 0; /*21399*/
		var _U = $a(); /*21401*/
		$k[$j++] = _U; /*21405*/
		$k[$j++] = "pixx"; /*21405*/
		$k[$j++] = 53; /*21405*/
		$k[$j++] = "pixy"; /*21405*/
		$k[$j++] = 3; /*21405*/
		$k[$j++] = "height"; /*21405*/
		$k[$j++] = 6 / 72; /*21405*/
		$k[$j++] = "width"; /*21405*/
		$k[$j++] = 53 / 72; /*21405*/
		$k[$j++] = "opt"; /*21405*/
		$k[$j++] = $1.options; /*21405*/
		var _W = $d(); /*21405*/
		$k[$j++] = _W; /*21406*/
		$0.renmatrix(); /*21406*/
		$$.rmoveto(-2, 6); /*21409*/
		$k[$j++] = $1.comp; /*21409*/
		$k[$j++] = $1.options; /*21409*/
		$0["gs1-cc"](); /*21409*/
		$0.renmatrix(); /*21409*/
		$$.restore(); /*21411*/
	};
	$0.databaromnicomposite = function() {
		var $1 = {}; /*21441*/
		$1.options = $k[--$j]; /*21443*/
		$1.barcode = $k[--$j]; /*21444*/
		$1.dontdraw = false; /*21446*/
		$forall($1.options, function() { /*21457*/
			var _3 = $k[--$j]; /*21457*/
			$1[$k[--$j]] = _3; /*21457*/
		}); /*21457*/
		$search($1.barcode, "|"); /*21460*/
		if ($k[--$j]) { /*21465*/
			$1.linear = $k[--$j]; /*21461*/
			$j--; /*21462*/
			$1.comp = $k[--$j]; /*21463*/
		} else { /*21465*/
			$j--; /*21465*/
		} /*21465*/
		$$.save(); /*21468*/
		$1.options.lintype = "databaromni"; /*21470*/
		$1.options.linkage = true; /*21471*/
		$1.options.inkspread = "0"; /*21472*/
		$1.options.dontdraw = true; /*21473*/
		$k[$j++] = $1.linear; /*21476*/
		$k[$j++] = $1.options; /*21476*/
		$0.databaromni(); /*21476*/
		var _F = $k[--$j]; /*21477*/
		$1.linsbs = _F.sbs; /*21477*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21478*/
		$k[$j++] = _F; /*21479*/
		$0.renlinear(); /*21479*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21483*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*21496*/
				$1.i = _N; /*21485*/
				if ($get($1.bot, $1.i) == 0) { /*21493*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21490*/
						$k[$j++] = 1; /*21488*/
					} else { /*21490*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21490*/
						$k[$j++] = _X; /*21490*/
					} /*21490*/
				} else { /*21493*/
					$k[$j++] = 0; /*21493*/
				} /*21493*/
				$put($1.sep, $1.i, $k[--$j]); /*21495*/
			} /*21495*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21497*/
			$k[$j++] = true; /*21498*/
			for (var _c = 0; _c <= 12; _c += 1) { /*21498*/
				var _i = $k[--$j]; /*21498*/
				$k[$j++] = _i && $eq($get($1.bot, _c + $1.fp), $get($1.f3, _c)); /*21498*/
			} /*21498*/
			if ($k[--$j]) { /*21501*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21500*/
			} /*21500*/
		}; /*21502*/
		$k[$j++] = Infinity; /*21503*/
		$k[$j++] = 0; /*21504*/
		$forall($1.linsbs, function() { /*21504*/
			var _o = $k[--$j]; /*21504*/
			var _p = $k[--$j]; /*21504*/
			var _q = (_p == 1) ? 0 : 1; /*21504*/
			$k[$j++] = _p; /*21504*/
			for (var _r = 0, _s = _o; _r < _s; _r++) { /*21504*/
				$k[$j++] = _q /*21504*/
			} /*21504*/
		}); /*21504*/
		$astore($a($counttomark() - 1)); /*21505*/
		$1.bot = $k[--$j]; /*21505*/
		$j -= 2; /*21505*/
		$k[$j++] = Infinity; /*21506*/
		$forall($1.bot, function() { /*21506*/
			var _x = $k[--$j]; /*21506*/
			$k[$j++] = 1 - _x; /*21506*/
		}); /*21506*/
		$1.sep = $a(); /*21506*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21507*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21508*/
		$k[$j++] = 18; /*21509*/
		$1.sepfinder(); /*21509*/
		$k[$j++] = 64; /*21509*/
		$1.sepfinder(); /*21509*/
		$$.rmoveto(0, $1.linheight); /*21510*/
		var _19 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21517*/
		$k[$j++] = _19; /*21518*/
		$0.renmatrix(); /*21518*/
		$$.rmoveto(-5, 1); /*21521*/
		$k[$j++] = $1.comp; /*21521*/
		$k[$j++] = $1.options; /*21521*/
		$0["gs1-cc"](); /*21521*/
		$0.renmatrix(); /*21521*/
		$$.restore(); /*21523*/
	};
	$0.databarstackedcomposite = function() {
		var $1 = {}; /*21552*/
		$1.options = $k[--$j]; /*21554*/
		$1.barcode = $k[--$j]; /*21555*/
		$1.dontdraw = false; /*21557*/
		$forall($1.options, function() { /*21568*/
			var _3 = $k[--$j]; /*21568*/
			$1[$k[--$j]] = _3; /*21568*/
		}); /*21568*/
		$search($1.barcode, "|"); /*21571*/
		if ($k[--$j]) { /*21576*/
			$1.linear = $k[--$j]; /*21572*/
			$j--; /*21573*/
			$1.comp = $k[--$j]; /*21574*/
		} else { /*21576*/
			$j--; /*21576*/
		} /*21576*/
		$$.save(); /*21579*/
		$1.options.lintype = "databarstacked"; /*21581*/
		$1.options.linkage = true; /*21582*/
		$1.options.inkspread = "0"; /*21583*/
		$1.options.dontdraw = true; /*21584*/
		$k[$j++] = $1.linear; /*21587*/
		$k[$j++] = $1.options; /*21587*/
		$0.databarstacked(); /*21587*/
		var _F = $k[--$j]; /*21588*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*21588*/
		$1.linheight = _F.pixy; /*21589*/
		$k[$j++] = _F; /*21590*/
		$0.renmatrix(); /*21590*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21594*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*21607*/
				$1.i = _O; /*21596*/
				if ($get($1.bot, $1.i) == 0) { /*21604*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21601*/
						$k[$j++] = 1; /*21599*/
					} else { /*21601*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21601*/
						$k[$j++] = _Y; /*21601*/
					} /*21601*/
				} else { /*21604*/
					$k[$j++] = 0; /*21604*/
				} /*21604*/
				$put($1.sep, $1.i, $k[--$j]); /*21606*/
			} /*21606*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21608*/
			$k[$j++] = true; /*21609*/
			for (var _d = 0; _d <= 12; _d += 1) { /*21609*/
				var _j = $k[--$j]; /*21609*/
				$k[$j++] = _j && $eq($get($1.bot, _d + $1.fp), $get($1.f3, _d)); /*21609*/
			} /*21609*/
			if ($k[--$j]) { /*21612*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21611*/
			} /*21611*/
		}; /*21613*/
		$k[$j++] = Infinity; /*21614*/
		$forall($1.bot, function() { /*21614*/
			var _p = $k[--$j]; /*21614*/
			$k[$j++] = 1 - _p; /*21614*/
		}); /*21614*/
		$1.sep = $a(); /*21614*/
		$puti($1.sep, 0, $a([0, 0, 0, 0])); /*21615*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21616*/
		$k[$j++] = 18; /*21617*/
		$1.sepfinder(); /*21617*/
		$$.rmoveto(0, $1.linheight); /*21618*/
		var _11 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21625*/
		$k[$j++] = _11; /*21626*/
		$0.renmatrix(); /*21626*/
		$$.rmoveto(1, 1); /*21629*/
		$k[$j++] = $1.comp; /*21629*/
		$k[$j++] = $1.options; /*21629*/
		$0["gs1-cc"](); /*21629*/
		$0.renmatrix(); /*21629*/
		$$.restore(); /*21631*/
	};
	$0.databarstackedomnicomposite = function() {
		var $1 = {}; /*21660*/
		$1.options = $k[--$j]; /*21662*/
		$1.barcode = $k[--$j]; /*21663*/
		$1.dontdraw = false; /*21665*/
		$forall($1.options, function() { /*21676*/
			var _3 = $k[--$j]; /*21676*/
			$1[$k[--$j]] = _3; /*21676*/
		}); /*21676*/
		$search($1.barcode, "|"); /*21679*/
		if ($k[--$j]) { /*21684*/
			$1.linear = $k[--$j]; /*21680*/
			$j--; /*21681*/
			$1.comp = $k[--$j]; /*21682*/
		} else { /*21684*/
			$j--; /*21684*/
		} /*21684*/
		$$.save(); /*21687*/
		$1.options.lintype = "databarstackedomni"; /*21689*/
		$1.options.linkage = true; /*21690*/
		$1.options.inkspread = "0"; /*21691*/
		$1.options.dontdraw = true; /*21692*/
		$k[$j++] = $1.linear; /*21695*/
		$k[$j++] = $1.options; /*21695*/
		$0.databarstackedomni(); /*21695*/
		var _F = $k[--$j]; /*21696*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*21696*/
		$1.linheight = _F.pixy; /*21697*/
		$k[$j++] = _F; /*21698*/
		$0.renmatrix(); /*21698*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21702*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*21715*/
				$1.i = _O; /*21704*/
				if ($get($1.bot, $1.i) == 0) { /*21712*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21709*/
						$k[$j++] = 1; /*21707*/
					} else { /*21709*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21709*/
						$k[$j++] = _Y; /*21709*/
					} /*21709*/
				} else { /*21712*/
					$k[$j++] = 0; /*21712*/
				} /*21712*/
				$put($1.sep, $1.i, $k[--$j]); /*21714*/
			} /*21714*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21716*/
			$k[$j++] = true; /*21717*/
			for (var _d = 0; _d <= 12; _d += 1) { /*21717*/
				var _j = $k[--$j]; /*21717*/
				$k[$j++] = _j && $eq($get($1.bot, _d + $1.fp), $get($1.f3, _d)); /*21717*/
			} /*21717*/
			if ($k[--$j]) { /*21720*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21719*/
			} /*21719*/
		}; /*21721*/
		$k[$j++] = Infinity; /*21722*/
		$forall($1.bot, function() { /*21722*/
			var _p = $k[--$j]; /*21722*/
			$k[$j++] = 1 - _p; /*21722*/
		}); /*21722*/
		$1.sep = $a(); /*21722*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21723*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21724*/
		$k[$j++] = 18; /*21725*/
		$1.sepfinder(); /*21725*/
		$$.rmoveto(0, $1.linheight); /*21726*/
		var _11 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21733*/
		$k[$j++] = _11; /*21734*/
		$0.renmatrix(); /*21734*/
		$$.rmoveto(1, 1); /*21737*/
		$k[$j++] = $1.comp; /*21737*/
		$k[$j++] = $1.options; /*21737*/
		$0["gs1-cc"](); /*21737*/
		$0.renmatrix(); /*21737*/
		$$.restore(); /*21739*/
	};
	$0.databartruncatedcomposite = function() {
		var $1 = {}; /*21769*/
		$1.options = $k[--$j]; /*21771*/
		$1.barcode = $k[--$j]; /*21772*/
		$1.dontdraw = false; /*21774*/
		$forall($1.options, function() { /*21785*/
			var _3 = $k[--$j]; /*21785*/
			$1[$k[--$j]] = _3; /*21785*/
		}); /*21785*/
		$search($1.barcode, "|"); /*21788*/
		if ($k[--$j]) { /*21793*/
			$1.linear = $k[--$j]; /*21789*/
			$j--; /*21790*/
			$1.comp = $k[--$j]; /*21791*/
		} else { /*21793*/
			$j--; /*21793*/
		} /*21793*/
		$$.save(); /*21796*/
		$1.options.lintype = "databartruncated"; /*21798*/
		$1.options.linkage = true; /*21799*/
		$1.options.inkspread = "0"; /*21800*/
		$1.options.dontdraw = true; /*21801*/
		$k[$j++] = $1.linear; /*21804*/
		$k[$j++] = $1.options; /*21804*/
		$0.databartruncated(); /*21804*/
		var _F = $k[--$j]; /*21805*/
		$1.linsbs = _F.sbs; /*21805*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21806*/
		$k[$j++] = _F; /*21807*/
		$0.renlinear(); /*21807*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*21811*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*21824*/
				$1.i = _N; /*21813*/
				if ($get($1.bot, $1.i) == 0) { /*21821*/
					if ($get($1.bot, $1.i - 1) == 1) { /*21818*/
						$k[$j++] = 1; /*21816*/
					} else { /*21818*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*21818*/
						$k[$j++] = _X; /*21818*/
					} /*21818*/
				} else { /*21821*/
					$k[$j++] = 0; /*21821*/
				} /*21821*/
				$put($1.sep, $1.i, $k[--$j]); /*21823*/
			} /*21823*/
			$1.f3 = $a([1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1]); /*21825*/
			$k[$j++] = true; /*21826*/
			for (var _c = 0; _c <= 12; _c += 1) { /*21826*/
				var _i = $k[--$j]; /*21826*/
				$k[$j++] = _i && $eq($get($1.bot, _c + $1.fp), $get($1.f3, _c)); /*21826*/
			} /*21826*/
			if ($k[--$j]) { /*21829*/
				$puti($1.sep, $1.fp, $a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0])); /*21828*/
			} /*21828*/
		}; /*21830*/
		$k[$j++] = Infinity; /*21831*/
		$k[$j++] = 0; /*21832*/
		$forall($1.linsbs, function() { /*21832*/
			var _o = $k[--$j]; /*21832*/
			var _p = $k[--$j]; /*21832*/
			var _q = (_p == 1) ? 0 : 1; /*21832*/
			$k[$j++] = _p; /*21832*/
			for (var _r = 0, _s = _o; _r < _s; _r++) { /*21832*/
				$k[$j++] = _q /*21832*/
			} /*21832*/
		}); /*21832*/
		$astore($a($counttomark() - 1)); /*21833*/
		$1.bot = $k[--$j]; /*21833*/
		$j -= 2; /*21833*/
		$k[$j++] = Infinity; /*21834*/
		$forall($1.bot, function() { /*21834*/
			var _x = $k[--$j]; /*21834*/
			$k[$j++] = 1 - _x; /*21834*/
		}); /*21834*/
		$1.sep = $a(); /*21834*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21835*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21836*/
		$k[$j++] = 18; /*21837*/
		$1.sepfinder(); /*21837*/
		$k[$j++] = 64; /*21837*/
		$1.sepfinder(); /*21837*/
		$$.rmoveto(0, $1.linheight); /*21838*/
		var _19 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21845*/
		$k[$j++] = _19; /*21846*/
		$0.renmatrix(); /*21846*/
		$$.rmoveto(-5, 1); /*21849*/
		$k[$j++] = $1.comp; /*21849*/
		$k[$j++] = $1.options; /*21849*/
		$0["gs1-cc"](); /*21849*/
		$0.renmatrix(); /*21849*/
		$$.restore(); /*21851*/
	};
	$0.databarlimitedcomposite = function() {
		var $1 = {}; /*21881*/
		$1.options = $k[--$j]; /*21883*/
		$1.barcode = $k[--$j]; /*21884*/
		$1.dontdraw = false; /*21886*/
		$forall($1.options, function() { /*21897*/
			var _3 = $k[--$j]; /*21897*/
			$1[$k[--$j]] = _3; /*21897*/
		}); /*21897*/
		$search($1.barcode, "|"); /*21900*/
		if ($k[--$j]) { /*21905*/
			$1.linear = $k[--$j]; /*21901*/
			$j--; /*21902*/
			$1.comp = $k[--$j]; /*21903*/
		} else { /*21905*/
			$j--; /*21905*/
		} /*21905*/
		$$.save(); /*21908*/
		$1.options.lintype = "databarlimited"; /*21910*/
		$1.options.linkage = true; /*21911*/
		$1.options.inkspread = "0"; /*21912*/
		$1.options.dontdraw = true; /*21913*/
		$k[$j++] = $1.linear; /*21916*/
		$k[$j++] = $1.options; /*21916*/
		$0.databarlimited(); /*21916*/
		var _F = $k[--$j]; /*21917*/
		$1.linsbs = _F.sbs; /*21917*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*21918*/
		$k[$j++] = _F; /*21919*/
		$0.renlinear(); /*21919*/
		$k[$j++] = Infinity; /*21922*/
		$k[$j++] = 1; /*21923*/
		$forall($1.linsbs, function() { /*21923*/
			var _K = $k[--$j]; /*21923*/
			var _L = $k[--$j]; /*21923*/
			var _M = (_L == 0) ? 1 : 0; /*21923*/
			$k[$j++] = _L; /*21923*/
			for (var _N = 0, _O = _K; _N < _O; _N++) { /*21923*/
				$k[$j++] = _M /*21923*/
			} /*21923*/
		}); /*21923*/
		$astore($a($counttomark() - 1)); /*21924*/
		$1.sep = $k[--$j]; /*21924*/
		$j -= 2; /*21924*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*21925*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*21926*/
		$$.rmoveto(0, $1.linheight); /*21927*/
		var _c = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*21934*/
		$k[$j++] = _c; /*21935*/
		$0.renmatrix(); /*21935*/
		$k[$j++] = $1.comp; /*21938*/
		$k[$j++] = $1.options; /*21938*/
		$0["gs1-cc"](); /*21938*/
		var _f = $k[--$j]; /*21939*/
		$$.rmoveto(72 - _f.pixx, 1); /*21939*/
		$k[$j++] = _f; /*21940*/
		$0.renmatrix(); /*21940*/
		$$.restore(); /*21942*/
	};
	$0.databarexpandedcomposite = function() {
		var $1 = {}; /*21972*/
		$1.options = $k[--$j]; /*21974*/
		$1.barcode = $k[--$j]; /*21975*/
		$1.dontdraw = false; /*21977*/
		$forall($1.options, function() { /*21988*/
			var _3 = $k[--$j]; /*21988*/
			$1[$k[--$j]] = _3; /*21988*/
		}); /*21988*/
		$search($1.barcode, "|"); /*21991*/
		if ($k[--$j]) { /*21996*/
			$1.linear = $k[--$j]; /*21992*/
			$j--; /*21993*/
			$1.comp = $k[--$j]; /*21994*/
		} else { /*21996*/
			$j--; /*21996*/
		} /*21996*/
		$$.save(); /*21999*/
		$1.options.lintype = "databarexpanded"; /*22001*/
		$1.options.linkage = true; /*22002*/
		$1.options.inkspread = "0"; /*22003*/
		$1.options.dontdraw = true; /*22004*/
		$k[$j++] = $1.linear; /*22007*/
		$k[$j++] = $1.options; /*22007*/
		$0.databarexpanded(); /*22007*/
		var _F = $k[--$j]; /*22008*/
		$1.linsbs = _F.sbs; /*22008*/
		$1.linheight = $get(_F.bhs, 0) * 72; /*22009*/
		$k[$j++] = _F; /*22010*/
		$0.renlinear(); /*22010*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*22014*/
			for (var _N = $1.fp, _M = $1.fp + 12; _N <= _M; _N += 1) { /*22027*/
				$1.i = _N; /*22016*/
				if ($get($1.bot, $1.i) == 0) { /*22024*/
					if ($get($1.bot, $1.i - 1) == 1) { /*22021*/
						$k[$j++] = 1; /*22019*/
					} else { /*22021*/
						var _X = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*22021*/
						$k[$j++] = _X; /*22021*/
					} /*22021*/
				} else { /*22024*/
					$k[$j++] = 0; /*22024*/
				} /*22024*/
				$put($1.sep, $1.i, $k[--$j]); /*22026*/
			} /*22026*/
		}; /*22028*/
		$k[$j++] = Infinity; /*22029*/
		$k[$j++] = 0; /*22030*/
		$forall($1.linsbs, function() { /*22030*/
			var _c = $k[--$j]; /*22030*/
			var _d = $k[--$j]; /*22030*/
			var _e = (_d == 1) ? 0 : 1; /*22030*/
			$k[$j++] = _d; /*22030*/
			for (var _f = 0, _g = _c; _f < _g; _f++) { /*22030*/
				$k[$j++] = _e /*22030*/
			} /*22030*/
		}); /*22030*/
		$astore($a($counttomark() - 1)); /*22031*/
		$1.bot = $k[--$j]; /*22031*/
		$j -= 2; /*22031*/
		$k[$j++] = Infinity; /*22032*/
		$forall($1.bot, function() { /*22032*/
			var _l = $k[--$j]; /*22032*/
			$k[$j++] = 1 - _l; /*22032*/
		}); /*22032*/
		$1.sep = $a(); /*22032*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*22033*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*22034*/
		$k[$j++] = Infinity; /*22037*/
		for (var _u = 18, _t = $1.bot.length - 13; _u <= _t; _u += 98) { /*22036*/
			$k[$j++] = _u; /*22036*/
		} /*22036*/
		for (var _x = 69, _w = $1.bot.length - 13; _x <= _w; _x += 98) { /*22037*/
			$k[$j++] = _x; /*22037*/
		} /*22037*/
		var _y = $a(); /*22037*/
		for (var _z = 0, _10 = _y.length; _z < _10; _z++) { /*22038*/
			$k[$j++] = $get(_y, _z); /*22038*/
			$1.sepfinder(); /*22038*/
		} /*22038*/
		$$.rmoveto(0, $1.linheight); /*22039*/
		var _17 = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*22046*/
		$k[$j++] = _17; /*22047*/
		$0.renmatrix(); /*22047*/
		$$.rmoveto(1, 1); /*22050*/
		$k[$j++] = $1.comp; /*22050*/
		$k[$j++] = $1.options; /*22050*/
		$0["gs1-cc"](); /*22050*/
		$0.renmatrix(); /*22050*/
		$$.restore(); /*22052*/
	};
	$0.databarexpandedstackedcomposite = function() {
		var $1 = {}; /*22081*/
		$1.options = $k[--$j]; /*22083*/
		$1.barcode = $k[--$j]; /*22084*/
		$1.dontdraw = false; /*22086*/
		$forall($1.options, function() { /*22097*/
			var _3 = $k[--$j]; /*22097*/
			$1[$k[--$j]] = _3; /*22097*/
		}); /*22097*/
		$search($1.barcode, "|"); /*22100*/
		if ($k[--$j]) { /*22105*/
			$1.linear = $k[--$j]; /*22101*/
			$j--; /*22102*/
			$1.comp = $k[--$j]; /*22103*/
		} else { /*22105*/
			$j--; /*22105*/
		} /*22105*/
		$$.save(); /*22108*/
		$1.options.lintype = "databarexpandedstacked"; /*22110*/
		$1.options.linkage = true; /*22111*/
		$1.options.inkspread = "0"; /*22112*/
		$1.options.dontdraw = true; /*22113*/
		$k[$j++] = $1.linear; /*22116*/
		$k[$j++] = $1.options; /*22116*/
		$0.databarexpandedstacked(); /*22116*/
		var _F = $k[--$j]; /*22117*/
		$1.bot = $geti(_F.pixs, 0, _F.pixx); /*22117*/
		$1.linheight = _F.pixy; /*22118*/
		$k[$j++] = _F; /*22119*/
		$0.renmatrix(); /*22119*/
		$1.sepfinder = function() {
			$1.fp = $k[--$j]; /*22123*/
			for (var _O = $1.fp, _N = $1.fp + 12; _O <= _N; _O += 1) { /*22136*/
				$1.i = _O; /*22125*/
				if ($get($1.bot, $1.i) == 0) { /*22133*/
					if ($get($1.bot, $1.i - 1) == 1) { /*22130*/
						$k[$j++] = 1; /*22128*/
					} else { /*22130*/
						var _Y = ($get($1.sep, $1.i - 1) == 0) ? 1 : 0; /*22130*/
						$k[$j++] = _Y; /*22130*/
					} /*22130*/
				} else { /*22133*/
					$k[$j++] = 0; /*22133*/
				} /*22133*/
				$put($1.sep, $1.i, $k[--$j]); /*22135*/
			} /*22135*/
		}; /*22137*/
		$k[$j++] = Infinity; /*22138*/
		$forall($1.bot, function() { /*22138*/
			var _d = $k[--$j]; /*22138*/
			$k[$j++] = 1 - _d; /*22138*/
		}); /*22138*/
		$1.sep = $a(); /*22138*/
		$puti($1.sep, 0, $a([0, 0, 0])); /*22139*/
		$puti($1.sep, $1.sep.length - 4, $a([0, 0, 0, 0])); /*22140*/
		$k[$j++] = Infinity; /*22143*/
		for (var _m = 19, _l = $1.bot.length - 13; _m <= _l; _m += 98) { /*22142*/
			$k[$j++] = _m; /*22142*/
		} /*22142*/
		for (var _p = 70, _o = $1.bot.length - 13; _p <= _o; _p += 98) { /*22143*/
			$k[$j++] = _p; /*22143*/
		} /*22143*/
		var _q = $a(); /*22143*/
		for (var _r = 0, _s = _q.length; _r < _s; _r++) { /*22144*/
			$k[$j++] = $get(_q, _r); /*22144*/
			$1.sepfinder(); /*22144*/
		} /*22144*/
		$$.rmoveto(0, $1.linheight); /*22145*/
		var _z = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*22152*/
		$k[$j++] = _z; /*22153*/
		$0.renmatrix(); /*22153*/
		var _12 = ($get($1.bot, 0) == 0) ? 2 : 0; /*22156*/
		$$.rmoveto(_12, 1); /*22156*/
		$k[$j++] = $1.comp; /*22157*/
		$k[$j++] = $1.options; /*22157*/
		$0["gs1-cc"](); /*22157*/
		$0.renmatrix(); /*22157*/
		$$.restore(); /*22159*/
	};
	$0["gs1-128composite"] = function() {
		var $1 = {}; /*22189*/
		$1.options = $k[--$j]; /*22191*/
		$1.barcode = $k[--$j]; /*22192*/
		$1.dontdraw = false; /*22194*/
		$forall($1.options, function() { /*22205*/
			var _3 = $k[--$j]; /*22205*/
			$1[$k[--$j]] = _3; /*22205*/
		}); /*22205*/
		$search($1.barcode, "|"); /*22208*/
		if ($k[--$j]) { /*22213*/
			$1.linear = $k[--$j]; /*22209*/
			$j--; /*22210*/
			$1.comp = $k[--$j]; /*22211*/
		} else { /*22213*/
			$j--; /*22213*/
		} /*22213*/
		$$.save(); /*22216*/
		$1.options.inkspread = "0"; /*22218*/
		$1.options.dontdraw = true; /*22219*/
		$1.options.linkagea = true; /*22222*/
		$k[$j++] = $1.linear; /*22223*/
		$k[$j++] = Infinity; /*22223*/
		$forall($1.options); /*22223*/
		var _E = $d(); /*22223*/
		$k[$j++] = _E; /*22223*/
		$0["gs1-128"](); /*22223*/
		var _G = $k[--$j].sbs; /*22224*/
		$k[$j++] = 0; /*22224*/
		$forall(_G, function() { /*22224*/
			var _H = $k[--$j]; /*22224*/
			var _I = $k[--$j]; /*22224*/
			$k[$j++] = _I + _H; /*22224*/
		}); /*22224*/
		$1.linwidth = $k[--$j]; /*22224*/
		$1.options.lintype = "gs1-128"; /*22227*/
		$1.options.linwidth = $1.linwidth; /*22228*/
		$k[$j++] = $1.comp; /*22229*/
		$k[$j++] = $1.options; /*22229*/
		$0["gs1-cc"](); /*22229*/
		$1.compsym = $k[--$j]; /*22229*/
		if ($1.compsym.pixx == 99) { /*22230*/
			$k[$j++] = "a"; /*22230*/
		} else { /*22230*/
			$k[$j++] = "c"; /*22230*/
		} /*22230*/
		$1.linktype = $k[--$j]; /*22230*/
		if ($eq($1.linktype, "a")) { /*22238*/
			$1.options.linkagea = true; /*22234*/
			$1.options.linkagec = false; /*22235*/
		} else { /*22238*/
			$1.options.linkagea = false; /*22237*/
			$1.options.linkagec = true; /*22238*/
		} /*22238*/
		$k[$j++] = $1.linear; /*22240*/
		$k[$j++] = Infinity; /*22240*/
		$forall($1.options); /*22240*/
		var _a = $d(); /*22240*/
		$k[$j++] = _a; /*22240*/
		$0["gs1-128"](); /*22240*/
		var _b = $k[--$j]; /*22241*/
		$1.linsbs = _b.sbs; /*22241*/
		$1.linheight = $get(_b.bhs, 0) * 72; /*22242*/
		$k[$j++] = _b; /*22243*/
		$0.renlinear(); /*22243*/
		$k[$j++] = Infinity; /*22246*/
		$k[$j++] = 1; /*22247*/
		$forall($1.linsbs, function() { /*22247*/
			var _g = $k[--$j]; /*22247*/
			var _h = $k[--$j]; /*22247*/
			var _i = (_h == 0) ? 1 : 0; /*22247*/
			$k[$j++] = _h; /*22247*/
			for (var _j = 0, _k = _g; _j < _k; _j++) { /*22247*/
				$k[$j++] = _i /*22247*/
			} /*22247*/
		}); /*22247*/
		$astore($a($counttomark() - 1)); /*22248*/
		$1.sep = $k[--$j]; /*22248*/
		$j -= 2; /*22248*/
		$$.rmoveto(0, $1.linheight); /*22249*/
		var _t = {
			ren: $0.renmatrix,
			pixs: $1.sep,
			pixx: $1.sep.length,
			pixy: 1,
			height: 1 / 72,
			width: $1.sep.length / 72,
			opt: $1.options
		}; /*22256*/
		$k[$j++] = _t; /*22257*/
		$0.renmatrix(); /*22257*/
		if ($eq($1.linktype, "a")) { /*22266*/
			$1.s = ~~(($1.linwidth - 2) / 11); /*22261*/
			$1.p = ~~(($1.s - 9) / 2); /*22262*/
			$k[$j++] = "x"; /*22263*/
			$k[$j++] = ((($1.s - $1.p) - 1) * 11) + 10; /*22263*/
			if ($1.p == 0) { /*22263*/
				var _10 = $k[--$j]; /*22263*/
				$k[$j++] = _10 + 2; /*22263*/
			} /*22263*/
			var _11 = $k[--$j]; /*22263*/
			$1[$k[--$j]] = _11 - 99; /*22263*/
			$$.rmoveto($1.x, 1); /*22264*/
		} else { /*22266*/
			$$.rmoveto(-7, 1); /*22266*/
		} /*22266*/
		$k[$j++] = $1.compsym; /*22269*/
		$0.renmatrix(); /*22269*/
		$$.restore(); /*22271*/
	};
	$0.gs1datamatrix = function() {
		var $1 = {}; /*22299*/
		$1.options = $k[--$j]; /*22301*/
		$1.barcode = $k[--$j]; /*22302*/
		$1.dontdraw = false; /*22304*/
		$forall($1.options, function() { /*22315*/
			var _3 = $k[--$j]; /*22315*/
			$1[$k[--$j]] = _3; /*22315*/
		}); /*22315*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22319*/
			$1.out = $s($1.in.length); /*22320*/
			$1.j = 0; /*22321*/
			$k[$j++] = $1.in; /*22335*/
			for (;;) { /*22335*/
				$search($k[--$j], "^"); /*22324*/
				if ($k[--$j]) { /*22333*/
					var _B = $k[--$j]; /*22325*/
					$puti($1.out, $1.j, _B); /*22325*/
					$1.j = (_B.length + $1.j) + 1; /*22326*/
					$j--; /*22327*/
					var _F = $k[--$j]; /*22328*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22328*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22329*/
				} else { /*22333*/
					var _K = $k[--$j]; /*22331*/
					$puti($1.out, $1.j, _K); /*22331*/
					$1.j = _K.length + $1.j; /*22332*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22333*/
					break; /*22333*/
				} /*22333*/
			} /*22333*/
		}; /*22336*/
		$1.ais = $a([]); /*22339*/
		$1.vals = $a([]); /*22340*/
		var _T = $1.barcode; /*22341*/
		$k[$j++] = $geti(_T, 1, _T.length - 1); /*22354*/
		for (;;) { /*22354*/
			var _V = $k[--$j]; /*22343*/
			$k[$j++] = _V; /*22343*/
			if ($eq(_V, "")) { /*22343*/
				break; /*22343*/
			} /*22343*/
			$search($k[--$j], ")"); /*22344*/
			$j--; /*22344*/
			var _X = $k[--$j]; /*22345*/
			var _Y = $k[--$j]; /*22345*/
			var _Z = $k[--$j]; /*22346*/
			$k[$j++] = _X; /*22346*/
			$search(_Z, "("); /*22346*/
			if ($k[--$j]) { /*22349*/
				var _b = $k[--$j]; /*22347*/
				var _c = $k[--$j]; /*22347*/
				var _d = $k[--$j]; /*22347*/
				var _e = $k[--$j]; /*22347*/
				$k[$j++] = _d; /*22347*/
				$k[$j++] = _e; /*22347*/
				$k[$j++] = _b; /*22347*/
			} else { /*22349*/
				var _f = $k[--$j]; /*22349*/
				var _g = $k[--$j]; /*22349*/
				$k[$j++] = ""; /*22349*/
				$k[$j++] = _g; /*22349*/
				$k[$j++] = _f; /*22349*/
			} /*22349*/
			$k[$j++] = Infinity; /*22351*/
			$aload($1.ais); /*22351*/
			var _j = $k[$j - 1 - ($counttomark() + 2)]; /*22351*/
			$k[$j++] = _j; /*22351*/
			$1.ais = $a(); /*22351*/
			$k[$j++] = Infinity; /*22352*/
			$aload($1.vals); /*22352*/
			var _n = $k[$j - 1 - ($counttomark() + 1)]; /*22352*/
			$k[$j++] = _n; /*22352*/
			$1.expand(); /*22352*/
			$1.vals = $a(); /*22352*/
			$j -= 2; /*22353*/
		} /*22353*/
		$j--; /*22355*/
		$1.aifixed = {}; /*22360*/
		$k[$j++] = Infinity; /*22362*/
		for (var _p = 0; _p <= 4; _p += 1) { /*22362*/
			$k[$j++] = _p; /*22362*/
		} /*22362*/
		var _q = $a(); /*22362*/
		for (var _r = 0, _s = _q.length; _r < _s; _r++) { /*22365*/
			var _v = $strcpy($s(2), "00"); /*22364*/
			$put(_v, 1, $get(_q, _r) + 48); /*22364*/
			$put($1.aifixed, _v, _v); /*22364*/
		} /*22364*/
		$k[$j++] = Infinity; /*22370*/
		for (var _x = 11; _x <= 20; _x += 1) { /*22367*/
			$k[$j++] = _x; /*22367*/
		} /*22367*/
		$k[$j++] = 23; /*22369*/
		for (var _y = 31; _y <= 36; _y += 1) { /*22369*/
			$k[$j++] = _y; /*22369*/
		} /*22369*/
		$k[$j++] = 41; /*22370*/
		var _z = $a(); /*22370*/
		for (var _10 = 0, _11 = _z.length; _10 < _11; _10++) { /*22373*/
			var _14 = $cvrs($s(2), $get(_z, _10), 10); /*22372*/
			$put($1.aifixed, _14, _14); /*22372*/
		} /*22372*/
		$1.fnc1 = -1; /*22376*/
		$1.dmtx = $a([$1.fnc1]); /*22377*/
		for (var _1A = 0, _19 = $1.ais.length - 1; _1A <= _19; _1A += 1) { /*22393*/
			$1.i = _1A; /*22379*/
			$1.ai = $get($1.ais, $1.i); /*22380*/
			$1.val = $get($1.vals, $1.i); /*22381*/
			var _1K = $a(($1.dmtx.length + $1.ai.length) + $1.val.length); /*22382*/
			$puti(_1K, 0, $1.dmtx); /*22383*/
			$k[$j++] = _1K; /*22384*/
			$k[$j++] = _1K; /*22384*/
			$k[$j++] = $1.dmtx.length; /*22384*/
			$k[$j++] = $1.ai; /*22384*/
			$k[$j++] = Infinity; /*22384*/
			var _1O = $k[--$j]; /*22384*/
			var _1P = $k[--$j]; /*22384*/
			$k[$j++] = _1O; /*22384*/
			$forall(_1P); /*22384*/
			var _1Q = $a(); /*22384*/
			var _1R = $k[--$j]; /*22384*/
			$puti($k[--$j], _1R, _1Q); /*22384*/
			var _1T = $k[--$j]; /*22385*/
			$k[$j++] = _1T; /*22385*/
			$k[$j++] = _1T; /*22385*/
			$k[$j++] = $1.dmtx.length + $1.ai.length; /*22385*/
			$k[$j++] = $1.val; /*22385*/
			$k[$j++] = Infinity; /*22385*/
			var _1X = $k[--$j]; /*22385*/
			var _1Y = $k[--$j]; /*22385*/
			$k[$j++] = _1X; /*22385*/
			$forall(_1Y); /*22385*/
			var _1Z = $a(); /*22385*/
			var _1a = $k[--$j]; /*22385*/
			$puti($k[--$j], _1a, _1Z); /*22385*/
			$1.dmtx = $k[--$j]; /*22386*/
			var _1i = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22387*/
			if (($1.i != ($1.ais.length - 1)) && (!_1i)) { /*22392*/
				var _1k = $a($1.dmtx.length + 1); /*22388*/
				$puti(_1k, 0, $1.dmtx); /*22389*/
				$put(_1k, $1.dmtx.length, $1.fnc1); /*22390*/
				$1.dmtx = _1k; /*22391*/
			} /*22391*/
		} /*22391*/
		$1.barcode = $s(($1.dmtx.length + 1) * 5); /*22396*/
		$1.i = 0; /*22397*/
		$1.j = 0; /*22397*/
		for (;;) { /*22407*/
			if ($1.i == $1.dmtx.length) { /*22398*/
				break; /*22398*/
			} /*22398*/
			var _1u = $get($1.dmtx, $1.i); /*22399*/
			$k[$j++] = _1u; /*22404*/
			if (_1u == $1.fnc1) { /*22403*/
				$j--; /*22400*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22400*/
				$1.j = $1.j + 4; /*22401*/
			} else { /*22403*/
				$put($1.barcode, $1.j, $k[--$j]); /*22403*/
			} /*22403*/
			$1.i = $1.i + 1; /*22405*/
			$1.j = $1.j + 1; /*22406*/
		} /*22406*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22408*/
		$1.options.dontdraw = true; /*22411*/
		$1.options.parsefnc = true; /*22412*/
		$k[$j++] = "args"; /*22413*/
		$k[$j++] = $1.barcode; /*22413*/
		$k[$j++] = $1.options; /*22413*/
		$0.datamatrix(); /*22413*/
		var _2B = $k[--$j]; /*22413*/
		$1[$k[--$j]] = _2B; /*22413*/
		$1.args.opt = $1.options; /*22415*/
		$k[$j++] = $1.args; /*22418*/
		if (!$1.dontdraw) { /*22418*/
			$0.renmatrix(); /*22418*/
		} /*22418*/
	};
	$0.gs1datamatrixrectangular = function() {
		var $1 = {}; /*22446*/
		$1.options = $k[--$j]; /*22448*/
		$1.barcode = $k[--$j]; /*22449*/
		$1.dontdraw = false; /*22451*/
		$forall($1.options, function() { /*22462*/
			var _3 = $k[--$j]; /*22462*/
			$1[$k[--$j]] = _3; /*22462*/
		}); /*22462*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22466*/
			$1.out = $s($1.in.length); /*22467*/
			$1.j = 0; /*22468*/
			$k[$j++] = $1.in; /*22482*/
			for (;;) { /*22482*/
				$search($k[--$j], "^"); /*22471*/
				if ($k[--$j]) { /*22480*/
					var _B = $k[--$j]; /*22472*/
					$puti($1.out, $1.j, _B); /*22472*/
					$1.j = (_B.length + $1.j) + 1; /*22473*/
					$j--; /*22474*/
					var _F = $k[--$j]; /*22475*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22475*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22476*/
				} else { /*22480*/
					var _K = $k[--$j]; /*22478*/
					$puti($1.out, $1.j, _K); /*22478*/
					$1.j = _K.length + $1.j; /*22479*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22480*/
					break; /*22480*/
				} /*22480*/
			} /*22480*/
		}; /*22483*/
		$1.ais = $a([]); /*22486*/
		$1.vals = $a([]); /*22487*/
		var _T = $1.barcode; /*22488*/
		$k[$j++] = $geti(_T, 1, _T.length - 1); /*22501*/
		for (;;) { /*22501*/
			var _V = $k[--$j]; /*22490*/
			$k[$j++] = _V; /*22490*/
			if ($eq(_V, "")) { /*22490*/
				break; /*22490*/
			} /*22490*/
			$search($k[--$j], ")"); /*22491*/
			$j--; /*22491*/
			var _X = $k[--$j]; /*22492*/
			var _Y = $k[--$j]; /*22492*/
			var _Z = $k[--$j]; /*22493*/
			$k[$j++] = _X; /*22493*/
			$search(_Z, "("); /*22493*/
			if ($k[--$j]) { /*22496*/
				var _b = $k[--$j]; /*22494*/
				var _c = $k[--$j]; /*22494*/
				var _d = $k[--$j]; /*22494*/
				var _e = $k[--$j]; /*22494*/
				$k[$j++] = _d; /*22494*/
				$k[$j++] = _e; /*22494*/
				$k[$j++] = _b; /*22494*/
			} else { /*22496*/
				var _f = $k[--$j]; /*22496*/
				var _g = $k[--$j]; /*22496*/
				$k[$j++] = ""; /*22496*/
				$k[$j++] = _g; /*22496*/
				$k[$j++] = _f; /*22496*/
			} /*22496*/
			$k[$j++] = Infinity; /*22498*/
			$aload($1.ais); /*22498*/
			var _j = $k[$j - 1 - ($counttomark() + 2)]; /*22498*/
			$k[$j++] = _j; /*22498*/
			$1.ais = $a(); /*22498*/
			$k[$j++] = Infinity; /*22499*/
			$aload($1.vals); /*22499*/
			var _n = $k[$j - 1 - ($counttomark() + 1)]; /*22499*/
			$k[$j++] = _n; /*22499*/
			$1.expand(); /*22499*/
			$1.vals = $a(); /*22499*/
			$j -= 2; /*22500*/
		} /*22500*/
		$j--; /*22502*/
		$1.aifixed = {}; /*22507*/
		$k[$j++] = Infinity; /*22509*/
		for (var _p = 0; _p <= 4; _p += 1) { /*22509*/
			$k[$j++] = _p; /*22509*/
		} /*22509*/
		var _q = $a(); /*22509*/
		for (var _r = 0, _s = _q.length; _r < _s; _r++) { /*22512*/
			var _v = $strcpy($s(2), "00"); /*22511*/
			$put(_v, 1, $get(_q, _r) + 48); /*22511*/
			$put($1.aifixed, _v, _v); /*22511*/
		} /*22511*/
		$k[$j++] = Infinity; /*22517*/
		for (var _x = 11; _x <= 20; _x += 1) { /*22514*/
			$k[$j++] = _x; /*22514*/
		} /*22514*/
		$k[$j++] = 23; /*22516*/
		for (var _y = 31; _y <= 36; _y += 1) { /*22516*/
			$k[$j++] = _y; /*22516*/
		} /*22516*/
		$k[$j++] = 41; /*22517*/
		var _z = $a(); /*22517*/
		for (var _10 = 0, _11 = _z.length; _10 < _11; _10++) { /*22520*/
			var _14 = $cvrs($s(2), $get(_z, _10), 10); /*22519*/
			$put($1.aifixed, _14, _14); /*22519*/
		} /*22519*/
		$1.fnc1 = -1; /*22523*/
		$1.dmtx = $a([$1.fnc1]); /*22524*/
		for (var _1A = 0, _19 = $1.ais.length - 1; _1A <= _19; _1A += 1) { /*22540*/
			$1.i = _1A; /*22526*/
			$1.ai = $get($1.ais, $1.i); /*22527*/
			$1.val = $get($1.vals, $1.i); /*22528*/
			var _1K = $a(($1.dmtx.length + $1.ai.length) + $1.val.length); /*22529*/
			$puti(_1K, 0, $1.dmtx); /*22530*/
			$k[$j++] = _1K; /*22531*/
			$k[$j++] = _1K; /*22531*/
			$k[$j++] = $1.dmtx.length; /*22531*/
			$k[$j++] = $1.ai; /*22531*/
			$k[$j++] = Infinity; /*22531*/
			var _1O = $k[--$j]; /*22531*/
			var _1P = $k[--$j]; /*22531*/
			$k[$j++] = _1O; /*22531*/
			$forall(_1P); /*22531*/
			var _1Q = $a(); /*22531*/
			var _1R = $k[--$j]; /*22531*/
			$puti($k[--$j], _1R, _1Q); /*22531*/
			var _1T = $k[--$j]; /*22532*/
			$k[$j++] = _1T; /*22532*/
			$k[$j++] = _1T; /*22532*/
			$k[$j++] = $1.dmtx.length + $1.ai.length; /*22532*/
			$k[$j++] = $1.val; /*22532*/
			$k[$j++] = Infinity; /*22532*/
			var _1X = $k[--$j]; /*22532*/
			var _1Y = $k[--$j]; /*22532*/
			$k[$j++] = _1X; /*22532*/
			$forall(_1Y); /*22532*/
			var _1Z = $a(); /*22532*/
			var _1a = $k[--$j]; /*22532*/
			$puti($k[--$j], _1a, _1Z); /*22532*/
			$1.dmtx = $k[--$j]; /*22533*/
			var _1i = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22534*/
			if (($1.i != ($1.ais.length - 1)) && (!_1i)) { /*22539*/
				var _1k = $a($1.dmtx.length + 1); /*22535*/
				$puti(_1k, 0, $1.dmtx); /*22536*/
				$put(_1k, $1.dmtx.length, $1.fnc1); /*22537*/
				$1.dmtx = _1k; /*22538*/
			} /*22538*/
		} /*22538*/
		$1.barcode = $s(($1.dmtx.length + 1) * 5); /*22543*/
		$1.i = 0; /*22544*/
		$1.j = 0; /*22544*/
		for (;;) { /*22554*/
			if ($1.i == $1.dmtx.length) { /*22545*/
				break; /*22545*/
			} /*22545*/
			var _1u = $get($1.dmtx, $1.i); /*22546*/
			$k[$j++] = _1u; /*22551*/
			if (_1u == $1.fnc1) { /*22550*/
				$j--; /*22547*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22547*/
				$1.j = $1.j + 4; /*22548*/
			} else { /*22550*/
				$put($1.barcode, $1.j, $k[--$j]); /*22550*/
			} /*22550*/
			$1.i = $1.i + 1; /*22552*/
			$1.j = $1.j + 1; /*22553*/
		} /*22553*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22555*/
		$1.options.dontdraw = true; /*22558*/
		$1.options.parsefnc = true; /*22559*/
		$1.options.format = "rectangle"; /*22560*/
		$k[$j++] = "args"; /*22561*/
		$k[$j++] = $1.barcode; /*22561*/
		$k[$j++] = $1.options; /*22561*/
		$0.datamatrix(); /*22561*/
		var _2C = $k[--$j]; /*22561*/
		$1[$k[--$j]] = _2C; /*22561*/
		$1.args.opt = $1.options; /*22563*/
		$k[$j++] = $1.args; /*22566*/
		if (!$1.dontdraw) { /*22566*/
			$0.renmatrix(); /*22566*/
		} /*22566*/
	};
	$0.gs1qrcode = function() {
		var $1 = {}; /*22593*/
		$1.options = $k[--$j]; /*22595*/
		$1.barcode = $k[--$j]; /*22596*/
		$1.dontdraw = false; /*22598*/
		$forall($1.options, function() { /*22609*/
			var _3 = $k[--$j]; /*22609*/
			$1[$k[--$j]] = _3; /*22609*/
		}); /*22609*/
		$1.expand = function() {
			$1.in = $k[--$j]; /*22613*/
			$1.out = $s($1.in.length); /*22614*/
			$1.j = 0; /*22615*/
			$k[$j++] = $1.in; /*22629*/
			for (;;) { /*22629*/
				$search($k[--$j], "^"); /*22618*/
				if ($k[--$j]) { /*22627*/
					var _B = $k[--$j]; /*22619*/
					$puti($1.out, $1.j, _B); /*22619*/
					$1.j = (_B.length + $1.j) + 1; /*22620*/
					$j--; /*22621*/
					var _F = $k[--$j]; /*22622*/
					$put($1.out, $1.j - 1, ~~$z($geti(_F, 0, 3))); /*22622*/
					$k[$j++] = $geti(_F, 3, _F.length - 3); /*22623*/
				} else { /*22627*/
					var _K = $k[--$j]; /*22625*/
					$puti($1.out, $1.j, _K); /*22625*/
					$1.j = _K.length + $1.j; /*22626*/
					$k[$j++] = $geti($1.out, 0, $1.j); /*22627*/
					break; /*22627*/
				} /*22627*/
			} /*22627*/
		}; /*22630*/
		$1.ais = $a([]); /*22633*/
		$1.vals = $a([]); /*22634*/
		var _T = $1.barcode; /*22635*/
		$k[$j++] = $geti(_T, 1, _T.length - 1); /*22648*/
		for (;;) { /*22648*/
			var _V = $k[--$j]; /*22637*/
			$k[$j++] = _V; /*22637*/
			if ($eq(_V, "")) { /*22637*/
				break; /*22637*/
			} /*22637*/
			$search($k[--$j], ")"); /*22638*/
			$j--; /*22638*/
			var _X = $k[--$j]; /*22639*/
			var _Y = $k[--$j]; /*22639*/
			var _Z = $k[--$j]; /*22640*/
			$k[$j++] = _X; /*22640*/
			$search(_Z, "("); /*22640*/
			if ($k[--$j]) { /*22643*/
				var _b = $k[--$j]; /*22641*/
				var _c = $k[--$j]; /*22641*/
				var _d = $k[--$j]; /*22641*/
				var _e = $k[--$j]; /*22641*/
				$k[$j++] = _d; /*22641*/
				$k[$j++] = _e; /*22641*/
				$k[$j++] = _b; /*22641*/
			} else { /*22643*/
				var _f = $k[--$j]; /*22643*/
				var _g = $k[--$j]; /*22643*/
				$k[$j++] = ""; /*22643*/
				$k[$j++] = _g; /*22643*/
				$k[$j++] = _f; /*22643*/
			} /*22643*/
			$k[$j++] = Infinity; /*22645*/
			$aload($1.ais); /*22645*/
			var _j = $k[$j - 1 - ($counttomark() + 2)]; /*22645*/
			$k[$j++] = _j; /*22645*/
			$1.ais = $a(); /*22645*/
			$k[$j++] = Infinity; /*22646*/
			$aload($1.vals); /*22646*/
			var _n = $k[$j - 1 - ($counttomark() + 1)]; /*22646*/
			$k[$j++] = _n; /*22646*/
			$1.expand(); /*22646*/
			$1.vals = $a(); /*22646*/
			$j -= 2; /*22647*/
		} /*22647*/
		$j--; /*22649*/
		$1.aifixed = {}; /*22654*/
		$k[$j++] = Infinity; /*22656*/
		for (var _p = 0; _p <= 4; _p += 1) { /*22656*/
			$k[$j++] = _p; /*22656*/
		} /*22656*/
		var _q = $a(); /*22656*/
		for (var _r = 0, _s = _q.length; _r < _s; _r++) { /*22659*/
			var _v = $strcpy($s(2), "00"); /*22658*/
			$put(_v, 1, $get(_q, _r) + 48); /*22658*/
			$put($1.aifixed, _v, _v); /*22658*/
		} /*22658*/
		$k[$j++] = Infinity; /*22664*/
		for (var _x = 11; _x <= 20; _x += 1) { /*22661*/
			$k[$j++] = _x; /*22661*/
		} /*22661*/
		$k[$j++] = 23; /*22663*/
		for (var _y = 31; _y <= 36; _y += 1) { /*22663*/
			$k[$j++] = _y; /*22663*/
		} /*22663*/
		$k[$j++] = 41; /*22664*/
		var _z = $a(); /*22664*/
		for (var _10 = 0, _11 = _z.length; _10 < _11; _10++) { /*22667*/
			var _14 = $cvrs($s(2), $get(_z, _10), 10); /*22666*/
			$put($1.aifixed, _14, _14); /*22666*/
		} /*22666*/
		$1.fnc1 = -1; /*22670*/
		$1.qrc = $a([$1.fnc1]); /*22671*/
		for (var _1A = 0, _19 = $1.ais.length - 1; _1A <= _19; _1A += 1) { /*22687*/
			$1.i = _1A; /*22673*/
			$1.ai = $get($1.ais, $1.i); /*22674*/
			$1.val = $get($1.vals, $1.i); /*22675*/
			var _1K = $a(($1.qrc.length + $1.ai.length) + $1.val.length); /*22676*/
			$puti(_1K, 0, $1.qrc); /*22677*/
			$k[$j++] = _1K; /*22678*/
			$k[$j++] = _1K; /*22678*/
			$k[$j++] = $1.qrc.length; /*22678*/
			$k[$j++] = $1.ai; /*22678*/
			$k[$j++] = Infinity; /*22678*/
			var _1O = $k[--$j]; /*22678*/
			var _1P = $k[--$j]; /*22678*/
			$k[$j++] = _1O; /*22678*/
			$forall(_1P); /*22678*/
			var _1Q = $a(); /*22678*/
			var _1R = $k[--$j]; /*22678*/
			$puti($k[--$j], _1R, _1Q); /*22678*/
			var _1T = $k[--$j]; /*22679*/
			$k[$j++] = _1T; /*22679*/
			$k[$j++] = _1T; /*22679*/
			$k[$j++] = $1.qrc.length + $1.ai.length; /*22679*/
			$k[$j++] = $1.val; /*22679*/
			$k[$j++] = Infinity; /*22679*/
			var _1X = $k[--$j]; /*22679*/
			var _1Y = $k[--$j]; /*22679*/
			$k[$j++] = _1X; /*22679*/
			$forall(_1Y); /*22679*/
			var _1Z = $a(); /*22679*/
			var _1a = $k[--$j]; /*22679*/
			$puti($k[--$j], _1a, _1Z); /*22679*/
			$1.qrc = $k[--$j]; /*22680*/
			var _1i = $get($1.aifixed, $geti($1.ai, 0, 2)) !== undefined; /*22681*/
			if (($1.i != ($1.ais.length - 1)) && (!_1i)) { /*22686*/
				var _1k = $a($1.qrc.length + 1); /*22682*/
				$puti(_1k, 0, $1.qrc); /*22683*/
				$put(_1k, $1.qrc.length, $1.fnc1); /*22684*/
				$1.qrc = _1k; /*22685*/
			} /*22685*/
		} /*22685*/
		$1.barcode = $s(($1.qrc.length + 1) * 5); /*22690*/
		$1.i = 0; /*22691*/
		$1.j = 0; /*22691*/
		for (;;) { /*22701*/
			if ($1.i == $1.qrc.length) { /*22692*/
				break; /*22692*/
			} /*22692*/
			var _1u = $get($1.qrc, $1.i); /*22693*/
			$k[$j++] = _1u; /*22698*/
			if (_1u == $1.fnc1) { /*22697*/
				$j--; /*22694*/
				$puti($1.barcode, $1.j, "^FNC1"); /*22694*/
				$1.j = $1.j + 4; /*22695*/
			} else { /*22697*/
				$put($1.barcode, $1.j, $k[--$j]); /*22697*/
			} /*22697*/
			$1.i = $1.i + 1; /*22699*/
			$1.j = $1.j + 1; /*22700*/
		} /*22700*/
		$1.barcode = $geti($1.barcode, 0, $1.j); /*22702*/
		$1.options.dontdraw = true; /*22705*/
		$1.options.parsefnc = true; /*22706*/
		$k[$j++] = "args"; /*22707*/
		$k[$j++] = $1.barcode; /*22707*/
		$k[$j++] = $1.options; /*22707*/
		$0.qrcode(); /*22707*/
		var _2B = $k[--$j]; /*22707*/
		$1[$k[--$j]] = _2B; /*22707*/
		$1.args.opt = $1.options; /*22709*/
		$k[$j++] = $1.args; /*22712*/
		if (!$1.dontdraw) { /*22712*/
			$0.renmatrix(); /*22712*/
		} /*22712*/
	};
	$0.hibccode39 = function() {
		var $1 = {}; /*22740*/
		$1.options = $k[--$j]; /*22742*/
		$1.barcode = $k[--$j]; /*22743*/
		$1.dontdraw = false; /*22745*/
		$1.textfont = "Courier"; /*22746*/
		$1.textsize = 10; /*22747*/
		$1.textyoffset = -8.5; /*22748*/
		$1.textxoffset = 0; /*22749*/
		$1.validatecheck = false; /*22750*/
		$forall($1.options, function() { /*22761*/
			var _3 = $k[--$j]; /*22761*/
			$1[$k[--$j]] = _3; /*22761*/
		}); /*22761*/
		$1.textfont = "" + $1.textfont; /*22763*/
		$1.textsize = +$1.textsize; /*22764*/
		$1.textyoffset = +$1.textyoffset; /*22765*/
		$1.textxoffset = +$1.textxoffset; /*22766*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22769*/
		$1.charvals = {}; /*22770*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*22771*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*22771*/
		} /*22771*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*22778*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*22775*/
			if (!_J) { /*22777*/
				$k[$j++] = "bwipp.hibccode39badCharacter"; /*22776*/
				$k[$j++] = "HIBC Code 39 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22776*/
				$0.raiseerror(); /*22776*/
			} /*22776*/
		} /*22776*/
		$k[$j++] = "barlen"; /*22780*/
		$k[$j++] = $1.barcode.length; /*22780*/
		if ($1.validatecheck) { /*22780*/
			var _M = $k[--$j]; /*22780*/
			$k[$j++] = _M - 1; /*22780*/
		} /*22780*/
		var _N = $k[--$j]; /*22780*/
		$1[$k[--$j]] = _N; /*22780*/
		$1.checksum = 41; /*22782*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*22786*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*22785*/
		} /*22785*/
		$1.checksum = $1.checksum % 43; /*22787*/
		if ($1.validatecheck) { /*22793*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22791*/
				$k[$j++] = "bwipp.hibccode39badCheckDigit"; /*22790*/
				$k[$j++] = "Incorrect HIBC Code 39 check digit provided"; /*22790*/
				$0.raiseerror(); /*22790*/
			} /*22790*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22792*/
		} /*22792*/
		var _j = $s($1.barlen + 2); /*22795*/
		$puti(_j, 1, $1.barcode); /*22795*/
		$1.barcode = _j; /*22795*/
		$put($1.barcode, 0, 43); /*22796*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22797*/
		$1.text = $s($1.barlen + 4); /*22799*/
		$put($1.text, 0, 42); /*22800*/
		$puti($1.text, 1, $1.barcode); /*22801*/
		var _10 = $get($1.barcode, $1.barlen + 1); /*22802*/
		$k[$j++] = $1.text; /*22802*/
		$k[$j++] = $1.barlen + 2; /*22802*/
		$k[$j++] = _10; /*22802*/
		if (_10 == 32) { /*22802*/
			$j--; /*22802*/
			$k[$j++] = 95; /*22802*/
		} /*22802*/
		var _11 = $k[--$j]; /*22802*/
		var _12 = $k[--$j]; /*22802*/
		$put($k[--$j], _12, _11); /*22802*/
		$put($1.text, $1.barlen + 3, 42); /*22803*/
		$1.options.dontdraw = true; /*22806*/
		$1.options.includecheck = false; /*22807*/
		$1.options.validatecheck = false; /*22808*/
		$k[$j++] = "args"; /*22809*/
		$k[$j++] = $1.barcode; /*22809*/
		$k[$j++] = $1.options; /*22809*/
		$0.code39(); /*22809*/
		var _1B = $k[--$j]; /*22809*/
		$1[$k[--$j]] = _1B; /*22809*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*22811*/
		$1.args.textxalign = "center"; /*22812*/
		$1.args.opt = $1.options; /*22813*/
		$k[$j++] = $1.args; /*22816*/
		if (!$1.dontdraw) { /*22816*/
			$0.renlinear(); /*22816*/
		} /*22816*/
	};
	$0.hibccode128 = function() {
		var $1 = {}; /*22844*/
		$1.options = $k[--$j]; /*22846*/
		$1.barcode = $k[--$j]; /*22847*/
		$1.dontdraw = false; /*22849*/
		$1.textfont = "Courier"; /*22850*/
		$1.textsize = 10; /*22851*/
		$1.textyoffset = -8.5; /*22852*/
		$1.textxoffset = 0; /*22853*/
		$1.validatecheck = false; /*22854*/
		$forall($1.options, function() { /*22865*/
			var _3 = $k[--$j]; /*22865*/
			$1[$k[--$j]] = _3; /*22865*/
		}); /*22865*/
		$1.textfont = "" + $1.textfont; /*22867*/
		$1.textsize = +$1.textsize; /*22868*/
		$1.textyoffset = +$1.textyoffset; /*22869*/
		$1.textxoffset = +$1.textxoffset; /*22870*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22873*/
		$1.charvals = {}; /*22874*/
		for (var _9 = 0; _9 <= 42; _9 += 1) { /*22875*/
			$put($1.charvals, $geti($1.barchars, _9, 1), _9); /*22875*/
		} /*22875*/
		for (var _F = 0, _E = $1.barcode.length - 1; _F <= _E; _F += 1) { /*22882*/
			var _J = $get($1.charvals, $geti($1.barcode, _F, 1)) !== undefined; /*22879*/
			if (!_J) { /*22881*/
				$k[$j++] = "bwipp.hibccode128badCharacter"; /*22880*/
				$k[$j++] = "HIBC Code 128 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22880*/
				$0.raiseerror(); /*22880*/
			} /*22880*/
		} /*22880*/
		$k[$j++] = "barlen"; /*22884*/
		$k[$j++] = $1.barcode.length; /*22884*/
		if ($1.validatecheck) { /*22884*/
			var _M = $k[--$j]; /*22884*/
			$k[$j++] = _M - 1; /*22884*/
		} /*22884*/
		var _N = $k[--$j]; /*22884*/
		$1[$k[--$j]] = _N; /*22884*/
		$1.checksum = 41; /*22886*/
		for (var _R = 0, _Q = $1.barlen - 1; _R <= _Q; _R += 1) { /*22890*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _R, 1)) + $1.checksum; /*22889*/
		} /*22889*/
		$1.checksum = $1.checksum % 43; /*22891*/
		if ($1.validatecheck) { /*22897*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22895*/
				$k[$j++] = "bwipp.hibccode128badCheckDigit"; /*22894*/
				$k[$j++] = "Incorrect HIBC Code 128 check digit provided"; /*22894*/
				$0.raiseerror(); /*22894*/
			} /*22894*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22896*/
		} /*22896*/
		var _j = $s($1.barlen + 2); /*22899*/
		$puti(_j, 1, $1.barcode); /*22899*/
		$1.barcode = _j; /*22899*/
		$put($1.barcode, 0, 43); /*22900*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22901*/
		$1.text = $s($1.barlen + 4); /*22903*/
		$put($1.text, 0, 42); /*22904*/
		$puti($1.text, 1, $1.barcode); /*22905*/
		var _10 = $get($1.barcode, $1.barlen + 1); /*22906*/
		$k[$j++] = $1.text; /*22906*/
		$k[$j++] = $1.barlen + 2; /*22906*/
		$k[$j++] = _10; /*22906*/
		if (_10 == 32) { /*22906*/
			$j--; /*22906*/
			$k[$j++] = 95; /*22906*/
		} /*22906*/
		var _11 = $k[--$j]; /*22906*/
		var _12 = $k[--$j]; /*22906*/
		$put($k[--$j], _12, _11); /*22906*/
		$put($1.text, $1.barlen + 3, 42); /*22907*/
		$1.options.dontdraw = true; /*22910*/
		$1.options.validatecheck = false; /*22911*/
		$k[$j++] = "args"; /*22912*/
		$k[$j++] = $1.barcode; /*22912*/
		$k[$j++] = $1.options; /*22912*/
		$0.code128(); /*22912*/
		var _1A = $k[--$j]; /*22912*/
		$1[$k[--$j]] = _1A; /*22912*/
		$1.args.txt = $a([$a([$1.text, $1.textxoffset, $1.textyoffset, $1.textfont, $1.textsize])]); /*22914*/
		$1.args.textxalign = "center"; /*22915*/
		$1.args.opt = $1.options; /*22916*/
		$k[$j++] = $1.args; /*22919*/
		if (!$1.dontdraw) { /*22919*/
			$0.renlinear(); /*22919*/
		} /*22919*/
	};
	$0.hibcdatamatrix = function() {
		var $1 = {}; /*22947*/
		$1.options = $k[--$j]; /*22949*/
		$1.barcode = $k[--$j]; /*22950*/
		$1.dontdraw = false; /*22952*/
		$1.validatecheck = false; /*22953*/
		$forall($1.options, function() { /*22964*/
			var _3 = $k[--$j]; /*22964*/
			$1[$k[--$j]] = _3; /*22964*/
		}); /*22964*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*22967*/
		$1.charvals = {}; /*22968*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*22969*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*22969*/
		} /*22969*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*22976*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*22973*/
			if (!_F) { /*22975*/
				$k[$j++] = "bwipp.hibcdatamatrixBadCharacter"; /*22974*/
				$k[$j++] = "HIBC Data Matrix must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*22974*/
				$0.raiseerror(); /*22974*/
			} /*22974*/
		} /*22974*/
		$k[$j++] = "barlen"; /*22978*/
		$k[$j++] = $1.barcode.length; /*22978*/
		if ($1.validatecheck) { /*22978*/
			var _I = $k[--$j]; /*22978*/
			$k[$j++] = _I - 1; /*22978*/
		} /*22978*/
		var _J = $k[--$j]; /*22978*/
		$1[$k[--$j]] = _J; /*22978*/
		$1.checksum = 41; /*22980*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*22984*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*22983*/
		} /*22983*/
		$1.checksum = $1.checksum % 43; /*22985*/
		if ($1.validatecheck) { /*22991*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*22989*/
				$k[$j++] = "bwipp.hibcdatamatrixBadCheckDigit"; /*22988*/
				$k[$j++] = "Incorrect HIBC Data Matrix check digit provided"; /*22988*/
				$0.raiseerror(); /*22988*/
			} /*22988*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*22990*/
		} /*22990*/
		var _f = $s($1.barlen + 2); /*22993*/
		$puti(_f, 1, $1.barcode); /*22993*/
		$1.barcode = _f; /*22993*/
		$put($1.barcode, 0, 43); /*22994*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*22995*/
		$1.options.dontdraw = true; /*22998*/
		$1.options.validatecheck = false; /*22999*/
		$k[$j++] = "args"; /*23000*/
		$k[$j++] = $1.barcode; /*23000*/
		$k[$j++] = $1.options; /*23000*/
		$0.datamatrix(); /*23000*/
		var _r = $k[--$j]; /*23000*/
		$1[$k[--$j]] = _r; /*23000*/
		$1.args.opt = $1.options; /*23002*/
		$k[$j++] = $1.args; /*23005*/
		if (!$1.dontdraw) { /*23005*/
			$0.renmatrix(); /*23005*/
		} /*23005*/
	};
	$0.hibcdatamatrixrectangular = function() {
		var $1 = {}; /*23033*/
		$1.options = $k[--$j]; /*23035*/
		$1.barcode = $k[--$j]; /*23036*/
		$1.dontdraw = false; /*23038*/
		$1.validatecheck = false; /*23039*/
		$forall($1.options, function() { /*23050*/
			var _3 = $k[--$j]; /*23050*/
			$1[$k[--$j]] = _3; /*23050*/
		}); /*23050*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23053*/
		$1.charvals = {}; /*23054*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23055*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23055*/
		} /*23055*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23062*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23059*/
			if (!_F) { /*23061*/
				$k[$j++] = "bwipp.hibcdatamatrixrectangularBadCharacter"; /*23060*/
				$k[$j++] = "HIBC Data Matrix Rectangular must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23060*/
				$0.raiseerror(); /*23060*/
			} /*23060*/
		} /*23060*/
		$k[$j++] = "barlen"; /*23064*/
		$k[$j++] = $1.barcode.length; /*23064*/
		if ($1.validatecheck) { /*23064*/
			var _I = $k[--$j]; /*23064*/
			$k[$j++] = _I - 1; /*23064*/
		} /*23064*/
		var _J = $k[--$j]; /*23064*/
		$1[$k[--$j]] = _J; /*23064*/
		$1.checksum = 41; /*23066*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23070*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23069*/
		} /*23069*/
		$1.checksum = $1.checksum % 43; /*23071*/
		if ($1.validatecheck) { /*23077*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23075*/
				$k[$j++] = "bwipp.hibcdatamatrixrectangularBadCheckDigit"; /*23074*/
				$k[$j++] = "Incorrect HIBC Data Matrix Rectangular check digit provided"; /*23074*/
				$0.raiseerror(); /*23074*/
			} /*23074*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23076*/
		} /*23076*/
		var _f = $s($1.barlen + 2); /*23079*/
		$puti(_f, 1, $1.barcode); /*23079*/
		$1.barcode = _f; /*23079*/
		$put($1.barcode, 0, 43); /*23080*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23081*/
		$1.options.dontdraw = true; /*23084*/
		$1.options.validatecheck = false; /*23085*/
		$1.options.format = "rectangle"; /*23086*/
		$k[$j++] = "args"; /*23087*/
		$k[$j++] = $1.barcode; /*23087*/
		$k[$j++] = $1.options; /*23087*/
		$0.datamatrix(); /*23087*/
		var _s = $k[--$j]; /*23087*/
		$1[$k[--$j]] = _s; /*23087*/
		$1.args.opt = $1.options; /*23089*/
		$k[$j++] = $1.args; /*23092*/
		if (!$1.dontdraw) { /*23092*/
			$0.renmatrix(); /*23092*/
		} /*23092*/
	};
	$0.hibcpdf417 = function() {
		var $1 = {}; /*23120*/
		$1.options = $k[--$j]; /*23122*/
		$1.barcode = $k[--$j]; /*23123*/
		$1.dontdraw = false; /*23125*/
		$1.columns = 2; /*23126*/
		$1.validatecheck = false; /*23127*/
		$forall($1.options, function() { /*23138*/
			var _3 = $k[--$j]; /*23138*/
			$1[$k[--$j]] = _3; /*23138*/
		}); /*23138*/
		$1.columns = ~~$1.columns; /*23140*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23143*/
		$1.charvals = {}; /*23144*/
		for (var _6 = 0; _6 <= 42; _6 += 1) { /*23145*/
			$put($1.charvals, $geti($1.barchars, _6, 1), _6); /*23145*/
		} /*23145*/
		for (var _C = 0, _B = $1.barcode.length - 1; _C <= _B; _C += 1) { /*23152*/
			var _G = $get($1.charvals, $geti($1.barcode, _C, 1)) !== undefined; /*23149*/
			if (!_G) { /*23151*/
				$k[$j++] = "bwipp.hibcpdf417BadCharacter"; /*23150*/
				$k[$j++] = "HIBC PDF417 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23150*/
				$0.raiseerror(); /*23150*/
			} /*23150*/
		} /*23150*/
		$k[$j++] = "barlen"; /*23154*/
		$k[$j++] = $1.barcode.length; /*23154*/
		if ($1.validatecheck) { /*23154*/
			var _J = $k[--$j]; /*23154*/
			$k[$j++] = _J - 1; /*23154*/
		} /*23154*/
		var _K = $k[--$j]; /*23154*/
		$1[$k[--$j]] = _K; /*23154*/
		$1.checksum = 41; /*23156*/
		for (var _O = 0, _N = $1.barlen - 1; _O <= _N; _O += 1) { /*23160*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _O, 1)) + $1.checksum; /*23159*/
		} /*23159*/
		$1.checksum = $1.checksum % 43; /*23161*/
		if ($1.validatecheck) { /*23167*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23165*/
				$k[$j++] = "bwipp.hibcpdf417BadCheckDigit"; /*23164*/
				$k[$j++] = "Incorrect HIBC PDF417 check digit provided"; /*23164*/
				$0.raiseerror(); /*23164*/
			} /*23164*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23166*/
		} /*23166*/
		var _g = $s($1.barlen + 2); /*23169*/
		$puti(_g, 1, $1.barcode); /*23169*/
		$1.barcode = _g; /*23169*/
		$put($1.barcode, 0, 43); /*23170*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23171*/
		$1.options.dontdraw = true; /*23174*/
		$1.options.columns = $1.columns; /*23175*/
		$1.options.validatecheck = false; /*23176*/
		$k[$j++] = "args"; /*23177*/
		$k[$j++] = $1.barcode; /*23177*/
		$k[$j++] = $1.options; /*23177*/
		$0.pdf417(); /*23177*/
		var _u = $k[--$j]; /*23177*/
		$1[$k[--$j]] = _u; /*23177*/
		$1.args.opt = $1.options; /*23179*/
		$k[$j++] = $1.args; /*23182*/
		if (!$1.dontdraw) { /*23182*/
			$0.renmatrix(); /*23182*/
		} /*23182*/
	};
	$0.hibcmicropdf417 = function() {
		var $1 = {}; /*23210*/
		$1.options = $k[--$j]; /*23212*/
		$1.barcode = $k[--$j]; /*23213*/
		$1.dontdraw = false; /*23215*/
		$1.columns = 2; /*23216*/
		$1.validatecheck = false; /*23217*/
		$forall($1.options, function() { /*23228*/
			var _3 = $k[--$j]; /*23228*/
			$1[$k[--$j]] = _3; /*23228*/
		}); /*23228*/
		$1.columns = ~~$1.columns; /*23230*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23233*/
		$1.charvals = {}; /*23234*/
		for (var _6 = 0; _6 <= 42; _6 += 1) { /*23235*/
			$put($1.charvals, $geti($1.barchars, _6, 1), _6); /*23235*/
		} /*23235*/
		for (var _C = 0, _B = $1.barcode.length - 1; _C <= _B; _C += 1) { /*23242*/
			var _G = $get($1.charvals, $geti($1.barcode, _C, 1)) !== undefined; /*23239*/
			if (!_G) { /*23241*/
				$k[$j++] = "bwipp.hibcmicropdf417BadCharacter"; /*23240*/
				$k[$j++] = "HIBC MicroPDF417 must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23240*/
				$0.raiseerror(); /*23240*/
			} /*23240*/
		} /*23240*/
		$k[$j++] = "barlen"; /*23244*/
		$k[$j++] = $1.barcode.length; /*23244*/
		if ($1.validatecheck) { /*23244*/
			var _J = $k[--$j]; /*23244*/
			$k[$j++] = _J - 1; /*23244*/
		} /*23244*/
		var _K = $k[--$j]; /*23244*/
		$1[$k[--$j]] = _K; /*23244*/
		$1.checksum = 41; /*23246*/
		for (var _O = 0, _N = $1.barlen - 1; _O <= _N; _O += 1) { /*23250*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _O, 1)) + $1.checksum; /*23249*/
		} /*23249*/
		$1.checksum = $1.checksum % 43; /*23251*/
		if ($1.validatecheck) { /*23257*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23255*/
				$k[$j++] = "bwipp.hibcmicropdf417BadCheckDigit"; /*23254*/
				$k[$j++] = "Incorrect HIBC MicroPDF417 check digit provided"; /*23254*/
				$0.raiseerror(); /*23254*/
			} /*23254*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23256*/
		} /*23256*/
		var _g = $s($1.barlen + 2); /*23259*/
		$puti(_g, 1, $1.barcode); /*23259*/
		$1.barcode = _g; /*23259*/
		$put($1.barcode, 0, 43); /*23260*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23261*/
		$1.options.dontdraw = true; /*23264*/
		$1.options.columns = $1.columns; /*23265*/
		$1.options.validatecheck = false; /*23266*/
		$k[$j++] = "args"; /*23267*/
		$k[$j++] = $1.barcode; /*23267*/
		$k[$j++] = $1.options; /*23267*/
		$0.micropdf417(); /*23267*/
		var _u = $k[--$j]; /*23267*/
		$1[$k[--$j]] = _u; /*23267*/
		$1.args.opt = $1.options; /*23269*/
		$k[$j++] = $1.args; /*23272*/
		if (!$1.dontdraw) { /*23272*/
			$0.renmatrix(); /*23272*/
		} /*23272*/
	};
	$0.hibcqrcode = function() {
		var $1 = {}; /*23300*/
		$1.options = $k[--$j]; /*23302*/
		$1.barcode = $k[--$j]; /*23303*/
		$1.dontdraw = false; /*23305*/
		$1.validatecheck = false; /*23306*/
		$forall($1.options, function() { /*23317*/
			var _3 = $k[--$j]; /*23317*/
			$1[$k[--$j]] = _3; /*23317*/
		}); /*23317*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23320*/
		$1.charvals = {}; /*23321*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23322*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23322*/
		} /*23322*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23329*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23326*/
			if (!_F) { /*23328*/
				$k[$j++] = "bwipp.hibcqrcodeBadCharacter"; /*23327*/
				$k[$j++] = "HIBC QR Code must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23327*/
				$0.raiseerror(); /*23327*/
			} /*23327*/
		} /*23327*/
		$k[$j++] = "barlen"; /*23331*/
		$k[$j++] = $1.barcode.length; /*23331*/
		if ($1.validatecheck) { /*23331*/
			var _I = $k[--$j]; /*23331*/
			$k[$j++] = _I - 1; /*23331*/
		} /*23331*/
		var _J = $k[--$j]; /*23331*/
		$1[$k[--$j]] = _J; /*23331*/
		$1.checksum = 41; /*23333*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23337*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23336*/
		} /*23336*/
		$1.checksum = $1.checksum % 43; /*23338*/
		if ($1.validatecheck) { /*23344*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23342*/
				$k[$j++] = "bwipp.hibcqrcodeBadCheckDigit"; /*23341*/
				$k[$j++] = "Incorrect HIBC QR Code check digit provided"; /*23341*/
				$0.raiseerror(); /*23341*/
			} /*23341*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23343*/
		} /*23343*/
		var _f = $s($1.barlen + 2); /*23346*/
		$puti(_f, 1, $1.barcode); /*23346*/
		$1.barcode = _f; /*23346*/
		$put($1.barcode, 0, 43); /*23347*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23348*/
		$1.options.dontdraw = true; /*23351*/
		$1.options.validatecheck = false; /*23352*/
		$k[$j++] = "args"; /*23353*/
		$k[$j++] = $1.barcode; /*23353*/
		$k[$j++] = $1.options; /*23353*/
		$0.qrcode(); /*23353*/
		var _r = $k[--$j]; /*23353*/
		$1[$k[--$j]] = _r; /*23353*/
		$1.args.opt = $1.options; /*23355*/
		$k[$j++] = $1.args; /*23358*/
		if (!$1.dontdraw) { /*23358*/
			$0.renmatrix(); /*23358*/
		} /*23358*/
	};
	$0.hibccodablockf = function() {
		var $1 = {}; /*23386*/
		$1.options = $k[--$j]; /*23388*/
		$1.barcode = $k[--$j]; /*23389*/
		$1.dontdraw = false; /*23391*/
		$1.validatecheck = false; /*23392*/
		$forall($1.options, function() { /*23403*/
			var _3 = $k[--$j]; /*23403*/
			$1[$k[--$j]] = _3; /*23403*/
		}); /*23403*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23406*/
		$1.charvals = {}; /*23407*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23408*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23408*/
		} /*23408*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23415*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23412*/
			if (!_F) { /*23414*/
				$k[$j++] = "bwipp.codablockfBadCharacter"; /*23413*/
				$k[$j++] = "HIBC Codablock F must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23413*/
				$0.raiseerror(); /*23413*/
			} /*23413*/
		} /*23413*/
		$k[$j++] = "barlen"; /*23417*/
		$k[$j++] = $1.barcode.length; /*23417*/
		if ($1.validatecheck) { /*23417*/
			var _I = $k[--$j]; /*23417*/
			$k[$j++] = _I - 1; /*23417*/
		} /*23417*/
		var _J = $k[--$j]; /*23417*/
		$1[$k[--$j]] = _J; /*23417*/
		$1.checksum = 41; /*23419*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23423*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23422*/
		} /*23422*/
		$1.checksum = $1.checksum % 43; /*23424*/
		if ($1.validatecheck) { /*23430*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23428*/
				$k[$j++] = "bwipp.hibccodablockfBadCheckDigit"; /*23427*/
				$k[$j++] = "Incorrect HIBC Codablock F check digit provided"; /*23427*/
				$0.raiseerror(); /*23427*/
			} /*23427*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23429*/
		} /*23429*/
		var _f = $s($1.barlen + 2); /*23432*/
		$puti(_f, 1, $1.barcode); /*23432*/
		$1.barcode = _f; /*23432*/
		$put($1.barcode, 0, 43); /*23433*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23434*/
		$1.options.dontdraw = true; /*23437*/
		$1.options.validatecheck = false; /*23438*/
		$k[$j++] = "args"; /*23439*/
		$k[$j++] = $1.barcode; /*23439*/
		$k[$j++] = $1.options; /*23439*/
		$0.codablockf(); /*23439*/
		var _r = $k[--$j]; /*23439*/
		$1[$k[--$j]] = _r; /*23439*/
		$1.args.opt = $1.options; /*23441*/
		$k[$j++] = $1.args; /*23444*/
		if (!$1.dontdraw) { /*23444*/
			$0.renmatrix(); /*23444*/
		} /*23444*/
	};
	$0.hibcazteccode = function() {
		var $1 = {}; /*23472*/
		$1.options = $k[--$j]; /*23474*/
		$1.barcode = $k[--$j]; /*23475*/
		$1.dontdraw = false; /*23477*/
		$1.validatecheck = false; /*23478*/
		$forall($1.options, function() { /*23489*/
			var _3 = $k[--$j]; /*23489*/
			$1[$k[--$j]] = _3; /*23489*/
		}); /*23489*/
		$1.barchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%"; /*23492*/
		$1.charvals = {}; /*23493*/
		for (var _5 = 0; _5 <= 42; _5 += 1) { /*23494*/
			$put($1.charvals, $geti($1.barchars, _5, 1), _5); /*23494*/
		} /*23494*/
		for (var _B = 0, _A = $1.barcode.length - 1; _B <= _A; _B += 1) { /*23501*/
			var _F = $get($1.charvals, $geti($1.barcode, _B, 1)) !== undefined; /*23498*/
			if (!_F) { /*23500*/
				$k[$j++] = "bwipp.hibcazteccodeBadCharacter"; /*23499*/
				$k[$j++] = "HIBC Aztec Code must contain only digits, capital letters, spaces and the symbols -.$/+%"; /*23499*/
				$0.raiseerror(); /*23499*/
			} /*23499*/
		} /*23499*/
		$k[$j++] = "barlen"; /*23503*/
		$k[$j++] = $1.barcode.length; /*23503*/
		if ($1.validatecheck) { /*23503*/
			var _I = $k[--$j]; /*23503*/
			$k[$j++] = _I - 1; /*23503*/
		} /*23503*/
		var _J = $k[--$j]; /*23503*/
		$1[$k[--$j]] = _J; /*23503*/
		$1.checksum = 41; /*23505*/
		for (var _N = 0, _M = $1.barlen - 1; _N <= _M; _N += 1) { /*23509*/
			$1.checksum = $get($1.charvals, $geti($1.barcode, _N, 1)) + $1.checksum; /*23508*/
		} /*23508*/
		$1.checksum = $1.checksum % 43; /*23510*/
		if ($1.validatecheck) { /*23516*/
			if ($get($1.barcode, $1.barlen) != $get($1.barchars, $1.checksum)) { /*23514*/
				$k[$j++] = "bwipp.hibcazteccodeBadCheckDigit"; /*23513*/
				$k[$j++] = "Incorrect HIBC Aztec Code check digit provided"; /*23513*/
				$0.raiseerror(); /*23513*/
			} /*23513*/
			$1.barcode = $geti($1.barcode, 0, $1.barlen); /*23515*/
		} /*23515*/
		var _f = $s($1.barlen + 2); /*23518*/
		$puti(_f, 1, $1.barcode); /*23518*/
		$1.barcode = _f; /*23518*/
		$put($1.barcode, 0, 43); /*23519*/
		$put($1.barcode, $1.barlen + 1, $get($1.barchars, $1.checksum)); /*23520*/
		$1.options.dontdraw = true; /*23523*/
		$1.options.validatecheck = false; /*23524*/
		$k[$j++] = "args"; /*23525*/
		$k[$j++] = $1.barcode; /*23525*/
		$k[$j++] = $1.options; /*23525*/
		$0.azteccode(); /*23525*/
		var _r = $k[--$j]; /*23525*/
		$1[$k[--$j]] = _r; /*23525*/
		$1.args.opt = $1.options; /*23527*/
		$k[$j++] = $1.args; /*23530*/
		if (!$1.dontdraw) { /*23530*/
			$0.renmatrix(); /*23530*/
		} /*23530*/
	};
	$0.renlinear = function() {
		if ($0.bwipjs_dontdraw) { /*23553*/
			return; /*23553*/
		} /*23553*/
		var $1 = {}; /*23555*/
		$1.args = $k[--$j]; /*23557*/
		$1.sbs = $a([]); /*23560*/
		$1.bhs = $a([]); /*23561*/
		$1.bbs = $a([]); /*23562*/
		$1.txt = $a([]); /*23563*/
		$1.barcolor = "unset"; /*23564*/
		$1.includetext = false; /*23565*/
		$1.textcolor = "unset"; /*23566*/
		$1.textxalign = "unset"; /*23567*/
		$1.textyalign = "unset"; /*23568*/
		$1.textfont = "Courier"; /*23569*/
		$1.textsize = 10; /*23570*/
		$1.textxoffset = 0; /*23571*/
		$1.textyoffset = 0; /*23572*/
		$1.textgaps = 0; /*23573*/
		$1.alttext = ""; /*23574*/
		$1.bordercolor = "unset"; /*23575*/
		$1.backgroundcolor = "unset"; /*23576*/
		$1.inkspread = 0; /*23577*/
		$1.width = 0; /*23578*/
		$1.barratio = 1; /*23579*/
		$1.spaceratio = 1; /*23580*/
		$1.showborder = false; /*23581*/
		$1.borderleft = 0; /*23582*/
		$1.borderright = 0; /*23583*/
		$1.bordertop = 0; /*23584*/
		$1.borderbottom = 0; /*23585*/
		$1.borderwidth = 0.5; /*23586*/
		$1.guardwhitespace = false; /*23587*/
		$1.guardleftpos = 0; /*23588*/
		$1.guardleftypos = 0; /*23589*/
		$1.guardrightpos = 0; /*23590*/
		$1.guardrightypos = 0; /*23591*/
		$1.guardwidth = 7; /*23592*/
		$1.guardheight = 7; /*23593*/
		$forall($1.args, function() { /*23596*/
			var _7 = $k[--$j]; /*23596*/
			$1[$k[--$j]] = _7; /*23596*/
		}); /*23596*/
		var _9 = $1.opt; /*23597*/
		for (var _A in _9) { /*23597*/
			$1[_A] = _9[_A]; /*23597*/
		} /*23597*/
		$1.barcolor = "" + $1.barcolor; /*23599*/
		$1.textcolor = "" + $1.textcolor; /*23600*/
		$1.textxalign = "" + $1.textxalign; /*23601*/
		$1.textyalign = "" + $1.textyalign; /*23602*/
		$1.textfont = "" + $1.textfont; /*23603*/
		$1.textsize = +$1.textsize; /*23604*/
		$1.textxoffset = +$1.textxoffset; /*23605*/
		$1.textyoffset = +$1.textyoffset; /*23606*/
		$1.textgaps = +$1.textgaps; /*23607*/
		$1.alttext = "" + $1.alttext; /*23608*/
		$1.bordercolor = "" + $1.bordercolor; /*23609*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23610*/
		$1.inkspread = +$1.inkspread; /*23611*/
		$1.width = +$1.width; /*23612*/
		$1.barratio = +$1.barratio; /*23613*/
		$1.spaceratio = +$1.spaceratio; /*23614*/
		$1.borderleft = +$1.borderleft; /*23615*/
		$1.borderright = +$1.borderright; /*23616*/
		$1.bordertop = +$1.bordertop; /*23617*/
		$1.borderbottom = +$1.borderbottom; /*23618*/
		$1.borderwidth = +$1.borderwidth; /*23619*/
		$1.guardleftpos = +$1.guardleftpos; /*23620*/
		$1.guardleftypos = +$1.guardleftypos; /*23621*/
		$1.guardrightpos = +$1.guardrightpos; /*23622*/
		$1.guardrightypos = +$1.guardrightypos; /*23623*/
		$1.guardwidth = +$1.guardwidth; /*23624*/
		$1.guardheight = +$1.guardheight; /*23625*/
		$1.bars = $a(~~(($1.sbs.length + 1) / 2)); /*23628*/
		$1.x = 0; /*23629*/
		$1.maxh = 0; /*23629*/
		for (var _h = 0, _g = ((~~(($1.sbs.length + 1) / 2)) * 2) - 2; _h <= _g; _h += 1) { /*23648*/
			$1.i = _h; /*23631*/
			if (($1.i % 2) == 0) { /*23645*/
				$1.d = (($get($1.sbs, $1.i) * $1.barratio) - $1.barratio) + 1; /*23633*/
				if ($get($1.sbs, $1.i) != 0) { /*23642*/
					$1.h = $get($1.bhs, ~~($1.i / 2)) * 72; /*23635*/
					$1.c = ($1.d / 2) + $1.x; /*23636*/
					$1.y = $get($1.bbs, ~~($1.i / 2)) * 72; /*23637*/
					$1.w = $1.d - $1.inkspread; /*23638*/
					$put($1.bars, ~~($1.i / 2), $a([$1.h, $1.c, $1.y, $1.w])); /*23639*/
					if (($1.h + $1.y) > $1.maxh) { /*23640*/
						$1.maxh = $1.h + $1.y; /*23640*/
					} /*23640*/
				} else { /*23642*/
					$put($1.bars, ~~($1.i / 2), -1); /*23642*/
				} /*23642*/
			} else { /*23645*/
				$1.d = (($get($1.sbs, $1.i) * $1.spaceratio) - $1.spaceratio) + 1; /*23645*/
			} /*23645*/
			$1.x = $1.x + $1.d; /*23647*/
		} /*23647*/
		$$.save(); /*23650*/
		var _1M = $$.currpos(); /*23652*/
		$$.translate(_1M.x, _1M.y); /*23652*/
		if ($1.width != 0) { /*23657*/
			$$.scale(($1.width * 72) / $1.x, 1); /*23656*/
		} /*23656*/
		$$.floorscale(); /*23660*/
		if (($1.borderleft > 0) || (($1.borderright > 0) || (($1.bordertop > 0) || ($1.borderbottom > 0)))) { /*23674*/
			$$.newpath(); /*23664*/
			$$.moveto(-$1.borderleft, -$1.borderbottom); /*23665*/
			$$.rlineto(($1.x + $1.borderleft) + $1.borderright, 0); /*23666*/
			$$.rlineto(0, ($1.maxh + $1.borderbottom) + $1.bordertop); /*23667*/
			$$.rlineto(-(($1.x + $1.borderleft) + $1.borderright), 0); /*23668*/
			$$.rlineto(0, -(($1.maxh + $1.borderbottom) + $1.bordertop)); /*23669*/
			$$.closepath(); /*23670*/
			$$.setextent(); /*23673*/
		} /*23673*/
		if ($1.showborder) { /*23682*/
			$$.save(); /*23678*/
			if ($ne($1.bordercolor, "unset")) { /*23679*/
				$$.setcolor($1.bordercolor); /*23679*/
			} /*23679*/
			$$.setlinewidth($1.borderwidth); /*23680*/
			$$.stroke(); /*23680*/
			$$.restore(); /*23681*/
		} /*23681*/
		$$.save(); /*23685*/
		if ($ne($1.barcolor, "unset")) { /*23687*/
			$$.setcolor($1.barcolor); /*23687*/
		} /*23687*/
		var _1o = $1.bars; /*23688*/
		for (var _1p = 0, _1q = _1o.length; _1p < _1q; _1p++) { /*23694*/
			var _1r = $get(_1o, _1p); /*23694*/
			$k[$j++] = _1r; /*23693*/
			if (_1r != -1) { /*23692*/
				$aload($k[--$j]); /*23690*/
				$$.newpath(); /*23690*/
				$$.setlinewidth($k[--$j]); /*23690*/
				var _1u = $k[--$j]; /*23690*/
				$$.moveto($k[--$j], _1u); /*23690*/
				$$.rlineto(0, $k[--$j]); /*23690*/
				$$.stroke(); /*23690*/
			} else { /*23692*/
				$j--; /*23692*/
			} /*23692*/
		} /*23692*/
		$$.restore(); /*23695*/
		if ($ne($1.textcolor, "unset")) { /*23698*/
			$$.setcolor($1.textcolor); /*23698*/
		} /*23698*/
		if ($1.includetext) { /*23755*/
			if (($eq($1.textxalign, "unset") && $eq($1.textyalign, "unset")) && $eq($1.alttext, "")) { /*23753*/
				$1.s = 0; /*23701*/
				$1.fn = ""; /*23701*/
				var _23 = $1.txt; /*23702*/
				for (var _24 = 0, _25 = _23.length; _24 < _25; _24++) { /*23711*/
					$forall($get(_23, _24)); /*23703*/
					var _27 = $k[--$j]; /*23704*/
					var _28 = $k[--$j]; /*23704*/
					$k[$j++] = _28; /*23709*/
					$k[$j++] = _27; /*23709*/
					if ((_27 != $1.s) || $ne(_28, $1.fn)) { /*23708*/
						var _2B = $k[--$j]; /*23705*/
						var _2C = $k[--$j]; /*23705*/
						$1.s = _2B; /*23705*/
						$1.fn = _2C; /*23705*/
						var _2D = $$.findfont(_2C); /*23706*/
						_2D.FontSize = _2B; /*23706*/
						$$.setfont(_2D); /*23706*/
					} else { /*23708*/
						$j -= 2; /*23708*/
					} /*23708*/
					var _2E = $k[--$j]; /*23710*/
					$$.moveto($k[--$j], _2E); /*23710*/
					$$.show($k[--$j], 0, 0); /*23710*/
				} /*23710*/
			} else { /*23753*/
				var _2I = $$.findfont($1.textfont); /*23713*/
				_2I.FontSize = $1.textsize; /*23713*/
				$$.setfont(_2I); /*23713*/
				if ($eq($1.alttext, "")) { /*23719*/
					$k[$j++] = Infinity; /*23715*/
					var _2L = $1.txt; /*23715*/
					for (var _2M = 0, _2N = _2L.length; _2M < _2N; _2M++) { /*23715*/
						$forall($get($get(_2L, _2M), 0)); /*23715*/
					} /*23715*/
					$1.txt = $a(); /*23715*/
					$1.tstr = $s($1.txt.length); /*23716*/
					for (var _2V = 0, _2U = $1.txt.length - 1; _2V <= _2U; _2V += 1) { /*23717*/
						$put($1.tstr, _2V, $get($1.txt, _2V)); /*23717*/
					} /*23717*/
				} else { /*23719*/
					$1.tstr = $1.alttext; /*23719*/
				} /*23719*/
				if ($1.tstr.length == 0) { /*23735*/
					$k[$j++] = 0; /*23724*/
				} else { /*23735*/
					$$.save(); /*23726*/
					$$.newpath(); /*23727*/
					$$.moveto(0, 0); /*23727*/
					$$.charpath("0", false); /*23727*/
					var _2b = $$.pathbbox(); /*23727*/
					$$.restore(); /*23729*/
					var _2c = $$.currfont(); /*23730*/
					var _2d = _2c.PaintType !== undefined; /*23730*/
					$k[$j++] = _2b.ury; /*23730*/
					if (_2d) { /*23730*/
						var _2e = $$.currfont(); /*23730*/
						$k[$j++] = _2e.PaintType == 2; /*23730*/
					} else { /*23730*/
						$k[$j++] = false; /*23730*/
					} /*23730*/
					var _2g = $$.currfont(); /*23731*/
					var _2h = _2g.StrokeWidth !== undefined; /*23731*/
					if ($k[--$j] && _2h) { /*23736*/
						var _2j = $$.currfont(); /*23732*/
						var _2l = $$.currfont(); /*23733*/
						var _2m = _2l.FontMatrix; /*23733*/
						var _2n = _2j.StrokeWidth / 2; /*23734*/
						var _2o = $k[--$j]; /*23735*/
						$k[$j++] = _2o + (Math.sqrt((_2n * _2n) + (0 * 0))); /*23735*/
					} /*23735*/
				} /*23735*/
				$1.textascent = $k[--$j]; /*23738*/
				var _2r = $$.stringwidth($1.tstr); /*23739*/
				$1.textwidth = _2r.w + (($1.tstr.length - 1) * $1.textgaps); /*23739*/
				$1.textxpos = $1.textxoffset + (($1.x - $1.textwidth) / 2); /*23741*/
				if ($eq($1.textxalign, "left")) { /*23742*/
					$1.textxpos = $1.textxoffset; /*23742*/
				} /*23742*/
				if ($eq($1.textxalign, "right")) { /*23743*/
					$1.textxpos = ($1.x - $1.textxoffset) - $1.textwidth; /*23743*/
				} /*23743*/
				if ($eq($1.textxalign, "offleft")) { /*23744*/
					$1.textxpos = -($1.textwidth + $1.textxoffset); /*23744*/
				} /*23744*/
				if ($eq($1.textxalign, "offright")) { /*23745*/
					$1.textxpos = $1.x + $1.textxoffset; /*23745*/
				} /*23745*/
				if ($eq($1.textxalign, "justify") && ($1.textwidth < $1.x)) { /*23749*/
					$1.textxpos = 0; /*23747*/
					$1.textgaps = ($1.x - $1.textwidth) / ($1.tstr.length - 1); /*23748*/
				} /*23748*/
				$1.textypos = -(($1.textyoffset + $1.textascent) + 1); /*23750*/
				if ($eq($1.textyalign, "above")) { /*23751*/
					$1.textypos = ($1.textyoffset + $1.maxh) + 1; /*23751*/
				} /*23751*/
				if ($eq($1.textyalign, "center")) { /*23752*/
					$1.textypos = $1.textyoffset + (($1.maxh - $1.textascent) / 2); /*23752*/
				} /*23752*/
				$$.moveto($1.textxpos, $1.textypos); /*23753*/
				$$.show($1.tstr, $1.textgaps, 0); /*23753*/
			} /*23753*/
		} /*23753*/
		if ($1.guardwhitespace) { /*23768*/
			var _3T = $$.findfont("OCR-B"); /*23759*/
			_3T.FontSize = ($1.guardheight * 2) - 1; /*23759*/
			$$.setfont(_3T); /*23759*/
			if ($1.guardleftpos != 0) { /*23763*/
				$$.moveto((-$1.guardleftpos) - 1.5, ($1.guardleftypos - ($1.guardheight / 2)) - 1); /*23761*/
				$$.show("<", 0, 0); /*23762*/
			} /*23762*/
			if ($1.guardrightpos != 0) { /*23767*/
				$$.moveto(($1.guardrightpos + $1.x) - $1.guardwidth, ($1.guardrightypos - ($1.guardheight / 2)) - 1); /*23765*/
				$$.show(">", 0, 0); /*23766*/
			} /*23766*/
		} /*23766*/
		$$.restore(); /*23770*/
	};
	$0.renmatrix = function() {
		if ($0.bwipjs_dontdraw) { /*23788*/
			return; /*23788*/
		} /*23788*/
		var $1 = {}; /*23790*/
		$1.args = $k[--$j]; /*23792*/
		$1.width = 1; /*23795*/
		$1.height = 1; /*23796*/
		$1.barcolor = "unset"; /*23797*/
		$1.backgroundcolor = "unset"; /*23798*/
		$1.includetext = false; /*23799*/
		$1.txt = $a([]); /*23800*/
		$1.textcolor = "unset"; /*23801*/
		$1.textxalign = "unset"; /*23802*/
		$1.textyalign = "unset"; /*23803*/
		$1.textfont = "Courier"; /*23804*/
		$1.textsize = 10; /*23805*/
		$1.textxoffset = 0; /*23806*/
		$1.textyoffset = 0; /*23807*/
		$1.textgaps = 0; /*23808*/
		$1.alttext = ""; /*23809*/
		$forall($1.args, function() { /*23812*/
			var _4 = $k[--$j]; /*23812*/
			$1[$k[--$j]] = _4; /*23812*/
		}); /*23812*/
		var _6 = $1.opt; /*23813*/
		for (var _7 in _6) { /*23813*/
			$1[_7] = _6[_7]; /*23813*/
		} /*23813*/
		$1.width = +$1.width; /*23815*/
		$1.height = +$1.height; /*23816*/
		$1.barcolor = "" + $1.barcolor; /*23817*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23818*/
		$1.inkspread = +$1.inkspread; /*23819*/
		$1.inkspreadh = +$1.inkspreadh; /*23820*/
		$1.inkspreadv = +$1.inkspreadv; /*23821*/
		$1.textcolor = "" + $1.textcolor; /*23822*/
		$1.textxalign = "" + $1.textxalign; /*23823*/
		$1.textyalign = "" + $1.textyalign; /*23824*/
		$1.textfont = "" + $1.textfont; /*23825*/
		$1.textsize = +$1.textsize; /*23826*/
		$1.textxoffset = +$1.textxoffset; /*23827*/
		$1.textyoffset = +$1.textyoffset; /*23828*/
		$1.textgaps = +$1.textgaps; /*23829*/
		$1.alttext = "" + $1.alttext; /*23830*/
		$1.pixx8 = (~~Math.ceil($1.pixx / 8)) * 8; /*23833*/
		$k[$j++] = Infinity; /*23834*/
		for (var _S = 0, _T = $1.pixx8 * $1.pixy; _S < _T; _S++) { /*23834*/
			$k[$j++] = 0; /*23834*/
		} /*23834*/
		$1.pixs8 = $a(); /*23834*/
		for (var _X = 0, _W = $1.pixy - 1; _X <= _W; _X += 1) { /*23838*/
			$1.i = _X; /*23836*/
			$puti($1.pixs8, $1.pixx8 * $1.i, $geti($1.pixs, $1.pixx * $1.i, $1.pixx)); /*23837*/
		} /*23837*/
		$1.pixs = $1.pixs8; /*23839*/
		$1.imgstr = $s(~~($1.pixs.length / 8)); /*23842*/
		for (var _l = 0, _k = $1.pixs.length - 1; _l <= _k; _l += 1) { /*23846*/
			$1.i = _l; /*23844*/
			var _m = $1.imgstr; /*23845*/
			var _n = $1.i; /*23845*/
			$put(_m, ~~(_n / 8), $get(_m, ~~(_n / 8)) + ((~~(Math.pow(2, 7 - ($1.i % 8)))) * $get($1.pixs, $1.i))); /*23845*/
		} /*23845*/
		$$.save(); /*23849*/
		var _t = $$.currpos(); /*23850*/
		$$.translate(_t.x, _t.y); /*23850*/
		$$.scale(72 * $1.width, 72 * $1.height); /*23851*/
		$$.moveto(0.0001, 0.0001); /*23852*/
		$$.lineto(0.9999, 0.0001); /*23852*/
		$$.lineto(0.9999, 0.9999); /*23852*/
		$$.lineto(0.0001, 0.9999); /*23852*/
		$$.closepath(); /*23852*/
		if ($ne($1.barcolor, "unset")) { /*23855*/
			$$.setcolor($1.barcolor); /*23855*/
		} /*23855*/
		$$.imagemask($1.pixx, $1.pixy, $1.imgstr); /*23860*/
		$$.restore(); /*23861*/
		if ($1.includetext) { /*23924*/
			$$.save(); /*23865*/
			if ($ne($1.textcolor, "unset")) { /*23866*/
				$$.setcolor($1.textcolor); /*23866*/
			} /*23866*/
			if (($eq($1.textxalign, "unset") && $eq($1.textyalign, "unset")) && $eq($1.alttext, "")) { /*23921*/
				$1.s = 0; /*23868*/
				$1.fn = ""; /*23868*/
				var _17 = $1.txt; /*23869*/
				for (var _18 = 0, _19 = _17.length; _18 < _19; _18++) { /*23879*/
					$forall($get(_17, _18)); /*23870*/
					var _1B = $k[--$j]; /*23871*/
					var _1C = $k[--$j]; /*23871*/
					$k[$j++] = _1C; /*23877*/
					$k[$j++] = _1B; /*23877*/
					if ((_1B != $1.s) || $ne(_1C, $1.fn)) { /*23876*/
						var _1F = $k[--$j]; /*23872*/
						var _1G = $k[--$j]; /*23872*/
						$1.s = _1F; /*23872*/
						$1.fn = _1G; /*23872*/
						var _1H = $$.findfont(_1G); /*23874*/
						_1H.FontSize = _1F; /*23874*/
						$$.setfont(_1H); /*23874*/
					} else { /*23876*/
						$j -= 2; /*23876*/
					} /*23876*/
					var _1I = $k[--$j]; /*23878*/
					$$.moveto($k[--$j], _1I); /*23878*/
					$$.show($k[--$j], 0, 0); /*23878*/
				} /*23878*/
			} else { /*23921*/
				var _1N = $$.findfont($1.textfont); /*23881*/
				_1N.FontSize = $1.textsize; /*23881*/
				$$.setfont(_1N); /*23881*/
				if ($eq($1.alttext, "")) { /*23887*/
					$k[$j++] = Infinity; /*23883*/
					var _1P = $1.txt; /*23883*/
					for (var _1Q = 0, _1R = _1P.length; _1Q < _1R; _1Q++) { /*23883*/
						$forall($get($get(_1P, _1Q), 0)); /*23883*/
					} /*23883*/
					$1.txt = $a(); /*23883*/
					$1.tstr = $s($1.txt.length); /*23884*/
					for (var _1Z = 0, _1Y = $1.txt.length - 1; _1Z <= _1Y; _1Z += 1) { /*23885*/
						$put($1.tstr, _1Z, $get($1.txt, _1Z)); /*23885*/
					} /*23885*/
				} else { /*23887*/
					$1.tstr = $1.alttext; /*23887*/
				} /*23887*/
				if ($1.tstr.length == 0) { /*23903*/
					$k[$j++] = 0; /*23892*/
				} else { /*23903*/
					$$.save(); /*23894*/
					$$.newpath(); /*23895*/
					$$.moveto(0, 0); /*23895*/
					$$.charpath("0", false); /*23895*/
					var _1f = $$.pathbbox(); /*23895*/
					$$.restore(); /*23897*/
					var _1g = $$.currfont(); /*23898*/
					var _1h = _1g.PaintType !== undefined; /*23898*/
					$k[$j++] = _1f.ury; /*23898*/
					if (_1h) { /*23898*/
						var _1i = $$.currfont(); /*23898*/
						$k[$j++] = _1i.PaintType == 2; /*23898*/
					} else { /*23898*/
						$k[$j++] = false; /*23898*/
					} /*23898*/
					var _1k = $$.currfont(); /*23899*/
					var _1l = _1k.StrokeWidth !== undefined; /*23899*/
					if ($k[--$j] && _1l) { /*23904*/
						var _1n = $$.currfont(); /*23900*/
						var _1p = $$.currfont(); /*23901*/
						var _1q = _1p.FontMatrix; /*23901*/
						var _1r = _1n.StrokeWidth / 2; /*23902*/
						var _1s = $k[--$j]; /*23903*/
						$k[$j++] = _1s + (Math.sqrt((_1r * _1r) + (0 * 0))); /*23903*/
					} /*23903*/
				} /*23903*/
				$1.textascent = $k[--$j]; /*23906*/
				var _1v = $$.stringwidth($1.tstr); /*23907*/
				$1.textwidth = _1v.w + (($1.tstr.length - 1) * $1.textgaps); /*23907*/
				$1.textxpos = $1.textxoffset + (($1.pixx - $1.textwidth) / 2); /*23909*/
				if ($eq($1.textxalign, "left")) { /*23910*/
					$1.textxpos = $1.textxoffset; /*23910*/
				} /*23910*/
				if ($eq($1.textxalign, "right")) { /*23911*/
					$1.textxpos = ($1.pixx - $1.textxoffset) - $1.textwidth; /*23911*/
				} /*23911*/
				if ($eq($1.textxalign, "offleft")) { /*23912*/
					$1.textxpos = -($1.textwidth + $1.textxoffset); /*23912*/
				} /*23912*/
				if ($eq($1.textxalign, "offright")) { /*23913*/
					$1.textxpos = $1.pixx + $1.textxoffset; /*23913*/
				} /*23913*/
				if ($eq($1.textxalign, "justify") && ($1.textwidth < $1.pixx)) { /*23917*/
					$1.textxpos = 0; /*23915*/
					$1.textgaps = ($1.pixx - $1.textwidth) / ($1.tstr.length - 1); /*23916*/
				} /*23916*/
				$1.textypos = -(($1.textyoffset + $1.textascent) + 1); /*23918*/
				if ($eq($1.textyalign, "above")) { /*23919*/
					$1.textypos = ($1.textyoffset + $1.pixy) + 1; /*23919*/
				} /*23919*/
				if ($eq($1.textyalign, "center")) { /*23920*/
					$1.textypos = $1.textyoffset + (($1.pixy - $1.textascent) / 2); /*23920*/
				} /*23920*/
				$$.moveto($1.textxpos, $1.textypos); /*23921*/
				$$.show($1.tstr, $1.textgaps, 0); /*23921*/
			} /*23921*/
			$$.restore(); /*23923*/
		} /*23923*/
	};
	$0.renmaximatrix = function() {
		if ($0.bwipjs_dontdraw) { /*23944*/
			return; /*23944*/
		} /*23944*/
		var $1 = {}; /*23946*/
		$1.args = $k[--$j]; /*23948*/
		$1.barcolor = "unset"; /*23951*/
		$1.backgroundcolor = "unset"; /*23952*/
		$forall($1.args, function() { /*23955*/
			var _3 = $k[--$j]; /*23955*/
			$1[$k[--$j]] = _3; /*23955*/
		}); /*23955*/
		var _5 = $1.opt; /*23956*/
		for (var _6 in _5) { /*23956*/
			$1[_6] = _5[_6]; /*23956*/
		} /*23956*/
		$1.barcolor = "" + $1.barcolor; /*23958*/
		$1.backgroundcolor = "" + $1.backgroundcolor; /*23959*/
		$$.save(); /*23961*/
		var _A = $$.currpos(); /*23963*/
		$$.translate(_A.x, _A.y); /*23963*/
		$$.scale(2.4945, 2.4945); /*23965*/
		$$.moveto(0, 0); /*23967*/
		$$.lineto(30, 0); /*23967*/
		$$.lineto(30, 29); /*23967*/
		$$.lineto(0, 29); /*23967*/
		$$.closepath(); /*23967*/
		if ($ne($1.barcolor, "unset")) { /*23970*/
			$$.setcolor($1.barcolor); /*23970*/
		} /*23970*/
		$$.translate(0.5, 0.5774); /*23972*/
		var _D = $$.findfont("OCRB"); /*23974*/
		_D.FontSize = 2.8; /*23974*/
		$$.setfont(_D); /*23974*/
		$$.newpath(); /*23976*/
		var _E = $1.pixs; /*23977*/
		for (var _F = 0, _G = _E.length; _F < _G; _F++) { /*23985*/
			var _H = $get(_E, _F); /*23985*/
			$1.x = _H % 30; /*23979*/
			$1.y = ~~(_H / 30); /*23980*/
			if (($1.y % 2) == 0) { /*23981*/
				$k[$j++] = $1.x; /*23981*/
			} else { /*23981*/
				$k[$j++] = $1.x + 0.5; /*23981*/
			} /*23981*/
			$$.moveto($k[--$j], (32 - $1.y) * 0.8661); /*23983*/
			$$.show("\xae", 0, 0); /*23984*/
		} /*23984*/
		var _N = $$.findfont("OCRB"); /*23988*/
		_N.FontSize = 2.85; /*23988*/
		$$.setfont(_N); /*23988*/
		$$.moveto(14, 13.8576); /*23989*/
		$$.show("\xa9", 0, 0); /*23989*/
		$$.restore(); /*23991*/
	};
	// bwip-js/barcode-ftr.js
	//
	// This code is injected below the cross-compiled barcode.ps.

	// The BWIPP symbol is a factory object.  When called, it returns this
	// function, which is a re-usable postscript emulation for BWIPP.
	return function(bwipjs, encoder, text, opts, dontdraw) {
		if (!$0[encoder]) {
			throw new Error('bwipp.unknownEncoder: ' + encoder);
		}
		if (typeof text !== 'string') {
			throw new Error('bwipp.typeError: barcode text not a string (' +
				text + ')');
		}
		opts = opts || {};
		if (typeof opts === 'string') {
			var tmp = opts.split(' ');
			opts = {};
			for (var i = 0; i < tmp.length; i++) {
				if (!tmp[i]) {
					continue;
				}
				var eq = tmp[i].indexOf('=');
				if (eq == -1) {
					opts[tmp[i]] = true;
				} else {
					opts[tmp[i].substr(0, eq)] = tmp[i].substr(eq + 1);
				}
			}
		} else if (typeof opts !== 'object' || opts.constructor !== Object) {
			throw new Error('bwipp.typeError: options not an object');
		}

		// Convert utf-16 to utf-8 but leave binary (8-bit) strings untouched.
		if (/[\u0100-\uffff]/.test(text)) {
			text = unescape(encodeURIComponent(text));
		}

		// Handle the `parse` option here rather than in BWIPP - eliminates
		// conflict with the parsefnc option and allows removing the parsing
		// code from BWIPP.
		if (opts.parse) {
			text = text.replace(/\^(\d\d\d)/g, function($0, $1) {
				var v = +$1;
				if (v > 255) {
					throw new Error('bwipp.rangeError:' +
						' ^NNN out-of-range (' + $0 + ')');
				}
				return String.fromCharCode(v);
			});
			delete opts.parse;
		}

		// Don't draw? (See file runtest)
		$0.bwipjs_dontdraw = dontdraw || false;

		// Invoke the encoder
		$$ = bwipjs;
		$k = [text, opts];
		$j = 2;
		$0[encoder]();

		// Return what is left on the stack.  This branch should only be taken
		// when running tests with the dontdraw option.
		if ($j) {
			return $k.splice(0, $j);
		}
		// Otherwise, just return ok
		return true;
	}
}
if (typeof module === 'object' && module.exports) {
	module.exports = BWIPP;
}