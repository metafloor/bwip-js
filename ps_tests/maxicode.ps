/runtest_maxicode {
20 dict begin
% Barcode Writer in Pure PostScript
% https://bwipp.terryburton.co.uk
%
% Copyright (c) 2004-2024 Terry Burton

% ISO/IEC 16023:2000

% vim: set ts=4 sw=4 et :

%%/maxicode dup /uk.co.terryburton.bwipp findresource cvx def

/eq_tmpl {
    /e exch def
    /o exch def
    /t exch def
    { t o maxicode /p 990 array def 0 1 989 { p exch 0 put } for /pixs get { p exch 1 put } forall p } e isEqual
} def

/er_tmpl {
    /e exch def
    /o exch def
    /t exch def
    { t o maxicode /pixs get } e isError
} def


% Zero-pad US postcodes that lack "+4" (Annex B.1.4a)
/uszeropad  % Expected codewords
[  2 24 34 20 17 18  2 18  7  0 59 58 31 60 34  8 11 47 20 54 59 42 41 59 40 30 48 49 29 57 54 49 26 48 48 48
  48 52 57 53 49 29 21 16 19 14 29 48 54 24 54 49 48 29 49 53 57 29 49 50 51 52 53 54 55 29 49 47 49 29 29 25
  29 54 51 52 32  1 12 16  8  1 32  4 18 29 16  9 20 20 19  2 21 18  7  8 29 16  1 30 62  4 33 33 44 40 52 23
  54 59 30 31 49  1 41 53 21 35  8 47 10 11 32 26 60 53  5 40 39 32  8 44 38 51 43  8 55 14 23 53 40 17 49 31] def

{  % With zeroing on input
    ([\)>^03001^02996152380000^029840^029001^0291Z00004951^029UPSN^02906X610^029159^0291234567^0291/1^029^029Y^029634 ALPHA DR^029PITTSBURGH^029PA^030^004)
    (mode=2 parse debugcws) maxicode
} uszeropad debugIsEqual

{  % Without
    ([\)>^03001^0299615238^029840^029001^0291Z00004951^029UPSN^02906X610^029159^0291234567^0291/1^029^029Y^029634 ALPHA DR^029PITTSBURGH^029PA^030^004)
    (mode=2 parse debugcws) maxicode
} uszeropad debugIsEqual

{   % A pure A/B example that could be one codeword less (should SHB instead of LCHB then SHA):
    (b..A)
    (mode=4 parse debugcws) maxicode
} [ 4 59  2 46 46  1 33 33 33 33 17 28 48 20 45 62 22 14 12 49 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 60 60 40 40  9  9 43 43 14 14 50 50 12 12 53 53 57 57 58 58 36 36 28 28
   10 10 53 53 37 37 30 30 14 14  5  5 31 31 40 40] debugIsEqual

{   % Here's an A/B (and NS) example which could be one codeword less (immediate LCHB on "b" between NS segments instead of SHB and then LCHB after 2nd NS):
    (A123456789b123456789bbbA)
    (mode=4 parse debugcws) maxicode
} [ 4  1 31  7 22 60 52 21 63  2 16 27 40 34 32 50 55 12 11 42 31  7 22 60 52 21  2  2  2 63  1 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 55 56 56 45 53 41 57  9 17 61  9 41 13 12  3 23 10 25 23 42 54 28 13  1
   20 36 43 17 24 60  6 50 50 29 36 49 11 43 19 33] debugIsEqual

{ % Don't stay in mode A when mode D or even C would be more efficient.
    (^192^224^224^224^192^224^224^224^192^224^224^224^192^224^224^224^192^224^224^224^192)
    (mode=4 parse debugcws) maxicode
} [ 4 60  0 61 61  0  0  0 60  0 52 57 14 53 29 37  0 27 40  3  0  0  0 60  0  0  0  0 60  0  0  0
    0 60  0  0  0  0 60  0 58 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 62 45  3 41 29 23 53 42 13 62 10 63 17 22 10 11  3 63  2 59 60  7 61 24
   50 36 22 37 46 62  7 16 54 20 61 21  4  1 18 58] debugIsEqual

{ % Numeric Sequence
    (123456789)
    (mode=4 parse debugcws) maxicode
} [ 4 31  7 22 60 52 21 33 33 33 46 53 45 48 29 51 38 37 61 52 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 60 60 40 40  9  9 43 43 14 14 50 50 12 12 53 53 57 57 58 58 36 36 28 28
   10 10 53 53 37 37 30 30 14 14  5  5 31 31 40 40] debugIsEqual

{ % Space only
    ( )
    (mode=4 parse debugcws) maxicode
} [ 4 32 33 33 33 33 33 33 33 33 54 16 60 62 34 38 62 44 55 20 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 60 60 40 40  9  9 43 43 14 14 50 50 12 12 53 53 57 57 58 58 36 36 28 28
   10 10 53 53 37 37 30 30 14 14  5  5 31 31 40 40] debugIsEqual

{ % ECI only (should probably error on this)
    (^ECI000899)
    (mode=4 parse parsefnc debugcws) maxicode
} [ 4 27 46  3 33 33 33 33 33 33 58 49 57 27 48 19 62 32 46 56 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 60 60 40 40  9  9 43 43 14 14 50 50 12 12 53 53 57 57 58 58 36 36 28 28
   10 10 53 53 37 37 30 30 14 14  5  5 31 31 40 40] debugIsEqual

{ % Exercise all modes and most shifts
    (^ECI000899ABabcdeAabcdABCabcdABabc^192^192 ^192^224^224^028^224^001^001^001^029^00112345678a123456789aABCDa^192^224^001^192^001^224^030^004)
    (mode=4 parse parsefnc debugcws) maxicode
} [ 4 27 46  3  1  2 63  1  2  3 38 38 35  0 26  1 39 15 42 36  4  5 59  1  1  2  3  4 57  1  2  3
    1  2  3  4 56  1  2  1 2   3 60 60  0  0 59  0 61 61  0  0 28  0 62 62  1  1  1 33  1 58 49 50
   51 52 53 54 55 56 59  1 31  7 22 60 52 21 59  1  1  2  3  4 59  1 60  0 61  0 62 62  1 60  0  1
   61  0 34  4 28 28 28 28 63 31 17 20 53 47 62 22 34 28 56 57 13  2 31 58 13 29  7 59 32 26 27 26
    0 42 46 21 35 56 52 11 61 22  7 42 33  4 36 26] debugIsEqual

{ % Maximum length code set A (138 digits)
    (999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999)
    (mode=4 debugcws) maxicode
} [ 4 57 57 57 31 59 38 44 39 63 30 31 14 60 14 21 51  5 26 37 31 59 38 44 39 63 31 59 38 44 39 63
   31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59
   38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44 39 63 31 59 38 44
   39 63 31 59 38 44 39 63 24 23  0 48 38 28 46 35  4 58 37 58 39 20  7 28 25 31 54 31 31 32 10 17
    9 28  7 28 19 14 40 44  4 58 57 12 37 17  0 48] debugIsEqual

{ % Maximum length code set C
    (^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128^128)
    (mode=4 parse debugcws) maxicode
} [ 4 60 60 48 48 48 48 48 48 48 12 26  9 17 60 18 39  3 11 30 48 48 48 48 48 48 48 48 48 48 48 48
   48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48
   48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48 48
   48 48 48 48 48 48 48 48 37 37  7  7 55 55 33 33 27 27 62 62 30 30 18 18 12 12 42 42 25 25 54 54
   17 17 18 18 58 58 51 51 27 27 41 41 16 16  7  7] debugIsEqual

{ % Maximum length code set E
    (^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001^001)
    (mode=4 parse debugcws) maxicode
} [ 4 62 62  1  1  1  1  1  1  1 31 18  1 19 34 61 34  5 37 55  1  1  1  1  1  1  1  1  1  1  1  1
    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
    1  1  1  1  1  1  1  1 59 59 19 19 18 18 21 21 28 28 39 39 24 24 41 41 49 49 55 55 11 11 56 56
   20 20 41 41  9  9 60 60 28 28 10 10 62 62 19 19] debugIsEqual

{ % Code set E pad (28)
    (^001^001^001^001)
    (mode=4 parse debugcws) maxicode
} [ 4 62 62  1  1  1  1 28 28 28 40 50 10 56 19 40 42 62 33 13 28 28 28 28 28 28 28 28 28 28 28 28
   28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28
   28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28
   28 28 28 28 28 28 28 28 26 26 45 45 49 49 38 38 31 31  5  5 44 44 43 43  7  7 12 12  1  1 62 62
   58 58 43 43 57 57 13 13 31 31 29 29 53 53 45 45] debugIsEqual

{ % Exit SCM loop on first ECI and add remaining back later to avoid ECIs being replaced with NUL
    ([^041>^03001^02996999999999^029840^029333^029^ECI000003A)
    (mode=2 parse parsefnc debugcws) maxicode
} [50 63  9 43 57 30  2 18 55 20 47 30  3 41 62 27 45 42  6 32 59 42 41 59 40 30 48 49 29 57 54 27
    3  1 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33
   33 33 33 33 33 33 33 33 59 62  7 62 19 52 10 28  8 60 12 40 47 51 37 47 29 49 19 46 47 52 56 44
   32 51 45 42 40 49 14 32 37  2 16 26  1  6 51 37] debugIsEqual

% Too short field identifier [)>{RS}01{GS}y (was causing rangecheck)
([^041>^03001^0299) (mode=2 parse dontdraw) /bwipp.maxicodeBadMode2PostCode er_tmpl

% Field identifier with non-numeric yy (will be ignored and parsed as post code)
([^041>^03001^0299A) (mode=2 parse dontdraw) /bwipp.maxicodeBadMode2PostCode er_tmpl

% Exercise the error checks
() (mode=2 dontdraw) /bwipp.maxicodeEmptyData er_tmpl
(A) (mode=1 dontdraw) /bwipp.maxicodeBadMode er_tmpl
(A) (mode=4 sam=11 dontdraw) /bwipp.maxicodeBadSAM er_tmpl
(A) (mode=4 sam=32 dontdraw) /bwipp.maxicodeBadSAM er_tmpl
(123456789) (mode=2 dontdraw) /bwipp.maxicodeExpectedPostCode er_tmpl
(^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadMode2PostCode er_tmpl
(^029) (mode=3 parse dontdraw) /bwipp.maxicodeBadMode3PostCode er_tmpl
(1234567890^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadMode2PostCode er_tmpl
(12345678A^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadMode2PostCode er_tmpl
(ABCDEFG^029) (mode=3 parse dontdraw) /bwipp.maxicodeBadMode3PostCode er_tmpl
(ABCDEa^029) (mode=3 parse dontdraw) /bwipp.maxicodeBadMode3PostCode er_tmpl
(123456789^029) (mode=2 parse dontdraw) /bwipp.maxicodeExpectedCountryCode er_tmpl
(ABCDEF^029) (mode=3 parse dontdraw) /bwipp.maxicodeExpectedCountryCode er_tmpl
(123456789^029^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadCountryCode er_tmpl
(123456789^02984^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadCountryCode er_tmpl
(123456789^02984A^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadCountryCode er_tmpl
(123456789^029840^029) (mode=2 parse dontdraw) /bwipp.maxicodeExpectedServiceClass er_tmpl
(123456789^029840^029^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadServiceClass er_tmpl
(123456789^029840^0291^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadServiceClass er_tmpl
(123456789^029840^02912A^029) (mode=2 parse dontdraw) /bwipp.maxicodeBadServiceClass er_tmpl

% Figures

(THIS IS A 93 CHARACTER CODE SET A MESSAGE THAT FILLS A MODE 4, UNAPPENDED, MAXICODE SYMBOL...) (mode=4 dontdraw)  % Figure 2 (and L1), same
[
    0 1 1 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 1 1 1
    0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0
    0 0 1 0 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 0 0 1 0
    1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0
    0 0 1 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1
    1 1 1 0 1 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 0 0
    1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 0
    1 1 1 0 1 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0
    1 0 1 1 1 1 0 0 0 0 0 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 0 0 1 1
    0 0 1 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0
    0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1 0 0 0
    1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 0 0
    1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0
    0 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0
    1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1
    0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0
    0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1
    1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 1 1 0 0
    0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0
    1 0 1 0 1 1 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 1
    1 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 1 0 1 0
    0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 0 1 1 1 1 1
    0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 0 0
    0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 1 1 1 0 0
    1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 1 0 1 1 0
    0 0 0 0 0 1 0 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 1 0 0 1 1 0 0
    1 1 1 0 0 0 1 1 0 1 1 1 1 0 0 0 1 0 0 0 1 1 1 1 0 1 1 1 1 0
    1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 1 0 1 1 0 1 1 1 0 0 1
    0 0 1 0 0 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 0 1 1 1 0 0
    0 0 1 0 1 1 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0
] eq_tmpl

([\)>^03001^02996152382802^029840^029001^0291Z00004951^029UPSN^02906X610^029159^0291234567^0291/1^029^029Y^029634 ALPHA DR^029PITTSBURGH^029PA^030^004) (mode=2 parse dontdraw)  % Figure B2, not same, different encodation
[
    1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1
    0 1 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0
    1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1
    1 1 1 0 0 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    0 0 1 1 1 1 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 1
    0 0 1 0 0 1 1 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0
    1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0
    1 0 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0
    0 1 0 0 0 1 1 0 0 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1
    1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 0 1 1 0 1 1 1 1 1 1 0 0
    0 0 1 1 0 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1
    1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 1 1 0 1 0
    1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 1 1 1 1 1
    1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 0 0 0 1 0
    1 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 0 1
    0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 1 1 1 0
    0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0
    0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0
    0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0
    0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0
    1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 0
    1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0
    0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 1 0 1 1 0 0 1 1 0 1 0 0 1 0 1
    0 1 1 0 0 1 1 1 0 0 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0
    0 0 0 0 1 0 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0
    1 0 0 1 1 1 0 0 0 0 1 1 1 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0
    1 1 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1
    0 0 0 0 0 1 0 0 0 1 1 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0
    0 1 0 1 1 1 0 1 0 0 1 0 1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 0 1 0
    1 1 0 1 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0
    0 1 1 0 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 1 1
    0 0 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 1 0
    0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1
] eq_tmpl
end
} bind def
