#!/usr/bin/env node

'use strict';

var fs = require('fs');
var bwipjs = require('.');

if (process.argv.length < 5) {
    console.log('Usage: bwipjsc type text [options] outfile');
    process.exit(1);
}

gen(10);

function gen(iters) {
    var options = {
        bcid:process.argv[2],
        text:process.argv[3],
    }
    var outfile = process.argv[process.argv.length-1];

    for (let i = 4, l = process.argv.length-1; i < l; i++) {
        var arg = process.argv[i];
        var match = /^(\w+)(=.+)?$/.exec(arg);
        if (!match) {
            console.log('Invalid option: ' + arg);
            process.exit(1);
        }

        if (match[2]) {
            options[match[1]] = match[2].substr(1);
        } else {
            options[match[1]] = true;
        }
    }

    let ts0 = Date.now();
    bwipjs.toBuffer(options, function (err, png) {
        if (err) {
            console.error('Error: ' + err);
            process.exit(1);
        }

        let ts1 = Date.now();
        fs.writeFileSync(outfile, new Buffer(png));
        console.log('barcode generated in ' + (ts1-ts0) + ' msecs');
        if (--iters) {
            gen(iters);
        }
    });
}
